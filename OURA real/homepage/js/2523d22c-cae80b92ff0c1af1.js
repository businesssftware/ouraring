"use strict"; (self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([[370], {
    5027: (e, r, t) => {
        t.d(r, { $_v: () => ij, $sr: () => nu, AQu: () => n_, AWE: () => lC, A_v: () => le, AyL: () => i7, B8B: () => oL, BFk: () => ii, BFy: () => lw, BPr: () => lB, BPu: () => lR, Bjd: () => i3, C3E: () => ix, C3T: () => iT, C4I: () => lN, CDv: () => i2, CTc: () => tU, Cl3: () => lX, D6i: () => aS, DC1: () => i8, DFq: () => th, Dvm: () => iU, ELo: () => lb, Ei_: () => nU, Ey0: () => nJ, FIx: () => tZ, FNf: () => l7, FnH: () => tM, FrT: () => nR, GGM: () => im, GQ2: () => t4, Gaz: () => au, Gek: () => lh, Gjj: () => n$, Gre: () => lI, GwX: () => iq, HA6: () => ly, Hgz: () => tH, HpE: () => oj, I$f: () => l_, I3g: () => o9, IN: () => iZ, J8o: () => tB, JFG: () => ir, J_L: () => tb, Jcp: () => ln, KIi: () => tA, KNZ: () => iw, KuU: () => lO, Kx: () => ty, Lwl: () => lf, Lwu: () => iS, MJN: () => om, Md3: () => iJ, NQj: () => ou, O4: () => tG, P08: () => lp, PLH: () => iH, PQj: () => ip, PTA: () => iL, PUg: () => lx, PaH: () => nd, QdK: () => il, QxC: () => na, RHA: () => iO, RIu: () => l8, RYL: () => tp, SEi: () => ad, SFX: () => iQ, Sss: () => am, T1u: () => lj, T3U: () => iA, TE6: () => tv, TP9: () => i6, TPb: () => lW, TVp: () => lL, Tvl: () => iF, Ubj: () => tC, WFU: () => iG, WZj: () => ia, W_8: () => ta, WcW: () => iR, Wgo: () => nC, WhU: () => oG, WkB: () => tg, WlW: () => td, X5V: () => li, XRy: () => tz, XTH: () => lZ, Xr2: () => lm, Xr7: () => iX, Y$o: () => it, YdI: () => o0, Zuk: () => lH, _Dk: () => tD, _cv: () => oH, _jd: () => iB, _nd: () => rQ, _pi: () => tl, _sD: () => lP, _ui: () => o8, _wI: () => t0, aaP: () => n7, aiw: () => tj, an3: () => i9, awf: () => nO, bJ_: () => o6, c46: () => tI, c6: () => iM, cag: () => t7, ccV: () => tt, ci6: () => tf, ckQ: () => nV, cnp: () => t9, cyi: () => i1, dHL: () => tw, dQj: () => iy, dR1: () => nb, dSP: () => la, dxR: () => tP, e9L: () => iC, ebE: () => id, em8: () => nP, fPc: () => iY, ftW: () => iz, gLe: () => tO, gPm: () => ne, gmi: () => nX, h76: () => se, hHM: () => tN, hR1: () => af, hUT: () => tW, hjR: () => iD, hxe: () => oM, jH1: () => l5, jLw: () => i_, jMR: () => lT, k$s: () => ie, k4y: () => t5, k7P: () => an, kJc: () => iI, kPc: () => tm, kYJ: () => lg, kpc: () => lo, ksK: () => oC, lKu: () => lc, lmn: () => lr, m7J: () => iP, nD3: () => nn, nFu: () => iv, nZf: () => i$, nhd: () => ig, npY: () => tu, o1I: () => oD, oOp: () => tR, oaT: () => lS, ogV: () => ib, oyn: () => tX, p37: () => is, p9M: () => ls, pvs: () => lk, pw5: () => io, q4e: () => t3, qES: () => tS, qYV: () => iN, qul: () => ic, rRK: () => iE, rb7: () => iu, re1: () => tF, rkM: () => nm, rvq: () => lv, s2U: () => tc, sGk: () => i4, sPA: () => lV, t4t: () => a_, t5x: () => t$, t8u: () => lM, t9c: () => lD, tUM: () => oQ, tjx: () => i5, tzu: () => t_, u1f: () => iW, uQt: () => lu, uae: () => nr, ub_: () => nt, ucK: () => ai, ufY: () => i0, ugh: () => av, uhm: () => at, uwh: () => r3, v18: () => tT, vDW: () => oz, va4: () => tE, vg_: () => oy, viI: () => ih, vwO: () => oN, wBi: () => tx, wa1: () => sr, xGP: () => tL, xxT: () => nH, xyX: () => aI, yWK: () => tk, yeg: () => nz, ymU: () => ll, zXg: () => tV, zXj: () => aC, zdH: () => iK, ziU: () => t8, zpD: () => tY }); var i = t(12115), l = t(95155), n = t(12273), o = t(3594), a = t(98350), s = t(78233), C = t(93084), u = t(27579), d = t(6374), c = t(53039), h = t(96117), f = t(38965), _ = t(76604), p = t(43239), m = t(60760), x = t(53466), g = t(39406), v = t(14127), L = t(523), b = t(77151), y = t(81627), w = t(49390), j = t(82451), k = t(18063), M = t(8619), H = t(16242), V = t(37129), Z = t(74357), N = t(58216), R = t(62720), S = t(95056), P = t(77695), I = t(58829), O = t(40289), A = Object.create, z = Object.defineProperty, B = Object.getOwnPropertyDescriptor, E = Object.getOwnPropertyNames, F = Object.getPrototypeOf, T = Object.prototype.hasOwnProperty, D = (e, r) => () => (r || e((r = { exports: {} }).exports, r), r.exports), W = (e, r, t) => (t = null != e ? A(F(e)) : {}, ((e, r, t, i) => { if (r && "object" == typeof r || "function" == typeof r) for (let l of E(r)) T.call(e, l) || l === t || z(e, l, { get: () => r[l], enumerable: !(i = B(r, l)) || i.enumerable }); return e })(!r && e && e.__esModule ? t : z(t, "default", { value: e, enumerable: !0 }), e)), G = ((e, r) => () => (e && (r = e(e = 0)), r))(() => { }), U = D((e, r) => { G(), r.exports = function () { } }), $ = D(e => { function r(e, r) { return { handler: e, config: r } } G(), Object.defineProperty(e, "__esModule", { value: !0 }), Object.defineProperty(e, "default", { enumerable: !0, get: function () { return t } }), r.withOptions = function (e, r = () => ({})) { let t = function (t) { return { __options: t, handler: e(t), config: r(t) } }; return t.__isOptionsFunction = !0, t.__pluginFunction = e, t.__configFunction = r, t }; var t = r }), q = D(e => { G(), Object.defineProperty(e, "__esModule", { value: !0 }), Object.defineProperty(e, "default", { enumerable: !0, get: function () { return r } }); var r = function (e) { return e && e.__esModule ? e : { default: e } }($()).default }), K = D((e, r) => { G(); var t = q(); r.exports = (t.__esModule ? t : { default: t }).default }), X = D(e => { G(), Object.defineProperty(e, "__esModule", { value: !0 }), Object.defineProperty(e, "default", { enumerable: !0, get: function () { return t } }); var r = e => Object.assign({}, ...Object.entries(null != e ? e : {}).flatMap(([e, t]) => "object" == typeof t ? Object.entries(r(t)).map(([r, t]) => ({ [e + ("DEFAULT" === r ? "" : `-${r}`)]: t })) : [{ [`${e}`]: t }])), t = r }), J = D((e, r) => { G(), r.exports = function (e, r) { for (var t = -1, i = null == e ? 0 : e.length, l = Array(i); ++t < i;)l[t] = r(e[t], t, e); return l } }), Y = D((e, r) => { G(), r.exports = "object" == typeof global && global && global.Object === Object && global }), Q = D((e, r) => { G(); var t = Y(), i = "object" == typeof self && self && self.Object === Object && self; r.exports = t || i || Function("return this")() }), ee = D((e, r) => { G(), r.exports = Q().Symbol }), er = D((e, r) => { G(); var t = ee(), i = Object.prototype, l = i.hasOwnProperty, n = i.toString, o = t ? t.toStringTag : void 0; r.exports = function (e) { var r = l.call(e, o), t = e[o]; try { e[o] = void 0; var i = !0 } catch { } var a = n.call(e); return i && (r ? e[o] = t : delete e[o]), a } }), et = D((e, r) => { G(); var t = Object.prototype.toString; r.exports = function (e) { return t.call(e) } }), ei = D((e, r) => { G(); var t = ee(), i = er(), l = et(), n = t ? t.toStringTag : void 0; r.exports = function (e) { return null == e ? void 0 === e ? "[object Undefined]" : "[object Null]" : n && n in Object(e) ? i(e) : l(e) } }), el = D((e, r) => { G(), r.exports = function (e) { var r = typeof e; return null != e && ("object" == r || "function" == r) } }), en = D((e, r) => { G(); var t = ei(), i = el(); r.exports = function (e) { if (!i(e)) return !1; var r = t(e); return "[object Function]" == r || "[object GeneratorFunction]" == r || "[object AsyncFunction]" == r || "[object Proxy]" == r } }), eo = D((e, r) => { G(), r.exports = Q()["__core-js_shared__"] }), ea = D((e, r) => { G(); var t = eo(), i = function () { var e = /[^.]+$/.exec(t && t.keys && t.keys.IE_PROTO || ""); return e ? "Symbol(src)_1." + e : "" }(); r.exports = function (e) { return !!i && i in e } }), es = D((e, r) => { G(); var t = Function.prototype.toString; r.exports = function (e) { if (null != e) { try { return t.call(e) } catch { } try { return e + "" } catch { } } return "" } }), eC = D((e, r) => { G(); var t = en(), i = ea(), l = el(), n = es(), o = /^\[object .+?Constructor\]$/, a = Object.prototype, s = Function.prototype.toString, C = a.hasOwnProperty, u = RegExp("^" + s.call(C).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"); r.exports = function (e) { return !(!l(e) || i(e)) && (t(e) ? u : o).test(n(e)) } }), eu = D((e, r) => { G(), r.exports = function (e, r) { return null == e ? void 0 : e[r] } }), ed = D((e, r) => { G(); var t = eC(), i = eu(); r.exports = function (e, r) { var l = i(e, r); return t(l) ? l : void 0 } }), ec = D((e, r) => { G(), r.exports = ed()(Object, "create") }), eh = D((e, r) => { G(); var t = ec(); r.exports = function () { this.__data__ = t ? t(null) : {}, this.size = 0 } }), ef = D((e, r) => { G(), r.exports = function (e) { var r = this.has(e) && delete this.__data__[e]; return this.size -= !!r, r } }), e_ = D((e, r) => { G(); var t = ec(), i = Object.prototype.hasOwnProperty; r.exports = function (e) { var r = this.__data__; if (t) { var l = r[e]; return "__lodash_hash_undefined__" === l ? void 0 : l } return i.call(r, e) ? r[e] : void 0 } }), ep = D((e, r) => { G(); var t = ec(), i = Object.prototype.hasOwnProperty; r.exports = function (e) { var r = this.__data__; return t ? void 0 !== r[e] : i.call(r, e) } }), em = D((e, r) => { G(); var t = ec(); r.exports = function (e, r) { var i = this.__data__; return this.size += +!this.has(e), i[e] = t && void 0 === r ? "__lodash_hash_undefined__" : r, this } }), ex = D((e, r) => { G(); var t = eh(), i = ef(), l = e_(), n = ep(), o = em(); function a(e) { var r = -1, t = null == e ? 0 : e.length; for (this.clear(); ++r < t;) { var i = e[r]; this.set(i[0], i[1]) } } a.prototype.clear = t, a.prototype.delete = i, a.prototype.get = l, a.prototype.has = n, a.prototype.set = o, r.exports = a }), eg = D((e, r) => { G(), r.exports = function () { this.__data__ = [], this.size = 0 } }), ev = D((e, r) => { G(), r.exports = function (e, r) { return e === r || e != e && r != r } }), eL = D((e, r) => { G(); var t = ev(); r.exports = function (e, r) { for (var i = e.length; i--;)if (t(e[i][0], r)) return i; return -1 } }), eb = D((e, r) => { G(); var t = eL(), i = Array.prototype.splice; r.exports = function (e) { var r = this.__data__, l = t(r, e); return !(l < 0) && (l == r.length - 1 ? r.pop() : i.call(r, l, 1), --this.size, !0) } }), ey = D((e, r) => { G(); var t = eL(); r.exports = function (e) { var r = this.__data__, i = t(r, e); return i < 0 ? void 0 : r[i][1] } }), ew = D((e, r) => { G(); var t = eL(); r.exports = function (e) { return t(this.__data__, e) > -1 } }), ej = D((e, r) => { G(); var t = eL(); r.exports = function (e, r) { var i = this.__data__, l = t(i, e); return l < 0 ? (++this.size, i.push([e, r])) : i[l][1] = r, this } }), ek = D((e, r) => { G(); var t = eg(), i = eb(), l = ey(), n = ew(), o = ej(); function a(e) { var r = -1, t = null == e ? 0 : e.length; for (this.clear(); ++r < t;) { var i = e[r]; this.set(i[0], i[1]) } } a.prototype.clear = t, a.prototype.delete = i, a.prototype.get = l, a.prototype.has = n, a.prototype.set = o, r.exports = a }), eM = D((e, r) => { G(), r.exports = ed()(Q(), "Map") }), eH = D((e, r) => { G(); var t = ex(), i = ek(), l = eM(); r.exports = function () { this.size = 0, this.__data__ = { hash: new t, map: new (l || i), string: new t } } }), eV = D((e, r) => { G(), r.exports = function (e) { var r = typeof e; return "string" == r || "number" == r || "symbol" == r || "boolean" == r ? "__proto__" !== e : null === e } }), eZ = D((e, r) => { G(); var t = eV(); r.exports = function (e, r) { var i = e.__data__; return t(r) ? i["string" == typeof r ? "string" : "hash"] : i.map } }), eN = D((e, r) => { G(); var t = eZ(); r.exports = function (e) { var r = t(this, e).delete(e); return this.size -= !!r, r } }), eR = D((e, r) => { G(); var t = eZ(); r.exports = function (e) { return t(this, e).get(e) } }), eS = D((e, r) => { G(); var t = eZ(); r.exports = function (e) { return t(this, e).has(e) } }), eP = D((e, r) => { G(); var t = eZ(); r.exports = function (e, r) { var i = t(this, e), l = i.size; return i.set(e, r), this.size += +(i.size != l), this } }), eI = D((e, r) => { G(); var t = eH(), i = eN(), l = eR(), n = eS(), o = eP(); function a(e) { var r = -1, t = null == e ? 0 : e.length; for (this.clear(); ++r < t;) { var i = e[r]; this.set(i[0], i[1]) } } a.prototype.clear = t, a.prototype.delete = i, a.prototype.get = l, a.prototype.has = n, a.prototype.set = o, r.exports = a }), eO = D((e, r) => { G(), r.exports = function (e) { return this.__data__.set(e, "__lodash_hash_undefined__"), this } }), eA = D((e, r) => { G(), r.exports = function (e) { return this.__data__.has(e) } }), ez = D((e, r) => { G(); var t = eI(), i = eO(), l = eA(); function n(e) { var r = -1, i = null == e ? 0 : e.length; for (this.__data__ = new t; ++r < i;)this.add(e[r]) } n.prototype.add = n.prototype.push = i, n.prototype.has = l, r.exports = n }), eB = D((e, r) => { G(), r.exports = function (e, r, t, i) { for (var l = e.length, n = t + (i ? 1 : -1); i ? n-- : ++n < l;)if (r(e[n], n, e)) return n; return -1 } }), eE = D((e, r) => { G(), r.exports = function (e) { return e != e } }), eF = D((e, r) => { G(), r.exports = function (e, r, t) { for (var i = t - 1, l = e.length; ++i < l;)if (e[i] === r) return i; return -1 } }), eT = D((e, r) => { G(); var t = eB(), i = eE(), l = eF(); r.exports = function (e, r, n) { return r == r ? l(e, r, n) : t(e, i, n) } }), eD = D((e, r) => { G(); var t = eT(); r.exports = function (e, r) { return !!(null == e ? 0 : e.length) && t(e, r, 0) > -1 } }), eW = D((e, r) => { G(), r.exports = function (e, r, t) { for (var i = -1, l = null == e ? 0 : e.length; ++i < l;)if (t(r, e[i])) return !0; return !1 } }), eG = D((e, r) => { G(), r.exports = function (e) { return function (r) { return e(r) } } }), eU = D((e, r) => { G(), r.exports = function (e, r) { return e.has(r) } }), e$ = D((e, r) => { G(); var t = ez(), i = eD(), l = eW(), n = J(), o = eG(), a = eU(), s = Math.min; r.exports = function (e, r, C) { for (var u = C ? l : i, d = e[0].length, c = e.length, h = c, f = Array(c), _ = 1 / 0, p = []; h--;) { var m = e[h]; h && r && (m = n(m, o(r))), _ = s(m.length, _), f[h] = !C && (r || d >= 120 && m.length >= 120) ? new t(h && m) : void 0 } m = e[0]; var x = -1, g = f[0]; e: for (; ++x < d && p.length < _;) { var v = m[x], L = r ? r(v) : v; if (v = C || 0 !== v ? v : 0, !(g ? a(g, L) : u(p, L, C))) { for (h = c; --h;) { var b = f[h]; if (!(b ? a(b, L) : u(e[h], L, C))) continue e } g && g.push(L), p.push(v) } } return p } }), eq = D((e, r) => { G(), r.exports = function (e) { return e } }), eK = D((e, r) => { G(), r.exports = function (e, r, t) { switch (t.length) { case 0: return e.call(r); case 1: return e.call(r, t[0]); case 2: return e.call(r, t[0], t[1]); case 3: return e.call(r, t[0], t[1], t[2]) }return e.apply(r, t) } }), eX = D((e, r) => { G(); var t = eK(), i = Math.max; r.exports = function (e, r, l) { return r = i(void 0 === r ? e.length - 1 : r, 0), function () { for (var n = arguments, o = -1, a = i(n.length - r, 0), s = Array(a); ++o < a;)s[o] = n[r + o]; o = -1; for (var C = Array(r + 1); ++o < r;)C[o] = n[o]; return C[r] = l(s), t(e, this, C) } } }), eJ = D((e, r) => { G(), r.exports = function (e) { return function () { return e } } }), eY = D((e, r) => { G(); var t = ed(); r.exports = function () { try { var e = t(Object, "defineProperty"); return e({}, "", {}), e } catch { } }() }), eQ = D((e, r) => { G(); var t = eJ(), i = eY(), l = eq(); r.exports = i ? function (e, r) { return i(e, "toString", { configurable: !0, enumerable: !1, value: t(r), writable: !0 }) } : l }), e1 = D((e, r) => { G(); var t = Date.now; r.exports = function (e) { var r = 0, i = 0; return function () { var l = t(), n = 16 - (l - i); if (i = l, n > 0) { if (++r >= 800) return arguments[0] } else r = 0; return e.apply(void 0, arguments) } } }), e2 = D((e, r) => { G(); var t = eQ(); r.exports = e1()(t) }), e3 = D((e, r) => { G(); var t = eq(), i = eX(), l = e2(); r.exports = function (e, r) { return l(i(e, r, t), e + "") } }), e4 = D((e, r) => { G(), r.exports = function (e) { return "number" == typeof e && e > -1 && e % 1 == 0 && e <= 0x1fffffffffffff } }), e5 = D((e, r) => { G(); var t = en(), i = e4(); r.exports = function (e) { return null != e && i(e.length) && !t(e) } }), e6 = D((e, r) => { G(), r.exports = function (e) { return null != e && "object" == typeof e } }), e7 = D((e, r) => { G(); var t = e5(), i = e6(); r.exports = function (e) { return i(e) && t(e) } }), e8 = D((e, r) => { G(); var t = e7(); r.exports = function (e) { return t(e) ? e : [] } }), e9 = D((e, r) => { G(); var t = J(), i = e$(), l = e3(), n = e8(); r.exports = l(function (e) { var r = t(e, n); return r.length && r[0] === e[0] ? i(r) : [] }) }), e0 = D((e, r) => { G(); var t = ek(); r.exports = function () { this.__data__ = new t, this.size = 0 } }), re = D((e, r) => { G(), r.exports = function (e) { var r = this.__data__, t = r.delete(e); return this.size = r.size, t } }), rr = D((e, r) => { G(), r.exports = function (e) { return this.__data__.get(e) } }), rt = D((e, r) => { G(), r.exports = function (e) { return this.__data__.has(e) } }), ri = D((e, r) => { G(); var t = ek(), i = eM(), l = eI(); r.exports = function (e, r) { var n = this.__data__; if (n instanceof t) { var o = n.__data__; if (!i || o.length < 199) return o.push([e, r]), this.size = ++n.size, this; n = this.__data__ = new l(o) } return n.set(e, r), this.size = n.size, this } }), rl = D((e, r) => { G(); var t = ek(), i = e0(), l = re(), n = rr(), o = rt(), a = ri(); function s(e) { var r = this.__data__ = new t(e); this.size = r.size } s.prototype.clear = i, s.prototype.delete = l, s.prototype.get = n, s.prototype.has = o, s.prototype.set = a, r.exports = s }), rn = D((e, r) => { G(); var t = eY(); r.exports = function (e, r, i) { "__proto__" == r && t ? t(e, r, { configurable: !0, enumerable: !0, value: i, writable: !0 }) : e[r] = i } }), ro = D((e, r) => { G(); var t = rn(), i = ev(); r.exports = function (e, r, l) { (void 0 === l || i(e[r], l)) && (void 0 !== l || r in e) || t(e, r, l) } }), ra = D((e, r) => { G(), r.exports = function (e) { return function (r, t, i) { for (var l = -1, n = Object(r), o = i(r), a = o.length; a--;) { var s = o[e ? a : ++l]; if (!1 === t(n[s], s, n)) break } return r } } }), rs = D((e, r) => { G(), r.exports = ra()() }), rC = D((e, r) => { G(); var t = Q(), i = "object" == typeof e && e && !e.nodeType && e, l = i && "object" == typeof r && r && !r.nodeType && r, n = l && l.exports === i ? t.Buffer : void 0, o = n ? n.allocUnsafe : void 0; r.exports = function (e, r) { if (r) return e.slice(); var t = e.length, i = o ? o(t) : new e.constructor(t); return e.copy(i), i } }), ru = D((e, r) => { G(), r.exports = Q().Uint8Array }), rd = D((e, r) => { G(); var t = ru(); r.exports = function (e) { var r = new e.constructor(e.byteLength); return new t(r).set(new t(e)), r } }), rc = D((e, r) => { G(); var t = rd(); r.exports = function (e, r) { var i = r ? t(e.buffer) : e.buffer; return new e.constructor(i, e.byteOffset, e.length) } }), rh = D((e, r) => { G(), r.exports = function (e, r) { var t = -1, i = e.length; for (r || (r = Array(i)); ++t < i;)r[t] = e[t]; return r } }), rf = D((e, r) => { G(); var t = el(), i = Object.create; r.exports = function () { function e() { } return function (r) { if (!t(r)) return {}; if (i) return i(r); e.prototype = r; var l = new e; return e.prototype = void 0, l } }() }), r_ = D((e, r) => { G(), r.exports = function (e, r) { return function (t) { return e(r(t)) } } }), rp = D((e, r) => { G(), r.exports = r_()(Object.getPrototypeOf, Object) }), rm = D((e, r) => { G(); var t = Object.prototype; r.exports = function (e) { var r = e && e.constructor; return e === ("function" == typeof r && r.prototype || t) } }), rx = D((e, r) => { G(); var t = rf(), i = rp(), l = rm(); r.exports = function (e) { return "function" != typeof e.constructor || l(e) ? {} : t(i(e)) } }), rg = D((e, r) => { G(); var t = ei(), i = e6(); r.exports = function (e) { return i(e) && "[object Arguments]" == t(e) } }), rv = D((e, r) => { G(); var t = rg(), i = e6(), l = Object.prototype, n = l.hasOwnProperty, o = l.propertyIsEnumerable; r.exports = t(function () { return arguments }()) ? t : function (e) { return i(e) && n.call(e, "callee") && !o.call(e, "callee") } }), rL = D((e, r) => { G(), r.exports = Array.isArray }), rb = D((e, r) => { G(), r.exports = function () { return !1 } }), ry = D((e, r) => { G(); var t = Q(), i = rb(), l = "object" == typeof e && e && !e.nodeType && e, n = l && "object" == typeof r && r && !r.nodeType && r, o = n && n.exports === l ? t.Buffer : void 0; r.exports = (o ? o.isBuffer : void 0) || i }), rw = D((e, r) => { G(); var t = ei(), i = rp(), l = e6(), n = Object.prototype, o = Function.prototype.toString, a = n.hasOwnProperty, s = o.call(Object); r.exports = function (e) { if (!l(e) || "[object Object]" != t(e)) return !1; var r = i(e); if (null === r) return !0; var n = a.call(r, "constructor") && r.constructor; return "function" == typeof n && n instanceof n && o.call(n) == s } }), rj = D((e, r) => { G(); var t = ei(), i = e4(), l = e6(), n = {}; n["[object Float32Array]"] = n["[object Float64Array]"] = n["[object Int8Array]"] = n["[object Int16Array]"] = n["[object Int32Array]"] = n["[object Uint8Array]"] = n["[object Uint8ClampedArray]"] = n["[object Uint16Array]"] = n["[object Uint32Array]"] = !0, n["[object Arguments]"] = n["[object Array]"] = n["[object ArrayBuffer]"] = n["[object Boolean]"] = n["[object DataView]"] = n["[object Date]"] = n["[object Error]"] = n["[object Function]"] = n["[object Map]"] = n["[object Number]"] = n["[object Object]"] = n["[object RegExp]"] = n["[object Set]"] = n["[object String]"] = n["[object WeakMap]"] = !1, r.exports = function (e) { return l(e) && i(e.length) && !!n[t(e)] } }), rk = D((e, r) => { G(); var t = Y(), i = "object" == typeof e && e && !e.nodeType && e, l = i && "object" == typeof r && r && !r.nodeType && r, n = l && l.exports === i && t.process; r.exports = function () { try { return l && l.require && l.require("util").types || n && n.binding && n.binding("util") } catch { } }() }), rM = D((e, r) => { G(); var t = rj(), i = eG(), l = rk(), n = l && l.isTypedArray; r.exports = n ? i(n) : t }), rH = D((e, r) => { G(), r.exports = function (e, r) { if (("constructor" !== r || "function" != typeof e[r]) && "__proto__" != r) return e[r] } }), rV = D((e, r) => { G(); var t = rn(), i = ev(), l = Object.prototype.hasOwnProperty; r.exports = function (e, r, n) { var o = e[r]; l.call(e, r) && i(o, n) && (void 0 !== n || r in e) || t(e, r, n) } }), rZ = D((e, r) => { G(); var t = rV(), i = rn(); r.exports = function (e, r, l, n) { var o = !l; l || (l = {}); for (var a = -1, s = r.length; ++a < s;) { var C = r[a], u = n ? n(l[C], e[C], C, l, e) : void 0; void 0 === u && (u = e[C]), o ? i(l, C, u) : t(l, C, u) } return l } }), rN = D((e, r) => { G(), r.exports = function (e, r) { for (var t = -1, i = Array(e); ++t < e;)i[t] = r(t); return i } }), rR = D((e, r) => { G(); var t = /^(?:0|[1-9]\d*)$/; r.exports = function (e, r) { var i = typeof e; return !!(r = null == r ? 0x1fffffffffffff : r) && ("number" == i || "symbol" != i && t.test(e)) && e > -1 && e % 1 == 0 && e < r } }), rS = D((e, r) => { G(); var t = rN(), i = rv(), l = rL(), n = ry(), o = rR(), a = rM(), s = Object.prototype.hasOwnProperty; r.exports = function (e, r) { var C = l(e), u = !C && i(e), d = !C && !u && n(e), c = !C && !u && !d && a(e), h = C || u || d || c, f = h ? t(e.length, String) : [], _ = f.length; for (var p in e) (r || s.call(e, p)) && !(h && ("length" == p || d && ("offset" == p || "parent" == p) || c && ("buffer" == p || "byteLength" == p || "byteOffset" == p) || o(p, _))) && f.push(p); return f } }), rP = D((e, r) => { G(), r.exports = function (e) { var r = []; if (null != e) for (var t in Object(e)) r.push(t); return r } }), rI = D((e, r) => { G(); var t = el(), i = rm(), l = rP(), n = Object.prototype.hasOwnProperty; r.exports = function (e) { if (!t(e)) return l(e); var r = i(e), o = []; for (var a in e) "constructor" == a && (r || !n.call(e, a)) || o.push(a); return o } }), rO = D((e, r) => { G(); var t = rS(), i = rI(), l = e5(); r.exports = function (e) { return l(e) ? t(e, !0) : i(e) } }), rA = D((e, r) => { G(); var t = rZ(), i = rO(); r.exports = function (e) { return t(e, i(e)) } }), rz = D((e, r) => { G(); var t = ro(), i = rC(), l = rc(), n = rh(), o = rx(), a = rv(), s = rL(), C = e7(), u = ry(), d = en(), c = el(), h = rw(), f = rM(), _ = rH(), p = rA(); r.exports = function (e, r, m, x, g, v, L) { var b = _(e, m), y = _(r, m), w = L.get(y); if (w) return void t(e, m, w); var j = v ? v(b, y, m + "", e, r, L) : void 0, k = void 0 === j; if (k) { var M = s(y), H = !M && u(y), V = !M && !H && f(y); j = y, M || H || V ? s(b) ? j = b : C(b) ? j = n(b) : H ? (k = !1, j = i(y, !0)) : V ? (k = !1, j = l(y, !0)) : j = [] : h(y) || a(y) ? (j = b, a(b) ? j = p(b) : (!c(b) || d(b)) && (j = o(y))) : k = !1 } k && (L.set(y, j), g(j, y, x, v, L), L.delete(y)), t(e, m, j) } }), rB = D((e, r) => { G(); var t = rl(), i = ro(), l = rs(), n = rz(), o = el(), a = rO(), s = rH(); r.exports = function e(r, C, u, d, c) { r !== C && l(C, function (l, a) { if (c || (c = new t), o(l)) n(r, C, a, u, e, d, c); else { var h = d ? d(s(r, a), l, a + "", r, C, c) : void 0; void 0 === h && (h = l), i(r, a, h) } }, a) } }), rE = D((e, r) => { G(); var t = ev(), i = e5(), l = rR(), n = el(); r.exports = function (e, r, o) { if (!n(o)) return !1; var a = typeof r; return ("number" == a ? !!(i(o) && l(r, o.length)) : "string" == a && r in o) && t(o[r], e) } }), rF = D((e, r) => { G(); var t = e3(), i = rE(); r.exports = function (e) { return t(function (r, t) { var l = -1, n = t.length, o = n > 1 ? t[n - 1] : void 0, a = n > 2 ? t[2] : void 0; for (o = e.length > 3 && "function" == typeof o ? (n--, o) : void 0, a && i(t[0], t[1], a) && (o = n < 3 ? void 0 : o, n = 1), r = Object(r); ++l < n;) { var s = t[l]; s && e(r, s, l, o) } return r }) } }), rT = D((e, r) => { G(); var t = rB(); r.exports = rF()(function (e, r, i) { t(e, r, i) }) }), rD = D((e, r) => { G(); var t = ei(), i = e6(); r.exports = function (e) { return "symbol" == typeof e || i(e) && "[object Symbol]" == t(e) } }), rW = D((e, r) => { G(); var t = rD(); r.exports = function (e, r, i) { for (var l = -1, n = e.length; ++l < n;) { var o = e[l], a = r(o); if (null != a && (void 0 === s ? a == a && !t(a) : i(a, s))) var s = a, C = o } return C } }), rG = D((e, r) => { G(), r.exports = function (e, r) { return e > r } }), rU = D((e, r) => { G(); var t = rW(), i = rG(), l = eq(); r.exports = function (e) { return e && e.length ? t(e, l, i) : void 0 } }), r$ = D((e, r) => { G(), r.exports = function (e, r) { return e < r } }), rq = D((e, r) => { G(); var t = rW(), i = r$(), l = eq(); r.exports = function (e) { return e && e.length ? t(e, l, i) : void 0 } }), rK = D((e, r) => { G(); var t = rB(); r.exports = rF()(function (e, r, i, l) { t(e, r, i, l) }) }), rX = D((e, r) => {
            G(), (function () {
                var t, i = "Expected a function", l = "__lodash_hash_undefined__", n = "__lodash_placeholder__", o = 1 / 0, a = 0 / 0, s = [["ary", 128], ["bind", 1], ["bindKey", 2], ["curry", 8], ["curryRight", 16], ["flip", 512], ["partial", 32], ["partialRight", 64], ["rearg", 256]], C = "[object Arguments]", u = "[object Array]", d = "[object Boolean]", c = "[object Date]", h = "[object Error]", f = "[object Function]", _ = "[object GeneratorFunction]", p = "[object Map]", m = "[object Number]", x = "[object Object]", g = "[object Promise]", v = "[object RegExp]", L = "[object Set]", b = "[object String]", y = "[object Symbol]", w = "[object WeakMap]", j = "[object ArrayBuffer]", k = "[object DataView]", M = "[object Float32Array]", H = "[object Float64Array]", V = "[object Int8Array]", Z = "[object Int16Array]", N = "[object Int32Array]", R = "[object Uint8Array]", S = "[object Uint8ClampedArray]", P = "[object Uint16Array]", I = "[object Uint32Array]", O = /\b__p \+= '';/g, A = /\b(__p \+=) '' \+/g, z = /(__e\(.*?\)|\b__t\)) \+\n'';/g, B = /&(?:amp|lt|gt|quot|#39);/g, E = /[&<>"']/g, F = RegExp(B.source), T = RegExp(E.source), D = /<%-([\s\S]+?)%>/g, W = /<%([\s\S]+?)%>/g, G = /<%=([\s\S]+?)%>/g, U = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, $ = /^\w*$/, q = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, K = /[\\^$.*+?()[\]{}|]/g, X = RegExp(K.source), J = /^\s+/, Y = /\s/, Q = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, ee = /\{\n\/\* \[wrapped with (.+)\] \*/, er = /,? & /, et = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g, ei = /[()=,{}\[\]\/\s]/, el = /\\(\\)?/g, en = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g, eo = /\w*$/, ea = /^[-+]0x[0-9a-f]+$/i, es = /^0b[01]+$/i, eC = /^\[object .+?Constructor\]$/, eu = /^0o[0-7]+$/i, ed = /^(?:0|[1-9]\d*)$/, ec = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, eh = /($^)/, ef = /['\n\r\u2028\u2029\\]/g, e_ = "\ud800-\udfff", ep = "\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff", em = "\\u2700-\\u27bf", ex = "a-z\\xdf-\\xf6\\xf8-\\xff", eg = "A-Z\\xc0-\\xd6\\xd8-\\xde", ev = "\\ufe0e\\ufe0f", eL = "\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", eb = "['’]", ey = "[" + eL + "]", ew = "[" + ep + "]", ej = "[" + ex + "]", ek = "[^" + e_ + eL + "\\d+" + em + ex + eg + "]", eM = "\ud83c[\udffb-\udfff]", eH = "[^" + e_ + "]", eV = "(?:\ud83c[\udde6-\uddff]){2}", eZ = "[\ud800-\udbff][\udc00-\udfff]", eN = "[" + eg + "]", eR = "\\u200d", eS = "(?:" + ej + "|" + ek + ")", eP = "(?:" + eN + "|" + ek + ")", eI = "(?:" + eb + "(?:d|ll|m|re|s|t|ve))?", eO = "(?:" + eb + "(?:D|LL|M|RE|S|T|VE))?", eA = "(?:" + ew + "|" + eM + ")?", ez = "[" + ev + "]?", eB = "(?:" + eR + "(?:" + [eH, eV, eZ].join("|") + ")" + ez + eA + ")*", eE = ez + eA + eB, eF = "(?:" + ["[" + em + "]", eV, eZ].join("|") + ")" + eE, eT = "(?:" + [eH + ew + "?", ew, eV, eZ, "[" + e_ + "]"].join("|") + ")", eD = RegExp(eb, "g"), eW = RegExp(ew, "g"), eG = RegExp(eM + "(?=" + eM + ")|" + eT + eE, "g"), eU = RegExp([eN + "?" + ej + "+" + eI + "(?=" + [ey, eN, "$"].join("|") + ")", eP + "+" + eO + "(?=" + [ey, eN + eS, "$"].join("|") + ")", eN + "?" + eS + "+" + eI, eN + "+" + eO, "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])|\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])|\\d+", eF].join("|"), "g"), e$ = RegExp("[" + eR + e_ + ep + ev + "]"), eq = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, eK = ["Array", "Buffer", "DataView", "Date", "Error", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Map", "Math", "Object", "Promise", "RegExp", "Set", "String", "Symbol", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "WeakMap", "_", "clearTimeout", "isFinite", "parseInt", "setTimeout"], eX = -1, eJ = {}; eJ[M] = eJ[H] = eJ[V] = eJ[Z] = eJ[N] = eJ[R] = eJ[S] = eJ[P] = eJ[I] = !0, eJ[C] = eJ[u] = eJ[j] = eJ[d] = eJ[k] = eJ[c] = eJ[h] = eJ[f] = eJ[p] = eJ[m] = eJ[x] = eJ[v] = eJ[L] = eJ[b] = eJ[w] = !1; var eY = {}; eY[C] = eY[u] = eY[j] = eY[k] = eY[d] = eY[c] = eY[M] = eY[H] = eY[V] = eY[Z] = eY[N] = eY[p] = eY[m] = eY[x] = eY[v] = eY[L] = eY[b] = eY[y] = eY[R] = eY[S] = eY[P] = eY[I] = !0, eY[h] = eY[f] = eY[w] = !1; var eQ = { "\\": "\\", "'": "'", "\n": "n", "\r": "r", "\u2028": "u2028", "\u2029": "u2029" }, e1 = parseFloat, e2 = parseInt, e3 = "object" == typeof global && global && global.Object === Object && global, e4 = "object" == typeof self && self && self.Object === Object && self, e5 = e3 || e4 || Function("return this")(), e6 = "object" == typeof e && e && !e.nodeType && e, e7 = e6 && "object" == typeof r && r && !r.nodeType && r, e8 = e7 && e7.exports === e6, e9 = e8 && e3.process, e0 = function () { try { return e7 && e7.require && e7.require("util").types || e9 && e9.binding && e9.binding("util") } catch { } }(), re = e0 && e0.isArrayBuffer, rr = e0 && e0.isDate, rt = e0 && e0.isMap, ri = e0 && e0.isRegExp, rl = e0 && e0.isSet, rn = e0 && e0.isTypedArray; function ro(e, r, t) { switch (t.length) { case 0: return e.call(r); case 1: return e.call(r, t[0]); case 2: return e.call(r, t[0], t[1]); case 3: return e.call(r, t[0], t[1], t[2]) }return e.apply(r, t) } function ra(e, r, t, i) { for (var l = -1, n = null == e ? 0 : e.length; ++l < n;) { var o = e[l]; r(i, o, t(o), e) } return i } function rs(e, r) { for (var t = -1, i = null == e ? 0 : e.length; ++t < i && !1 !== r(e[t], t, e);); return e } function rC(e, r) { for (var t = -1, i = null == e ? 0 : e.length; ++t < i;)if (!r(e[t], t, e)) return !1; return !0 } function ru(e, r) { for (var t = -1, i = null == e ? 0 : e.length, l = 0, n = []; ++t < i;) { var o = e[t]; r(o, t, e) && (n[l++] = o) } return n } function rd(e, r) { return !!(null == e ? 0 : e.length) && rL(e, r, 0) > -1 } function rc(e, r, t) { for (var i = -1, l = null == e ? 0 : e.length; ++i < l;)if (t(r, e[i])) return !0; return !1 } function rh(e, r) { for (var t = -1, i = null == e ? 0 : e.length, l = Array(i); ++t < i;)l[t] = r(e[t], t, e); return l } function rf(e, r) { for (var t = -1, i = r.length, l = e.length; ++t < i;)e[l + t] = r[t]; return e } function r_(e, r, t, i) { var l = -1, n = null == e ? 0 : e.length; for (i && n && (t = e[++l]); ++l < n;)t = r(t, e[l], l, e); return t } function rp(e, r, t, i) { var l = null == e ? 0 : e.length; for (i && l && (t = e[--l]); l--;)t = r(t, e[l], l, e); return t } function rm(e, r) { for (var t = -1, i = null == e ? 0 : e.length; ++t < i;)if (r(e[t], t, e)) return !0; return !1 } var rx = rj("length"); function rg(e, r, t) { var i; return t(e, function (e, t, l) { if (r(e, t, l)) return i = t, !1 }), i } function rv(e, r, t, i) { for (var l = e.length, n = t + (i ? 1 : -1); i ? n-- : ++n < l;)if (r(e[n], n, e)) return n; return -1 } function rL(e, r, t) { return r == r ? function (e, r, t) { for (var i = t - 1, l = e.length; ++i < l;)if (e[i] === r) return i; return -1 }(e, r, t) : rv(e, ry, t) } function rb(e, r, t, i) { for (var l = t - 1, n = e.length; ++l < n;)if (i(e[l], r)) return l; return -1 } function ry(e) { return e != e } function rw(e, r) { var t = null == e ? 0 : e.length; return t ? rH(e, r) / t : a } function rj(e) { return function (r) { return null == r ? t : r[e] } } function rk(e) { return function (r) { return null == e ? t : e[r] } } function rM(e, r, t, i, l) { return l(e, function (e, l, n) { t = i ? (i = !1, e) : r(t, e, l, n) }), t } function rH(e, r) { for (var i, l = -1, n = e.length; ++l < n;) { var o = r(e[l]); o !== t && (i = i === t ? o : i + o) } return i } function rV(e, r) { for (var t = -1, i = Array(e); ++t < e;)i[t] = r(t); return i } function rZ(e) { return e && e.slice(0, rU(e) + 1).replace(J, "") } function rN(e) { return function (r) { return e(r) } } function rR(e, r) { return rh(r, function (r) { return e[r] }) } function rS(e, r) { return e.has(r) } function rP(e, r) { for (var t = -1, i = e.length; ++t < i && rL(r, e[t], 0) > -1;); return t } function rI(e, r) { for (var t = e.length; t-- && rL(r, e[t], 0) > -1;); return t } var rO = rk({ À: "A", Á: "A", Â: "A", Ã: "A", Ä: "A", Å: "A", à: "a", á: "a", â: "a", ã: "a", ä: "a", å: "a", Ç: "C", ç: "c", Ð: "D", ð: "d", È: "E", É: "E", Ê: "E", Ë: "E", è: "e", é: "e", ê: "e", ë: "e", Ì: "I", Í: "I", Î: "I", Ï: "I", ì: "i", í: "i", î: "i", ï: "i", Ñ: "N", ñ: "n", Ò: "O", Ó: "O", Ô: "O", Õ: "O", Ö: "O", Ø: "O", ò: "o", ó: "o", ô: "o", õ: "o", ö: "o", ø: "o", Ù: "U", Ú: "U", Û: "U", Ü: "U", ù: "u", ú: "u", û: "u", ü: "u", Ý: "Y", ý: "y", ÿ: "y", Æ: "Ae", æ: "ae", Þ: "Th", þ: "th", ß: "ss", Ā: "A", Ă: "A", Ą: "A", ā: "a", ă: "a", ą: "a", Ć: "C", Ĉ: "C", Ċ: "C", Č: "C", ć: "c", ĉ: "c", ċ: "c", č: "c", Ď: "D", Đ: "D", ď: "d", đ: "d", Ē: "E", Ĕ: "E", Ė: "E", Ę: "E", Ě: "E", ē: "e", ĕ: "e", ė: "e", ę: "e", ě: "e", Ĝ: "G", Ğ: "G", Ġ: "G", Ģ: "G", ĝ: "g", ğ: "g", ġ: "g", ģ: "g", Ĥ: "H", Ħ: "H", ĥ: "h", ħ: "h", Ĩ: "I", Ī: "I", Ĭ: "I", Į: "I", İ: "I", ĩ: "i", ī: "i", ĭ: "i", į: "i", ı: "i", Ĵ: "J", ĵ: "j", Ķ: "K", ķ: "k", ĸ: "k", Ĺ: "L", Ļ: "L", Ľ: "L", Ŀ: "L", Ł: "L", ĺ: "l", ļ: "l", ľ: "l", ŀ: "l", ł: "l", Ń: "N", Ņ: "N", Ň: "N", Ŋ: "N", ń: "n", ņ: "n", ň: "n", ŋ: "n", Ō: "O", Ŏ: "O", Ő: "O", ō: "o", ŏ: "o", ő: "o", Ŕ: "R", Ŗ: "R", Ř: "R", ŕ: "r", ŗ: "r", ř: "r", Ś: "S", Ŝ: "S", Ş: "S", Š: "S", ś: "s", ŝ: "s", ş: "s", š: "s", Ţ: "T", Ť: "T", Ŧ: "T", ţ: "t", ť: "t", ŧ: "t", Ũ: "U", Ū: "U", Ŭ: "U", Ů: "U", Ű: "U", Ų: "U", ũ: "u", ū: "u", ŭ: "u", ů: "u", ű: "u", ų: "u", Ŵ: "W", ŵ: "w", Ŷ: "Y", ŷ: "y", Ÿ: "Y", Ź: "Z", Ż: "Z", Ž: "Z", ź: "z", ż: "z", ž: "z", Ĳ: "IJ", ĳ: "ij", Œ: "Oe", œ: "oe", ŉ: "'n", ſ: "s" }), rA = rk({ "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;" }); function rz(e) { return "\\" + eQ[e] } function rB(e) { return e$.test(e) } function rE(e) { var r = -1, t = Array(e.size); return e.forEach(function (e, i) { t[++r] = [i, e] }), t } function rF(e, r) { return function (t) { return e(r(t)) } } function rT(e, r) { for (var t = -1, i = e.length, l = 0, o = []; ++t < i;) { var a = e[t]; (a === r || a === n) && (e[t] = n, o[l++] = t) } return o } function rD(e) { var r = -1, t = Array(e.size); return e.forEach(function (e) { t[++r] = e }), t } function rW(e) { return rB(e) ? function (e) { for (var r = eG.lastIndex = 0; eG.test(e);)++r; return r }(e) : rx(e) } function rG(e) { return rB(e) ? e.match(eG) || [] : e.split("") } function rU(e) { for (var r = e.length; r-- && Y.test(e.charAt(r));); return r } var r$ = rk({ "&amp;": "&", "&lt;": "<", "&gt;": ">", "&quot;": '"', "&#39;": "'" }), rq = function e(r) {
                    var Y, e_, ep, em, ex = (r = null == r ? e5 : rq.defaults(e5.Object(), r, rq.pick(e5, eK))).Array, eg = r.Date, ev = r.Error, eL = r.Function, eb = r.Math, ey = r.Object, ew = r.RegExp, ej = r.String, ek = r.TypeError, eM = ex.prototype, eH = eL.prototype, eV = ey.prototype, eZ = r["__core-js_shared__"], eN = eH.toString, eR = eV.hasOwnProperty, eS = 0, eP = (Y = /[^.]+$/.exec(eZ && eZ.keys && eZ.keys.IE_PROTO || "")) ? "Symbol(src)_1." + Y : "", eI = eV.toString, eO = eN.call(ey), eA = e5._, ez = ew("^" + eN.call(eR).replace(K, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), eB = e8 ? r.Buffer : t, eE = r.Symbol, eF = r.Uint8Array, eT = eB ? eB.allocUnsafe : t, eG = rF(ey.getPrototypeOf, ey), e$ = ey.create, eQ = eV.propertyIsEnumerable, e3 = eM.splice, e4 = eE ? eE.isConcatSpreadable : t, e6 = eE ? eE.iterator : t, e7 = eE ? eE.toStringTag : t, e9 = function () { try { var e = lf(ey, "defineProperty"); return e({}, "", {}), e } catch { } }(), e0 = r.clearTimeout !== e5.clearTimeout && r.clearTimeout, rx = eg && eg.now !== e5.Date.now && eg.now, rk = r.setTimeout !== e5.setTimeout && r.setTimeout, rK = eb.ceil, rX = eb.floor, rJ = ey.getOwnPropertySymbols, rY = eB ? eB.isBuffer : t, rQ = r.isFinite, r1 = eM.join, r2 = rF(ey.keys, ey), r3 = eb.max, r4 = eb.min, r5 = eg.now, r6 = r.parseInt, r7 = eb.random, r8 = eM.reverse, r9 = lf(r, "DataView"), r0 = lf(r, "Map"), te = lf(r, "Promise"), tr = lf(r, "Set"), tt = lf(r, "WeakMap"), ti = lf(ey, "create"), tl = tt && new tt, tn = {}, to = lB(r9), ta = lB(r0), ts = lB(te), tC = lB(tr), tu = lB(tt), td = eE ? eE.prototype : t, tc = td ? td.valueOf : t, th = td ? td.toString : t; function tf(e) { if (nq(e) && !nA(e) && !(e instanceof tx)) { if (e instanceof tm) return e; if (eR.call(e, "__wrapped__")) return lE(e) } return new tm(e) } var t_ = function () { function e() { } return function (r) { if (!n$(r)) return {}; if (e$) return e$(r); e.prototype = r; var i = new e; return e.prototype = t, i } }(); function tp() { } function tm(e, r) { this.__wrapped__ = e, this.__actions__ = [], this.__chain__ = !!r, this.__index__ = 0, this.__values__ = t } function tx(e) { this.__wrapped__ = e, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = 0xffffffff, this.__views__ = [] } function tg(e) { var r = -1, t = null == e ? 0 : e.length; for (this.clear(); ++r < t;) { var i = e[r]; this.set(i[0], i[1]) } } function tv(e) { var r = -1, t = null == e ? 0 : e.length; for (this.clear(); ++r < t;) { var i = e[r]; this.set(i[0], i[1]) } } function tL(e) { var r = -1, t = null == e ? 0 : e.length; for (this.clear(); ++r < t;) { var i = e[r]; this.set(i[0], i[1]) } } function tb(e) { var r = -1, t = null == e ? 0 : e.length; for (this.__data__ = new tL; ++r < t;)this.add(e[r]) } function ty(e) { var r = this.__data__ = new tv(e); this.size = r.size } function tw(e, r) { var t = nA(e), i = !t && nO(e), l = !t && !i && nF(e), n = !t && !i && !l && n3(e), o = t || i || l || n, a = o ? rV(e.length, ej) : [], s = a.length; for (var C in e) (r || eR.call(e, C)) && !(o && ("length" == C || l && ("offset" == C || "parent" == C) || n && ("buffer" == C || "byteLength" == C || "byteOffset" == C) || lL(C, s))) && a.push(C); return a } function tj(e) { var r = e.length; return r ? e[iu(0, r - 1)] : t } tf.templateSettings = { escape: D, evaluate: W, interpolate: G, variable: "", imports: { _: tf } }, tf.prototype = tp.prototype, tf.prototype.constructor = tf, tm.prototype = t_(tp.prototype), tm.prototype.constructor = tm, tx.prototype = t_(tp.prototype), tx.prototype.constructor = tx, tg.prototype.clear = function () { this.__data__ = ti ? ti(null) : {}, this.size = 0 }, tg.prototype.delete = function (e) { var r = this.has(e) && delete this.__data__[e]; return this.size -= !!r, r }, tg.prototype.get = function (e) { var r = this.__data__; if (ti) { var i = r[e]; return i === l ? t : i } return eR.call(r, e) ? r[e] : t }, tg.prototype.has = function (e) { var r = this.__data__; return ti ? r[e] !== t : eR.call(r, e) }, tg.prototype.set = function (e, r) { var i = this.__data__; return this.size += +!this.has(e), i[e] = ti && r === t ? l : r, this }, tv.prototype.clear = function () { this.__data__ = [], this.size = 0 }, tv.prototype.delete = function (e) { var r = this.__data__, t = tH(r, e); return !(t < 0) && (t == r.length - 1 ? r.pop() : e3.call(r, t, 1), --this.size, !0) }, tv.prototype.get = function (e) { var r = this.__data__, i = tH(r, e); return i < 0 ? t : r[i][1] }, tv.prototype.has = function (e) { return tH(this.__data__, e) > -1 }, tv.prototype.set = function (e, r) { var t = this.__data__, i = tH(t, e); return i < 0 ? (++this.size, t.push([e, r])) : t[i][1] = r, this }, tL.prototype.clear = function () { this.size = 0, this.__data__ = { hash: new tg, map: new (r0 || tv), string: new tg } }, tL.prototype.delete = function (e) { var r = lc(this, e).delete(e); return this.size -= !!r, r }, tL.prototype.get = function (e) { return lc(this, e).get(e) }, tL.prototype.has = function (e) { return lc(this, e).has(e) }, tL.prototype.set = function (e, r) { var t = lc(this, e), i = t.size; return t.set(e, r), this.size += +(t.size != i), this }, tb.prototype.add = tb.prototype.push = function (e) { return this.__data__.set(e, l), this }, tb.prototype.has = function (e) { return this.__data__.has(e) }; function tk(e, r, i) { (i === t || nS(e[r], i)) && (i !== t || r in e) || tN(e, r, i) } function tM(e, r, i) { var l = e[r]; eR.call(e, r) && nS(l, i) && (i !== t || r in e) || tN(e, r, i) } function tH(e, r) { for (var t = e.length; t--;)if (nS(e[t][0], r)) return t; return -1 } function tV(e, r, t, i) { return tz(e, function (e, l, n) { r(i, e, t(e), n) }), i } function tZ(e, r) { return e && iD(r, of(r), e) } function tN(e, r, t) { "__proto__" == r && e9 ? e9(e, r, { configurable: !0, enumerable: !0, value: t, writable: !0 }) : e[r] = t } function tR(e, r) { for (var i = -1, l = r.length, n = ex(l), o = null == e; ++i < l;)n[i] = o ? t : oC(e, r[i]); return n } function tS(e, r, i) { return e == e && (i !== t && (e = e <= i ? e : i), r !== t && (e = e >= r ? e : r)), e } function tP(e, r, i, l, n, o) { var a, s = 1 & r, u = 2 & r, h = 4 & r; if (i && (a = n ? i(e, l, n, o) : i(e)), a !== t) return a; if (!n$(e)) return e; var g = nA(e); if (g) { if (O = (w = e).length, A = new w.constructor(O), O && "string" == typeof w[0] && eR.call(w, "index") && (A.index = w.index, A.input = w.input), a = A, !s) return iT(e, a) } else { var w, O, A, z, B, E, F, T, D = lm(e), W = D == f || D == _; if (nF(e)) return iO(e, s); if (D == x || D == C || W && !n) { if (a = u || W ? {} : lg(e), !s) { return u ? (z = e, B = (T = a) && iD(e, o_(e), T), iD(z, lp(z), B)) : (E = e, F = tZ(a, e), iD(E, l_(E), F)) } } else { if (!eY[D]) return n ? e : {}; a = function (e, r, t) { var i, l, n = e.constructor; switch (r) { case j: return iA(e); case d: case c: return new n(+e); case k: return i = t ? iA(e.buffer) : e.buffer, new e.constructor(i, e.byteOffset, e.byteLength); case M: case H: case V: case Z: case N: case R: case S: case P: case I: return iz(e, t); case p: return new n; case m: case b: return new n(e); case v: return (l = new e.constructor(e.source, eo.exec(e))).lastIndex = e.lastIndex, l; case L: return new n; case y: return tc ? ey(tc.call(e)) : {} } }(e, D, s) } } o || (o = new ty); var G = o.get(e); if (G) return G; o.set(e, a), nQ(e) ? e.forEach(function (t) { a.add(tP(t, r, i, t, e, o)) }) : nK(e) && e.forEach(function (t, l) { a.set(l, tP(t, r, i, l, e, o)) }); var U = h ? u ? la : lo : u ? o_ : of, $ = g ? t : U(e); return rs($ || e, function (t, l) { $ && (t = e[l = t]), tM(a, l, tP(t, r, i, l, e, o)) }), a } function tI(e, r, i) { var l = i.length; if (null == e) return !l; for (e = ey(e); l--;) { var n = i[l], o = r[n], a = e[n]; if (a === t && !(n in e) || !o(a)) return !1 } return !0 } function tO(e, r, l) { if ("function" != typeof e) throw new ek(i); return lR(function () { e.apply(t, l) }, r) } function tA(e, r, t, i) { var l = -1, n = rd, o = !0, a = e.length, s = [], C = r.length; if (!a) return s; t && (r = rh(r, rN(t))), i ? (n = rc, o = !1) : r.length >= 200 && (n = rS, o = !1, r = new tb(r)); e: for (; ++l < a;) { var u = e[l], d = null == t ? u : t(u); if (u = i || 0 !== u ? u : 0, o && d == d) { for (var c = C; c--;)if (r[c] === d) continue e; s.push(u) } else n(r, d, i) || s.push(u) } return s } ty.prototype.clear = function () { this.__data__ = new tv, this.size = 0 }, ty.prototype.delete = function (e) { var r = this.__data__, t = r.delete(e); return this.size = r.size, t }, ty.prototype.get = function (e) { return this.__data__.get(e) }, ty.prototype.has = function (e) { return this.__data__.has(e) }, ty.prototype.set = function (e, r) { var t = this.__data__; if (t instanceof tv) { var i = t.__data__; if (!r0 || i.length < 199) return i.push([e, r]), this.size = ++t.size, this; t = this.__data__ = new tL(i) } return t.set(e, r), this.size = t.size, this }; var tz = iU(tU), tB = iU(t$, !0); function tE(e, r) { var t = !0; return tz(e, function (e, i, l) { return t = !!r(e, i, l) }), t } function tF(e, r, i) { for (var l = -1, n = e.length; ++l < n;) { var o = e[l], a = r(o); if (null != a && (s === t ? a == a && !n2(a) : i(a, s))) var s = a, C = o } return C } function tT(e, r) { var t = []; return tz(e, function (e, i, l) { r(e, i, l) && t.push(e) }), t } function tD(e, r, t, i, l) { var n = -1, o = e.length; for (t || (t = lv), l || (l = []); ++n < o;) { var a = e[n]; r > 0 && t(a) ? r > 1 ? tD(a, r - 1, t, i, l) : rf(l, a) : i || (l[l.length] = a) } return l } var tW = i$(), tG = i$(!0); function tU(e, r) { return e && tW(e, r, of) } function t$(e, r) { return e && tG(e, r, of) } function tq(e, r) { return ru(r, function (r) { return nW(e[r]) }) } function tK(e, r) { r = iS(r, e); for (var i = 0, l = r.length; null != e && i < l;)e = e[lz(r[i++])]; return i && i == l ? e : t } function tX(e, r, t) { var i = r(e); return nA(e) ? i : rf(i, t(e)) } function tJ(e) { var r; return null == e ? e === t ? "[object Undefined]" : "[object Null]" : e7 && e7 in ey(e) ? function (e) { var r = eR.call(e, e7), i = e[e7]; try { e[e7] = t; var l = !0 } catch { } var n = eI.call(e); return l && (r ? e[e7] = i : delete e[e7]), n }(e) : (r = e, eI.call(r)) } function tY(e, r) { return e > r } function tQ(e, r) { return null != e && eR.call(e, r) } function t1(e, r) { return null != e && r in ey(e) } function t2(e, r, i) { for (var l = i ? rc : rd, n = e[0].length, o = e.length, a = o, s = ex(o), C = 1 / 0, u = []; a--;) { var d = e[a]; a && r && (d = rh(d, rN(r))), C = r4(d.length, C), s[a] = !i && (r || n >= 120 && d.length >= 120) ? new tb(a && d) : t } d = e[0]; var c = -1, h = s[0]; e: for (; ++c < n && u.length < C;) { var f = d[c], _ = r ? r(f) : f; if (f = i || 0 !== f ? f : 0, !(h ? rS(h, _) : l(u, _, i))) { for (a = o; --a;) { var p = s[a]; if (!(p ? rS(p, _) : l(e[a], _, i))) continue e } h && h.push(_), u.push(f) } } return u } function t3(e, r, i) { r = iS(r, e); var l = null == (e = lV(e, r)) ? e : e[lz(lJ(r))]; return null == l ? t : ro(l, e, i) } function t4(e) { return nq(e) && tJ(e) == C } function t5(e, r, i, l, n) { return e === r || (null != e && null != r && (nq(e) || nq(r)) ? function (e, r, i, l, n, o) { var a = nA(e), s = nA(r), f = a ? u : lm(e), _ = s ? u : lm(r); f = f == C ? x : f, _ = _ == C ? x : _; var g = f == x, w = _ == x, M = f == _; if (M && nF(e)) { if (!nF(r)) return !1; a = !0, g = !1 } if (M && !g) return o || (o = new ty), a || n3(e) ? ll(e, r, i, l, n, o) : function (e, r, t, i, l, n, o) { switch (t) { case k: if (e.byteLength != r.byteLength || e.byteOffset != r.byteOffset) break; e = e.buffer, r = r.buffer; case j: return !(e.byteLength != r.byteLength || !n(new eF(e), new eF(r))); case d: case c: case m: return nS(+e, +r); case h: return e.name == r.name && e.message == r.message; case v: case b: return e == r + ""; case p: var a = rE; case L: var s = 1 & i; if (a || (a = rD), e.size != r.size && !s) break; var C = o.get(e); if (C) return C == r; i |= 2, o.set(e, r); var u = ll(a(e), a(r), i, l, n, o); return o.delete(e), u; case y: if (tc) return tc.call(e) == tc.call(r) }return !1 }(e, r, f, i, l, n, o); if (!(1 & i)) { var H = g && eR.call(e, "__wrapped__"), V = w && eR.call(r, "__wrapped__"); if (H || V) { var Z = H ? e.value() : e, N = V ? r.value() : r; return o || (o = new ty), n(Z, N, i, l, o) } } return !!M && (o || (o = new ty), function (e, r, i, l, n, o) { var a = 1 & i, s = lo(e), C = s.length; if (C != lo(r).length && !a) return !1; for (var u = C; u--;) { var d = s[u]; if (!(a ? d in r : eR.call(r, d))) return !1 } var c = o.get(e), h = o.get(r); if (c && h) return c == r && h == e; var f = !0; o.set(e, r), o.set(r, e); for (var _ = a; ++u < C;) { var p = e[d = s[u]], m = r[d]; if (l) var x = a ? l(m, p, d, r, e, o) : l(p, m, d, e, r, o); if (!(x === t ? p === m || n(p, m, i, l, o) : x)) { f = !1; break } _ || (_ = "constructor" == d) } if (f && !_) { var g = e.constructor, v = r.constructor; g != v && "constructor" in e && "constructor" in r && !("function" == typeof g && g instanceof g && "function" == typeof v && v instanceof v) && (f = !1) } return o.delete(e), o.delete(r), f }(e, r, i, l, n, o)) }(e, r, i, l, t5, n) : e != e && r != r) } function t6(e, r, i, l) { var n = i.length, o = n, a = !l; if (null == e) return !o; for (e = ey(e); n--;) { var s = i[n]; if (a && s[2] ? s[1] !== e[s[0]] : !(s[0] in e)) return !1 } for (; ++n < o;) { var C = (s = i[n])[0], u = e[C], d = s[1]; if (a && s[2]) { if (u === t && !(C in e)) return !1 } else { var c = new ty; if (l) var h = l(u, d, C, e, r, c); if (!(h === t ? t5(d, u, 3, l, c) : h)) return !1 } } return !0 } function t7(e) { var r; return !(!n$(e) || (r = e, eP && eP in r)) && (nW(e) ? ez : eC).test(lB(e)) } function t8(e) { return "function" == typeof e ? e : null == e ? oE : "object" == typeof e ? nA(e) ? it(e[0], e[1]) : ir(e) : oK(e) } function t9(e) { if (!lk(e)) return r2(e); var r = []; for (var t in ey(e)) eR.call(e, t) && "constructor" != t && r.push(t); return r } function t0(e, r) { return e < r } function ie(e, r) { var t = -1, i = nB(e) ? ex(e.length) : []; return tz(e, function (e, l, n) { i[++t] = r(e, l, n) }), i } function ir(e) { var r = lh(e); return 1 == r.length && r[0][2] ? lM(r[0][0], r[0][1]) : function (t) { return t === e || t6(t, e, r) } } function it(e, r) { var i; return ly(e) && (i = r) == i && !n$(i) ? lM(lz(e), r) : function (i) { var l = oC(i, e); return l === t && l === r ? ou(i, e) : t5(r, l, 3) } } function ii(e, r, i, l, n) { e !== r && tW(r, function (o, a) { if (n || (n = new ty), n$(o)) !function (e, r, i, l, n, o, a) { var s = lZ(e, i), C = lZ(r, i), u = a.get(C); if (u) return tk(e, i, u); var d = o ? o(s, C, i + "", e, r, a) : t, c = d === t; if (c) { var h = nA(C), f = !h && nF(C), _ = !h && !f && n3(C); d = C, h || f || _ ? nA(s) ? d = s : nE(s) ? d = iT(s) : f ? (c = !1, d = iO(C, !0)) : _ ? (c = !1, d = iz(C, !0)) : d = [] : nJ(C) || nO(C) ? (d = s, nO(s) ? d = oe(s) : (!n$(s) || nW(s)) && (d = lg(C))) : c = !1 } c && (a.set(C, d), n(d, C, l, o, a), a.delete(C)), tk(e, i, d) }(e, r, a, i, ii, l, n); else { var s = l ? l(lZ(e, a), o, a + "", e, r, n) : t; s === t && (s = o), tk(e, a, s) } }, o_) } function il(e, r) { var i = e.length; if (i) return lL(r += r < 0 ? i : 0, i) ? e[r] : t } function io(e, r, t) { r = r.length ? rh(r, function (e) { return nA(e) ? function (r) { return tK(r, 1 === e.length ? e[0] : e) } : e }) : [oE]; var i = -1; r = rh(r, rN(ld())); var l = ie(e, function (e, t, l) { return { criteria: rh(r, function (r) { return r(e) }), index: ++i, value: e } }), n = l.length; for (l.sort(function (e, r) { return function (e, r, t) { for (var i = -1, l = e.criteria, n = r.criteria, o = l.length, a = t.length; ++i < o;) { var s = iB(l[i], n[i]); if (s) { if (i >= a) return s; return s * ("desc" == t[i] ? -1 : 1) } } return e.index - r.index }(e, r, t) }); n--;)l[n] = l[n].value; return l } function ia(e, r, t) { for (var i = -1, l = r.length, n = {}; ++i < l;) { var o = r[i], a = tK(e, o); t(a, o) && ih(n, iS(o, e), a) } return n } function is(e, r, t, i) { var l = i ? rb : rL, n = -1, o = r.length, a = e; for (e === r && (r = iT(r)), t && (a = rh(e, rN(t))); ++n < o;)for (var s = 0, C = r[n], u = t ? t(C) : C; (s = l(a, u, s, i)) > -1;)a !== e && e3.call(a, s, 1), e3.call(e, s, 1); return e } function iC(e, r) { for (var t = e ? r.length : 0, i = t - 1; t--;) { var l = r[t]; if (t == i || l !== n) { var n = l; lL(l) ? e3.call(e, l, 1) : ij(e, l) } } return e } function iu(e, r) { return e + rX(r7() * (r - e + 1)) } function id(e, r) { var t = ""; if (!e || r < 1 || r > 0x1fffffffffffff) return t; do r % 2 && (t += e), (r = rX(r / 2)) && (e += e); while (r); return t } function ic(e, r) { return lS(lH(e, r, oE), e + "") } function ih(e, r, i, l) { if (!n$(e)) return e; r = iS(r, e); for (var n = -1, o = r.length, a = o - 1, s = e; null != s && ++n < o;) { var C = lz(r[n]), u = i; if ("__proto__" === C || "constructor" === C || "prototype" === C) break; if (n != a) { var d = s[C]; (u = l ? l(d, C, s) : t) === t && (u = n$(d) ? d : lL(r[n + 1]) ? [] : {}) } tM(s, C, u), s = s[C] } return e } var i_ = tl ? function (e, r) { return tl.set(e, r), e } : oE, ip = e9 ? function (e, r) { return e9(e, "toString", { configurable: !0, enumerable: !1, value: oA(r), writable: !0 }) } : oE; function im(e, r, t) { var i = -1, l = e.length; r < 0 && (r = -r > l ? 0 : l + r), (t = t > l ? l : t) < 0 && (t += l), l = r > t ? 0 : t - r >>> 0, r >>>= 0; for (var n = ex(l); ++i < l;)n[i] = e[i + r]; return n } function ix(e, r) { var t; return tz(e, function (e, i, l) { return !(t = r(e, i, l)) }), !!t } function ig(e, r, t) { var i = 0, l = null == e ? i : e.length; if ("number" == typeof r && r == r && l <= 0x7fffffff) { for (; i < l;) { var n = i + l >>> 1, o = e[n]; null !== o && !n2(o) && (t ? o <= r : o < r) ? i = n + 1 : l = n } return l } return iv(e, r, oE, t) } function iv(e, r, i, l) { var n = 0, o = null == e ? 0 : e.length; if (0 === o) return 0; r = i(r); for (var a = r != r, s = null === r, C = n2(r), u = r === t; n < o;) { var d = rX((n + o) / 2), c = i(e[d]), h = c !== t, f = null === c, _ = c == c, p = n2(c); if (a) var m = l || _; else m = u ? _ && (l || h) : s ? _ && h && (l || !f) : C ? _ && h && !f && (l || !p) : !f && !p && (l ? c <= r : c < r); m ? n = d + 1 : o = d } return r4(o, 0xfffffffe) } function iL(e, r) { for (var t = -1, i = e.length, l = 0, n = []; ++t < i;) { var o = e[t], a = r ? r(o) : o; if (!t || !nS(a, s)) { var s = a; n[l++] = 0 === o ? 0 : o } } return n } function ib(e) { return "number" == typeof e ? e : n2(e) ? a : +e } function iy(e) { if ("string" == typeof e) return e; if (nA(e)) return rh(e, iy) + ""; if (n2(e)) return th ? th.call(e) : ""; var r = e + ""; return "0" == r && 1 / e == -o ? "-0" : r } function iw(e, r, t) { var i = -1, l = rd, n = e.length, o = !0, a = [], s = a; if (t) o = !1, l = rc; else if (n >= 200) { var C = r ? null : i9(e); if (C) return rD(C); o = !1, l = rS, s = new tb } else s = r ? [] : a; e: for (; ++i < n;) { var u = e[i], d = r ? r(u) : u; if (u = t || 0 !== u ? u : 0, o && d == d) { for (var c = s.length; c--;)if (s[c] === d) continue e; r && s.push(d), a.push(u) } else l(s, d, t) || (s !== a && s.push(d), a.push(u)) } return a } function ij(e, r) { return r = iS(r, e), null == (e = lV(e, r)) || delete e[lz(lJ(r))] } function ik(e, r, t, i) { return ih(e, r, t(tK(e, r)), i) } function iM(e, r, t, i) { for (var l = e.length, n = i ? l : -1; (i ? n-- : ++n < l) && r(e[n], n, e);); return t ? im(e, i ? 0 : n, i ? n + 1 : l) : im(e, i ? n + 1 : 0, i ? l : n) } function iH(e, r) { var t = e; return t instanceof tx && (t = t.value()), r_(r, function (e, r) { return r.func.apply(r.thisArg, rf([e], r.args)) }, t) } function iV(e, r, t) { var i = e.length; if (i < 2) return i ? iw(e[0]) : []; for (var l = -1, n = ex(i); ++l < i;)for (var o = e[l], a = -1; ++a < i;)a != l && (n[l] = tA(n[l] || o, e[a], r, t)); return iw(tD(n, 1), r, t) } function iZ(e, r, i) { for (var l = -1, n = e.length, o = r.length, a = {}; ++l < n;) { var s = l < o ? r[l] : t; i(a, e[l], s) } return a } function iN(e) { return nE(e) ? e : [] } function iR(e) { return "function" == typeof e ? e : oE } function iS(e, r) { return nA(e) ? e : ly(e, r) ? [e] : lA(or(e)) } function iP(e, r, i) { var l = e.length; return i = i === t ? l : i, !r && i >= l ? e : im(e, r, i) } var iI = e0 || function (e) { return e5.clearTimeout(e) }; function iO(e, r) { if (r) return e.slice(); var t = e.length, i = eT ? eT(t) : new e.constructor(t); return e.copy(i), i } function iA(e) { var r = new e.constructor(e.byteLength); return new eF(r).set(new eF(e)), r } function iz(e, r) { var t = r ? iA(e.buffer) : e.buffer; return new e.constructor(t, e.byteOffset, e.length) } function iB(e, r) { if (e !== r) { var i = e !== t, l = null === e, n = e == e, o = n2(e), a = r !== t, s = null === r, C = r == r, u = n2(r); if (!s && !u && !o && e > r || o && a && C && !s && !u || l && a && C || !i && C || !n) return 1; if (!l && !o && !u && e < r || u && i && n && !l && !o || s && i && n || !a && n || !C) return -1 } return 0 } function iE(e, r, t, i) { for (var l = -1, n = e.length, o = t.length, a = -1, s = r.length, C = r3(n - o, 0), u = ex(s + C), d = !i; ++a < s;)u[a] = r[a]; for (; ++l < o;)(d || l < n) && (u[t[l]] = e[l]); for (; C--;)u[a++] = e[l++]; return u } function iF(e, r, t, i) { for (var l = -1, n = e.length, o = -1, a = t.length, s = -1, C = r.length, u = r3(n - a, 0), d = ex(u + C), c = !i; ++l < u;)d[l] = e[l]; for (var h = l; ++s < C;)d[h + s] = r[s]; for (; ++o < a;)(c || l < n) && (d[h + t[o]] = e[l++]); return d } function iT(e, r) { var t = -1, i = e.length; for (r || (r = ex(i)); ++t < i;)r[t] = e[t]; return r } function iD(e, r, i, l) { var n = !i; i || (i = {}); for (var o = -1, a = r.length; ++o < a;) { var s = r[o], C = l ? l(i[s], e[s], s, i, e) : t; C === t && (C = e[s]), n ? tN(i, s, C) : tM(i, s, C) } return i } function iW(e, r) { return function (t, i) { var l = nA(t) ? ra : tV, n = r ? r() : {}; return l(t, e, ld(i, 2), n) } } function iG(e) { return ic(function (r, i) { var l = -1, n = i.length, o = n > 1 ? i[n - 1] : t, a = n > 2 ? i[2] : t; for (o = e.length > 3 && "function" == typeof o ? (n--, o) : t, a && lb(i[0], i[1], a) && (o = n < 3 ? t : o, n = 1), r = ey(r); ++l < n;) { var s = i[l]; s && e(r, s, l, o) } return r }) } function iU(e, r) { return function (t, i) { if (null == t) return t; if (!nB(t)) return e(t, i); for (var l = t.length, n = r ? l : -1, o = ey(t); (r ? n-- : ++n < l) && !1 !== i(o[n], n, o);); return t } } function i$(e) { return function (r, t, i) { for (var l = -1, n = ey(r), o = i(r), a = o.length; a--;) { var s = o[e ? a : ++l]; if (!1 === t(n[s], s, n)) break } return r } } function iq(e) { return function (r) { var i = rB(r = or(r)) ? rG(r) : t, l = i ? i[0] : r.charAt(0), n = i ? iP(i, 1).join("") : r.slice(1); return l[e]() + n } } function iK(e) { return function (r) { return r_(oP(ok(r).replace(eD, "")), e, "") } } function iX(e) { return function () { var r = arguments; switch (r.length) { case 0: return new e; case 1: return new e(r[0]); case 2: return new e(r[0], r[1]); case 3: return new e(r[0], r[1], r[2]); case 4: return new e(r[0], r[1], r[2], r[3]); case 5: return new e(r[0], r[1], r[2], r[3], r[4]); case 6: return new e(r[0], r[1], r[2], r[3], r[4], r[5]); case 7: return new e(r[0], r[1], r[2], r[3], r[4], r[5], r[6]) }var t = t_(e.prototype), i = e.apply(t, r); return n$(i) ? i : t } } function iJ(e) { return function (r, i, l) { var n = ey(r); if (!nB(r)) { var o = ld(i, 3); r = of(r), i = function (e) { return o(n[e], e, n) } } var a = e(r, i, l); return a > -1 ? n[o ? r[a] : a] : t } } function iY(e) { return ln(function (r) { var l = r.length, n = l, o = tm.prototype.thru; for (e && r.reverse(); n--;) { var a = r[n]; if ("function" != typeof a) throw new ek(i); if (o && !s && "wrapper" == lC(a)) var s = new tm([], !0) } for (n = s ? n : l; ++n < l;) { var C = lC(a = r[n]), u = "wrapper" == C ? ls(a) : t; s = u && lw(u[0]) && 424 == u[1] && !u[4].length && 1 == u[9] ? s[lC(u[0])].apply(s, u[3]) : 1 == a.length && lw(a) ? s[C]() : s.thru(a) } return function () { var e = arguments, t = e[0]; if (s && 1 == e.length && nA(t)) return s.plant(t).value(); for (var i = 0, n = l ? r[i].apply(this, e) : t; ++i < l;)n = r[i].call(this, n); return n } }) } function iQ(e, r, i, l, n, o, a, s, C, u) { var d = 128 & r, c = 1 & r, h = 2 & r, f = 24 & r, _ = 512 & r, p = h ? t : iX(e); function m() { for (var x = arguments.length, g = ex(x), v = x; v--;)g[v] = arguments[v]; if (f) var L = lu(m), b = function (e, r) { for (var t = e.length, i = 0; t--;)e[t] === r && ++i; return i }(g, L); if (l && (g = iE(g, l, n, f)), o && (g = iF(g, o, a, f)), x -= b, f && x < u) { var y = rT(g, L); return i7(e, r, iQ, m.placeholder, i, g, y, s, C, u - x) } var w = c ? i : this, j = h ? w[e] : e; return x = g.length, s ? g = function (e, r) { for (var i = e.length, l = r4(r.length, i), n = iT(e); l--;) { var o = r[l]; e[l] = lL(o, i) ? n[o] : t } return e }(g, s) : _ && x > 1 && g.reverse(), d && C < x && (g.length = C), this && this !== e5 && this instanceof m && (j = p || iX(j)), j.apply(w, g) } return m } function i1(e, r) { return function (t, i) { var l, n; return l = r(i), n = {}, tU(t, function (r, t, i) { e(n, l(r), t, i) }), n } } function i2(e, r) { return function (i, l) { var n; if (i === t && l === t) return r; if (i !== t && (n = i), l !== t) { if (n === t) return l; "string" == typeof i || "string" == typeof l ? (i = iy(i), l = iy(l)) : (i = ib(i), l = ib(l)), n = e(i, l) } return n } } function i3(e) { return ln(function (r) { return r = rh(r, rN(ld())), ic(function (t) { var i = this; return e(r, function (e) { return ro(e, i, t) }) }) }) } function i4(e, r) { var i = (r = r === t ? " " : iy(r)).length; if (i < 2) return i ? id(r, e) : r; var l = id(r, rK(e / rW(r))); return rB(r) ? iP(rG(l), 0, e).join("") : l.slice(0, e) } function i5(e) { return function (r, i, l) { return l && "number" != typeof l && lb(r, i, l) && (i = l = t), r = n7(r), i === t ? (i = r, r = 0) : i = n7(i), l = l === t ? r < i ? 1 : -1 : n7(l), function (e, r, t, i) { for (var l = -1, n = r3(rK((r - e) / (t || 1)), 0), o = ex(n); n--;)o[i ? n : ++l] = e, e += t; return o }(r, i, l, e) } } function i6(e) { return function (r, t) { return "string" == typeof r && "string" == typeof t || (r = n0(r), t = n0(t)), e(r, t) } } function i7(e, r, i, l, n, o, a, s, C, u) { var d = 8 & r, c = d ? a : t, h = d ? t : a, f = d ? o : t, _ = d ? t : o; r |= d ? 32 : 64, 4 & (r &= ~(d ? 64 : 32)) || (r &= -4); var p = [e, r, n, f, c, _, h, s, C, u], m = i.apply(t, p); return lw(e) && lN(m, p), m.placeholder = l, lP(m, e, r) } function i8(e) { var r = eb[e]; return function (e, t) { if (e = n0(e), (t = null == t ? 0 : r4(n8(t), 292)) && rQ(e)) { var i = (or(e) + "e").split("e"); return +((i = (or(r(i[0] + "e" + (+i[1] + t))) + "e").split("e"))[0] + "e" + (i[1] - t)) } return r(e) } } var i9 = tr && 1 / rD(new tr([, -0]))[1] == o ? function (e) { return new tr(e) } : oG; function i0(e) { return function (r) { var t, i, l = lm(r); return l == p ? rE(r) : l == L ? (t = -1, i = Array(r.size), r.forEach(function (e) { i[++t] = [e, e] }), i) : rh(e(r), function (e) { return [e, r[e]] }) } } function le(e, r, l, o, a, s, C, u) { var d = 2 & r; if (!d && "function" != typeof e) throw new ek(i); var c = o ? o.length : 0; if (c || (r &= -97, o = a = t), C = C === t ? C : r3(n8(C), 0), u = u === t ? u : n8(u), c -= a ? a.length : 0, 64 & r) { var h = o, f = a; o = a = t } var _ = d ? t : ls(e), p = [e, r, l, o, a, h, f, s, C, u]; if (_ && function (e, r) { var t = e[1], i = r[1], l = t | i, o = l < 131, a = 128 == i && 8 == t || 128 == i && 256 == t && e[7].length <= r[8] || 384 == i && r[7].length <= r[8] && 8 == t; if (o || a) { 1 & i && (e[2] = r[2], l |= 1 & t ? 0 : 4); var s = r[3]; if (s) { var C = e[3]; e[3] = C ? iE(C, s, r[4]) : s, e[4] = C ? rT(e[3], n) : r[4] } (s = r[5]) && (C = e[5], e[5] = C ? iF(C, s, r[6]) : s, e[6] = C ? rT(e[5], n) : r[6]), (s = r[7]) && (e[7] = s), 128 & i && (e[8] = null == e[8] ? r[8] : r4(e[8], r[8])), null == e[9] && (e[9] = r[9]), e[0] = r[0], e[1] = l } }(p, _), e = p[0], r = p[1], l = p[2], o = p[3], a = p[4], (u = p[9] = p[9] === t ? d ? 0 : e.length : r3(p[9] - c, 0)) || !(24 & r) || (r &= -25), r && 1 != r) 8 == r || 16 == r ? H = function (e, r, i) { var l = iX(e); function n() { for (var o = arguments.length, a = ex(o), s = o, C = lu(n); s--;)a[s] = arguments[s]; var u = o < 3 && a[0] !== C && a[o - 1] !== C ? [] : rT(a, C); return (o -= u.length) < i ? i7(e, r, iQ, n.placeholder, t, a, u, t, t, i - o) : ro(this && this !== e5 && this instanceof n ? l : e, this, a) } return n }(e, r, u) : 32 != r && 33 != r || a.length ? H = iQ.apply(t, p) : (m = e, x = r, g = l, v = o, L = 1 & x, b = iX(m), H = function e() { for (var r = -1, t = arguments.length, i = -1, l = v.length, n = ex(l + t), o = this && this !== e5 && this instanceof e ? b : m; ++i < l;)n[i] = v[i]; for (; t--;)n[i++] = arguments[++r]; return ro(o, L ? g : this, n) }); else var m, x, g, v, L, b, y, w, j, k, M, H = (y = e, w = r, j = l, k = 1 & w, M = iX(y), function e() { return (this && this !== e5 && this instanceof e ? M : y).apply(k ? j : this, arguments) }); return lP((_ ? i_ : lN)(H, p), e, r) } function lr(e, r, i, l) { return e === t || nS(e, eV[i]) && !eR.call(l, i) ? r : e } function lt(e, r, i, l, n, o) { return n$(e) && n$(r) && (o.set(r, e), ii(e, r, t, lt, o), o.delete(r)), e } function li(e) { return nJ(e) ? t : e } function ll(e, r, i, l, n, o) { var a = 1 & i, s = e.length, C = r.length; if (s != C && !(a && C > s)) return !1; var u = o.get(e), d = o.get(r); if (u && d) return u == r && d == e; var c = -1, h = !0, f = 2 & i ? new tb : t; for (o.set(e, r), o.set(r, e); ++c < s;) { var _ = e[c], p = r[c]; if (l) var m = a ? l(p, _, c, r, e, o) : l(_, p, c, e, r, o); if (m !== t) { if (m) continue; h = !1; break } if (f) { if (!rm(r, function (e, r) { if (!rS(f, r) && (_ === e || n(_, e, i, l, o))) return f.push(r) })) { h = !1; break } } else if (!(_ === p || n(_, p, i, l, o))) { h = !1; break } } return o.delete(e), o.delete(r), h } function ln(e) { return lS(lH(e, t, lU), e + "") } function lo(e) { return tX(e, of, l_) } function la(e) { return tX(e, o_, lp) } var ls = tl ? function (e) { return tl.get(e) } : oG; function lC(e) { for (var r = e.name + "", t = tn[r], i = eR.call(tn, r) ? t.length : 0; i--;) { var l = t[i], n = l.func; if (null == n || n == e) return l.name } return r } function lu(e) { return (eR.call(tf, "placeholder") ? tf : e).placeholder } function ld() { var e = tf.iteratee || oF; return e = e === oF ? t8 : e, arguments.length ? e(arguments[0], arguments[1]) : e } function lc(e, r) { var t, i, l = e.__data__; return ("string" == (i = typeof (t = r)) || "number" == i || "symbol" == i || "boolean" == i ? "__proto__" !== t : null === t) ? l["string" == typeof r ? "string" : "hash"] : l.map } function lh(e) { for (var r = of(e), t = r.length; t--;) { var i, l = r[t], n = e[l]; r[t] = [l, n, (i = n) == i && !n$(i)] } return r } function lf(e, r) { var i = null == e ? t : e[r]; return t7(i) ? i : t } var l_ = rJ ? function (e) { return null == e ? [] : ru(rJ(e = ey(e)), function (r) { return eQ.call(e, r) }) } : oY, lp = rJ ? function (e) { for (var r = []; e;)rf(r, l_(e)), e = eG(e); return r } : oY, lm = tJ; function lx(e, r, t) { r = iS(r, e); for (var i = -1, l = r.length, n = !1; ++i < l;) { var o = lz(r[i]); if (!(n = null != e && t(e, o))) break; e = e[o] } return n || ++i != l ? n : !!(l = null == e ? 0 : e.length) && nU(l) && lL(o, l) && (nA(e) || nO(e)) } function lg(e) { return "function" != typeof e.constructor || lk(e) ? {} : t_(eG(e)) } function lv(e) { return nA(e) || nO(e) || !!(e4 && e && e[e4]) } function lL(e, r) { var t = typeof e; return !!(r = null == r ? 0x1fffffffffffff : r) && ("number" == t || "symbol" != t && ed.test(e)) && e > -1 && e % 1 == 0 && e < r } function lb(e, r, t) { if (!n$(t)) return !1; var i = typeof r; return ("number" == i ? !!(nB(t) && lL(r, t.length)) : "string" == i && r in t) && nS(t[r], e) } function ly(e, r) { if (nA(e)) return !1; var t = typeof e; return !!("number" == t || "symbol" == t || "boolean" == t || null == e || n2(e)) || $.test(e) || !U.test(e) || null != r && e in ey(r) } function lw(e) { var r = lC(e), t = tf[r]; if ("function" != typeof t || !(r in tx.prototype)) return !1; if (e === t) return !0; var i = ls(t); return !!i && e === i[0] } (r9 && lm(new r9(new ArrayBuffer(1))) != k || r0 && lm(new r0) != p || te && lm(te.resolve()) != g || tr && lm(new tr) != L || tt && lm(new tt) != w) && (lm = function (e) { var r = tJ(e), i = r == x ? e.constructor : t, l = i ? lB(i) : ""; if (l) switch (l) { case to: return k; case ta: return p; case ts: return g; case tC: return L; case tu: return w }return r }); var lj = eZ ? nW : oQ; function lk(e) { var r = e && e.constructor; return e === ("function" == typeof r && r.prototype || eV) } function lM(e, r) { return function (i) { return null != i && i[e] === r && (r !== t || e in ey(i)) } } function lH(e, r, i) { return r = r3(r === t ? e.length - 1 : r, 0), function () { for (var t = arguments, l = -1, n = r3(t.length - r, 0), o = ex(n); ++l < n;)o[l] = t[r + l]; l = -1; for (var a = ex(r + 1); ++l < r;)a[l] = t[l]; return a[r] = i(o), ro(e, this, a) } } function lV(e, r) { return r.length < 2 ? e : tK(e, im(r, 0, -1)) } function lZ(e, r) { if (("constructor" !== r || "function" != typeof e[r]) && "__proto__" != r) return e[r] } var lN = lI(i_), lR = rk || function (e, r) { return e5.setTimeout(e, r) }, lS = lI(ip); function lP(e, r, t) {
                        var i, l, n, o = r + ""; return lS(e, function (e, r) {
                            var t = r.length; if (!t) return e; var i = t - 1; return r[i] = (t > 1 ? "& " : "") + r[i], r = r.join(t > 2 ? ", " : " "), e.replace(Q, `{
/* [wrapped with `+ r + `] */
`)
                        }(o, (i = (n = o.match(ee)) ? n[1].split(er) : [], l = t, rs(s, function (e) { var r = "_." + e[0]; l & e[1] && !rd(i, r) && i.push(r) }), i.sort())))
                    } function lI(e) { var r = 0, i = 0; return function () { var l = r5(), n = 16 - (l - i); if (i = l, n > 0) { if (++r >= 800) return arguments[0] } else r = 0; return e.apply(t, arguments) } } function lO(e, r) { var i = -1, l = e.length, n = l - 1; for (r = r === t ? l : r; ++i < r;) { var o = iu(i, n), a = e[o]; e[o] = e[i], e[i] = a } return e.length = r, e } var lA = (ep = (e_ = nM(function (e) { var r = []; return 46 === e.charCodeAt(0) && r.push(""), e.replace(q, function (e, t, i, l) { r.push(i ? l.replace(el, "$1") : t || e) }), r }, function (e) { return 500 === ep.size && ep.clear(), e })).cache, e_); function lz(e) { if ("string" == typeof e || n2(e)) return e; var r = e + ""; return "0" == r && 1 / e == -o ? "-0" : r } function lB(e) { if (null != e) { try { return eN.call(e) } catch { } try { return e + "" } catch { } } return "" } function lE(e) { if (e instanceof tx) return e.clone(); var r = new tm(e.__wrapped__, e.__chain__); return r.__actions__ = iT(e.__actions__), r.__index__ = e.__index__, r.__values__ = e.__values__, r } var lF = ic(function (e, r) { return nE(e) ? tA(e, tD(r, 1, nE, !0)) : [] }), lT = ic(function (e, r) { var i = lJ(r); return nE(i) && (i = t), nE(e) ? tA(e, tD(r, 1, nE, !0), ld(i, 2)) : [] }), lD = ic(function (e, r) { var i = lJ(r); return nE(i) && (i = t), nE(e) ? tA(e, tD(r, 1, nE, !0), t, i) : [] }); function lW(e, r, t) { var i = null == e ? 0 : e.length; if (!i) return -1; var l = null == t ? 0 : n8(t); return l < 0 && (l = r3(i + l, 0)), rv(e, ld(r, 3), l) } function lG(e, r, i) { var l = null == e ? 0 : e.length; if (!l) return -1; var n = l - 1; return i !== t && (n = n8(i), n = i < 0 ? r3(l + n, 0) : r4(n, l - 1)), rv(e, ld(r, 3), n, !0) } function lU(e) { return (null == e ? 0 : e.length) ? tD(e, 1) : [] } function l$(e) { return e && e.length ? e[0] : t } var lq = ic(function (e) { var r = rh(e, iN); return r.length && r[0] === e[0] ? t2(r) : [] }), lK = ic(function (e) { var r = lJ(e), i = rh(e, iN); return r === lJ(i) ? r = t : i.pop(), i.length && i[0] === e[0] ? t2(i, ld(r, 2)) : [] }), lX = ic(function (e) { var r = lJ(e), i = rh(e, iN); return (r = "function" == typeof r ? r : t) && i.pop(), i.length && i[0] === e[0] ? t2(i, t, r) : [] }); function lJ(e) { var r = null == e ? 0 : e.length; return r ? e[r - 1] : t } var lY = ic(lQ); function lQ(e, r) { return e && e.length && r && r.length ? is(e, r) : e } var l1 = ln(function (e, r) { var t = null == e ? 0 : e.length, i = tR(e, r); return iC(e, rh(r, function (e) { return lL(e, t) ? +e : e }).sort(iB)), i }); function l2(e) { return null == e ? e : r8.call(e) } var l3 = ic(function (e) { return iw(tD(e, 1, nE, !0)) }), l4 = ic(function (e) { var r = lJ(e); return nE(r) && (r = t), iw(tD(e, 1, nE, !0), ld(r, 2)) }), l5 = ic(function (e) { var r = lJ(e); return r = "function" == typeof r ? r : t, iw(tD(e, 1, nE, !0), t, r) }); function l6(e) { if (!(e && e.length)) return []; var r = 0; return e = ru(e, function (e) { if (nE(e)) return r = r3(e.length, r), !0 }), rV(r, function (r) { return rh(e, rj(r)) }) } function l7(e, r) { if (!(e && e.length)) return []; var i = l6(e); return null == r ? i : rh(i, function (e) { return ro(r, t, e) }) } var l8 = ic(function (e, r) { return nE(e) ? tA(e, r) : [] }), l9 = ic(function (e) { return iV(ru(e, nE)) }), l0 = ic(function (e) { var r = lJ(e); return nE(r) && (r = t), iV(ru(e, nE), ld(r, 2)) }), ne = ic(function (e) { var r = lJ(e); return r = "function" == typeof r ? r : t, iV(ru(e, nE), t, r) }), nr = ic(l6), nt = ic(function (e) { var r = e.length, i = r > 1 ? e[r - 1] : t; return i = "function" == typeof i ? (e.pop(), i) : t, l7(e, i) }); function ni(e) { var r = tf(e); return r.__chain__ = !0, r } function nl(e, r) { return r(e) } var nn = ln(function (e) { var r = e.length, i = r ? e[0] : 0, l = this.__wrapped__, n = function (r) { return tR(r, e) }; return !(r > 1) && !this.__actions__.length && l instanceof tx && lL(i) ? ((l = l.slice(i, +i + +!!r)).__actions__.push({ func: nl, args: [n], thisArg: t }), new tm(l, this.__chain__).thru(function (e) { return r && !e.length && e.push(t), e })) : this.thru(n) }), no = iW(function (e, r, t) { eR.call(e, t) ? ++e[t] : tN(e, t, 1) }), na = iJ(lW), ns = iJ(lG); function nC(e, r) { return (nA(e) ? rs : tz)(e, ld(r, 3)) } function nu(e, r) { return (nA(e) ? function (e, r) { for (var t = null == e ? 0 : e.length; t-- && !1 !== r(e[t], t, e);); return e } : tB)(e, ld(r, 3)) } var nd = iW(function (e, r, t) { eR.call(e, t) ? e[t].push(r) : tN(e, t, [r]) }), nc = ic(function (e, r, t) { var i = -1, l = "function" == typeof r, n = nB(e) ? ex(e.length) : []; return tz(e, function (e) { n[++i] = l ? ro(r, e, t) : t3(e, r, t) }), n }), nh = iW(function (e, r, t) { tN(e, t, r) }); function nf(e, r) { return (nA(e) ? rh : ie)(e, ld(r, 3)) } var n_ = iW(function (e, r, t) { e[+!t].push(r) }, function () { return [[], []] }), np = ic(function (e, r) { if (null == e) return []; var t = r.length; return t > 1 && lb(e, r[0], r[1]) ? r = [] : t > 2 && lb(r[0], r[1], r[2]) && (r = [r[0]]), io(e, tD(r, 1), []) }), nm = rx || function () { return e5.Date.now() }; function nx(e, r, i) { return r = i ? t : r, r = e && null == r ? e.length : r, le(e, 128, t, t, t, t, r) } function ng(e, r) { var l; if ("function" != typeof r) throw new ek(i); return e = n8(e), function () { return --e > 0 && (l = r.apply(this, arguments)), e <= 1 && (r = t), l } } var nv = ic(function (e, r, t) { var i = 1; if (t.length) { var l = rT(t, lu(nv)); i |= 32 } return le(e, i, r, t, l) }), nL = ic(function (e, r, t) { var i = 3; if (t.length) { var l = rT(t, lu(nL)); i |= 32 } return le(r, i, e, t, l) }); function nb(e, r, i) { r = i ? t : r; var l = le(e, 8, t, t, t, t, t, r); return l.placeholder = nb.placeholder, l } function ny(e, r, i) { r = i ? t : r; var l = le(e, 16, t, t, t, t, t, r); return l.placeholder = ny.placeholder, l } function nw(e, r, l) { var n, o, a, s, C, u, d = 0, c = !1, h = !1, f = !0; if ("function" != typeof e) throw new ek(i); function _(r) { var i = n, l = o; return n = o = t, d = r, s = e.apply(l, i) } function p(e) { var i = e - u, l = e - d; return u === t || i >= r || i < 0 || h && l >= a } function m() { var e, t, i, l = nm(); if (p(l)) return x(l); C = lR(m, (e = l - u, t = l - d, i = r - e, h ? r4(i, a - t) : i)) } function x(e) { return C = t, f && n ? _(e) : (n = o = t, s) } function g() { var e, i = nm(), l = p(i); if (n = arguments, o = this, u = i, l) { if (C === t) return d = e = u, C = lR(m, r), c ? _(e) : s; if (h) return iI(C), C = lR(m, r), _(u) } return C === t && (C = lR(m, r)), s } return r = n0(r) || 0, n$(l) && (c = !!l.leading, a = (h = "maxWait" in l) ? r3(n0(l.maxWait) || 0, r) : a, f = "trailing" in l ? !!l.trailing : f), g.cancel = function () { C !== t && iI(C), d = 0, n = u = o = C = t }, g.flush = function () { return C === t ? s : x(nm()) }, g } var nj = ic(function (e, r) { return tO(e, 1, r) }), nk = ic(function (e, r, t) { return tO(e, n0(r) || 0, t) }); function nM(e, r) { if ("function" != typeof e || null != r && "function" != typeof r) throw new ek(i); var t = function () { var i = arguments, l = r ? r.apply(this, i) : i[0], n = t.cache; if (n.has(l)) return n.get(l); var o = e.apply(this, i); return t.cache = n.set(l, o) || n, o }; return t.cache = new (nM.Cache || tL), t } function nH(e) { if ("function" != typeof e) throw new ek(i); return function () { var r = arguments; switch (r.length) { case 0: return !e.call(this); case 1: return !e.call(this, r[0]); case 2: return !e.call(this, r[0], r[1]); case 3: return !e.call(this, r[0], r[1], r[2]) }return !e.apply(this, r) } } nM.Cache = tL; var nV = ic(function (e, r) { var t = (r = 1 == r.length && nA(r[0]) ? rh(r[0], rN(ld())) : rh(tD(r, 1), rN(ld()))).length; return ic(function (i) { for (var l = -1, n = r4(i.length, t); ++l < n;)i[l] = r[l].call(this, i[l]); return ro(e, this, i) }) }), nZ = ic(function (e, r) { var i = rT(r, lu(nZ)); return le(e, 32, t, r, i) }), nN = ic(function (e, r) { var i = rT(r, lu(nN)); return le(e, 64, t, r, i) }), nR = ln(function (e, r) { return le(e, 256, t, t, t, r) }); function nS(e, r) { return e === r || e != e && r != r } var nP = i6(tY), nI = i6(function (e, r) { return e >= r }), nO = t4(function () { return arguments }()) ? t4 : function (e) { return nq(e) && eR.call(e, "callee") && !eQ.call(e, "callee") }, nA = ex.isArray, nz = re ? rN(re) : function (e) { return nq(e) && tJ(e) == j }; function nB(e) { return null != e && nU(e.length) && !nW(e) } function nE(e) { return nq(e) && nB(e) } var nF = rY || oQ, nT = rr ? rN(rr) : function (e) { return nq(e) && tJ(e) == c }; function nD(e) { if (!nq(e)) return !1; var r = tJ(e); return r == h || "[object DOMException]" == r || "string" == typeof e.message && "string" == typeof e.name && !nJ(e) } function nW(e) { if (!n$(e)) return !1; var r = tJ(e); return r == f || r == _ || "[object AsyncFunction]" == r || "[object Proxy]" == r } function nG(e) { return "number" == typeof e && e == n8(e) } function nU(e) { return "number" == typeof e && e > -1 && e % 1 == 0 && e <= 0x1fffffffffffff } function n$(e) { var r = typeof e; return null != e && ("object" == r || "function" == r) } function nq(e) { return null != e && "object" == typeof e } var nK = rt ? rN(rt) : function (e) { return nq(e) && lm(e) == p }; function nX(e) { return "number" == typeof e || nq(e) && tJ(e) == m } function nJ(e) { if (!nq(e) || tJ(e) != x) return !1; var r = eG(e); if (null === r) return !0; var t = eR.call(r, "constructor") && r.constructor; return "function" == typeof t && t instanceof t && eN.call(t) == eO } var nY = ri ? rN(ri) : function (e) { return nq(e) && tJ(e) == v }, nQ = rl ? rN(rl) : function (e) { return nq(e) && lm(e) == L }; function n1(e) { return "string" == typeof e || !nA(e) && nq(e) && tJ(e) == b } function n2(e) { return "symbol" == typeof e || nq(e) && tJ(e) == y } var n3 = rn ? rN(rn) : function (e) { return nq(e) && nU(e.length) && !!eJ[tJ(e)] }, n4 = i6(t0), n5 = i6(function (e, r) { return e <= r }); function n6(e) { if (!e) return []; if (nB(e)) return n1(e) ? rG(e) : iT(e); if (e6 && e[e6]) { for (var r, t = e[e6](), i = []; !(r = t.next()).done;)i.push(r.value); return i } var l = lm(e); return (l == p ? rE : l == L ? rD : oy)(e) } function n7(e) { return e ? (e = n0(e)) === o || e === -o ? (e < 0 ? -1 : 1) * 17976931348623157e292 : e == e ? e : 0 : 0 === e ? e : 0 } function n8(e) { var r = n7(e), t = r % 1; return r == r ? t ? r - t : r : 0 } function n9(e) { return e ? tS(n8(e), 0, 0xffffffff) : 0 } function n0(e) { if ("number" == typeof e) return e; if (n2(e)) return a; if (n$(e)) { var r = "function" == typeof e.valueOf ? e.valueOf() : e; e = n$(r) ? r + "" : r } if ("string" != typeof e) return 0 === e ? e : +e; e = rZ(e); var t = es.test(e); return t || eu.test(e) ? e2(e.slice(2), t ? 2 : 8) : ea.test(e) ? a : +e } function oe(e) { return iD(e, o_(e)) } function or(e) { return null == e ? "" : iy(e) } var ot = iG(function (e, r) { if (lk(r) || nB(r)) return void iD(r, of(r), e); for (var t in r) eR.call(r, t) && tM(e, t, r[t]) }), oi = iG(function (e, r) { iD(r, o_(r), e) }), ol = iG(function (e, r, t, i) { iD(r, o_(r), e, i) }), on = iG(function (e, r, t, i) { iD(r, of(r), e, i) }), oo = ln(tR), oa = ic(function (e, r) { e = ey(e); var i = -1, l = r.length, n = l > 2 ? r[2] : t; for (n && lb(r[0], r[1], n) && (l = 1); ++i < l;)for (var o = r[i], a = o_(o), s = -1, C = a.length; ++s < C;) { var u = a[s], d = e[u]; (d === t || nS(d, eV[u]) && !eR.call(e, u)) && (e[u] = o[u]) } return e }), os = ic(function (e) { return e.push(t, lt), ro(om, t, e) }); function oC(e, r, i) { var l = null == e ? t : tK(e, r); return l === t ? i : l } function ou(e, r) { return null != e && lx(e, r, t1) } var od = i1(function (e, r, t) { null != r && "function" != typeof r.toString && (r = eI.call(r)), e[r] = t }, oA(oE)), oc = i1(function (e, r, t) { null != r && "function" != typeof r.toString && (r = eI.call(r)), eR.call(e, r) ? e[r].push(t) : e[r] = [t] }, ld), oh = ic(t3); function of(e) { return nB(e) ? tw(e) : t9(e) } function o_(e) { return nB(e) ? tw(e, !0) : function (e) { if (!n$(e)) { var r = e, t = []; if (null != r) for (var i in ey(r)) t.push(i); return t } var l = lk(e), n = []; for (var o in e) "constructor" == o && (l || !eR.call(e, o)) || n.push(o); return n }(e) } var op = iG(function (e, r, t) { ii(e, r, t) }), om = iG(function (e, r, t, i) { ii(e, r, t, i) }), ox = ln(function (e, r) { var t = {}; if (null == e) return t; var i = !1; r = rh(r, function (r) { return r = iS(r, e), i || (i = r.length > 1), r }), iD(e, la(e), t), i && (t = tP(t, 7, li)); for (var l = r.length; l--;)ij(t, r[l]); return t }), og = ln(function (e, r) { return null == e ? {} : ia(e, r, function (r, t) { return ou(e, t) }) }); function ov(e, r) { if (null == e) return {}; var t = rh(la(e), function (e) { return [e] }); return r = ld(r), ia(e, t, function (e, t) { return r(e, t[0]) }) } var oL = i0(of), ob = i0(o_); function oy(e) { return null == e ? [] : rR(e, of(e)) } var ow = iK(function (e, r, t) { return r = r.toLowerCase(), e + (t ? oj(r) : r) }); function oj(e) { return oS(or(e).toLowerCase()) } function ok(e) { return (e = or(e)) && e.replace(ec, rO).replace(eW, "") } var oM = iK(function (e, r, t) { return e + (t ? "-" : "") + r.toLowerCase() }), oH = iK(function (e, r, t) { return e + (t ? " " : "") + r.toLowerCase() }), oV = iq("toLowerCase"), oZ = iK(function (e, r, t) { return e + (t ? "_" : "") + r.toLowerCase() }), oN = iK(function (e, r, t) { return e + (t ? " " : "") + oS(r) }), oR = iK(function (e, r, t) { return e + (t ? " " : "") + r.toUpperCase() }), oS = iq("toUpperCase"); function oP(e, r, i) { var l; return e = or(e), (r = i ? t : r) === t ? (l = e, eq.test(l)) ? e.match(eU) || [] : e.match(et) || [] : e.match(r) || [] } var oI = ic(function (e, r) { try { return ro(e, t, r) } catch (e) { return nD(e) ? e : new ev(e) } }), oO = ln(function (e, r) { return rs(r, function (r) { tN(e, r = lz(r), nv(e[r], e)) }), e }); function oA(e) { return function () { return e } } var oz = iY(), oB = iY(!0); function oE(e) { return e } function oF(e) { return t8("function" == typeof e ? e : tP(e, 1)) } var oT = ic(function (e, r) { return function (t) { return t3(t, e, r) } }), oD = ic(function (e, r) { return function (t) { return t3(e, t, r) } }); function oW(e, r, t) { var i = of(r), l = tq(r, i); null != t || n$(r) && (l.length || !i.length) || (t = r, r = e, e = this, l = tq(r, of(r))); var n = !(n$(t) && "chain" in t) || !!t.chain, o = nW(e); return rs(l, function (t) { var i = r[t]; e[t] = i, o && (e.prototype[t] = function () { var r = this.__chain__; if (n || r) { var t = e(this.__wrapped__); return (t.__actions__ = iT(this.__actions__)).push({ func: i, args: arguments, thisArg: e }), t.__chain__ = r, t } return i.apply(e, rf([this.value()], arguments)) }) }), e } function oG() { } var oU = i3(rh), o$ = i3(rC), oq = i3(rm); function oK(e) { return ly(e) ? rj(lz(e)) : function (r) { return tK(r, e) } } var oX = i5(), oJ = i5(!0); function oY() { return [] } function oQ() { return !1 } var o1 = i2(function (e, r) { return e + r }, 0), o2 = i8("ceil"), o3 = i2(function (e, r) { return e / r }, 1), o4 = i8("floor"), o5 = i2(function (e, r) { return e * r }, 1), o6 = i8("round"), o7 = i2(function (e, r) { return e - r }, 0); return tf.after = function (e, r) { if ("function" != typeof r) throw new ek(i); return e = n8(e), function () { if (--e < 1) return r.apply(this, arguments) } }, tf.ary = nx, tf.assign = ot, tf.assignIn = oi, tf.assignInWith = ol, tf.assignWith = on, tf.at = oo, tf.before = ng, tf.bind = nv, tf.bindAll = oO, tf.bindKey = nL, tf.castArray = function () { if (!arguments.length) return []; var e = arguments[0]; return nA(e) ? e : [e] }, tf.chain = ni, tf.chunk = function (e, r, i) { r = (i ? lb(e, r, i) : r === t) ? 1 : r3(n8(r), 0); var l = null == e ? 0 : e.length; if (!l || r < 1) return []; for (var n = 0, o = 0, a = ex(rK(l / r)); n < l;)a[o++] = im(e, n, n += r); return a }, tf.compact = function (e) { for (var r = -1, t = null == e ? 0 : e.length, i = 0, l = []; ++r < t;) { var n = e[r]; n && (l[i++] = n) } return l }, tf.concat = function () { var e = arguments.length; if (!e) return []; for (var r = ex(e - 1), t = arguments[0], i = e; i--;)r[i - 1] = arguments[i]; return rf(nA(t) ? iT(t) : [t], tD(r, 1)) }, tf.cond = function (e) { var r = null == e ? 0 : e.length, t = ld(); return e = r ? rh(e, function (e) { if ("function" != typeof e[1]) throw new ek(i); return [t(e[0]), e[1]] }) : [], ic(function (t) { for (var i = -1; ++i < r;) { var l = e[i]; if (ro(l[0], this, t)) return ro(l[1], this, t) } }) }, tf.conforms = function (e) { var r, t; return t = of(r = tP(e, 1)), function (e) { return tI(e, r, t) } }, tf.constant = oA, tf.countBy = no, tf.create = function (e, r) { var t = t_(e); return null == r ? t : tZ(t, r) }, tf.curry = nb, tf.curryRight = ny, tf.debounce = nw, tf.defaults = oa, tf.defaultsDeep = os, tf.defer = nj, tf.delay = nk, tf.difference = lF, tf.differenceBy = lT, tf.differenceWith = lD, tf.drop = function (e, r, i) { var l = null == e ? 0 : e.length; return l ? im(e, (r = i || r === t ? 1 : n8(r)) < 0 ? 0 : r, l) : [] }, tf.dropRight = function (e, r, i) { var l = null == e ? 0 : e.length; return l ? im(e, 0, (r = l - (r = i || r === t ? 1 : n8(r))) < 0 ? 0 : r) : [] }, tf.dropRightWhile = function (e, r) { return e && e.length ? iM(e, ld(r, 3), !0, !0) : [] }, tf.dropWhile = function (e, r) { return e && e.length ? iM(e, ld(r, 3), !0) : [] }, tf.fill = function (e, r, i, l) { var n = null == e ? 0 : e.length; return n ? (i && "number" != typeof i && lb(e, r, i) && (i = 0, l = n), function (e, r, i, l) { var n = e.length; for ((i = n8(i)) < 0 && (i = -i > n ? 0 : n + i), (l = l === t || l > n ? n : n8(l)) < 0 && (l += n), l = i > l ? 0 : n9(l); i < l;)e[i++] = r; return e }(e, r, i, l)) : [] }, tf.filter = function (e, r) { return (nA(e) ? ru : tT)(e, ld(r, 3)) }, tf.flatMap = function (e, r) { return tD(nf(e, r), 1) }, tf.flatMapDeep = function (e, r) { return tD(nf(e, r), o) }, tf.flatMapDepth = function (e, r, i) { return i = i === t ? 1 : n8(i), tD(nf(e, r), i) }, tf.flatten = lU, tf.flattenDeep = function (e) { return (null == e ? 0 : e.length) ? tD(e, o) : [] }, tf.flattenDepth = function (e, r) { return (null == e ? 0 : e.length) ? tD(e, r = r === t ? 1 : n8(r)) : [] }, tf.flip = function (e) { return le(e, 512) }, tf.flow = oz, tf.flowRight = oB, tf.fromPairs = function (e) { for (var r = -1, t = null == e ? 0 : e.length, i = {}; ++r < t;) { var l = e[r]; i[l[0]] = l[1] } return i }, tf.functions = function (e) { return null == e ? [] : tq(e, of(e)) }, tf.functionsIn = function (e) { return null == e ? [] : tq(e, o_(e)) }, tf.groupBy = nd, tf.initial = function (e) { return (null == e ? 0 : e.length) ? im(e, 0, -1) : [] }, tf.intersection = lq, tf.intersectionBy = lK, tf.intersectionWith = lX, tf.invert = od, tf.invertBy = oc, tf.invokeMap = nc, tf.iteratee = oF, tf.keyBy = nh, tf.keys = of, tf.keysIn = o_, tf.map = nf, tf.mapKeys = function (e, r) { var t = {}; return r = ld(r, 3), tU(e, function (e, i, l) { tN(t, r(e, i, l), e) }), t }, tf.mapValues = function (e, r) { var t = {}; return r = ld(r, 3), tU(e, function (e, i, l) { tN(t, i, r(e, i, l)) }), t }, tf.matches = function (e) { return ir(tP(e, 1)) }, tf.matchesProperty = function (e, r) { return it(e, tP(r, 1)) }, tf.memoize = nM, tf.merge = op, tf.mergeWith = om, tf.method = oT, tf.methodOf = oD, tf.mixin = oW, tf.negate = nH, tf.nthArg = function (e) { return e = n8(e), ic(function (r) { return il(r, e) }) }, tf.omit = ox, tf.omitBy = function (e, r) { return ov(e, nH(ld(r))) }, tf.once = function (e) { return ng(2, e) }, tf.orderBy = function (e, r, i, l) { return null == e ? [] : (nA(r) || (r = null == r ? [] : [r]), nA(i = l ? t : i) || (i = null == i ? [] : [i]), io(e, r, i)) }, tf.over = oU, tf.overArgs = nV, tf.overEvery = o$, tf.overSome = oq, tf.partial = nZ, tf.partialRight = nN, tf.partition = n_, tf.pick = og, tf.pickBy = ov, tf.property = oK, tf.propertyOf = function (e) { return function (r) { return null == e ? t : tK(e, r) } }, tf.pull = lY, tf.pullAll = lQ, tf.pullAllBy = function (e, r, t) { return e && e.length && r && r.length ? is(e, r, ld(t, 2)) : e }, tf.pullAllWith = function (e, r, i) { return e && e.length && r && r.length ? is(e, r, t, i) : e }, tf.pullAt = l1, tf.range = oX, tf.rangeRight = oJ, tf.rearg = nR, tf.reject = function (e, r) { return (nA(e) ? ru : tT)(e, nH(ld(r, 3))) }, tf.remove = function (e, r) { var t = []; if (!(e && e.length)) return t; var i = -1, l = [], n = e.length; for (r = ld(r, 3); ++i < n;) { var o = e[i]; r(o, i, e) && (t.push(o), l.push(i)) } return iC(e, l), t }, tf.rest = function (e, r) { if ("function" != typeof e) throw new ek(i); return ic(e, r = r === t ? r : n8(r)) }, tf.reverse = l2, tf.sampleSize = function (e, r, i) { return r = (i ? lb(e, r, i) : r === t) ? 1 : n8(r), (nA(e) ? function (e, r) { return lO(iT(e), tS(r, 0, e.length)) } : function (e, r) { var t = oy(e); return lO(t, tS(r, 0, t.length)) })(e, r) }, tf.set = function (e, r, t) { return null == e ? e : ih(e, r, t) }, tf.setWith = function (e, r, i, l) { return l = "function" == typeof l ? l : t, null == e ? e : ih(e, r, i, l) }, tf.shuffle = function (e) { return (nA(e) ? function (e) { return lO(iT(e)) } : function (e) { return lO(oy(e)) })(e) }, tf.slice = function (e, r, i) { var l = null == e ? 0 : e.length; return l ? (i && "number" != typeof i && lb(e, r, i) ? (r = 0, i = l) : (r = null == r ? 0 : n8(r), i = i === t ? l : n8(i)), im(e, r, i)) : [] }, tf.sortBy = np, tf.sortedUniq = function (e) { return e && e.length ? iL(e) : [] }, tf.sortedUniqBy = function (e, r) { return e && e.length ? iL(e, ld(r, 2)) : [] }, tf.split = function (e, r, i) { return i && "number" != typeof i && lb(e, r, i) && (r = i = t), (i = i === t ? 0xffffffff : i >>> 0) ? (e = or(e)) && ("string" == typeof r || null != r && !nY(r)) && !(r = iy(r)) && rB(e) ? iP(rG(e), 0, i) : e.split(r, i) : [] }, tf.spread = function (e, r) { if ("function" != typeof e) throw new ek(i); return r = null == r ? 0 : r3(n8(r), 0), ic(function (t) { var i = t[r], l = iP(t, 0, r); return i && rf(l, i), ro(e, this, l) }) }, tf.tail = function (e) { var r = null == e ? 0 : e.length; return r ? im(e, 1, r) : [] }, tf.take = function (e, r, i) { return e && e.length ? im(e, 0, (r = i || r === t ? 1 : n8(r)) < 0 ? 0 : r) : [] }, tf.takeRight = function (e, r, i) { var l = null == e ? 0 : e.length; return l ? im(e, (r = l - (r = i || r === t ? 1 : n8(r))) < 0 ? 0 : r, l) : [] }, tf.takeRightWhile = function (e, r) { return e && e.length ? iM(e, ld(r, 3), !1, !0) : [] }, tf.takeWhile = function (e, r) { return e && e.length ? iM(e, ld(r, 3)) : [] }, tf.tap = function (e, r) { return r(e), e }, tf.throttle = function (e, r, t) { var l = !0, n = !0; if ("function" != typeof e) throw new ek(i); return n$(t) && (l = "leading" in t ? !!t.leading : l, n = "trailing" in t ? !!t.trailing : n), nw(e, r, { leading: l, maxWait: r, trailing: n }) }, tf.thru = nl, tf.toArray = n6, tf.toPairs = oL, tf.toPairsIn = ob, tf.toPath = function (e) { return nA(e) ? rh(e, lz) : n2(e) ? [e] : iT(lA(or(e))) }, tf.toPlainObject = oe, tf.transform = function (e, r, t) { var i = nA(e), l = i || nF(e) || n3(e); if (r = ld(r, 4), null == t) { var n = e && e.constructor; t = l ? i ? new n : [] : n$(e) && nW(n) ? t_(eG(e)) : {} } return (l ? rs : tU)(e, function (e, i, l) { return r(t, e, i, l) }), t }, tf.unary = function (e) { return nx(e, 1) }, tf.union = l3, tf.unionBy = l4, tf.unionWith = l5, tf.uniq = function (e) { return e && e.length ? iw(e) : [] }, tf.uniqBy = function (e, r) { return e && e.length ? iw(e, ld(r, 2)) : [] }, tf.uniqWith = function (e, r) { return r = "function" == typeof r ? r : t, e && e.length ? iw(e, t, r) : [] }, tf.unset = function (e, r) { return null == e || ij(e, r) }, tf.unzip = l6, tf.unzipWith = l7, tf.update = function (e, r, t) { return null == e ? e : ik(e, r, iR(t)) }, tf.updateWith = function (e, r, i, l) { return l = "function" == typeof l ? l : t, null == e ? e : ik(e, r, iR(i), l) }, tf.values = oy, tf.valuesIn = function (e) { return null == e ? [] : rR(e, o_(e)) }, tf.without = l8, tf.words = oP, tf.wrap = function (e, r) { return nZ(iR(r), e) }, tf.xor = l9, tf.xorBy = l0, tf.xorWith = ne, tf.zip = nr, tf.zipObject = function (e, r) { return iZ(e || [], r || [], tM) }, tf.zipObjectDeep = function (e, r) { return iZ(e || [], r || [], ih) }, tf.zipWith = nt, tf.entries = oL, tf.entriesIn = ob, tf.extend = oi, tf.extendWith = ol, oW(tf, tf), tf.add = o1, tf.attempt = oI, tf.camelCase = ow, tf.capitalize = oj, tf.ceil = o2, tf.clamp = function (e, r, i) { return i === t && (i = r, r = t), i !== t && (i = (i = n0(i)) == i ? i : 0), r !== t && (r = (r = n0(r)) == r ? r : 0), tS(n0(e), r, i) }, tf.clone = function (e) { return tP(e, 4) }, tf.cloneDeep = function (e) { return tP(e, 5) }, tf.cloneDeepWith = function (e, r) { return tP(e, 5, r = "function" == typeof r ? r : t) }, tf.cloneWith = function (e, r) { return tP(e, 4, r = "function" == typeof r ? r : t) }, tf.conformsTo = function (e, r) { return null == r || tI(e, r, of(r)) }, tf.deburr = ok, tf.defaultTo = function (e, r) { return null == e || e != e ? r : e }, tf.divide = o3, tf.endsWith = function (e, r, i) { e = or(e), r = iy(r); var l = e.length, n = i = i === t ? l : tS(n8(i), 0, l); return (i -= r.length) >= 0 && e.slice(i, n) == r }, tf.eq = nS, tf.escape = function (e) { return (e = or(e)) && T.test(e) ? e.replace(E, rA) : e }, tf.escapeRegExp = function (e) { return (e = or(e)) && X.test(e) ? e.replace(K, "\\$&") : e }, tf.every = function (e, r, i) { var l = nA(e) ? rC : tE; return i && lb(e, r, i) && (r = t), l(e, ld(r, 3)) }, tf.find = na, tf.findIndex = lW, tf.findKey = function (e, r) { return rg(e, ld(r, 3), tU) }, tf.findLast = ns, tf.findLastIndex = lG, tf.findLastKey = function (e, r) { return rg(e, ld(r, 3), t$) }, tf.floor = o4, tf.forEach = nC, tf.forEachRight = nu, tf.forIn = function (e, r) { return null == e ? e : tW(e, ld(r, 3), o_) }, tf.forInRight = function (e, r) { return null == e ? e : tG(e, ld(r, 3), o_) }, tf.forOwn = function (e, r) { return e && tU(e, ld(r, 3)) }, tf.forOwnRight = function (e, r) { return e && t$(e, ld(r, 3)) }, tf.get = oC, tf.gt = nP, tf.gte = nI, tf.has = function (e, r) { return null != e && lx(e, r, tQ) }, tf.hasIn = ou, tf.head = l$, tf.identity = oE, tf.includes = function (e, r, t, i) { e = nB(e) ? e : oy(e), t = t && !i ? n8(t) : 0; var l = e.length; return t < 0 && (t = r3(l + t, 0)), n1(e) ? t <= l && e.indexOf(r, t) > -1 : !!l && rL(e, r, t) > -1 }, tf.indexOf = function (e, r, t) { var i = null == e ? 0 : e.length; if (!i) return -1; var l = null == t ? 0 : n8(t); return l < 0 && (l = r3(i + l, 0)), rL(e, r, l) }, tf.inRange = function (e, r, i) { var l, n, o; return r = n7(r), i === t ? (i = r, r = 0) : i = n7(i), (l = e = n0(e)) >= r4(n = r, o = i) && l < r3(n, o) }, tf.invoke = oh, tf.isArguments = nO, tf.isArray = nA, tf.isArrayBuffer = nz, tf.isArrayLike = nB, tf.isArrayLikeObject = nE, tf.isBoolean = function (e) { return !0 === e || !1 === e || nq(e) && tJ(e) == d }, tf.isBuffer = nF, tf.isDate = nT, tf.isElement = function (e) { return nq(e) && 1 === e.nodeType && !nJ(e) }, tf.isEmpty = function (e) { if (null == e) return !0; if (nB(e) && (nA(e) || "string" == typeof e || "function" == typeof e.splice || nF(e) || n3(e) || nO(e))) return !e.length; var r = lm(e); if (r == p || r == L) return !e.size; if (lk(e)) return !t9(e).length; for (var t in e) if (eR.call(e, t)) return !1; return !0 }, tf.isEqual = function (e, r) { return t5(e, r) }, tf.isEqualWith = function (e, r, i) { var l = (i = "function" == typeof i ? i : t) ? i(e, r) : t; return l === t ? t5(e, r, t, i) : !!l }, tf.isError = nD, tf.isFinite = function (e) { return "number" == typeof e && rQ(e) }, tf.isFunction = nW, tf.isInteger = nG, tf.isLength = nU, tf.isMap = nK, tf.isMatch = function (e, r) { return e === r || t6(e, r, lh(r)) }, tf.isMatchWith = function (e, r, i) { return i = "function" == typeof i ? i : t, t6(e, r, lh(r), i) }, tf.isNaN = function (e) { return nX(e) && e != +e }, tf.isNative = function (e) { if (lj(e)) throw new ev("Unsupported core-js use. Try https://npms.io/search?q=ponyfill."); return t7(e) }, tf.isNil = function (e) { return null == e }, tf.isNull = function (e) { return null === e }, tf.isNumber = nX, tf.isObject = n$, tf.isObjectLike = nq, tf.isPlainObject = nJ, tf.isRegExp = nY, tf.isSafeInteger = function (e) { return nG(e) && e >= -0x1fffffffffffff && e <= 0x1fffffffffffff }, tf.isSet = nQ, tf.isString = n1, tf.isSymbol = n2, tf.isTypedArray = n3, tf.isUndefined = function (e) { return e === t }, tf.isWeakMap = function (e) { return nq(e) && lm(e) == w }, tf.isWeakSet = function (e) { return nq(e) && "[object WeakSet]" == tJ(e) }, tf.join = function (e, r) { return null == e ? "" : r1.call(e, r) }, tf.kebabCase = oM, tf.last = lJ, tf.lastIndexOf = function (e, r, i) { var l = null == e ? 0 : e.length; if (!l) return -1; var n = l; return i !== t && (n = (n = n8(i)) < 0 ? r3(l + n, 0) : r4(n, l - 1)), r == r ? function (e, r, t) { for (var i = t + 1; i-- && e[i] !== r;); return i }(e, r, n) : rv(e, ry, n, !0) }, tf.lowerCase = oH, tf.lowerFirst = oV, tf.lt = n4, tf.lte = n5, tf.max = function (e) { return e && e.length ? tF(e, oE, tY) : t }, tf.maxBy = function (e, r) { return e && e.length ? tF(e, ld(r, 2), tY) : t }, tf.mean = function (e) { return rw(e, oE) }, tf.meanBy = function (e, r) { return rw(e, ld(r, 2)) }, tf.min = function (e) { return e && e.length ? tF(e, oE, t0) : t }, tf.minBy = function (e, r) { return e && e.length ? tF(e, ld(r, 2), t0) : t }, tf.stubArray = oY, tf.stubFalse = oQ, tf.stubObject = function () { return {} }, tf.stubString = function () { return "" }, tf.stubTrue = function () { return !0 }, tf.multiply = o5, tf.nth = function (e, r) { return e && e.length ? il(e, n8(r)) : t }, tf.noConflict = function () { return e5._ === this && (e5._ = eA), this }, tf.noop = oG, tf.now = nm, tf.pad = function (e, r, t) { e = or(e); var i = (r = n8(r)) ? rW(e) : 0; if (!r || i >= r) return e; var l = (r - i) / 2; return i4(rX(l), t) + e + i4(rK(l), t) }, tf.padEnd = function (e, r, t) { e = or(e); var i = (r = n8(r)) ? rW(e) : 0; return r && i < r ? e + i4(r - i, t) : e }, tf.padStart = function (e, r, t) { e = or(e); var i = (r = n8(r)) ? rW(e) : 0; return r && i < r ? i4(r - i, t) + e : e }, tf.parseInt = function (e, r, t) { return t || null == r ? r = 0 : r && (r *= 1), r6(or(e).replace(J, ""), r || 0) }, tf.random = function (e, r, i) { if (i && "boolean" != typeof i && lb(e, r, i) && (r = i = t), i === t && ("boolean" == typeof r ? (i = r, r = t) : "boolean" == typeof e && (i = e, e = t)), e === t && r === t ? (e = 0, r = 1) : (e = n7(e), r === t ? (r = e, e = 0) : r = n7(r)), e > r) { var l = e; e = r, r = l } if (i || e % 1 || r % 1) { var n = r7(); return r4(e + n * (r - e + e1("1e-" + ((n + "").length - 1))), r) } return iu(e, r) }, tf.reduce = function (e, r, t) { var i = nA(e) ? r_ : rM, l = arguments.length < 3; return i(e, ld(r, 4), t, l, tz) }, tf.reduceRight = function (e, r, t) { var i = nA(e) ? rp : rM, l = arguments.length < 3; return i(e, ld(r, 4), t, l, tB) }, tf.repeat = function (e, r, i) { return r = (i ? lb(e, r, i) : r === t) ? 1 : n8(r), id(or(e), r) }, tf.replace = function () { var e = arguments, r = or(e[0]); return e.length < 3 ? r : r.replace(e[1], e[2]) }, tf.result = function (e, r, i) { r = iS(r, e); var l = -1, n = r.length; for (n || (n = 1, e = t); ++l < n;) { var o = null == e ? t : e[lz(r[l])]; o === t && (l = n, o = i), e = nW(o) ? o.call(e) : o } return e }, tf.round = o6, tf.runInContext = e, tf.sample = function (e) { return (nA(e) ? tj : function (e) { return tj(oy(e)) })(e) }, tf.size = function (e) { if (null == e) return 0; if (nB(e)) return n1(e) ? rW(e) : e.length; var r = lm(e); return r == p || r == L ? e.size : t9(e).length }, tf.snakeCase = oZ, tf.some = function (e, r, i) { var l = nA(e) ? rm : ix; return i && lb(e, r, i) && (r = t), l(e, ld(r, 3)) }, tf.sortedIndex = function (e, r) { return ig(e, r) }, tf.sortedIndexBy = function (e, r, t) { return iv(e, r, ld(t, 2)) }, tf.sortedIndexOf = function (e, r) { var t = null == e ? 0 : e.length; if (t) { var i = ig(e, r); if (i < t && nS(e[i], r)) return i } return -1 }, tf.sortedLastIndex = function (e, r) { return ig(e, r, !0) }, tf.sortedLastIndexBy = function (e, r, t) { return iv(e, r, ld(t, 2), !0) }, tf.sortedLastIndexOf = function (e, r) { if (null == e ? 0 : e.length) { var t = ig(e, r, !0) - 1; if (nS(e[t], r)) return t } return -1 }, tf.startCase = oN, tf.startsWith = function (e, r, t) { return e = or(e), t = null == t ? 0 : tS(n8(t), 0, e.length), r = iy(r), e.slice(t, t + r.length) == r }, tf.subtract = o7, tf.sum = function (e) { return e && e.length ? rH(e, oE) : 0 }, tf.sumBy = function (e, r) { return e && e.length ? rH(e, ld(r, 2)) : 0 }, tf.template = function (e, r, i) {
                        var l = tf.templateSettings; i && lb(e, r, i) && (r = t), e = or(e), r = ol({}, r, l, lr); var n, o, a = ol({}, r.imports, l.imports, lr), s = of(a), C = rR(a, s), u = 0, d = r.interpolate || eh, c = "__p += '", h = ew((r.escape || eh).source + "|" + d.source + "|" + (d === G ? en : eh).source + "|" + (r.evaluate || eh).source + "|$", "g"), f = "//# sourceURL=" + (eR.call(r, "sourceURL") ? (r.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++eX + "]") + `
`; e.replace(h, function (r, t, i, l, a, s) {
                            return i || (i = l), c += e.slice(u, s).replace(ef, rz), t && (n = !0, c += `' +
__e(`+ t + `) +
'`), a && (o = !0, c += `';
`+ a + `;
__p += '`), i && (c += `' +
((__t = (`+ i + `)) == null ? '' : __t) +
'`), u = s + r.length, r
                        }), c += `';
`; var _ = eR.call(r, "variable") && r.variable; if (_) { if (ei.test(_)) throw new ev("Invalid `variable` option passed into `_.template`") } else c = `with (obj) {
`+ c + `
}
`; c = (o ? c.replace(O, "") : c).replace(A, "$1").replace(z, "$1;"), c = "function(" + (_ || "obj") + `) {
`+ (_ ? "" : `obj || (obj = {});
`) + "var __t, __p = ''" + (n ? ", __e = _.escape" : "") + (o ? `, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
`: `;
`) + c + `return __p
}`; var p = oI(function () { return eL(s, f + "return " + c).apply(t, C) }); if (p.source = c, nD(p)) throw p; return p
                    }, tf.times = function (e, r) { if ((e = n8(e)) < 1 || e > 0x1fffffffffffff) return []; var t = 0xffffffff, i = r4(e, 0xffffffff); r = ld(r), e -= 0xffffffff; for (var l = rV(i, r); ++t < e;)r(t); return l }, tf.toFinite = n7, tf.toInteger = n8, tf.toLength = n9, tf.toLower = function (e) { return or(e).toLowerCase() }, tf.toNumber = n0, tf.toSafeInteger = function (e) { return e ? tS(n8(e), -0x1fffffffffffff, 0x1fffffffffffff) : 0 === e ? e : 0 }, tf.toString = or, tf.toUpper = function (e) { return or(e).toUpperCase() }, tf.trim = function (e, r, i) { if ((e = or(e)) && (i || r === t)) return rZ(e); if (!e || !(r = iy(r))) return e; var l = rG(e), n = rG(r), o = rP(l, n), a = rI(l, n) + 1; return iP(l, o, a).join("") }, tf.trimEnd = function (e, r, i) { if ((e = or(e)) && (i || r === t)) return e.slice(0, rU(e) + 1); if (!e || !(r = iy(r))) return e; var l = rG(e), n = rI(l, rG(r)) + 1; return iP(l, 0, n).join("") }, tf.trimStart = function (e, r, i) { if ((e = or(e)) && (i || r === t)) return e.replace(J, ""); if (!e || !(r = iy(r))) return e; var l = rG(e), n = rP(l, rG(r)); return iP(l, n).join("") }, tf.truncate = function (e, r) { var i = 30, l = "..."; if (n$(r)) { var n = "separator" in r ? r.separator : n; i = "length" in r ? n8(r.length) : i, l = "omission" in r ? iy(r.omission) : l } var o = (e = or(e)).length; if (rB(e)) { var a = rG(e); o = a.length } if (i >= o) return e; var s = i - rW(l); if (s < 1) return l; var C = a ? iP(a, 0, s).join("") : e.slice(0, s); if (n === t) return C + l; if (a && (s += C.length - s), nY(n)) { if (e.slice(s).search(n)) { var u, d = C; for (n.global || (n = ew(n.source, or(eo.exec(n)) + "g")), n.lastIndex = 0; u = n.exec(d);)var c = u.index; C = C.slice(0, c === t ? s : c) } } else if (e.indexOf(iy(n), s) != s) { var h = C.lastIndexOf(n); h > -1 && (C = C.slice(0, h)) } return C + l }, tf.unescape = function (e) { return (e = or(e)) && F.test(e) ? e.replace(B, r$) : e }, tf.uniqueId = function (e) { var r = ++eS; return or(e) + r }, tf.upperCase = oR, tf.upperFirst = oS, tf.each = nC, tf.eachRight = nu, tf.first = l$, oW(tf, (em = {}, tU(tf, function (e, r) { eR.call(tf.prototype, r) || (em[r] = e) }), em), { chain: !1 }), tf.VERSION = "4.17.21", rs(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function (e) { tf[e].placeholder = tf }), rs(["drop", "take"], function (e, r) { tx.prototype[e] = function (i) { i = i === t ? 1 : r3(n8(i), 0); var l = this.__filtered__ && !r ? new tx(this) : this.clone(); return l.__filtered__ ? l.__takeCount__ = r4(i, l.__takeCount__) : l.__views__.push({ size: r4(i, 0xffffffff), type: e + (l.__dir__ < 0 ? "Right" : "") }), l }, tx.prototype[e + "Right"] = function (r) { return this.reverse()[e](r).reverse() } }), rs(["filter", "map", "takeWhile"], function (e, r) { var t = r + 1, i = 1 == t || 3 == t; tx.prototype[e] = function (e) { var r = this.clone(); return r.__iteratees__.push({ iteratee: ld(e, 3), type: t }), r.__filtered__ = r.__filtered__ || i, r } }), rs(["head", "last"], function (e, r) { var t = "take" + (r ? "Right" : ""); tx.prototype[e] = function () { return this[t](1).value()[0] } }), rs(["initial", "tail"], function (e, r) { var t = "drop" + (r ? "" : "Right"); tx.prototype[e] = function () { return this.__filtered__ ? new tx(this) : this[t](1) } }), tx.prototype.compact = function () { return this.filter(oE) }, tx.prototype.find = function (e) { return this.filter(e).head() }, tx.prototype.findLast = function (e) { return this.reverse().find(e) }, tx.prototype.invokeMap = ic(function (e, r) { return "function" == typeof e ? new tx(this) : this.map(function (t) { return t3(t, e, r) }) }), tx.prototype.reject = function (e) { return this.filter(nH(ld(e))) }, tx.prototype.slice = function (e, r) { e = n8(e); var i = this; return i.__filtered__ && (e > 0 || r < 0) ? new tx(i) : (e < 0 ? i = i.takeRight(-e) : e && (i = i.drop(e)), r !== t && (i = (r = n8(r)) < 0 ? i.dropRight(-r) : i.take(r - e)), i) }, tx.prototype.takeRightWhile = function (e) { return this.reverse().takeWhile(e).reverse() }, tx.prototype.toArray = function () { return this.take(0xffffffff) }, tU(tx.prototype, function (e, r) { var i = /^(?:filter|find|map|reject)|While$/.test(r), l = /^(?:head|last)$/.test(r), n = tf[l ? "take" + ("last" == r ? "Right" : "") : r], o = l || /^find/.test(r); n && (tf.prototype[r] = function () { var r = this.__wrapped__, a = l ? [1] : arguments, s = r instanceof tx, C = a[0], u = s || nA(r), d = function (e) { var r = n.apply(tf, rf([e], a)); return l && c ? r[0] : r }; u && i && "function" == typeof C && 1 != C.length && (s = u = !1); var c = this.__chain__, h = !!this.__actions__.length, f = o && !c, _ = s && !h; if (!o && u) { r = _ ? r : new tx(this); var p = e.apply(r, a); return p.__actions__.push({ func: nl, args: [d], thisArg: t }), new tm(p, c) } return f && _ ? e.apply(this, a) : (p = this.thru(d), f ? l ? p.value()[0] : p.value() : p) }) }), rs(["pop", "push", "shift", "sort", "splice", "unshift"], function (e) { var r = eM[e], t = /^(?:push|sort|unshift)$/.test(e) ? "tap" : "thru", i = /^(?:pop|shift)$/.test(e); tf.prototype[e] = function () { var e = arguments; if (i && !this.__chain__) { var l = this.value(); return r.apply(nA(l) ? l : [], e) } return this[t](function (t) { return r.apply(nA(t) ? t : [], e) }) } }), tU(tx.prototype, function (e, r) { var t = tf[r]; if (t) { var i = t.name + ""; eR.call(tn, i) || (tn[i] = []), tn[i].push({ name: r, func: t }) } }), tn[iQ(t, 2).name] = [{ name: "wrapper", func: t }], tx.prototype.clone = function () { var e = new tx(this.__wrapped__); return e.__actions__ = iT(this.__actions__), e.__dir__ = this.__dir__, e.__filtered__ = this.__filtered__, e.__iteratees__ = iT(this.__iteratees__), e.__takeCount__ = this.__takeCount__, e.__views__ = iT(this.__views__), e }, tx.prototype.reverse = function () { if (this.__filtered__) { var e = new tx(this); e.__dir__ = -1, e.__filtered__ = !0 } else e = this.clone(), e.__dir__ *= -1; return e }, tx.prototype.value = function () { var e = this.__wrapped__.value(), r = this.__dir__, t = nA(e), i = r < 0, l = t ? e.length : 0, n = function (e, r, t) { for (var i = -1, l = t.length; ++i < l;) { var n = t[i], o = n.size; switch (n.type) { case "drop": e += o; break; case "dropRight": r -= o; break; case "take": r = r4(r, e + o); break; case "takeRight": e = r3(e, r - o) } } return { start: e, end: r } }(0, l, this.__views__), o = n.start, a = n.end, s = a - o, C = i ? a : o - 1, u = this.__iteratees__, d = u.length, c = 0, h = r4(s, this.__takeCount__); if (!t || !i && l == s && h == s) return iH(e, this.__actions__); var f = []; e: for (; s-- && c < h;) { C += r; for (var _ = -1, p = e[C]; ++_ < d;) { var m = u[_], x = m.iteratee, g = m.type, v = x(p); if (2 == g) p = v; else if (!v) { if (1 == g) continue e; break e } } f[c++] = p } return f }, tf.prototype.at = nn, tf.prototype.chain = function () { return ni(this) }, tf.prototype.commit = function () { return new tm(this.value(), this.__chain__) }, tf.prototype.next = function () { this.__values__ === t && (this.__values__ = n6(this.value())); var e = this.__index__ >= this.__values__.length, r = e ? t : this.__values__[this.__index__++]; return { done: e, value: r } }, tf.prototype.plant = function (e) { for (var r, i = this; i instanceof tp;) { var l = lE(i); l.__index__ = 0, l.__values__ = t, r ? n.__wrapped__ = l : r = l; var n = l; i = i.__wrapped__ } return n.__wrapped__ = e, r }, tf.prototype.reverse = function () { var e = this.__wrapped__; if (e instanceof tx) { var r = e; return this.__actions__.length && (r = new tx(this)), (r = r.reverse()).__actions__.push({ func: nl, args: [l2], thisArg: t }), new tm(r, this.__chain__) } return this.thru(l2) }, tf.prototype.toJSON = tf.prototype.valueOf = tf.prototype.value = function () { return iH(this.__wrapped__, this.__actions__) }, tf.prototype.first = tf.prototype.head, e6 && (tf.prototype[e6] = function () { return this }), tf
                }(); "function" == typeof define && "object" == typeof define.amd && define.amd ? (e5._ = rq, define(function () { return rq })) : e7 ? ((e7.exports = rq)._ = rq, e6._ = rq) : e5._ = rq
            }).call(e)
        }); G(), G(); var rJ = W(U()), rY = (0, i.createContext)({ isFooterInView: !1, setIsFooterInView: rJ.default }), rQ = () => (0, i.useContext)(rY); function r1({ children: e }) { let [r, t] = (0, i.useState)(!1), n = (0, i.useMemo)(() => ({ isFooterInView: r, setIsFooterInView: t }), [r]); return (0, l.jsx)(rY.Provider, { value: n, children: e }) } r1.displayName = "FooterProvider", G(); var r2 = (0, i.createContext)(null), r3 = () => (0, i.useContext)(r2); function r4({ children: e }) { let [r, t] = (0, i.useState)(!1), [n, o] = (0, i.useState)(0), a = (0, i.useMemo)(() => ({ headerHeight: n, setHeaderHeight: o, inverse: r, setInverse: t }), [n, o, r, t]); return (0, l.jsx)(r2.Provider, { value: a, children: e }) } r4.displayName = "HeaderProvider", G(), G(); var r5 = (0, i.createContext)(null); function r6({ children: e, ImageComponent: r, LinkComponent: t }) { let n = (0, i.useMemo)(() => ({ ImageComponent: r, LinkComponent: t }), [r, t]); return (0, l.jsx)(r5.Provider, { value: n, children: e }) } r6.displayName = "ComponentProvider", G(), G(), G(); var r7 = { cs: { activity_and_movement_link: "Aktivita a\xa0pohyb", address_form_additional_address: "Dalš\xed adresa", address_form_address: "Adresa", address_form_apt_suite: "Č\xedslo bytu, patro", address_form_city: "Město", address_form_city_town: "Město", address_form_city_ward_town_village: "Město/čtvrť/obec", address_form_country: "Země", address_form_county: "Okres", address_form_email: "E-mail", address_form_emirate: "Emir\xe1t", address_form_fname: "Křestn\xed jm\xe9no", address_form_lname: "Př\xedjmen\xed", address_form_max: "Tohle pole nesm\xed m\xedt v\xedc než (number) znaků", address_form_min: "Tohle pole mus\xed m\xedt aspoň (number) znaků", address_form_phone: "Telefon", address_form_postal: "Poštovn\xed směrovac\xed č\xedslo", address_form_postcode: "PSČ", address_form_prefecture: "Prefektura", address_form_province: "Provincie", address_form_region: "Region", address_form_required: "Povinn\xe9 pole", address_form_state: "St\xe1t", address_form_state_province_region: "St\xe1t/provincie/region", address_form_state_territory: "St\xe1t/teritorium", address_form_street_house_number: "Ulice a\xa0č\xedslo popisn\xe9", address_form_suburb: "Předměst\xed/město", address_form_zip: "Poštovn\xed směrovac\xed č\xedslo", available_day: "K\xa0dispozici {day}", best_buy_store_locator_legend_text: "Oura Ring na prodejn\xe1ch Best Buy", bfcm_2024_home_hero_title: "Naše nejnižš\xed<break></break>cena, <em>co tu kdy byla</em>", bfcm_2024_menu_card_dyn_price_description: "Až {amount} sleva z\xa0ceny doporučen\xe9 v\xfdrobcem na <break></break>Oura Ring Gen3.", carousel_current_slide_label: "(Aktu\xe1ln\xed sn\xedmek)", carousel_live_region_text: "Položka {activeIndex} z\xa0{slideCount}", carousel_next_slide_label: "Dalš\xed položka", carousel_page_dot_label: "Položka {index}", carousel_previous_slide_label: "Předchoz\xed položka", cart: "Koš\xedk", cart_count_sr_label: "{count, plural, =0 {M\xe1te pr\xe1zdn\xfd koš\xedk} =1 {V\xa0koš\xedku m\xe1te jednu položku} other {Položek v\xa0koš\xedku: #}}", checkout_form_country: "Země", checkout_form_emailformat: "Nespr\xe1vn\xfd form\xe1t e-mailu", checkout_form_emailformat_custom: "Nespr\xe1vn\xfd form\xe1t e-mailu", checkout_form_phoneinvalid: "Telefonn\xed č\xedslo je neplatn\xe9 nebo chyb\xed předvolba země", checkout_form_postal_code_pattern: "PSČ nesm\xed obsahovat v\xedc než devět p\xedsmen a\xa0č\xedslic.", checkout_form_postal_code_string: "PSČ sm\xed obsahovat jen p\xedsmena, č\xedsla, mezery a\xa0spojovn\xedky", checkout_form_postal_required: "Mus\xedte uv\xe9st PSČ", checkout_form_zip: "Poštovn\xed směrovac\xed č\xedslo", checkout_input_click_to_show_label: "Přidat \xfadaj {inputLabel}", checkout_pickup_details_plural_units_left: "Posledn\xed kusy ({quantity})", checkout_pickup_details_ready_in_time: "Připraveno za {time}", checkout_pickup_details_single_unit_left: "Posledn\xed kus", close: "Zavř\xedt", comparison_slider_control_label: "Pro porovn\xe1n\xed přet\xe1hněte nebo použijte kl\xe1vesy se šipkou vlevo a vpravo.", drop_down_extra_charger: "Nab\xedječka nav\xedc", drop_down_gift_card: "D\xe1rkov\xe1 karta", drop_down_oura_ring: "Oura Ring", explore_how_it_works_link: "Pod\xedvejte se, jak to funguje", explore_why_oura_link: "Proč pr\xe1vě Oura Ring", fcc_compliance_link: "Shoda s\xa0FCC", flexible_spending_footer_link: "Programy pro flexibiln\xed v\xfddaje (FSA)", footer_about_us: "O\xa0n\xe1s", footer_accessibility: "Př\xedstupnost", footer_all_rights_reserved: "Ouraring Inc. | Všechna pr\xe1va vyhrazena", footer_blog_heading: "Blog", footer_careers: "Kari\xe9ra", footer_company_heading: "Naše společnost", footer_contact: "Kontakt", footer_copyright: "ŌURA, OURA, OURA RING a\xa0Ō jsou ochrann\xe9 zn\xe1mky společnosti Ōura Health Oy a\xa0nesm\xed se použ\xedvat bez povolen\xed.", footer_dataprotect_1: "Na ochraně vašich dat n\xe1m z\xe1lež\xed.", footer_dataprotect_privacy_policy: "Přečtěte si v\xedc v\xa0našich <PrivacyPolicyLink>z\xe1sad\xe1ch ochrany osobn\xedch \xfadajů</PrivacyPolicyLink>.", footer_developers: "V\xfdvoj\xe1ři", footer_email: "E-mailov\xe1 adresa", footer_email_input_heading: "Z\xedskejte čl\xe1nky, tipy a\xa0nab\xeddky od společnosti Oura", footer_email_validation_error: "Zadejte pros\xedm platnou e-mailovou adresu", footer_help: "N\xe1pověda", footer_image_cta: "Vydejte se dnes na <em>cestu za zdrav\xedm</em>", footer_ip_notice: "Sdělen\xed k\xa0pr\xe1vům duševn\xedho vlastnictv\xed", footer_leadership: "Veden\xed", footer_legal_aria_label: "Pr\xe1vn\xed sdělen\xed", footer_medical_advisory_board: "L\xe9kařsk\xe1 rada", footer_membership: "Členstv\xed", footer_my_account: "My Account", footer_newsletter_submit_label: "odeslat e-mail pro newsletter", footer_oura_on_the_web: "Oura on the Web", footer_partner_heading: "Pojďme spolupracovat", footer_press: "Tisk", footer_privacy_policy: "Z\xe1sady ochrany osobn\xedch \xfadajů", footer_security_center: "Centrum zabezpečen\xed", footer_sizing: "Velikosti", footer_social_heading: "Soci\xe1ln\xed m\xe9dia", footer_social_icons_aria_label: "Naše soci\xe1ln\xed m\xe9dia", footer_support_heading: "Podpora", footer_terms_and_conditions: "Všeobecn\xe9 podm\xednky", footer_thanks_for_subscribing: "D\xedky, že m\xe1te z\xe1jem", for_business_link: "Pro podniky", gen4_is_here: "Oura Ring\xa04<em>je tady</em>", header_hamburger_close_sr_label: "Zavř\xedt mobiln\xed navigaci", header_hamburger_close_sr_label_2024: "Zavř\xedt horn\xed nab\xeddku", header_hamburger_open_sr_label: "Otevř\xedt mobiln\xed navigaci", header_hamburger_open_sr_label_2024: "Otevř\xedt horn\xed nab\xeddku", header_shop_now: "Koupit", header_skip_to_content: "Přeskočit na hlavn\xed obsah", heart_health_link: "Stav srdce", heart_rate_monitoring_link: "Sledov\xe1n\xed tepov\xe9 frekvence", how_it_works_link: "Jak to funguje", integrations_link: "Integrace", menu: "Nab\xeddka", oura_home_link: "Domovsk\xe1 str\xe1nka Oura", oura_ring_4_link: "Oura Ring 4 <sup>Novinka</sup>", out_of_stock_tag: "Vyprod\xe1no", partnerships_link: "Partnerstv\xed", pdp_selected_check_label: "Zvolen\xe1 varianta", pdp_slideshow_thumbnail_label: "Přej\xedt na sn\xedmek {index}", ring_gen_4: "Oura Ring\xa04", ring_gen3_on_sale: "Oura Ring Gen3 <sup>za v\xfdhodnou cenu</sup>", sale: "V\xfdprodej", sale_link: "V\xfdprodej prstenů Oura Ring Gen3", science_and_research_link: "Věda a\xa0v\xfdzkum", shop: "Obchod", shop_rings: "Nakupovat prsteny", sleep_and_rest_link: "Sp\xe1nek a\xa0odpočinek", slider_item_aria_label: "sn\xedmek {number} z\xa0{maxNumber}", store_locator_distance: "{distanceInMiles} mi", store_locator_item_button_label: "Zobrazit {displayName} {storeName} na mapě", store_locator_item_link_label: "Zobrazit {displayName} {storeName} v\xa0Map\xe1ch Google (otevře se na nov\xe9 kartě / v\xa0nov\xe9m okně)", store_locator_location_closed: "Uzavřeno", store_locator_location_open: "Otevřeno do {time}", store_locator_no_results: "Ž\xe1dn\xe9 v\xfdsledky jsme nenašli.", store_locator_number_results: "V\xfdsledků: {number}", store_locator_postal_code_pattern_error: "Zadejte pětim\xedstn\xe9 americk\xe9 poštovn\xed směrovac\xed č\xedslo", store_locator_results_error: "Nedař\xed se n\xe1m naj\xedt prodejny {storeName} ve vašem okol\xed. Obnovte str\xe1nku a\xa0zkuste to znovu nebo kontaktujte z\xe1kaznickou podporu.", stress_link: "Stres", the_pulse: "The Pulse", use_current_location_link: "Použ\xedt moji aktu\xe1ln\xed polohu", why_oura_link: "Proč Oura", womens_health_link: "Žensk\xe9 zdrav\xed" }, da: { activity_and_movement_link: "Aktivitet og bev\xe6gelse", address_form_additional_address: "Adresse (fort.)", address_form_address: "Adresse", address_form_apt_suite: "Etage-, side-, d\xf8rnummer", address_form_city: "By", address_form_city_town: "By", address_form_city_ward_town_village: "By", address_form_country: "Land", address_form_county: "Amt", address_form_email: "E-mailadresse", address_form_emirate: "Emirat", address_form_fname: "Fornavn", address_form_lname: "Efternavn", address_form_max: "Dette felt m\xe5 ikke indeholde mere end {number} tegn", address_form_min: "Dette felt skal indeholde mindst {number} tegn", address_form_phone: "Telefonnummer", address_form_postal: "Postnummer", address_form_postcode: "Postnummer", address_form_prefecture: "Pr\xe6fektur", address_form_province: "Provins", address_form_region: "Region", address_form_required: "Dette felt skal udfyldes", address_form_state: "Stat", address_form_state_province_region: "Stat/provins/region", address_form_state_territory: "Stat/omr\xe5de", address_form_street_house_number: "Gadenavn og husnummer", address_form_suburb: "Forstad/by", address_form_zip: "Postnummer", available_day: "F\xe5s fra {day}", best_buy_store_locator_legend_text: "Oplev Oura i Best Buy-butikker", bfcm_2024_home_hero_title: "Vores laveste<break></break>pris <em>nogensinde</em>", bfcm_2024_menu_card_dyn_price_description: "Op til {amount} i rabat p\xe5 den vejledende salgspris p\xe5<break></break>Oura Ring Gen3.", carousel_current_slide_label: "(Aktuelt dias)", carousel_live_region_text: "Element {activeIndex} af {slideCount}", carousel_next_slide_label: "N\xe6ste element", carousel_page_dot_label: "Element {index}", carousel_previous_slide_label: "Forrige element", cart: "Indk\xf8bskurv", cart_count_sr_label: "Der {count, plural, =0 {er ingen varer} =1 {er \xe9n vare} other {er # varer}} i din indk\xf8bskurv", checkout_form_country: "Land", checkout_form_emailformat: "Forkert format for e-mailadresse", checkout_form_emailformat_custom: "Forkert format for e-mailadresse", checkout_form_phoneinvalid: "Telefonnummeret er ugyldigt, eller landekoden mangler", checkout_form_postal_code_pattern: "Postnummeret m\xe5 ikke indeholde mere end 9 bogstaver eller tal.", checkout_form_postal_code_string: "Postnummeret m\xe5 kun indeholde bogstaver, tal, mellemrum og bindestreger", checkout_form_postal_required: "Postnummer skal udfyldes", checkout_form_zip: "Postnummer", checkout_input_click_to_show_label: "Tilf\xf8j {inputLabel}", checkout_pickup_details_plural_units_left: "Kun {quantity} tilbage", checkout_pickup_details_ready_in_time: "Klar om {time}", checkout_pickup_details_single_unit_left: "Kun 1 tilbage", close: "Luk", comparison_slider_control_label: "Tr\xe6k eller brug venstre og h\xf8jre piletast for at sammenligne", drop_down_extra_charger: "Ekstra oplader", drop_down_gift_card: "Gavekort", drop_down_oura_ring: "Oura Ring", explore_how_it_works_link: "Find ud af, hvordan det fungerer", explore_why_oura_link: "Udforsk, hvorfor du b\xf8r bruge Oura", fcc_compliance_link: "FCC-overensstemmelse", flexible_spending_footer_link: "Fleksibel k\xf8bsoplevelse", footer_about_us: "Om os", footer_accessibility: "Tilg\xe6ngelighed", footer_all_rights_reserved: "Ouraring Inc. | Alle rettigheder forbeholdes", footer_blog_heading: "Blog", footer_careers: "Karriere", footer_company_heading: "Vores virksomhed", footer_contact: "Kontakt", footer_copyright: "ŌURA, OURA, OURA RING og Ō er varem\xe6rker tilh\xf8rende Oura Health Oy og m\xe5 ikke bruges uden tilladelse.", footer_dataprotect_1: "Vi s\xf8rger for at beskytte dine data.", footer_dataprotect_privacy_policy: "Du kan l\xe6se mere i vores <PrivacyPolicyLink>databeskyttelsespolitik</PrivacyPolicyLink>.", footer_developers: "Udviklere", footer_email: "E-mailadresse", footer_email_input_heading: "F\xe5 artikler, tips og tilbud fra Oura", footer_email_validation_error: "Angiv en gyldig e-mailadresse", footer_help: "Hj\xe6lp", footer_image_cta: "Start din sundheds-<em>rejse i dag</em>", footer_ip_notice: "IP-meddelelse", footer_leadership: "Ledelse", footer_legal_aria_label: "Juridisk fodnote", footer_medical_advisory_board: "L\xe6gevidenskabelige r\xe5dgivere", footer_membership: "Medlemskab", footer_my_account: "My Account", footer_newsletter_submit_label: "indsend e-mailadresse for at modtage nyhedsbreve", footer_oura_on_the_web: "Oura on the Web", footer_partner_heading: "Samarbejd med os", footer_press: "Nyheder", footer_privacy_policy: "Databeskyttelsespolitik", footer_security_center: "Sikkerhedscenter", footer_sizing: "Ringst\xf8rrelse", footer_social_heading: "Sociale medier", footer_social_icons_aria_label: "Oura og sociale medier", footer_support_heading: "Support", footer_terms_and_conditions: "Vilk\xe5r og betingelser", footer_thanks_for_subscribing: "Tak, fordi du abonnerer", for_business_link: "Til virksomheder", gen4_is_here: "Oura Ring 4<em>er her</em>", header_hamburger_close_sr_label: "Luk mobilnavigation", header_hamburger_close_sr_label_2024: "Luk hovedmenunavigation", header_hamburger_open_sr_label: "\xc5bn mobilnavigation", header_hamburger_open_sr_label_2024: "\xc5bn hovedmenunavigation", header_shop_now: "K\xf8b nu", header_skip_to_content: "Spring navigation til hovedindhold over", heart_health_link: "Hjertesundhed", heart_rate_monitoring_link: "Overv\xe5gning af puls", how_it_works_link: "S\xe5dan fungerer det", integrations_link: "Integrationer", menu: "Menu", oura_home_link: "Oura-startside", oura_ring_4_link: "Oura Ring 4 <sup>Ny</sup>", out_of_stock_tag: "Udsolgt", partnerships_link: "Partnerskaber", pdp_selected_check_label: "V\xe6lg mulighed", pdp_slideshow_thumbnail_label: "G\xe5 til dias {index}", ring_gen_4: "Oura Ring 4", ring_gen3_on_sale: "Oura Ring Gen3 <sup>p\xe5 tilbud</sup>", sale: "Udsalg", sale_link: "Udsalg p\xe5 Oura Ring Gen3", science_and_research_link: "Videnskab og forskning", shop: "K\xf8b", shop_rings: "K\xf8b ringe", sleep_and_rest_link: "S\xf8vn og hvile", slider_item_aria_label: "dias {number} af {maxNumber}", store_locator_distance: "{distanceInMiles} miles v\xe6k", store_locator_item_button_label: "Se {displayName} {storeName} p\xe5 kortet", store_locator_item_link_label: "Se {displayName} {storeName} i Google Maps (\xe5bner p\xe5 ny fane/i nyt vindue)", store_locator_location_closed: "Lukket", store_locator_location_open: "\xc5ben indtil {time}", store_locator_no_results: "Ingen resultater fundet.", store_locator_number_results: "{number} resultater", store_locator_postal_code_pattern_error: "Angiv et femcifret amerikansk postnummer", store_locator_results_error: "Der opstod en fejl under s\xf8gning efter {storeName}-butikker i n\xe6rheden. Opdater siden for at pr\xf8ve igen, eller kontakt kundeservice.", stress_link: "Stress", the_pulse: "The Pulse", use_current_location_link: "Brug min nuv\xe6rende placering", why_oura_link: "Hvorfor Oura", womens_health_link: "Kvinders sundhed" }, de: { activity_and_movement_link: "Aktivit\xe4t und Bewegung", address_form_additional_address: "Adresszusatz", address_form_address: "Adresse", address_form_apt_suite: "Adresszusatz", address_form_city: "Stadt", address_form_city_town: "Stadt/Ort", address_form_city_ward_town_village: "Stadt/Bezirk/Ort/Dorf", address_form_country: "Land", address_form_county: "Region", address_form_email: "E-Mail-Adresse", address_form_emirate: "Emirat", address_form_fname: "Vorname", address_form_lname: "Nachname", address_form_max: "Dieses Feld darf nicht mehr als {number} Zeichen enthalten", address_form_min: "Dieses Feld muss mindestens {number} Zeichen enthalten", address_form_phone: "Telefonnummer", address_form_postal: "Postleitzahl", address_form_postcode: "Postleitzahl", address_form_prefecture: "Pr\xe4fektur", address_form_province: "Provinz", address_form_region: "Region", address_form_required: "Die Angabe in diesem Feld ist erforderlich", address_form_state: "Bundesland", address_form_state_province_region: "Bundesstaat/Provinz/Region", address_form_state_territory: "Bundesstaat/Territorium", address_form_street_house_number: "Stra\xdfe und Hausnummer", address_form_suburb: "Vorort/Stadt", address_form_zip: "Postleitzahl", available_day: "Verf\xfcgbar: {day}", best_buy_store_locator_legend_text: "Oura in Best\xa0Buy-Gesch\xe4ften erleben", bfcm_2024_home_hero_title: "So g\xfcnstig<break></break>wie <em>noch nie</em>", bfcm_2024_menu_card_dyn_price_description: "Bis zu {amount} weniger als der Standardpreis f\xfcr<break></break>Oura Ring Gen3.", carousel_current_slide_label: "(Aktuelles Slide)", carousel_live_region_text: "Slide {activeIndex} von {slideCount}", carousel_next_slide_label: "N\xe4chstes Slide", carousel_page_dot_label: "Slide {index}", carousel_previous_slide_label: "Vorheriges Slide", cart: "Warenkorb", cart_count_sr_label: "In deinem Warenkorb {count, plural, =0 {befinden sich keine Artikel} =1 {befindet sich 1 Artikel} other {befinden sich # Artikel}}", checkout_form_country: "Land", checkout_form_emailformat: "Falsches E-Mail-Format", checkout_form_emailformat_custom: "Falsches E-Mail-Format", checkout_form_phoneinvalid: "Telefonnummer ung\xfcltig oder fehlende Landesvorwahl", checkout_form_postal_code_pattern: "Die Postleitzahl darf nicht mehr als 9 Buchstaben oder Ziffern enthalten.", checkout_form_postal_code_string: "Die Postleitzahl darf nur Buchstaben, Ziffern, Leerzeichen und Bindestriche enthalten.", checkout_form_postal_required: "Die PLZ muss angegeben werden", checkout_form_zip: "Postleitzahl", checkout_input_click_to_show_label: "{inputLabel} hinzuf\xfcgen", checkout_pickup_details_plural_units_left: "Nur {quantity} Artikel verf\xfcgbar", checkout_pickup_details_ready_in_time: "Abholbereit in {time}", checkout_pickup_details_single_unit_left: "Nur 1 Artikel verf\xfcgbar", close: "Schlie\xdfen", comparison_slider_control_label: "Zum Vergleichen ziehen oder die Pfeiltasten f\xfcr rechts und links verwenden", drop_down_extra_charger: "Zus\xe4tzliches Ladeger\xe4t", drop_down_gift_card: "Gutschein", drop_down_oura_ring: "Oura Ring", explore_how_it_works_link: "Funktionsweise", explore_why_oura_link: "Gr\xfcnde f\xfcr Oura", fcc_compliance_link: "FCC Compliance", flexible_spending_footer_link: "Steuerbeg\xfcnstigtes Gesundheitskonto", footer_about_us: "\xdcber uns", footer_accessibility: "Barrierefreiheit", footer_all_rights_reserved: "Ouraring Inc. | Alle Rechte vorbehalten", footer_blog_heading: "Blog", footer_careers: "Karriere", footer_company_heading: "Unternehmen", footer_contact: "Kontakt", footer_copyright: "ŌURA, OURA, OURA RING und Ō sind Marken der Oura Health Oy und d\xfcrfen nicht ohne Genehmigung verwendet werden.", footer_dataprotect_1: "Der Schutz deiner Daten ist uns wichtig.", footer_dataprotect_privacy_policy: "Erfahre mehr in unserer <PrivacyPolicyLink>Datenschutzerkl\xe4rung</PrivacyPolicyLink>.", footer_developers: "Entwickler", footer_email: "E-Mail-Adresse", footer_email_input_heading: "Erhalte die neuesten Beitr\xe4ge, Tipps und Angebote von Oura", footer_email_validation_error: "Bitte gib eine g\xfcltige E-Mail-Adresse ein", footer_help: "Hilfe", footer_image_cta: "Verbessere deine Gesundheit noch heute", footer_ip_notice: "Hinweis zum Urheberrecht", footer_leadership: "F\xfchrungsteam", footer_legal_aria_label: "Footer, rechtliche Hinweise", footer_medical_advisory_board: "Medizinisches Beratungsgremium", footer_membership: "Mitgliedschaft", footer_my_account: "My Account", footer_newsletter_submit_label: "E-Mail-Adresse f\xfcr Newsletter senden", footer_oura_on_the_web: "Oura on the Web", footer_partner_heading: "Partnerschaften", footer_press: "Presse", footer_privacy_policy: "Datenschutzerkl\xe4rung", footer_security_center: "Sicherheit", footer_sizing: "Ringgr\xf6\xdfen", footer_social_heading: "Soziale Netzwerke", footer_social_icons_aria_label: "Unsere Social-Media-Kan\xe4le", footer_support_heading: "Support", footer_terms_and_conditions: "Allgemeine Gesch\xe4ftsbedingungen", footer_thanks_for_subscribing: "Danke f\xfcr dein Abonnement", for_business_link: "F\xfcr Unternehmen", gen4_is_here: "Der Oura Ring 4 ist da", header_hamburger_close_sr_label: "Mobile Navigation schlie\xdfen", header_hamburger_close_sr_label_2024: "Men\xfc-Navigation ausblenden", header_hamburger_open_sr_label: "Mobile Navigation \xf6ffnen", header_hamburger_open_sr_label_2024: "Men\xfc-Navigation einblenden", header_shop_now: "Jetzt kaufen", header_skip_to_content: "Zum Hauptbereich wechseln", heart_health_link: "Herzgesundheit", heart_rate_monitoring_link: "Herzfrequenzmessung", how_it_works_link: "So funktioniert Oura", integrations_link: "Integrationen", menu: "Men\xfc", oura_home_link: "Oura-Startseite", oura_ring_4_link: "Oura Ring 4 <sup>Neu</sup>", out_of_stock_tag: "Ausverkauft", partnerships_link: "Partnerschaften", pdp_selected_check_label: "Gew\xe4hlte Option", pdp_slideshow_thumbnail_label: "Gehe zu Folie {index}", ring_gen_4: "Oura Ring 4", ring_gen3_on_sale: "Oura Ring Gen3 <sup>im Angebot</sup>", sale: "Angebot", sale_link: "Sonderangebot f\xfcr Oura Ring Gen3", science_and_research_link: "Forschung und Wissenschaft", shop: "Jetzt kaufen", shop_rings: "Ring kaufen", sleep_and_rest_link: "Schlaf und Erholung", slider_item_aria_label: "Folie {number} von {maxNumber}", store_locator_distance: "{distanceInMiles} Meilen entfernt", store_locator_item_button_label: "{displayName} {storeName} auf der Karte anzeigen", store_locator_item_link_label: "{displayName} {storeName} auf Google Maps anzeigen (in neuem Tab/Fenster)", store_locator_location_closed: "Geschlossen", store_locator_location_open: "Ge\xf6ffnet bis {time}", store_locator_no_results: "Keine Gesch\xe4fte gefunden.", store_locator_number_results: "{number} Ergebnisse", store_locator_postal_code_pattern_error: "Bitte gib eine f\xfcnfstellige Postleitzahl f\xfcr die USA ein", store_locator_results_error: "Beim Abrufen von {storeName}-Standorten ist ein Fehler aufgetreten. Bitte aktualisiere die Seite und versuche es erneut oder kontaktiere unseren Kundensupport.", stress_link: "Stress", the_pulse: "The Pulse", use_current_location_link: "Meinen aktuellen Standort verwenden", why_oura_link: "Warum Oura", womens_health_link: "Frauengesundheit" }, en: { activity_and_movement_link: "Activity and Movement", address_form_additional_address: "Additional Address", address_form_address: "Address", address_form_apt_suite: "Apt #, Suite, Floor", address_form_city: "City", address_form_city_town: "City/Town", address_form_city_ward_town_village: "City/Ward/Town/Village", address_form_country: "Country", address_form_county: "County", address_form_email: "Email", address_form_emirate: "Emirate", address_form_fname: "First Name", address_form_lname: "Last Name", address_form_max: "This field cannot exceed {number} characters", address_form_min: "This field must be at least {number} characters", address_form_phone: "Phone Number", address_form_postal: "Postal Code", address_form_postcode: "Postcode", address_form_prefecture: "Prefecture", address_form_province: "Province", address_form_region: "Region", address_form_required: "This field is required", address_form_state: "State", address_form_state_province_region: "State/Province/Region", address_form_state_territory: "State/Territory", address_form_street_house_number: "Street and House Number", address_form_suburb: "Suburb/Town", address_form_zip: "Zip Code", available_day: "Available {day}", best_buy_store_locator_legend_text: "Best Buy in-store Oura Experience", bfcm_2024_home_hero_title: "Our lowest<break></break>price <em>ever</em>", bfcm_2024_menu_card_dyn_price_description: "Up to {amount} off MSRP on<break></break>Oura Ring Gen3.", carousel_current_slide_label: "(Current slide)", carousel_live_region_text: "Item {activeIndex} of {slideCount}", carousel_next_slide_label: "Next item", carousel_page_dot_label: "Item {index}", carousel_previous_slide_label: "Previous item", cart: "Cart", cart_count_sr_label: "There {count, plural, =0 {are no items} =1 {is one item} other {are # items}} in your cart", checkout_form_country: "Country", checkout_form_emailformat: "Incorrect email format", checkout_form_emailformat_custom: "Incorrect email format", checkout_form_phoneinvalid: "Phone number invalid or country code missing", checkout_form_postal_code_pattern: "Postal code may contain no more than 9 letter or number characters.", checkout_form_postal_code_string: "Postal code can only contain letters, numbers, spaces, and hyphens", checkout_form_postal_required: "Postal Code is required", checkout_form_zip: "Postal Code", checkout_input_click_to_show_label: "Add {inputLabel}", checkout_pickup_details_plural_units_left: "Only {quantity} units left", checkout_pickup_details_ready_in_time: "Ready in {time}", checkout_pickup_details_single_unit_left: "Only 1 unit left", close: "Close", comparison_slider_control_label: "Drag or use the left and right arrow keys to compare", drop_down_extra_charger: "Extra Charger", drop_down_gift_card: "Gift Card", drop_down_oura_ring: "Oura Ring", explore_how_it_works_link: "Explore How It Works", explore_why_oura_link: "Explore Why Oura", fcc_compliance_link: "FCC Compliance", flexible_spending_footer_link: "Flexible Spending", footer_about_us: "About Us", footer_accessibility: "Accessibility", footer_all_rights_reserved: "Ouraring Inc. | All Rights Reserved", footer_blog_heading: "Blog", footer_careers: "Careers", footer_company_heading: "Our Company", footer_contact: "Contact", footer_copyright: "ŌURA, OURA, OURA RING, and Ō are trademarks of Oura Health Oy and may not be used without permission.", footer_dataprotect_1: "We care about protecting your data.", footer_dataprotect_privacy_policy: "Read more in our <PrivacyPolicyLink>Privacy Policy</PrivacyPolicyLink>.", footer_developers: "Developers", footer_email: "Email address", footer_email_input_heading: "Receive articles, tips, and offers from Oura", footer_email_validation_error: "Please enter a valid email address", footer_help: "Help", footer_image_cta: "Start your health<em>journey today</em>", footer_ip_notice: "IP Notice", footer_leadership: "Leadership", footer_legal_aria_label: "Footer legal", footer_medical_advisory_board: "Medical Advisory Board", footer_membership: "Membership", footer_my_account: "My Account", footer_newsletter_submit_label: "submit email for newsletter", footer_oura_on_the_web: "Oura on the Web", footer_partner_heading: "Partner With Us", footer_press: "Press", footer_privacy_policy: "Privacy Policy", footer_security_center: "Security Center", footer_sizing: "Sizing", footer_social_heading: "Social", footer_social_icons_aria_label: "Oura social media", footer_support_heading: "Support", footer_terms_and_conditions: "Terms & Conditions", footer_thanks_for_subscribing: "Thanks for subscribing", for_business_link: "For Business", gen4_is_here: "Oura Ring 4<em>is here</em>", header_hamburger_close_sr_label: "Close mobile navigation", header_hamburger_close_sr_label_2024: "Close header menu navigation", header_hamburger_open_sr_label: "Open mobile navigation", header_hamburger_open_sr_label_2024: "Open header menu navigation", header_shop_now: "Shop Now", header_skip_to_content: "Skip Navigation to Main Content", heart_health_link: "Heart Health", heart_rate_monitoring_link: "Heart Rate Monitoring", how_it_works_link: "How It Works", integrations_link: "Integrations", menu: "Menu", oura_home_link: "Oura home", oura_ring_4_link: "Oura Ring 4 <sup>New</sup>", out_of_stock_tag: "Out of stock", partnerships_link: "Partnerships", pdp_selected_check_label: "Chosen option", pdp_slideshow_thumbnail_label: "Go to slide {index}", ring_gen_4: "Oura Ring 4", ring_gen3_on_sale: "Oura Ring Gen3 <sup>On Sale</sup>", sale: "Sale", sale_link: "Sale on Oura Ring Gen3", science_and_research_link: "Science and Research", shop: "Shop", shop_rings: "Shop Rings", sleep_and_rest_link: "Sleep and Rest", slider_item_aria_label: "slide {number} of {maxNumber}", store_locator_distance: "{distanceInMiles} miles away", store_locator_item_button_label: "View {displayName} {storeName} on the map", store_locator_item_link_label: "View {displayName} {storeName} in Google Maps (opens in new tab/window)", store_locator_location_closed: "Closed", store_locator_location_open: "Open until {time}", store_locator_no_results: "No results found.", store_locator_number_results: "{number} Results", store_locator_postal_code_pattern_error: "Please enter a five-digit US postal code", store_locator_results_error: "There was an error finding nearby {storeName} locations. Please refresh the page and try again or contact customer support.", stress_link: "Stress", the_pulse: "The Pulse", use_current_location_link: "Use my current location", why_oura_link: "Why Oura", womens_health_link: "Women's Health" }, es: { activity_and_movement_link: "Actividad y movimiento", address_form_additional_address: "Direcci\xf3n adicional", address_form_address: "Direcci\xf3n", address_form_apt_suite: "Portal, piso, puerta", address_form_city: "Municipio", address_form_city_town: "Municipio", address_form_city_ward_town_village: "Ciudad/Barrio/Pueblo/Aldea", address_form_country: "Pa\xeds", address_form_county: "Condado", address_form_email: "Correo electr\xf3nico", address_form_emirate: "Emirato", address_form_fname: "Nombre", address_form_lname: "Apellidos", address_form_max: "Este campo no puede contener m\xe1s de {number} caracteres", address_form_min: "Este campo debe contener al menos {number} caracteres", address_form_phone: "N\xfamero de tel\xe9fono", address_form_postal: "C\xf3digo postal", address_form_postcode: "C\xf3digo postal", address_form_prefecture: "Prefectura", address_form_province: "Provincia", address_form_region: "Regi\xf3n", address_form_required: "Este campo es obligatorio", address_form_state: "Provincia", address_form_state_province_region: "Estado/Provincia/Regi\xf3n", address_form_state_territory: "Estado/Territorio", address_form_street_house_number: "Direcci\xf3n", address_form_suburb: "Barrio/Ciudad", address_form_zip: "C\xf3digo postal", available_day: "Disponible: {day}", best_buy_store_locator_legend_text: "Experiencia Oura en las tiendas Best Buy", bfcm_2024_home_hero_title: "Nuestro<break></break>precio <em>m\xe1s bajo</em>", bfcm_2024_menu_card_dyn_price_description: "Hasta {amount} de descuento<break></break>en el Oura Ring Gen3.", carousel_current_slide_label: "(Diapositiva actual)", carousel_live_region_text: "Elemento {activeIndex} de {slideCount}", carousel_next_slide_label: "Siguiente elemento", carousel_page_dot_label: "Elemento {index}", carousel_previous_slide_label: "Elemento anterior", cart: "Carrito", cart_count_sr_label: "{count, plural, =0 {No hay ning\xfan art\xedculo} =1 {Hay un art\xedculo} other {Hay # art\xedculos}} en el carrito", checkout_form_country: "Pa\xeds", checkout_form_emailformat: "Formato de correo electr\xf3nico incorrecto", checkout_form_emailformat_custom: "Formato de correo electr\xf3nico incorrecto", checkout_form_phoneinvalid: "El n\xfamero de tel\xe9fono no es v\xe1lido o falta el prefijo del pa\xeds", checkout_form_postal_code_pattern: "El c\xf3digo postal no puede tener m\xe1s de 9 caracteres (letras o n\xfameros)", checkout_form_postal_code_string: "El c\xf3digo postal solo puede contener letras, n\xfameros, espacios y guiones", checkout_form_postal_required: "Debes indicar el c\xf3digo postal", checkout_form_zip: "C\xf3digo postal", checkout_input_click_to_show_label: "A\xf1adir {inputLabel}", checkout_pickup_details_plural_units_left: "Solo quedan {quantity} unidades", checkout_pickup_details_ready_in_time: "Listo en {time}", checkout_pickup_details_single_unit_left: "Solo queda 1 unidad", close: "Cerrar", comparison_slider_control_label: "Arrastra con el rat\xf3n o usa las flechas de derecha e izquierda del teclado para comparar", drop_down_extra_charger: "Cargador adicional", drop_down_gift_card: "Tarjeta regalo", drop_down_oura_ring: "Oura Ring", explore_how_it_works_link: 'Explorar "C\xf3mo funciona"', explore_why_oura_link: 'Explorar "Por qu\xe9 Oura"', fcc_compliance_link: "FCC Compliance", flexible_spending_footer_link: "Gastos flexibles", footer_about_us: "Qui\xe9nes somos", footer_accessibility: "Accesibilidad", footer_all_rights_reserved: "Ouraring Inc. | Todos los derechos reservados", footer_blog_heading: "Blog", footer_careers: "Trabaja con nosotros", footer_company_heading: "Nuestra empresa", footer_contact: "Contacto", footer_copyright: "ŌURA, OURA, OURA RING y Ō son marcas registradas de Oura Health Oy y no se pueden utilizar sin autorizaci\xf3n.", footer_dataprotect_1: "Para nosotros, proteger tus datos es una prioridad.", footer_dataprotect_privacy_policy: "Encontrar\xe1s m\xe1s informaci\xf3n en nuestra <PrivacyPolicyLink>Pol\xedtica de Privacidad</PrivacyPolicyLink>.", footer_developers: "Desarrolladores", footer_email: "Direcci\xf3n de correo electr\xf3nico", footer_email_input_heading: "Recibe art\xedculos, consejos y ofertas de Oura", footer_email_validation_error: "Introduce una direcci\xf3n de correo electr\xf3nico v\xe1lida", footer_help: "Ayuda", footer_image_cta: "Empieza hoy mismo a monitorizar tu salud", footer_ip_notice: "Aviso de Propiedad Intelectual", footer_leadership: "Equipo directivo", footer_legal_aria_label: "Aviso legal", footer_medical_advisory_board: "Junta de asesoramiento m\xe9dico", footer_membership: "Suscripci\xf3n", footer_my_account: "My Account", footer_newsletter_submit_label: "enviar correo electr\xf3nico para la newsletter", footer_oura_on_the_web: "Oura on the Web", footer_partner_heading: "Colabora con nosotros", footer_press: "Prensa", footer_privacy_policy: "Pol\xedtica de Privacidad", footer_security_center: "Centro de Seguridad", footer_sizing: "Tallaje", footer_social_heading: "Redes sociales", footer_social_icons_aria_label: "Oura en las redes sociales", footer_support_heading: "Recursos", footer_terms_and_conditions: "T\xe9rminos y Condiciones", footer_thanks_for_subscribing: "Gracias por suscribirte", for_business_link: "Para empresas", gen4_is_here: "Ya est\xe1 aqu\xed el Oura Ring 4", header_hamburger_close_sr_label: "Cerrar la navegaci\xf3n m\xf3vil", header_hamburger_close_sr_label_2024: "Cerrar men\xfa de cabecera de navegaci\xf3n", header_hamburger_open_sr_label: "Abrir la navegaci\xf3n m\xf3vil", header_hamburger_open_sr_label_2024: "Abrir men\xfa de cabecera de navegaci\xf3n", header_shop_now: "Comprar ahora", header_skip_to_content: "Omitir la navegaci\xf3n al contenido principal", heart_health_link: "Salud card\xedaca", heart_rate_monitoring_link: "Seguimiento de la frecuencia card\xedaca", how_it_works_link: "C\xf3mo funciona", integrations_link: "Integraciones", menu: "Men\xfa", oura_home_link: "P\xe1gina inicial de Oura", oura_ring_4_link: "Oura Ring 4 <sup>Novedad</sup>", out_of_stock_tag: "Existencias agotadas", partnerships_link: "Colaboraciones", pdp_selected_check_label: "Opci\xf3n seleccionada", pdp_slideshow_thumbnail_label: "Ir a la diapositiva {index}", ring_gen_4: "Anillo Oura Ring 4", ring_gen3_on_sale: "Oura Ring Gen3 <sup>en oferta</sup>", sale: "Oferta", sale_link: "Descuentos en el Oura Ring Gen3", science_and_research_link: "Ciencia e investigaci\xf3n", shop: "Comprar", shop_rings: "Comprar anillos", sleep_and_rest_link: "Sue\xf1o y descanso", slider_item_aria_label: "diapositiva {number} de {maxNumber}", store_locator_distance: "A {distanceInMiles} millas", store_locator_item_button_label: "Ver {displayName} {storeName} en el mapa", store_locator_item_link_label: "Ver {displayName} {storeName} en Google Maps (se abre en otra pesta\xf1a/ventana)", store_locator_location_closed: "Cerrado", store_locator_location_open: "Abierto hasta las {time}", store_locator_no_results: "No hemos obtenido ning\xfan resultado.", store_locator_number_results: "{number} resultados", store_locator_postal_code_pattern_error: "Introduce un c\xf3digo postal de cinco d\xedgitos de EE.\xa0UU.", store_locator_results_error: "Se ha producido un error al buscar tiendas {storeName} cerca de tu ubicaci\xf3n. Actualiza la p\xe1gina y vuelve a intentarlo o ponte en contacto con el servicio de atenci\xf3n al cliente.", stress_link: "Estr\xe9s", the_pulse: "The Pulse", use_current_location_link: "Utilizar mi ubicaci\xf3n actual", why_oura_link: "Por qu\xe9 Oura", womens_health_link: "Salud de la mujer" }, fi: { activity_and_movement_link: "Aktiivisuus ja liike", address_form_additional_address: "Osoite", address_form_address: "Osoite", address_form_apt_suite: "Asunnon nro, kerros", address_form_city: "Kaupunki", address_form_city_town: "Kaupunki", address_form_city_ward_town_village: "Kaupunki/Hallintoalue/Kyl\xe4", address_form_country: "Maa", address_form_county: "Piirikunta", address_form_email: "S\xe4hk\xf6posti", address_form_emirate: "Emiraatti", address_form_fname: "Etunimi", address_form_lname: "Sukunimi", address_form_max: "T\xe4ss\xe4 kent\xe4ss\xe4 ei voi olla enemp\xe4\xe4 kuin {number} merkki\xe4", address_form_min: "T\xe4ss\xe4 kent\xe4ss\xe4 t\xe4ytyy olla v\xe4hint\xe4\xe4n {number} merkki\xe4", address_form_phone: "Puhelinnumero", address_form_postal: "Postinumero", address_form_postcode: "Postinumero", address_form_prefecture: "Prefektuuri", address_form_province: "Provinssi", address_form_region: "Alue", address_form_required: "T\xe4m\xe4 kentt\xe4 on pakollinen", address_form_state: "Osavaltio", address_form_state_province_region: "Osavaltio/Provinssi/Alue", address_form_state_territory: "Osavaltio/Territorio", address_form_street_house_number: "Kadun ja talon numero", address_form_suburb: "Kaupunki", address_form_zip: "Postinumero", available_day: "Noudettavissa {day}", best_buy_store_locator_legend_text: "Oura Ringit nyt Best Buy -myym\xe4l\xf6ist\xe4", bfcm_2024_home_hero_title: "Edullisin<break></break>hintamme <em>koskaan</em>", bfcm_2024_menu_card_dyn_price_description: "Jopa {amount} alennusta <break></break>Oura Ring Gen3:n ohjev\xe4hitt\xe4ishinnasta.", carousel_current_slide_label: "(Nykyinen dia)", carousel_live_region_text: "Kohde {activeIndex} / {slideCount}", carousel_next_slide_label: "Seuraava kohde", carousel_page_dot_label: "Kohde {index}", carousel_previous_slide_label: "Edellinen kohde", cart: "Ostoskori", cart_count_sr_label: "Ostoskorissasi {count, plural, =0 {ei ole yht\xe4\xe4n tuotetta} =1 {on yksi tuote} other {on # tuotetta}}", checkout_form_country: "Maa", checkout_form_emailformat: "Virheellinen s\xe4hk\xf6postimuoto", checkout_form_emailformat_custom: "Virheellinen s\xe4hk\xf6postimuoto", checkout_form_phoneinvalid: "Puhelinnumero on virheellinen tai maatunnus puuttuu", checkout_form_postal_code_pattern: "Postinumero saa sis\xe4lt\xe4\xe4 enint\xe4\xe4n 9 kirjainta tai numeroa.", checkout_form_postal_code_string: "Postinumero voi sis\xe4lt\xe4\xe4 vain kirjaimia, numeroita, v\xe4lily\xf6ntej\xe4 ja yhdysmerkkej\xe4", checkout_form_postal_required: "Postinumero on pakollinen tieto", checkout_form_zip: "Postinumero", checkout_input_click_to_show_label: "Lis\xe4\xe4 {inputLabel}", checkout_pickup_details_plural_units_left: "Vain {quantity} kpl j\xe4ljell\xe4", checkout_pickup_details_ready_in_time: "Valmis {time}", checkout_pickup_details_single_unit_left: "Vain 1 kpl j\xe4ljell\xe4", close: "Sulje", comparison_slider_control_label: "Vertaa malleja vet\xe4m\xe4ll\xe4 tai nuolin\xe4pp\xe4imi\xe4 k\xe4ytt\xe4en", drop_down_extra_charger: "Lis\xe4laturi", drop_down_gift_card: "Lahjakortti", drop_down_oura_ring: "Oura Ring", explore_how_it_works_link: "Tutki, kuinka se toimii", explore_why_oura_link: "Lue, miksi juuri Oura", fcc_compliance_link: "FCC Compliance", flexible_spending_footer_link: "Flexible Spending", footer_about_us: "Tietoa meist\xe4", footer_accessibility: "Saavutettavuus", footer_all_rights_reserved: "Ouraring Inc. | Kaikki oikeudet pid\xe4tet\xe4\xe4n", footer_blog_heading: "Blogi", footer_careers: "Avoimet ty\xf6paikat", footer_company_heading: "Yritys", footer_contact: "Yhteystiedot", footer_copyright: "ŌURA, OURA, OURA RING ja Ō ovat Oura Health Oy:n tavaramerkkej\xe4, ja niiden k\xe4ytt\xe4minen ilman lupaa on kielletty.", footer_dataprotect_1: "Tietojesi suojaaminen on meille t\xe4rke\xe4\xe4.", footer_dataprotect_privacy_policy: "Lue lis\xe4\xe4 <PrivacyPolicyLink>Tietosuojaselosteestamme</PrivacyPolicyLink>.", footer_developers: "Kehitt\xe4j\xe4t", footer_email: "S\xe4hk\xf6postiosoite", footer_email_input_heading: "Haluan saada Ouran uusimmat artikkelit, vinkit ja tarjoukset", footer_email_validation_error: "Sy\xf6t\xe4 kelvollinen s\xe4hk\xf6postiosoite", footer_help: "Tuki", footer_image_cta: "Aloita t\xe4n\xe4\xe4n matkasi kohti parempaa terveytt\xe4", footer_ip_notice: "Immateriaalioikeudet", footer_leadership: "Johtoryhm\xe4", footer_legal_aria_label: "Alatunniste, legal", footer_medical_advisory_board: "L\xe4\xe4ketieteellinen neuvottelukunta", footer_membership: "J\xe4senyys", footer_my_account: "My Account", footer_newsletter_submit_label: "sy\xf6t\xe4 s\xe4hk\xf6postisoite ja tilaa uutiskirje", footer_oura_on_the_web: "Oura on the Web", footer_partner_heading: "Ryhdy kumppaniksemme", footer_press: "Lehdist\xf6lle", footer_privacy_policy: "Tietosuojaseloste", footer_security_center: "Tietoturvakeskus", footer_sizing: "Koon valinta", footer_social_heading: "Sosiaalinen media", footer_social_icons_aria_label: "Oura sosiaalisessa mediassa", footer_support_heading: "Tuki", footer_terms_and_conditions: "K\xe4ytt\xf6ehdot", footer_thanks_for_subscribing: "Kiitos tilauksesta", for_business_link: "Yrityksille", gen4_is_here: "Oura Ring 4 on t\xe4\xe4ll\xe4", header_hamburger_close_sr_label: "Sulje navigointi", header_hamburger_close_sr_label_2024: "Sulje yl\xe4tunnisteen valikko", header_hamburger_open_sr_label: "Avaa navigointi", header_hamburger_open_sr_label_2024: "Avaa yl\xe4tunnisteen valikko", header_shop_now: "Osta nyt", header_skip_to_content: "Siirry p\xe4\xe4sis\xe4lt\xf6\xf6n", heart_health_link: "Syd\xe4men terveys", heart_rate_monitoring_link: "Sykkeenseuranta", how_it_works_link: "Miten se toimii", integrations_link: "Integraatiot", menu: "Valikko", oura_home_link: "Etusivu", oura_ring_4_link: "Oura Ring 4 <sup>Uusi</sup>", out_of_stock_tag: "Loppu varastosta", partnerships_link: "Kumppanuudet", pdp_selected_check_label: "Valittu vaihtoehto", pdp_slideshow_thumbnail_label: "Siirry diaan {index}", ring_gen_4: "Oura Ring 4", ring_gen3_on_sale: "Oura Ring Gen3 <sup>alennusmyynniss\xe4</sup>", sale: "Alennusmyynti", sale_link: "Oura Ring Gen3 nyt tarjouksessa", science_and_research_link: "Tiede ja tutkimus", shop: "Ostoksille", shop_rings: "Osta sormuksia", sleep_and_rest_link: "Uni ja lepo", slider_item_aria_label: "dia {number} / {maxNumber}", store_locator_distance: "{distanceInMiles} mailin p\xe4\xe4ss\xe4", store_locator_item_button_label: "N\xe4yt\xe4 {displayName} {storeName} kartalla", store_locator_item_link_label: "N\xe4yt\xe4 {displayName} {storeName} Google Mapsissa (avautuu uuteen v\xe4lilehteen/ikkunaan)", store_locator_location_closed: "Suljettu", store_locator_location_open: "Avoinna klo {time} saakka", store_locator_no_results: "Tuloksia ei l\xf6ytynyt.", store_locator_number_results: "{number} tulosta", store_locator_postal_code_pattern_error: "Sy\xf6t\xe4 viisinumeroinen USA:n postinumero", store_locator_results_error: "L\xe4himpien {storeName} -myym\xe4l\xf6iden etsinn\xe4ss\xe4 tapahtui virhe. P\xe4ivit\xe4 sivu ja yrit\xe4 uudelleen tai ota yhteytt\xe4 asiakastukeen.", stress_link: "Stressi", the_pulse: "The Pulse", use_current_location_link: "K\xe4yt\xe4 nykyist\xe4 sijaintiani", why_oura_link: "Miksi juuri Oura?", womens_health_link: "Naisen terveys" }, fr: { activity_and_movement_link: "Activit\xe9 et mouvement", address_form_additional_address: "Compl\xe9ment d'adresse", address_form_address: "Adresse", address_form_apt_suite: "Num\xe9ro d'appartement, bureau, \xe9tage", address_form_city: "Ville", address_form_city_town: "Ville/localit\xe9", address_form_city_ward_town_village: "Ville/arrondissement/localit\xe9/village", address_form_country: "Pays", address_form_county: "Comt\xe9", address_form_email: "Adresse e-mail", address_form_emirate: "\xc9mirat", address_form_fname: "Pr\xe9nom", address_form_lname: "Nom de famille", address_form_max: "Le contenu de ce champ ne peut pas d\xe9passer {number}\xa0caract\xe8res", address_form_min: "Ce champ doit contenir au moins {number}\xa0caract\xe8res", address_form_phone: "Num\xe9ro de t\xe9l\xe9phone", address_form_postal: "Code postal", address_form_postcode: "Code postal", address_form_prefecture: "Pr\xe9fecture", address_form_province: "Province/Canton", address_form_region: "R\xe9gion", address_form_required: "Ce champ est obligatoire", address_form_state: "\xc9tat", address_form_state_province_region: "\xc9tat/province/r\xe9gion", address_form_state_territory: "\xc9tat/territoire", address_form_street_house_number: "Rue et num\xe9ro", address_form_suburb: "Banlieue/localit\xe9", address_form_zip: "Code postal", available_day: "Disponible\xa0: {day}", best_buy_store_locator_legend_text: "L'exp\xe9rience Oura dans un magasin Best Buy", bfcm_2024_home_hero_title: "Notre prix<break></break>le plus bas <em>jamais atteint</em>", bfcm_2024_menu_card_dyn_price_description: "Jusqu’\xe0 {amount} de remise sur le prix de vente conseill\xe9 de<break></break>l’anneau Oura Ring Gen3.", carousel_current_slide_label: "(diapo en cours)", carousel_live_region_text: "\xc9l\xe9ment {activeIndex} sur {slideCount}", carousel_next_slide_label: "\xc9l\xe9ment suivant", carousel_page_dot_label: "\xc9l\xe9ment {index}", carousel_previous_slide_label: "\xc9l\xe9ment pr\xe9c\xe9dent", cart: "Panier", cart_count_sr_label: "Votre panier contient {count, plural, =0 {are no items} =1 {is one item} other {are # items}} article(s)", checkout_form_country: "Pays", checkout_form_emailformat: "Le format de l'adresse e-mail est incorrect.", checkout_form_emailformat_custom: "Le format de l'adresse e-mail est incorrect.", checkout_form_phoneinvalid: "Num\xe9ro de t\xe9l\xe9phone non valide et code pays manquant", checkout_form_postal_code_pattern: "Le code postal ne doit pas contenir plus de 9\xa0lettres ou chiffres.", checkout_form_postal_code_string: "Le code postal ne peut contenir que des lettres, des chiffres, des espaces et des traits d'union.", checkout_form_postal_required: "Vous devez saisir un code postal", checkout_form_zip: "Code postal", checkout_input_click_to_show_label: "Ajouter {inputLabel}", checkout_pickup_details_plural_units_left: "Il ne reste que {quantity}\xa0articles", checkout_pickup_details_ready_in_time: "Commande pr\xeate dans {time}", checkout_pickup_details_single_unit_left: "Il ne reste qu'un article", close: "Fermer", comparison_slider_control_label: "Faire glisser ou utiliser les touches fl\xe9ch\xe9es gauche et droite pour comparer", drop_down_extra_charger: "Chargeur suppl\xe9mentaire", drop_down_gift_card: "Carte cadeau", drop_down_oura_ring: "Oura Ring", explore_how_it_works_link: "Acc\xe9der \xe0 Fonctionnement d'Oura", explore_why_oura_link: "Acc\xe9der \xe0 Pourquoi choisir Oura\xa0?", fcc_compliance_link: "FCC Compliance", flexible_spending_footer_link: "D\xe9penses flexibles", footer_about_us: "\xc0 propos", footer_accessibility: "Accessibilit\xe9", footer_all_rights_reserved: "Ouraring Inc. | Tous droits r\xe9serv\xe9s.", footer_blog_heading: "Blog", footer_careers: "Carri\xe8res", footer_company_heading: "Notre soci\xe9t\xe9", footer_contact: "Contact", footer_copyright: "ŌURA, OURA, OURA RING et Ō sont des marques d'Oura\xa0Health\xa0Oy qui ne peuvent \xeatre utilis\xe9es sans autorisation.", footer_dataprotect_1: "Nous avons \xe0 cœur de prot\xe9ger vos donn\xe9es.", footer_dataprotect_privacy_policy: "Pour en savoir plus, consultez notre <PrivacyPolicyLink>politique de confidentialit\xe9</PrivacyPolicyLink>.", footer_developers: "D\xe9veloppeurs", footer_email: "Adresse e-mail", footer_email_input_heading: "Recevez des articles, conseils et offres d'Oura", footer_email_validation_error: "Veuillez saisir une adresse e-mail valide", footer_help: "Aide", footer_image_cta: "Commencez d\xe8s maintenant \xe0 prendre soin de vous", footer_ip_notice: "Avis de propri\xe9t\xe9 intellectuelle", footer_leadership: "Leadership", footer_legal_aria_label: "Informations l\xe9gales en pied de page", footer_medical_advisory_board: "Comit\xe9 m\xe9dical consultatif", footer_membership: "Abonnement", footer_my_account: "My Account", footer_newsletter_submit_label: "S'inscrire pour recevoir la newsletter", footer_oura_on_the_web: "Oura on the Web", footer_partner_heading: "Collaboration", footer_press: "Presse", footer_privacy_policy: "Politique de confidentialit\xe9", footer_security_center: "Centre de s\xe9curit\xe9", footer_sizing: "Choisir sa taille", footer_social_heading: "Suivez-nous sur", footer_social_icons_aria_label: "R\xe9seaux sociaux d’Oura", footer_support_heading: "Assistance", footer_terms_and_conditions: "Conditions d'utilisation", footer_thanks_for_subscribing: "Merci de votre inscription", for_business_link: "Pour les entreprises", gen4_is_here: "L'Oura Ring 4 est arriv\xe9", header_hamburger_close_sr_label: "Sortir de la navigation mobile", header_hamburger_close_sr_label_2024: "Sortir de la navigation du menu d'en-t\xeate", header_hamburger_open_sr_label: "Acc\xe9der \xe0 la navigation mobile", header_hamburger_open_sr_label_2024: "Acc\xe9der \xe0 la navigation du menu d'en-t\xeate", header_shop_now: "Acheter", header_skip_to_content: "Ignorer la navigation pour acc\xe9der au contenu principal", heart_health_link: "Sant\xe9 cardiaque", heart_rate_monitoring_link: "Surveillance de la fr\xe9quence cardiaque", how_it_works_link: "Fonctionnement", integrations_link: "Int\xe9grations", menu: "Menu", oura_home_link: "Page d'accueil d'Oura", oura_ring_4_link: "Oura Ring\xa04 <sup>Nouveaut\xe9</sup>", out_of_stock_tag: "En rupture de stock", partnerships_link: "Partenariats", pdp_selected_check_label: "Option choisie", pdp_slideshow_thumbnail_label: "Passer \xe0 la diapositive {index}", ring_gen_4: "Oura Ring 4", ring_gen3_on_sale: "L’anneau Oura Ring Gen3 est <sup>en promotion</sup>", sale: "Promotion", sale_link: "Soldes sur l'Oura Ring Gen3", science_and_research_link: "Science et recherche", shop: "Acheter", shop_rings: "Acheter des anneaux", sleep_and_rest_link: "Sommeil et repos", slider_item_aria_label: "diapositive {number} sur {maxNumber}", store_locator_distance: "\xc0 {distanceInMiles} miles", store_locator_item_button_label: "Afficher {displayName} {storeName} sur la carte", store_locator_item_link_label: "Afficher {displayName} {storeName} dans Google\xa0Maps (s'ouvre dans un nouvel onglet/une nouvelle fen\xeatre)", store_locator_location_closed: "Ferm\xe9", store_locator_location_open: "Ouvert jusqu'\xe0 {time}", store_locator_no_results: "Aucun r\xe9sultat n'a \xe9t\xe9 trouv\xe9.", store_locator_number_results: "{number} r\xe9sultats", store_locator_postal_code_pattern_error: "Veuillez saisir un code postal am\xe9ricain \xe0 cinq chiffres", store_locator_results_error: "Une erreur s'est produite pendant la recherche des magasins {storeName} \xe0 proximit\xe9. Veuillez actualiser la page et r\xe9essayer ou contacter le service client\xe8le.", stress_link: "Stress", the_pulse: "The Pulse", use_current_location_link: "Utiliser ma position actuelle", why_oura_link: "Pourquoi choisir Oura\xa0?", womens_health_link: "Sant\xe9 des femmes" }, it: { activity_and_movement_link: "Attivit\xe0 e movimento", address_form_additional_address: "Indicazioni aggiuntive di indirizzo", address_form_address: "Indirizzo", address_form_apt_suite: "N. appartamento, suite, piano", address_form_city: "Citt\xe0", address_form_city_town: "Citt\xe0/Comune", address_form_city_ward_town_village: "Citt\xe0/Quartiere/Frazione/Villaggio", address_form_country: "Paese", address_form_county: "Contea", address_form_email: "E-mail", address_form_emirate: "Emirato", address_form_fname: "Nome", address_form_lname: "Cognome", address_form_max: "Il campo non pu\xf2 contenere pi\xf9 di {number} caratteri", address_form_min: "Il campo deve contenere almeno {number} caratteri", address_form_phone: "Numero di telefono", address_form_postal: "Codice postale", address_form_postcode: "Codice postale", address_form_prefecture: "Prefettura", address_form_province: "Provincia", address_form_region: "Regione", address_form_required: "Il campo \xe8 obbligatorio", address_form_state: "Stato", address_form_state_province_region: "Stato/Regione/Provincia", address_form_state_territory: "Stato/Territorio", address_form_street_house_number: "Via e numero civico", address_form_suburb: "Quartiere/Citt\xe0", address_form_zip: "Codice postale", available_day: "Disponibile: {day}", best_buy_store_locator_legend_text: "Esperienza di acquisto in negozio con Best Buy", bfcm_2024_home_hero_title: "Al prezzo pi\xf9 basso <em>di sempre</em>", bfcm_2024_menu_card_dyn_price_description: "Fino a {amount} di sconto sul prezzo di vendita consigliato di<break>Oura Ring Gen3</break>.", carousel_current_slide_label: "(Diapositiva attuale)", carousel_live_region_text: "Elemento {activeIndex} di {slideCount}", carousel_next_slide_label: "Elemento successivo", carousel_page_dot_label: "Elemento {index}", carousel_previous_slide_label: "Elemento precedente", cart: "Carrello", cart_count_sr_label: "{count, plural, =0 {0 articoli} =1 {1 articolo} other {# articoli}} nel carrello", checkout_form_country: "Paese", checkout_form_emailformat: "Formato e-mail non corretto", checkout_form_emailformat_custom: "Formato e-mail non corretto", checkout_form_phoneinvalid: "Numero di telefono non valido o prefisso internazionale mancante", checkout_form_postal_code_pattern: "Il codice postale non pu\xf2 contenere pi\xf9 di 9 caratteri di lettere o numeri.", checkout_form_postal_code_string: "Il codice postale pu\xf2 contenere solo lettere, numeri, spazi e trattini", checkout_form_postal_required: "Il codice postale \xe8 obbligatorio", checkout_form_zip: "Codice postale", checkout_input_click_to_show_label: "Aggiungi {inputLabel}", checkout_pickup_details_plural_units_left: "Unit\xe0 disponibili: {quantity}", checkout_pickup_details_ready_in_time: "Pronto entro {time}", checkout_pickup_details_single_unit_left: "Unit\xe0 disponibili: 1", close: "Chiudi", comparison_slider_control_label: "Trascina o usa i tasti freccia sinistra e destra per confrontare i modelli", drop_down_extra_charger: "Caricabatterie extra", drop_down_gift_card: "Buoni regalo", drop_down_oura_ring: "Oura Ring", explore_how_it_works_link: "Scopri come funziona", explore_why_oura_link: "Perch\xe9 Oura", fcc_compliance_link: "FCC Compliance", flexible_spending_footer_link: "Piano di spesa flessibile", footer_about_us: "Chi siamo", footer_accessibility: "Accessibilit\xe0", footer_all_rights_reserved: "Ouraring Inc. | Tutti i diritti riservati", footer_blog_heading: "Blog", footer_careers: "Lavora con noi", footer_company_heading: "La nostra azienda", footer_contact: "Contatto", footer_copyright: "ŌURA e OURA e OURA RING e Ō sono marchi commerciali di Oura Health Oy e non possono essere utilizzati senza autorizzazione.", footer_dataprotect_1: "Per noi \xe8 importante proteggere i tuoi dati.", footer_dataprotect_privacy_policy: "Per saperne di pi\xf9, consulta la nostra <PrivacyPolicyLink>Informativa sulla privacy</PrivacyPolicyLink>.", footer_developers: "Sviluppatori", footer_email: "Indirizzo e-mail", footer_email_input_heading: "Ricevi articoli, consigli e offerte da Oura", footer_email_validation_error: "Inserisci un indirizzo e-mail valido", footer_help: "Aiuto", footer_image_cta: "Inizia oggi il tuo percorso verso il benessere", footer_ip_notice: "Avviso IP", footer_leadership: "Leadership", footer_legal_aria_label: "Pi\xe8 di pagina con info legali", footer_medical_advisory_board: "Comitato medico scientifico", footer_membership: "Abbonamento", footer_my_account: "My Account", footer_newsletter_submit_label: "inserisci e-mail per la newsletter", footer_oura_on_the_web: "Oura Web", footer_partner_heading: "Collabora con noi", footer_press: "Stampa", footer_privacy_policy: "Informativa sulla privacy", footer_security_center: "Centro sicurezza", footer_sizing: "Trova la tua misura", footer_social_heading: "Social media", footer_social_icons_aria_label: "Social media di Oura", footer_support_heading: "Assistenza", footer_terms_and_conditions: "Termini e condizioni", footer_thanks_for_subscribing: "Ti ringraziamo per la tua iscrizione", for_business_link: "Per le aziende", gen4_is_here: "Oura Ring 4 <em>is here</em>", header_hamburger_close_sr_label: "Chiudi navigazione mobile", header_hamburger_close_sr_label_2024: "Chiudi navigazione del menu di intestazione", header_hamburger_open_sr_label: "Apri navigazione mobile", header_hamburger_open_sr_label_2024: "Apri navigazione del menu di intestazione", header_shop_now: "Acquista ora", header_skip_to_content: "Salta la navigazione al contenuto principale", heart_health_link: "Salute del cuore", heart_rate_monitoring_link: "Monitoraggio della frequenza cardiaca", how_it_works_link: "Come funziona", integrations_link: "Integrazioni", menu: "Menu", oura_home_link: "Homepage di Oura", oura_ring_4_link: "Oura Ring 4 <sup>Novit\xe0</sup>", out_of_stock_tag: "Esaurito", partnerships_link: "Collaborazioni", pdp_selected_check_label: "Seleziona opzione", pdp_slideshow_thumbnail_label: "Vai alla slide {index}", ring_gen_4: "Oura Ring 4", ring_gen3_on_sale: "Oura Ring Gen3 <sup>in promozione</sup>", sale: "Promozione", sale_link: "Offerte per Oura Ring Gen3", science_and_research_link: "Scienza e ricerca", shop: "Acquista", shop_rings: "Acquista anelli", sleep_and_rest_link: "Sonno e riposo", slider_item_aria_label: "slide {number} di {maxNumber}", store_locator_distance: "a {distanceInMiles} miglia di distanza", store_locator_item_button_label: "Visualizza {displayName} {storeName} sulla mappa", store_locator_item_link_label: "Visualizza {displayName} {storeName} in Google Maps (si apre in una nuova scheda/finestra)", store_locator_location_closed: "Chiuso", store_locator_location_open: "Aperto fino alle {time}", store_locator_no_results: "Nessun risultato trovato.", store_locator_number_results: "{number} risultati", store_locator_postal_code_pattern_error: "Inserisci un codice postale degli Stati Uniti composto da cinque numeri", store_locator_results_error: "Si \xe8 verificato un errore nella ricerca di negozi {storeName} nelle vicinanze. Ricarica la pagina e riprova o contatta l'assistenza clienti.", stress_link: "Stress", the_pulse: "The Pulse", use_current_location_link: "Usa la mia posizione attuale", why_oura_link: "Perch\xe9 Oura", womens_health_link: "Salute femminile" }, ja: { activity_and_movement_link: "アクティビティと動き", address_form_additional_address: "追記欄", address_form_address: "住所", address_form_apt_suite: "建物名、マンション名、部屋番号", address_form_city: "市", address_form_city_town: "市/町", address_form_city_ward_town_village: "市区町村", address_form_country: "国", address_form_county: "県", address_form_email: "メールアドレス", address_form_emirate: "首長国", address_form_fname: "名", address_form_lname: "姓", address_form_max: "この項目は{number}文字以内で入力してください", address_form_min: "この項目は{number}文字以上で入力してください", address_form_phone: "電話番号", address_form_postal: "郵便番号", address_form_postcode: "郵便番号", address_form_prefecture: "都道府県", address_form_province: "州", address_form_region: "地方", address_form_required: "これは必須項目です", address_form_state: "州", address_form_state_province_region: "州/地方", address_form_state_territory: "州/特別地域", address_form_street_house_number: "通り名、家番号", address_form_suburb: "サバーブ/タウン", address_form_zip: "郵便番号", available_day: "受取可能日：{day}", best_buy_store_locator_legend_text: "Best Buy実店舗でのOuraエクスペリエンス", bfcm_2024_home_hero_title: "Oura<em>史上</em><break></break>最安価格。", bfcm_2024_menu_card_dyn_price_description: "Oura Ring Gen3が<break></break>希望小売価格から最大{amount}割引。", carousel_current_slide_label: "(現在のスライド)", carousel_live_region_text: "アイテム全{slideCount}個のうち{activeIndex}個目", carousel_next_slide_label: "次のアイテム", carousel_page_dot_label: "アイテム{index}", carousel_previous_slide_label: "前のアイテム", cart: "カート", cart_count_sr_label: "カート内に{count, plural, =0 {商品がありません} =1 {1点の商品があります} other {#点の商品があります}}", checkout_form_country: "国", checkout_form_emailformat: "メールアドレスの形式が正しくありません", checkout_form_emailformat_custom: "メールアドレスの形式が正しくありません", checkout_form_phoneinvalid: "電話番号が無効、または国コードが入力されていません", checkout_form_postal_code_pattern: "郵便番号に使用できるのは、9文字までの英数字です。", checkout_form_postal_code_string: "郵便番号に使用できるのは、文字、数字、スペース、ハイフンのみです。", checkout_form_postal_required: "郵便番号は必須項目です", checkout_form_zip: "郵便番号", checkout_input_click_to_show_label: "{inputLabel}の追加", checkout_pickup_details_plural_units_left: "残り{quantity}ユニットのみ", checkout_pickup_details_ready_in_time: "{time}でご用意できます", checkout_pickup_details_single_unit_left: "残り1ユニットのみ", close: "閉じる", comparison_slider_control_label: "ドラッグするか、左矢印キーと右矢印キーを使用して比較できます", drop_down_extra_charger: "充電器のみのご注文", drop_down_gift_card: "ギフトカード", drop_down_oura_ring: "Oura Ring", explore_how_it_works_link: "Ouraの仕組み", explore_why_oura_link: "Ouraが選ばれる理由", fcc_compliance_link: "FCC Compliance", flexible_spending_footer_link: "フレキシブル支出", footer_about_us: "会社概要", footer_accessibility: "アクセシビリティ", footer_all_rights_reserved: "Ouraring Inc. | All Rights Reserved（全ての権利を留保します）", footer_blog_heading: "ブログ", footer_careers: "キャリア", footer_company_heading: "会社情報", footer_contact: "お問い合わせ", footer_copyright: "ŌURA、OURA、OURA RING、Ōは、Oura Health Oyの商標であり、許可なく使用することはできません。", footer_dataprotect_1: "当社はお客様のプライバシーを尊重しています。", footer_dataprotect_privacy_policy: "詳しくは<PrivacyPolicyLink>プライバシーポリシー</PrivacyPolicyLink>をご覧ください。", footer_developers: "開発者向け", footer_email: "メールアドレス", footer_email_input_heading: "Ouraの記事、お役立ち情報、オファーをお届けします", footer_email_validation_error: "正しいメールアドレスを入力してください", footer_help: "ヘルプ", footer_image_cta: "健康の旅を今日から始めましょう", footer_ip_notice: "知的財産権", footer_leadership: "リーダーシップチーム", footer_legal_aria_label: "フッターの法的情報", footer_medical_advisory_board: "医療諮問委員会", footer_membership: "メンバーシップ", footer_my_account: "マイアカウント", footer_newsletter_submit_label: "メールアドレスを入力してニュースレターを購読", footer_oura_on_the_web: "Oura on the Web", footer_partner_heading: "パートナー向け", footer_press: "プレス", footer_privacy_policy: "プライバシーポリシー", footer_security_center: "セキュリティセンター", footer_sizing: "サイズ選び", footer_social_heading: "ソーシャルメディア", footer_social_icons_aria_label: "Ouraソーシャルメディア", footer_support_heading: "サポート", footer_terms_and_conditions: "利用規約", footer_thanks_for_subscribing: "ご購読ありがとうございます", for_business_link: "ビジネス向け", gen4_is_here: "Oura Ring 4が登場", header_hamburger_close_sr_label: "モバイルナビゲーションを閉じる", header_hamburger_close_sr_label_2024: "ヘッダーメニューナビゲーションを閉じる", header_hamburger_open_sr_label: "モバイル ナビゲーションを開く", header_hamburger_open_sr_label_2024: "ヘッダーメニューナビゲーションを開く", header_shop_now: "今すぐ購入", header_skip_to_content: "ナビゲーションをスキップし、メインコンテンツへ", heart_health_link: "心臓の健康", heart_rate_monitoring_link: "心拍数モニタリング", how_it_works_link: "Ouraの仕組み", integrations_link: "連携", menu: "メニュー", oura_home_link: "Ouraホーム", oura_ring_4_link: "Oura Ring 4<sup>新発売</sup>", out_of_stock_tag: "在庫切れ", partnerships_link: "パートナーシップ", pdp_selected_check_label: "オプションを選択してください", pdp_slideshow_thumbnail_label: "スライド{index}に移動", ring_gen_4: "Oura Ring 4", ring_gen3_on_sale: "Oura Ring Gen3<sup>セール中</sup>", sale: "セール", sale_link: "Oura Ring Gen3のセール", science_and_research_link: "科学と研究について", shop: "購入する", shop_rings: "リングを購入", sleep_and_rest_link: "睡眠と休息について", slider_item_aria_label: "スライド {number}/{maxNumber}枚目", store_locator_distance: "{distanceInMiles}マイル先", store_locator_item_button_label: "地図で{displayName} {storeName}を表示", store_locator_item_link_label: "Googleマップで{displayName} {storeName}を表示（新規タブ/ウィンドウで開きます）", store_locator_location_closed: "営業時間外", store_locator_location_open: "{time}まで営業", store_locator_no_results: "検索結果が見つかりません。", store_locator_number_results: "{number}件の結果", store_locator_postal_code_pattern_error: "米国の郵便番号を5桁で入力してください", store_locator_results_error: "付近の{storeName}店舗の検索中にエラーが発生しました。ページを更新して再度お試しいただくか、カスタマーサポートまでご連絡ください。", stress_link: "ストレス", the_pulse: "The Pulse", use_current_location_link: "現在の位置情報を使用する", why_oura_link: "Ouraを選ぶ理由", womens_health_link: "女性の健康" }, nb: { activity_and_movement_link: "Aktivitet og bevegelse", address_form_additional_address: "Tilleggsadresse", address_form_address: "Adresse", address_form_apt_suite: "Leil.nr., rom, etasje", address_form_city: "By", address_form_city_town: "By/sted", address_form_city_ward_town_village: "By/region/sted", address_form_country: "Land", address_form_county: "Fylke", address_form_email: "E-postadresse", address_form_emirate: "Emirat", address_form_fname: "Fornavn", address_form_lname: "Etternavn", address_form_max: "Dette feltet kan ikke best\xe5 av mer enn {number} tegn", address_form_min: "Dette feltet m\xe5 best\xe5 av minst {number} tegn", address_form_phone: "Telefonnummer", address_form_postal: "Postnummer", address_form_postcode: "Postnummer", address_form_prefecture: "Prefektur", address_form_province: "Provins", address_form_region: "Region", address_form_required: "Dette feltet er p\xe5krevd", address_form_state: "Stat/fylke", address_form_state_province_region: "Stat/fylke/provins/region", address_form_state_territory: "Stat/fylke/omr\xe5de", address_form_street_house_number: "Gate- og husnummer", address_form_suburb: "Forstad/by", address_form_zip: "Postnummer", available_day: "Tilgjengelig {day}", best_buy_store_locator_legend_text: "Oura-opplevelsen i Best Buy-butikker", bfcm_2024_home_hero_title: "V\xe5r laveste<break></break>pris <em>noensinne</em>", bfcm_2024_menu_card_dyn_price_description: "Opptil {amount} rabatt p\xe5 veil. pris p\xe5<break></break>Oura Ring Gen3.", carousel_current_slide_label: "(N\xe5v\xe6rende lysbilde)", carousel_live_region_text: "Element {activeIndex} av {slideCount}", carousel_next_slide_label: "Neste element", carousel_page_dot_label: "Element {index}", carousel_previous_slide_label: "Forrige element", cart: "Handlekurv", cart_count_sr_label: "Det {count, plural, =0 {are no items} =1 {is one item} other {are # items}} i handlekurven din", checkout_form_country: "Land", checkout_form_emailformat: "Feil e-postformat", checkout_form_emailformat_custom: "Feil e-postformat", checkout_form_phoneinvalid: "Telefonnummeret er ugyldig eller landkoden mangler", checkout_form_postal_code_pattern: "Postnummeret kan ikke inneholde mer enn 9 tegn i form av bokstaver eller tall.", checkout_form_postal_code_string: "Postnummeret kan kun inneholde bokstaver, tall, mellomrom og bindestreker", checkout_form_postal_required: "Postnummer er p\xe5krevd", checkout_form_zip: "Postnummer", checkout_input_click_to_show_label: "Legg til {inputLabel}", checkout_pickup_details_plural_units_left: "Bare {quantity} enheter igjen", checkout_pickup_details_ready_in_time: "Klar om {time}", checkout_pickup_details_single_unit_left: "Bare 1 enhet igjen", close: "Lukk", comparison_slider_control_label: "Dra eller bruk venstre og h\xf8yre piltaster for \xe5 sammenligne", drop_down_extra_charger: "Ekstra lader", drop_down_gift_card: "Gavekort", drop_down_oura_ring: "Oura Ring", explore_how_it_works_link: "Utforsk Slik fungerer det", explore_why_oura_link: "Utforsk Hvorfor Oura?", fcc_compliance_link: "I samsvar med FCC", flexible_spending_footer_link: "Fleksible muligheter", footer_about_us: "Om oss", footer_accessibility: "Tilgjengelighet", footer_all_rights_reserved: "Ouraring Inc. | Med enerett", footer_blog_heading: "Blogg", footer_careers: "Ledige stillinger", footer_company_heading: "Selskapet v\xe5rt", footer_contact: "Kontakt", footer_copyright: "ŌURA, OURA, OURA RING og Ō er varemerker tilh\xf8rende Oura Health Oy og kan ikke brukes uten tillatelse.", footer_dataprotect_1: "Vi er opptatt av \xe5 beskytte dataene dine.", footer_dataprotect_privacy_policy: "Les mer i v\xe5r <PrivacyPolicyLink>Personvernerkl\xe6ring</PrivacyPolicyLink>.", footer_developers: "Utviklere", footer_email: "E-postadresse", footer_email_input_heading: "F\xe5 artikler, tips og tilbud fra Oura", footer_email_validation_error: "Oppgi en gyldig e-postadresse", footer_help: "Hjelp", footer_image_cta: "Start din helsereise <em>i dag</em>", footer_ip_notice: "IP-varsel", footer_leadership: "Lederskap", footer_legal_aria_label: "Bunntekst juridisk", footer_medical_advisory_board: "Utvalg av medisinske r\xe5dgivere", footer_membership: "Medlemskap", footer_my_account: "Min konto", footer_newsletter_submit_label: "send inn e-post for nyhetsbrev", footer_oura_on_the_web: "Oura on the Web", footer_partner_heading: "Bli v\xe5r partner", footer_press: "Presse", footer_privacy_policy: "Personvernerkl\xe6ring", footer_security_center: "Sikkerhetssenter", footer_sizing: "St\xf8rrelser", footer_social_heading: "Sosiale medier", footer_social_icons_aria_label: "Oura i sosiale medier", footer_support_heading: "St\xf8tte", footer_terms_and_conditions: "Vilk\xe5r", footer_thanks_for_subscribing: "Takk for at du abonnerer", for_business_link: "For bedrifter", gen4_is_here: "Oura Ring 4<em>er her</em>", header_hamburger_close_sr_label: "Lukk mobilnavigasjon", header_hamburger_close_sr_label_2024: "Lukk navigasjonen i toppmenyen", header_hamburger_open_sr_label: "\xc5pne mobilnavigasjon", header_hamburger_open_sr_label_2024: "\xc5pne navigasjon i toppmenyen", header_shop_now: "Kj\xf8p n\xe5", header_skip_to_content: "Hopp til hovedinnhold", heart_health_link: "Hjertehelse", heart_rate_monitoring_link: "Overv\xe5king av puls", how_it_works_link: "Slik fungerer det", integrations_link: "Integrasjoner", menu: "Meny", oura_home_link: "Oura-startside", oura_ring_4_link: "Oura Ring 4 <sup>Ny</sup>", out_of_stock_tag: "Utsolgt fra lager", partnerships_link: "Partnere", pdp_selected_check_label: "Valgt alternativ", pdp_slideshow_thumbnail_label: "G\xe5 til lysbilde {index}", ring_gen_4: "Oura Ring 4", ring_gen3_on_sale: "Oura Ring Gen3 <sup>p\xe5 salg</sup>", sale: "Salg", sale_link: "Salg p\xe5 Oura Ring Gen3", science_and_research_link: "Vitenskap og forskning", shop: "Butikk", shop_rings: "Kj\xf8p ringer", sleep_and_rest_link: "S\xf8vn og hvile", slider_item_aria_label: "lysbilde {number} av {maxNumber}", store_locator_distance: "{distanceInMiles} miles unna", store_locator_item_button_label: "Vis {displayName} {storeName} p\xe5 kartet", store_locator_item_link_label: "Vis {displayName} {storeName} i Google Maps (\xe5pnes i ny fane\xa0/\xa0nytt vindu)", store_locator_location_closed: "Lukket", store_locator_location_open: "\xc5pent til {time}", store_locator_no_results: "Fant ingen resultater.", store_locator_number_results: "{number} resultater", store_locator_postal_code_pattern_error: "Oppgi et femsifret postnummer i USA", store_locator_results_error: "Det oppstod en feil med \xe5 finne {storeName} sine butikker i n\xe6rheten. Oppdater siden og pr\xf8v p\xe5 nytt, eller kontakt kundest\xf8tten.", stress_link: "Stress", the_pulse: "The Pulse", use_current_location_link: "Bruk min n\xe5v\xe6rende plassering", why_oura_link: "Hvorfor Oura?", womens_health_link: "Kvinnehelse" }, nl: { activity_and_movement_link: "Activiteit en beweging", address_form_additional_address: "Aanvullend adres", address_form_address: "Adres", address_form_apt_suite: "Flatnr., suite, verdieping", address_form_city: "Woonplaats", address_form_city_town: "Woonplaats", address_form_city_ward_town_village: "Woonplaats", address_form_country: "Land", address_form_county: "County", address_form_email: "E-mailadres", address_form_emirate: "Emiraat", address_form_fname: "Voornaam", address_form_lname: "Achternaam", address_form_max: "Dit veld mag maximaal {number} tekens bevatten", address_form_min: "Dit veld moet minimaal {number} tekens bevatten", address_form_phone: "Telefoonnummer", address_form_postal: "Postcode", address_form_postcode: "Postcode", address_form_prefecture: "Prefectuur", address_form_province: "Provincie", address_form_region: "Regio", address_form_required: "Dit is een vereist veld", address_form_state: "Provincie/staat", address_form_state_province_region: "Provincie/staat/regio", address_form_state_territory: "Provincie/staat/gebied", address_form_street_house_number: "Straat en huisnummer", address_form_suburb: "Voorstad/woonplaats", address_form_zip: "Postcode", available_day: "{day} beschikbaar", best_buy_store_locator_legend_text: "Oura uitproberen in een winkel van Best Buy", bfcm_2024_home_hero_title: "Onze laagste<break></break>prijs <em>ooit</em>", bfcm_2024_menu_card_dyn_price_description: "Tot wel {amount} korting op de adviesprijs van<break></break>de Oura Ring Gen3.", carousel_current_slide_label: "(Huidige slide)", carousel_live_region_text: "Item {activeIndex} van de {slideCount}", carousel_next_slide_label: "Volgend item", carousel_page_dot_label: "Item {index}", carousel_previous_slide_label: "Vorig item", cart: "Winkelwagen", cart_count_sr_label: "Er {count, plural, =0 {ligt niets} =1 {ligt \xe9\xe9n artikel} other {liggen # artikelen}} in je winkelwagen", checkout_form_country: "Land", checkout_form_emailformat: "Indeling e-mailadres onjuist", checkout_form_emailformat_custom: "Indeling e-mailadres onjuist", checkout_form_phoneinvalid: "Telefoonnummer is ongeldig of landcode ontbreekt", checkout_form_postal_code_pattern: "Postcode mag uit maximaal 9\xa0letters of cijfers bestaan.", checkout_form_postal_code_string: "Postcode mag alleen uit letters, cijfers, spaties en koppeltekens bestaan", checkout_form_postal_required: "Postcode is vereist", checkout_form_zip: "Postcode", checkout_input_click_to_show_label: "{inputLabel} toevoegen", checkout_pickup_details_plural_units_left: "Nog maar {quantity} exemplaren over", checkout_pickup_details_ready_in_time: "Klaar over {time}", checkout_pickup_details_single_unit_left: "Nog maar 1\xa0exemplaar over", close: "Sluiten", comparison_slider_control_label: "Sleep of gebruik de pijltjestoetsen om te vergelijken", drop_down_extra_charger: "Extra oplader", drop_down_gift_card: "Giftcard", drop_down_oura_ring: "Oura Ring", explore_how_it_works_link: "Ontdek hoe het werkt", explore_why_oura_link: "Waarom Oura?", fcc_compliance_link: "Naleving van FCC-voorschriften", flexible_spending_footer_link: "Flexible spending", footer_about_us: "Over ons", footer_accessibility: "Toegankelijkheid", footer_all_rights_reserved: "Ouraring Inc. | Alle rechten voorbehouden", footer_blog_heading: "Blog", footer_careers: "Werken bij", footer_company_heading: "Ons bedrijf", footer_contact: "Contactinformatie", footer_copyright: "ŌURA, OURA, OURA RING en Ō zijn handelsmerken van Oura Health Oy en mogen niet zonder toestemming worden gebruikt.", footer_dataprotect_1: "We vinden het belangrijk dat je gegevens veilig blijven.", footer_dataprotect_privacy_policy: "Lees meer in ons <PrivacyPolicyLink>privacybeleid</PrivacyPolicyLink>.", footer_developers: "Ontwikkelaars", footer_email: "E-mailadres", footer_email_input_heading: "Ontvang artikelen, tips en aanbiedingen van Oura", footer_email_validation_error: "Voer een geldig e-mailadres in", footer_help: "Help", footer_image_cta: "<em>Zet vandaag nog de eerste stap</em> op weg naar een gezonder leven", footer_ip_notice: "Kennisgeving IE", footer_leadership: "Directie", footer_legal_aria_label: "Voettekst juridisch", footer_medical_advisory_board: "Medische adviesraad", footer_membership: "Lidmaatschap", footer_my_account: "My Account", footer_newsletter_submit_label: "e-mailadres voor nieuwsbrief indienen", footer_oura_on_the_web: "Oura on the Web", footer_partner_heading: "Samenwerking", footer_press: "Pers", footer_privacy_policy: "Privacybeleid", footer_security_center: "Beveiligingscentrum", footer_sizing: "Maten", footer_social_heading: "Sociale media", footer_social_icons_aria_label: "Oura op sociale media", footer_support_heading: "Support", footer_terms_and_conditions: "Algemene voorwaarden", footer_thanks_for_subscribing: "Bedankt voor je aanmelding", for_business_link: "For Business", gen4_is_here: "De Oura Ring\xa04 <em>is er</em>", header_hamburger_close_sr_label: "Mobiele navigatie sluiten", header_hamburger_close_sr_label_2024: "Navigatie van menu bovenaan sluiten", header_hamburger_open_sr_label: "Mobiele navigatie openen", header_hamburger_open_sr_label_2024: "Navigatie van menu bovenaan openen", header_shop_now: "Shop nu", header_skip_to_content: "Navigatie naar hoofdcontent overslaan", heart_health_link: "Hartgezondheid", heart_rate_monitoring_link: "Hartslagmonitoring", how_it_works_link: "Zo werkt het", integrations_link: "Integraties", menu: "Menu", oura_home_link: "Oura-homepage", oura_ring_4_link: "Oura Ring\xa04 <sup>Nieuw</sup>", out_of_stock_tag: "Niet op voorraad", partnerships_link: "Partnerschappen", pdp_selected_check_label: "Gekozen optie", pdp_slideshow_thumbnail_label: "Naar slide {index}", ring_gen_4: "Oura Ring\xa04", ring_gen3_on_sale: "Oura Ring Gen3 <sup>in de aanbieding</sup>", sale: "Aanbiedingen", sale_link: "Oura Ring Gen3 in de aanbieding", science_and_research_link: "Wetenschap en onderzoek", shop: "Shop", shop_rings: "Shop ringen", sleep_and_rest_link: "Slaap en rust", slider_item_aria_label: "slide {number} van de {maxNumber}", store_locator_distance: "{distanceInMiles} mijl bij jou vandaan", store_locator_item_button_label: "{displayName} {storeName} op de kaart bekijken", store_locator_item_link_label: "{displayName} {storeName} op Google Maps bekijken (wordt in nieuw tabblad/venster geopend)", store_locator_location_closed: "Gesloten", store_locator_location_open: "Open tot {time}", store_locator_no_results: "Geen resultaten gevonden.", store_locator_number_results: "{number} resultaten", store_locator_postal_code_pattern_error: "Voer een vijfcijferige Amerikaanse postcode in", store_locator_results_error: "Er is een fout opgetreden bij het zoeken van {storeName}-vestigingen in de buurt. Vernieuw de pagina en probeer het opnieuw of neem contact op met de klantenondersteuning.", stress_link: "Stress", the_pulse: "The Pulse", use_current_location_link: "Mijn huidige locatie gebruiken", why_oura_link: "Waarom Oura", womens_health_link: "Gezondheid van vrouwen" }, sv: { activity_and_movement_link: "Aktivitet och r\xf6relse", address_form_additional_address: "Ytterligare adress", address_form_address: "Adress", address_form_apt_suite: "L\xe4genhetsnr, svit, v\xe5ning", address_form_city: "Ort", address_form_city_town: "Stad/ort", address_form_city_ward_town_village: "Stad/distrikt/ort/by", address_form_country: "Land", address_form_county: "L\xe4n", address_form_email: "E-postadress", address_form_emirate: "Emirat", address_form_fname: "F\xf6rnamn", address_form_lname: "Efternamn", address_form_max: "F\xe4ltet f\xe5r inte \xf6verstiga {number} tecken", address_form_min: "F\xe4ltet m\xe5ste inneh\xe5lla minst {number} tecken", address_form_phone: "Telefonnummer", address_form_postal: "Postnummer", address_form_postcode: "Postnummer", address_form_prefecture: "Prefektur", address_form_province: "Provins", address_form_region: "Region", address_form_required: "Det h\xe4r f\xe4ltet \xe4r obligatoriskt", address_form_state: "Delstat", address_form_state_province_region: "Delstat/provins/region", address_form_state_territory: "Delstat/omr\xe5de", address_form_street_house_number: "Gata och husnummer", address_form_suburb: "F\xf6rort/ort", address_form_zip: "Postnummer", available_day: "Tillg\xe4nglig {day}", best_buy_store_locator_legend_text: "Oura-upplevelsen i Best Buy-butiker", bfcm_2024_home_hero_title: "V\xe5rt l\xe4gsta pris<break></break> <em>n\xe5gonsin</em>", bfcm_2024_menu_card_dyn_price_description: "Upp till {amount} i rabatt p\xe5 tillverkarens rekommenderade pris f\xf6r<break></break>Oura Ring Gen3.", carousel_current_slide_label: "(Aktuell bild)", carousel_live_region_text: "Del {activeIndex} av {slideCount}", carousel_next_slide_label: "N\xe4sta del", carousel_page_dot_label: "Del {index}", carousel_previous_slide_label: "F\xf6reg\xe5ende del", cart: "Varukorg", cart_count_sr_label: "Du har {count, plural, =0 {inga varor} =1 {en vara} other {# varor}} i varukorgen", checkout_form_country: "Land", checkout_form_emailformat: "Felaktigt format p\xe5 e-postadressen", checkout_form_emailformat_custom: "Felaktigt format p\xe5 e-postadressen", checkout_form_phoneinvalid: "Telefonnumret \xe4r ogiltigt eller saknar landskod", checkout_form_postal_code_pattern: "Postnumret f\xe5r inneh\xe5lla max 9 tecken (bokst\xe4ver eller siffror).", checkout_form_postal_code_string: "Postnumret f\xe5r bara inneh\xe5lla bokst\xe4ver, siffror, mellanslag och bindestreck", checkout_form_postal_required: "Postnummer \xe4r obligatoriskt", checkout_form_zip: "Postnummer", checkout_input_click_to_show_label: "L\xe4gg till {inputLabel}", checkout_pickup_details_plural_units_left: "Bara {quantity} kvar i lager", checkout_pickup_details_ready_in_time: "Klar om {time}", checkout_pickup_details_single_unit_left: "Bara 1 kvar i lager", close: "St\xe4ng", comparison_slider_control_label: "Dra eller anv\xe4nd v\xe4nster och h\xf6ger piltangent f\xf6r att j\xe4mf\xf6ra", drop_down_extra_charger: "Extra laddare", drop_down_gift_card: "Presentkort", drop_down_oura_ring: "Oura Ring", explore_how_it_works_link: "Ta reda p\xe5 hur det funkar", explore_why_oura_link: "Utforska varf\xf6r Oura", fcc_compliance_link: "FCC-\xf6verensst\xe4mmelse", flexible_spending_footer_link: "Flexible spending", footer_about_us: "Om oss", footer_accessibility: "Tillg\xe4nglighet", footer_all_rights_reserved: "Ouraring Inc. | Alla r\xe4ttigheter f\xf6rbeh\xe5lls", footer_blog_heading: "Blogg", footer_careers: "Karri\xe4r", footer_company_heading: "V\xe5rt f\xf6retag", footer_contact: "Kontakt", footer_copyright: "ŌURA och OURA och OURA RING och Ō \xe4r varum\xe4rken som tillh\xf6r Oura Health Oy. De f\xe5r inte anv\xe4ndas utan till\xe5telse.", footer_dataprotect_1: "Det \xe4r viktigt f\xf6r oss att skydda dina uppgifter.", footer_dataprotect_privacy_policy: "L\xe4s mer i v\xe5r <PrivacyPolicyLink>integritetspolicy</PrivacyPolicyLink>.", footer_developers: "Utvecklare", footer_email: "E-postadress", footer_email_input_heading: "F\xe5 artiklar, tips och erbjudanden fr\xe5n Oura.", footer_email_validation_error: "Ange en giltig e-postadress", footer_help: "Hj\xe4lp", footer_image_cta: "B\xf6rja din h\xe4lsoresa<em>idag</em>", footer_ip_notice: "Immateriella r\xe4ttigheter", footer_leadership: "Ledning", footer_legal_aria_label: "Sidfot juridisk information", footer_medical_advisory_board: "Medicinsk r\xe5dgivningsgrupp", footer_membership: "Medlemskap", footer_my_account: "Mitt konto", footer_newsletter_submit_label: "registrera e-postadress f\xf6r nyhetsbrev", footer_oura_on_the_web: "Oura on the web", footer_partner_heading: "Samarbeta med oss", footer_press: "Press", footer_privacy_policy: "Integritetspolicy", footer_security_center: "S\xe4kerhetscenter", footer_sizing: "V\xe4lja storlek", footer_social_heading: "Sociala medier", footer_social_icons_aria_label: "Oura i sociala medier", footer_support_heading: "Support", footer_terms_and_conditions: "Villkor", footer_thanks_for_subscribing: "Tack f\xf6r att du prenumererar", for_business_link: "F\xf6r f\xf6retag", gen4_is_here: "Oura Ring 4<em>\xe4r h\xe4r</em>", header_hamburger_close_sr_label: "St\xe4ng mobilmeny", header_hamburger_close_sr_label_2024: "St\xe4ng meny i sidhuvud", header_hamburger_open_sr_label: "\xd6ppna mobilmeny", header_hamburger_open_sr_label_2024: "\xd6ppna meny i sidhuvud", header_shop_now: "K\xf6p nu", header_skip_to_content: "G\xe5 till huvudinneh\xe5ll", heart_health_link: "Hj\xe4rth\xe4lsa", heart_rate_monitoring_link: "Pulsm\xe4tning", how_it_works_link: "S\xe5 funkar det", integrations_link: "Integrationer", menu: "Meny", oura_home_link: "Ouras startsida", oura_ring_4_link: "Oura Ring 4 <sup>Nyhet</sup>", out_of_stock_tag: "Sluts\xe5ld", partnerships_link: "Samarbeten", pdp_selected_check_label: "Vald", pdp_slideshow_thumbnail_label: "G\xe5 till bild {index}", ring_gen_4: "Oura Ring 4", ring_gen3_on_sale: "Oura Ring Gen3 <sup>P\xe5 rea</sup>", sale: "Rea", sale_link: "Rea p\xe5 Oura Ring Gen3", science_and_research_link: "Vetenskap och forskning", shop: "K\xf6p", shop_rings: "K\xf6p ringar", sleep_and_rest_link: "S\xf6mn och vila", slider_item_aria_label: "bild {number} av {maxNumber}", store_locator_distance: "{distanceInMiles} miles bort", store_locator_item_button_label: "Visa {displayName} {storeName} p\xe5 kartan", store_locator_item_link_label: "Visa {displayName} {storeName} i Google Maps (\xf6ppnas i ny flik/nytt f\xf6nster)", store_locator_location_closed: "St\xe4ngt", store_locator_location_open: "\xd6ppet till kl. {time}", store_locator_no_results: "Inga resultat hittades.", store_locator_number_results: "{number} resultat", store_locator_postal_code_pattern_error: "Ange ett femsiffrigt amerikanskt postnummer", store_locator_results_error: "Det gick inte att hitta n\xe5gon {storeName} i n\xe4rheten. Uppdatera sidan och f\xf6rs\xf6k igen eller kontakta kundsupporten.", stress_link: "Stress", the_pulse: "The Pulse", use_current_location_link: "Anv\xe4nd min nuvarande plats", why_oura_link: "Varf\xf6r Oura", womens_health_link: "Kvinnors h\xe4lsa" } }; function r8() { return "u" > typeof window } G(); var r9 = (e = "en", r) => { let t = null != r ? r : e, i = { data: r7[t], locale: t }; if (!r && r8()) { let { language: e } = navigator, r = Object.keys(r7).find(r => e.startsWith(r)); r && (i.locale = r, i.data = r7[r]) } return i }; function r0({ defaultLocale: e = "en", locale: r, children: t, ...i }) { let { data: o, locale: a } = r9(e, r); return (0, l.jsx)(n.A, { defaultLocale: e, locale: a, messages: o, ...i, children: t }) } r9.displayName = "useLocaleData", r0.displayName = "LocaleProvider", G(); var te = (0, i.createContext)({ fallbackCurrencyCode: "USD", freeMessage: "" }); function tr({ children: e, country: r, fallbackCurrencyCode: t = "USD", fallbackLocale: n, freeMessage: s = "", locale: C, onI18nManagerError: u }) { let d = (0, i.useRef)(u), c = (0, i.useMemo)(() => new o.S({ country: r, fallbackLocale: n, locale: C, onError: d.current }), [r, n, C]), h = (0, i.useMemo)(() => ({ fallbackCurrencyCode: t, freeMessage: s }), [t, s]); return (0, l.jsx)(a.gJ.Provider, { value: c, children: (0, l.jsx)(te.Provider, { value: h, children: e }) }) } function tt({ children: e, currencyProps: r, intlProps: t, ImageComponent: i, LinkComponent: n }) { return (0, l.jsx)(r0, { ...t, children: (0, l.jsx)(r6, { ImageComponent: i, LinkComponent: n, children: (0, l.jsx)(tr, { ...r, children: (0, l.jsx)(r4, { children: (0, l.jsx)(r1, { children: e }) }) }) }) }) } tt.displayName = "UiProvider", G(); var ti = e => document.body.style.overflow = e, tl = (e = !0) => { let r = (0, i.useRef)(""); (0, i.useLayoutEffect)(() => (r.current || (r.current = window.getComputedStyle(document.body).overflow), ti(e ? "hidden" : r.current), () => ti(r.current)), [e]) }; tl.displayName = "useLockBodyScroll", G(), G(); var tn = () => { let e = (0, i.useRef)(!1); return (0, i.useEffect)(() => (e.current = !0, () => { e.current = !1 }), []), (0, i.useCallback)(() => e.current, []) }; tn.displayName = "useIsMounted"; var to = { bottom: 0, height: 0, left: 0, right: 0, top: 0, width: 0, x: 0, y: 0 }, ta = ({ onResize: e, ref: r }) => { let t = r8(), l = tn(), [n, o] = (0, i.useState)(to), a = (0, i.useRef)(e); return (0, i.useEffect)(() => { if (!r.current || !t) return; let e = new window.ResizeObserver(e => { var r; let t = e[0].contentRect; l() && o(t), null == (r = a.current) || r.call(a, t) }); return e.observe(r.current), () => { e.disconnect() } }, [r, l, t]), n }; function ts(e) { return typeof window > "u" ? null : window.matchMedia(e) } ta.displayName = "useMeasure", G(); var tC = e => { var r; let [t, l] = (0, i.useState)(null == (r = ts(e)) ? void 0 : r.matches); return (0, i.useEffect)(() => { let r = ts(e); if (!r || (r.matches !== t && l(r.matches), !r.addEventListener)) return; let i = () => { l(r.matches) }; return r.addEventListener("change", i), () => { r.removeEventListener("change", i) } }, [t, e]), t }; tC.displayName = "useMediaQuery", G(), G(); var tu = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 20, viewBox: "0 0 16 20", width: 16, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M4.45095 5.5117C4.73428 3.67008 6.05393 1.87404 8.09191 1.52088C7.87 3.93585 9.16508 6.22092 10.9827 7.70813C11.7822 8.36225 12.5567 9.12287 13.1274 9.94975C13.6986 10.7773 14.0416 11.6357 14.0416 12.5C14.0416 14.4344 13.3821 15.9313 12.3284 16.9455C11.7028 17.5476 10.9213 17.9959 10.0213 18.2617C10.3223 17.8622 10.4999 17.3306 10.4999 16.6667C10.4999 14.6204 9.66248 12.5742 8.67308 11.4419C8.43837 11.1733 8.05572 11.3873 8.03086 11.7431C7.94516 12.9702 7.30981 13.6392 6.6972 14.2842C6.08728 14.9263 5.49989 15.5448 5.49989 16.6667C5.49989 17.2843 5.72388 17.8497 6.09505 18.2859C3.77124 17.6208 2.36883 15.7411 1.94609 13.6274C1.55658 11.6799 1.95462 10.1547 2.30891 9.44618C2.46328 9.13744 2.33815 8.76202 2.02941 8.60765C1.72068 8.45328 1.34525 8.57842 1.19088 8.88715C0.711819 9.84525 0.276544 11.6535 0.720367 13.8726C1.34807 17.0111 3.85096 19.7917 7.9999 19.7917C10.0418 19.7917 11.8718 19.12 13.1952 17.8461C14.5224 16.5687 15.2916 14.7323 15.2916 12.5C15.2916 11.2998 14.8162 10.1961 14.1562 9.23973C13.4957 8.28274 12.6263 7.4378 11.7743 6.74069C10.0428 5.32399 8.99677 3.20252 9.40747 1.14904C9.50396 0.6666 9.13159 0.192803 8.61205 0.212508C5.48704 0.331034 3.58739 2.90426 3.21549 5.32163C2.98407 6.82588 3.3324 8.09555 3.73237 8.9812C3.93249 9.42431 4.14729 9.77555 4.31407 10.0185C4.39762 10.1401 4.46958 10.2353 4.52233 10.302C4.54872 10.3353 4.57035 10.3616 4.58628 10.3806L4.6058 10.4035L4.61215 10.4107L4.61443 10.4133L4.61534 10.4144C4.61534 10.4144 4.6161 10.4152 5.08323 10L4.6161 10.4152C4.84543 10.6732 5.24047 10.6965 5.49846 10.4671C5.75591 10.2383 5.77959 9.8444 5.55178 9.58638L5.55068 9.58513L5.54295 9.57601C5.53466 9.56616 5.5209 9.5495 5.50253 9.52629C5.46576 9.47983 5.41077 9.40737 5.34457 9.31096C5.21187 9.11767 5.03605 8.83089 4.87158 8.46671C4.54238 7.73778 4.26571 6.71579 4.45095 5.5117Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var td = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 32, viewBox: "0 0 32 32", width: 32, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("rect", { fill: "currentColor", height: 2.66667, rx: 1.33333, width: 2.66667, x: 2.66699, y: 18.6667 }), (0, l.jsx)("rect", { fill: "currentColor", height: 2.66667, rx: 1.33333, width: 2.66667, x: 2.66699, y: 2.66675 }), (0, l.jsx)("rect", { fill: "currentColor", height: 2.66667, rx: 1.33333, width: 2.66667, x: 2.66699, y: 26.6667 }), (0, l.jsx)("rect", { fill: "currentColor", height: 2.66667, rx: 1.33333, width: 2.66667, x: 8, y: 10.6667 }), (0, l.jsx)("rect", { fill: "currentColor", height: 2.66667, rx: 1.33333, width: 2.66667, x: 8, y: 26.6667 }), (0, l.jsx)("rect", { fill: "currentColor", height: 2.66667, rx: 1.33333, width: 2.66667, x: 13.333, y: 10.6667 }), (0, l.jsx)("rect", { fill: "currentColor", height: 2.66667, rx: 1.33333, width: 18.6667, x: 8, y: 18.6667 }), (0, l.jsx)("rect", { fill: "currentColor", height: 2.66667, rx: 1.33333, width: 16, x: 8, y: 2.66675 }), (0, l.jsx)("rect", { fill: "currentColor", height: 2.66667, rx: 1.33333, width: 16, x: 13.333, y: 26.6667 }), (0, l.jsx)("rect", { fill: "currentColor", height: 2.66667, rx: 1.33333, width: 10.6667, x: 18.667, y: 10.6667 })] }) }; G(); var tc = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 33, viewBox: "0 0 32 33", width: 32, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("circle", { cx: 16, cy: 16.5, r: 15.5, stroke: "#4A4741", strokeOpacity: .3 }), (0, l.jsxs)("g", { clipPath: "url(#a)", children: [(0, l.jsx)("path", { d: "M19.7812 13.5625C19.7812 13.1828 19.4734 12.875 19.0937 12.875C18.7141 12.875 18.4063 13.1828 18.4063 13.5625V14.9375C18.4063 17 17.375 18.375 15.3125 18.375H14.625C14.2453 18.375 13.9375 18.6828 13.9375 19.0625C13.9375 19.4422 14.2453 19.75 14.625 19.75H15.3125C17.375 19.75 18.4062 21.125 18.4062 23.1875V24.5625C18.4062 24.9422 18.7141 25.25 19.0937 25.25C19.4734 25.25 19.7812 24.9422 19.7812 24.5625V23.1875C19.7812 21.125 20.8125 19.75 22.875 19.75H23.5625C23.9422 19.75 24.25 19.4422 24.25 19.0625C24.25 18.6828 23.9422 18.375 23.5625 18.375H22.875C20.8125 18.375 19.7812 17 19.7812 14.9375V13.5625Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M11.875 9.4375C11.875 9.0578 11.5672 8.75 11.1875 8.75C10.8078 8.75 10.5 9.0578 10.5 9.4375V10.125C10.5 11.5 9.8125 12.1875 8.4375 12.1875C8.0578 12.1875 7.75 12.4953 7.75 12.875C7.75 13.2547 8.0578 13.5625 8.4375 13.5625C9.8125 13.5625 10.5 14.25 10.5 15.625V16.3125C10.5 16.6922 10.8078 17 11.1875 17C11.5672 17 11.875 16.6922 11.875 16.3125V15.625C11.875 14.25 12.5625 13.5625 13.9375 13.5625C14.3172 13.5625 14.625 13.2547 14.625 12.875C14.625 12.4953 14.3172 12.1875 13.9375 12.1875C12.5625 12.1875 11.875 11.5 11.875 10.125V9.4375Z", fill: "currentColor" })] }), (0, l.jsx)("defs", { children: (0, l.jsx)("clipPath", { id: "a", children: (0, l.jsx)("rect", { fill: "white", height: 18, transform: "translate(7 8)", width: 18 }) }) })] }) }; G(); var th = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, viewBox: "0 0 96 39", x: "0px", xmlSpace: "preserve", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", y: "0px", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M4.5,33.5c0-1.8,2-2.4,5.6-2.8c0,2.4-1.6,4.3-3.9,4.3C5.1,35,4.5,34.4,4.5,33.5 M0.6,24.1l1.5,3.1 C3.4,26,5.5,25,7.4,25c1.8,0,2.8,0.6,2.8,1.8c0,0.8-0.7,1.2-1.9,1.4C3.7,28.8,0,30.1,0,33.7c0,2.9,2,4.6,5.2,4.6 c2.3,0,4.3-1.3,5.2-2.9v2.5h4.2V27.6c0-4.2-3-6-6.8-6C5.3,21.6,2.3,22.8,0.6,24.1", fill: "#090B0C" }), (0, l.jsx)("path", { d: "M54.5,24.7V22h-4.2v15.8h4.5v-7.6c0-3.6,2.2-4.7,3.7-4.7c0.6,0,1.4,0.2,1.9,0.6l0.8-4.2 c-0.7-0.3-1.4-0.4-2-0.4C56.9,21.6,55.4,22.6,54.5,24.7", fill: "#090B0C" }), (0, l.jsx)("path", { d: "M77.1,24.4c-0.9-1.8-2.7-2.8-4.9-2.8c-2.4,0-4,1.3-4.8,2.9V22h-4.4v15.8h4.5v-8.1c0-2.9,1.5-4.3,3-4.3 c1.3,0,2.5,0.8,2.5,3v9.5h4.5v-8.1c0-3,1.5-4.3,3-4.3c1.2,0,2.5,0.9,2.5,3v9.5h4.5V26.9c0-3.6-2.4-5.3-5.3-5.3 C79.8,21.6,78,23,77.1,24.4", fill: "#090B0C" }), (0, l.jsx)("path", { d: "M30.7,20.9V22h-6.9v-1.6c0-2.1,1.2-2.7,2.2-2.7c0.6,0,1.4,0.1,2,0.5l1.4-3.2c-0.8-0.5-2.2-0.9-4-0.9 c-2.9,0-6.2,1.6-6.2,6.7V22h-2.6v3.5h2.6v12.3h4.5V25.5h6.9v12.3h4.5V25.5h4.1V22h-4.1v-1.6c0-2.1,1.2-2.7,2.2-2.7 c1.1,0,2,0.5,2,0.5l1.4-3.2c0,0-1.4-0.9-4-0.9C33.9,14.1,30.7,15.8,30.7,20.9", fill: "#090B0C" }), (0, l.jsx)("rect", { className: "st5", fill: "#090B0C", height: 15.8, width: 4.5, x: 42, y: 22 }), (0, l.jsx)("path", { d: "M42.1,19.4h4.4c2.6-8.1,11.3-15.2,21.7-15.2c12.7,0,23.6,9.6,23.6,24.6c0,3.4-0.4,6.4-1.3,9.1h4.3l0-0.1 c0.7-2.8,1.1-5.8,1.1-8.9C96,12,83.8,0,68.3,0C56.1,0,45.2,8.5,42.1,19.4", fill: "#329DD8" })] }) }; G(), G(), G(), G(), G(), G(), G(), G(); var tf = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 6, viewBox: "0 0 24 6", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M3.06297 0.130859L0.473877 5.86045H3.57339L3.95764 4.94691H4.83595L5.2202 5.86045H8.63189V5.16321L8.93589 5.86045H10.7007L11.0047 5.14847V5.86045H18.1001L18.9629 4.97064L19.7707 5.86045L23.4151 5.86782L20.8178 3.01165L23.4151 0.130859H19.8272L18.9874 1.00423L18.205 0.130859H10.4861L9.82328 1.60971L9.14491 0.130859H6.05187V0.804374L5.70779 0.130859H3.06297ZM13.6588 0.94514H17.7333L18.9795 2.29127L20.2659 0.94514H21.5121L19.6186 3.01151L21.5121 5.05407H20.2093L18.9631 3.69231L17.6702 5.05407H13.6588V0.94514ZM14.6647 2.54686V1.79633V1.79561H17.207L18.3164 2.9959L17.1579 4.20274H14.6647V3.38338H16.8875V2.54686H14.6647ZM3.66283 0.94514H5.17367L6.89102 4.83041V0.94514H8.5461L9.87255 3.73086L11.095 0.94514H12.7418V5.0565H11.7398L11.7316 1.83486L10.2707 5.0565H9.37435L7.90529 1.83486V5.0565H5.84386L5.45305 4.13478H3.34166L2.95166 5.05569H1.84717L3.66283 0.94514ZM3.70224 3.28246L4.39786 1.64051L5.09267 3.28246H3.70224Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var t_ = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 20, viewBox: "0 0 20 20", width: 20, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsxs)("g", { clipPath: "url(#android-logo-a)", children: [(0, l.jsx)("path", { d: "M2.77644 6.4783C2.43184 6.4783 2.13946 6.59847 1.89912 6.83881C1.65878 7.07915 1.53857 7.36756 1.53857 7.70416V12.8724C1.53857 13.2174 1.65874 13.5096 1.89912 13.7499C2.13946 13.9903 2.43184 14.1105 2.77644 14.1105C3.12079 14.1105 3.4114 13.9903 3.64801 13.7499C3.88416 13.5096 4.00256 13.2174 4.00256 12.8724V7.70416C4.00256 7.36752 3.88239 7.07915 3.64201 6.83881C3.40163 6.59847 3.11305 6.4783 2.77644 6.4783Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M12.7285 1.83878L13.5819 0.264526C13.6379 0.160304 13.618 0.0803828 13.522 0.0241852C13.4177 -0.0242736 13.3376 0.000281275 13.2816 0.0961138L12.4163 1.68296C11.6549 1.34631 10.8496 1.17768 10.0003 1.17768C9.15094 1.17768 8.34555 1.34635 7.58442 1.68296L6.71907 0.0961138C6.66284 0.000281275 6.58274 -0.0240566 6.47873 0.0241852C6.38247 0.080636 6.36254 0.160304 6.41877 0.264526L7.27219 1.83878C6.40684 2.28008 5.71764 2.89468 5.20485 3.6839C4.69205 4.47356 4.43555 5.33649 4.43555 6.2742H15.5531C15.5531 5.33671 15.2965 4.47374 14.7838 3.6839C14.2709 2.89468 13.5857 2.28008 12.7285 1.83878ZM7.79468 4.12857C7.70239 4.22107 7.59216 4.26711 7.46404 4.26711C7.33566 4.26711 7.22767 4.22107 7.13958 4.12857C7.05149 4.0365 7.00744 3.9267 7.00744 3.79814C7.00744 3.67002 7.05149 3.56001 7.13958 3.46772C7.22767 3.37565 7.33591 3.32961 7.46404 3.32961C7.59216 3.32961 7.70239 3.37565 7.79468 3.46772C7.88675 3.56023 7.933 3.67002 7.933 3.79814C7.93275 3.92649 7.88653 4.0365 7.79468 4.12857ZM12.8606 4.12857C12.7724 4.22107 12.6641 4.26711 12.5362 4.26711C12.4078 4.26711 12.2976 4.22107 12.2055 4.12857C12.1133 4.0365 12.0672 3.9267 12.0672 3.79814C12.0672 3.67002 12.1133 3.56001 12.2055 3.46772C12.2976 3.37565 12.4078 3.32961 12.5362 3.32961C12.6643 3.32961 12.7723 3.37565 12.8606 3.46772C12.9488 3.56023 12.9928 3.67002 12.9928 3.79814C12.9928 3.92649 12.9488 4.0365 12.8606 4.12857Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M4.4834 14.7113C4.4834 15.0803 4.61152 15.3926 4.86781 15.6489C5.12432 15.9051 5.43662 16.0333 5.80531 16.0333H6.69478L6.70697 18.7619C6.70697 19.1065 6.82714 19.3991 7.06748 19.6395C7.30782 19.8798 7.59644 20 7.93283 20C8.27721 20 8.56977 19.8798 8.81015 19.6395C9.05052 19.3991 9.17069 19.1065 9.17069 18.7619V16.0335H10.8293V18.7619C10.8293 19.1065 10.9494 19.3991 11.1898 19.6395C11.4302 19.8798 11.7225 20 12.0671 20C12.4115 20 12.7041 19.8798 12.9444 19.6395C13.1848 19.3991 13.3049 19.1065 13.3049 18.7619V16.0335H14.2064C14.5669 16.0335 14.8752 15.9054 15.132 15.6491C15.3882 15.3928 15.5164 15.0805 15.5164 14.7116V6.70645H4.4834V14.7113Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M17.2235 6.4783C16.8868 6.4783 16.5984 6.5967 16.3581 6.83285C16.1177 7.06943 15.9976 7.36003 15.9976 7.70416V12.8724C15.9976 13.2174 16.1177 13.5096 16.3581 13.7499C16.5984 13.9903 16.887 14.1105 17.2235 14.1105C17.5678 14.1105 17.8604 13.9903 18.1008 13.7499C18.3412 13.5096 18.4613 13.2174 18.4613 12.8724V7.70416C18.4613 7.36 18.3412 7.06943 18.1008 6.83285C17.8604 6.5967 17.5678 6.4783 17.2235 6.4783Z", fill: "currentColor" })] }), (0, l.jsx)("defs", { children: (0, l.jsx)("clipPath", { id: "android-logo-a", children: (0, l.jsx)("rect", { fill: "white", height: 20, width: 20 }) }) })] }) }; G(); var tp = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 40, viewBox: "0 0 215 40", width: 215, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M33.9061 32.905L29.1956 21.0632C31.5181 18.6344 32.9574 15.3468 32.9574 11.7239C32.9574 8.83711 32.0415 6.15472 30.4877 3.95483C35.5499 7.4632 38.8783 13.3187 38.8783 19.9347C38.8783 24.9151 36.9974 29.4621 33.9061 32.905Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M6.84497 34.7042L11.5228 22.658C13.7472 24.2772 16.4869 25.234 19.4473 25.234C22.3668 25.234 25.0738 24.3017 27.2818 22.7234L32.0414 34.7124C28.6476 37.6074 24.2478 39.3656 19.4473 39.3656C14.6386 39.3656 10.2388 37.6074 6.84497 34.7042Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M0.0163574 19.9347C0.0163574 13.3268 3.33664 7.47956 8.39065 3.97119C6.845 6.17108 5.92907 8.84529 5.92907 11.7321C5.92907 15.3059 7.32751 18.5608 9.60917 20.9815L4.98041 32.8968C1.8973 29.4457 0.0163574 24.9069 0.0163574 19.9347Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M21.0747 0.618164C26.4967 1.41143 30.6675 6.08926 30.6675 11.7239C30.6675 14.3491 29.7598 16.7616 28.2468 18.6752L21.0747 0.618164Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M19.3001 2.63818L26.4068 20.5235C24.4931 22.0446 22.0724 22.9524 19.4473 22.9524C16.7731 22.9524 14.3197 22.0119 12.3896 20.4417L19.3001 2.63818Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M17.4929 0.675293L10.5497 18.5524C9.09404 16.6551 8.21899 14.2917 8.21899 11.7238C8.21899 6.19545 12.2344 1.59941 17.4929 0.675293Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M129.139 27.7036C127.193 29.7399 124.747 30.754 121.787 30.754C118.826 30.754 116.373 29.7399 114.435 27.7036C112.488 25.6755 111.515 23.0912 111.515 19.9754C111.515 16.8514 112.488 14.2753 114.435 12.2308C116.373 10.1945 118.826 9.17222 121.787 9.17222C124.764 9.17222 127.217 10.1863 129.155 12.2226C131.085 14.2508 132.058 16.8432 132.058 19.9754C132.05 23.0912 131.077 25.6673 129.139 27.7036ZM121.779 6.07275C117.845 6.07275 114.59 7.38124 112.014 9.9982C109.438 12.6152 108.146 15.9436 108.146 19.9754C108.146 23.9908 109.43 27.3111 111.998 29.928C114.566 32.545 117.829 33.8535 121.779 33.8535C125.745 33.8535 129.016 32.545 131.609 29.928C134.193 27.3111 135.485 23.9908 135.485 19.9754C135.485 15.96 134.185 12.6397 131.592 10.0146C129 7.38124 125.729 6.07275 121.779 6.07275ZM61.7439 11.184L55.9702 22.9276H67.5748L61.7439 11.184ZM47.4651 33.1502L60.3864 6.64521H63.1096L76.1781 33.1502H72.6207L69.0387 26.0189H54.4655L50.9816 33.1502H47.4651ZM96.0997 18.4624C97.7599 18.4624 99.0111 18.0944 99.8616 17.3584C100.712 16.6224 101.137 15.5429 101.137 14.1199C101.137 12.7297 100.712 11.642 99.8616 10.8651C99.0111 10.0882 97.8089 9.70379 96.2633 9.70379H84.4788V18.4706H96.0997V18.4624ZM96.3205 6.64521C98.8803 6.64521 100.9 7.2831 102.372 8.56705C103.844 9.851 104.58 11.6011 104.58 13.8255C104.58 16.1317 103.869 17.9963 102.446 19.4193C101.023 20.8422 99.1256 21.5537 96.754 21.5537H84.4788V33.1502H81.2076V6.64521H96.3205ZM140.506 6.64521H143.778V30.0998H160.992V33.1502H140.506V6.64521ZM168.655 6.64521H165.384V33.1502H185.87V30.0998H168.647V6.64521H168.655ZM201.228 30.754C204.189 30.754 206.642 29.7399 208.58 27.7036C210.518 25.6755 211.492 23.0912 211.492 19.9754C211.492 16.835 210.527 14.2508 208.588 12.2226C206.658 10.1863 204.197 9.17222 201.22 9.17222C198.259 9.17222 195.806 10.1945 193.868 12.2308C191.922 14.2753 190.957 16.8514 190.957 19.9754C190.957 23.0994 191.922 25.6755 193.868 27.7036C195.814 29.7317 198.268 30.754 201.228 30.754ZM201.228 6.07275C205.178 6.07275 208.449 7.38941 211.042 10.0146C213.634 12.6397 214.934 15.96 214.934 19.9754C214.934 23.9908 213.642 27.3111 211.05 29.928C208.466 32.545 205.186 33.8535 201.228 33.8535C197.278 33.8535 194.023 32.545 191.447 29.928C188.879 27.3111 187.587 23.9908 187.587 19.9754C187.587 15.9436 188.879 12.6152 191.455 9.9982C194.04 7.38124 197.294 6.07275 201.228 6.07275Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(), G(); var tm = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 44, viewBox: "0 0 36 44", width: 36, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M34.8503 15.0011C34.5938 15.1991 30.0656 17.7382 30.0656 23.3839C30.0656 29.9142 35.8275 32.2244 36 32.2816C35.9735 32.4224 35.0846 35.4455 32.962 38.5259C31.0694 41.2365 29.0927 43.9428 26.0857 43.9428C23.0787 43.9428 22.3049 42.2046 18.8336 42.2046C15.4507 42.2046 14.2479 44 11.4974 44C8.74684 44 6.82766 41.4917 4.62105 38.4114C2.0651 34.7943 0 29.1749 0 23.8416C0 15.2871 5.58949 10.7503 11.0905 10.7503C14.0135 10.7503 16.4501 12.6601 18.2852 12.6601C20.0319 12.6601 22.7559 10.6359 26.0813 10.6359C27.3416 10.6359 31.8698 10.7503 34.8503 15.0011ZM24.5026 7.0143C25.8779 5.39054 26.8508 3.13751 26.8508 0.884488C26.8508 0.572057 26.8242 0.255226 26.7667 0C24.5292 0.0836084 21.8671 1.48295 20.2619 3.33553C19.0016 4.76128 17.8253 7.0143 17.8253 9.29813C17.8253 9.64136 17.8828 9.9846 17.9093 10.0946C18.0509 10.121 18.2808 10.1518 18.5107 10.1518C20.5184 10.1518 23.0434 8.81408 24.5026 7.0143Z", fill: "currentColor" })] }) }; G(); var tx = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, baseProfile: "tiny", viewBox: "0 0 512 210.2", x: "0px", xmlSpace: "preserve", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", y: "0px", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M93.6,27.1C87.6,34.2,78,39.8,68.4,39c-1.2-9.6,3.5-19.8,9-26.1c6-7.3,16.5-12.5,25-12.9 C103.4,10,99.5,19.8,93.6,27.1 M102.3,40.9c-13.9-0.8-25.8,7.9-32.4,7.9c-6.7,0-16.8-7.5-27.8-7.3c-14.3,0.2-27.6,8.3-34.9,21.2 c-15,25.8-3.9,64,10.6,85c7.1,10.4,15.6,21.8,26.8,21.4c10.6-0.4,14.8-6.9,27.6-6.9c12.9,0,16.6,6.9,27.8,6.7 c11.6-0.2,18.9-10.4,26-20.8c8.1-11.8,11.4-23.3,11.6-23.9c-0.2-0.2-22.4-8.7-22.6-34.3c-0.2-21.4,17.5-31.6,18.3-32.2 C123.3,42.9,107.7,41.3,102.3,40.9 M182.6,11.9v155.9h24.2v-53.3h33.5c30.6,0,52.1-21,52.1-51.4c0-30.4-21.1-51.2-51.3-51.2H182.6z  M206.8,32.3h27.9c21,0,33,11.2,33,30.9c0,19.7-12,31-33.1,31h-27.8V32.3z M336.6,169c15.2,0,29.3-7.7,35.7-19.9h0.5v18.7h22.4V90.2 c0-22.5-18-37-45.7-37c-25.7,0-44.7,14.7-45.4,34.9h21.8c1.8-9.6,10.7-15.9,22.9-15.9c14.8,0,23.1,6.9,23.1,19.6v8.6l-30.2,1.8 c-28.1,1.7-43.3,13.2-43.3,33.2C298.4,155.6,314.1,169,336.6,169z M343.1,150.5c-12.9,0-21.1-6.2-21.1-15.7c0-9.8,7.9-15.5,23-16.4 l26.9-1.7v8.8C371.9,140.1,359.5,150.5,343.1,150.5z M425.1,210.2c23.6,0,34.7-9,44.4-36.3L512,54.7h-24.6l-28.5,92.1h-0.5 l-28.5-92.1h-25.3l41,113.5l-2.2,6.9c-3.7,11.7-9.7,16.2-20.4,16.2c-1.9,0-5.6-0.2-7.1-0.4v18.7C417.3,210,423.3,210.2,425.1,210.2z " })] }) }; G(); var tg = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 32, viewBox: "0 0 32 32", width: 32, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M9.33333 6.66675C8.59695 6.66675 8 7.2637 8 8.00008C8 8.73646 8.59695 9.33341 9.33333 9.33341H12C12.7364 9.33341 13.3333 8.73646 13.3333 8.00008C13.3333 7.2637 12.7364 6.66675 12 6.66675H9.33333ZM8 13.3334C8 12.597 8.59695 12.0001 9.33333 12.0001H12C12.7364 12.0001 13.3333 12.597 13.3333 13.3334C13.3333 14.0698 12.7364 14.6667 12 14.6667H9.33333C8.59695 14.6667 8 14.0698 8 13.3334ZM17.3333 6.66675C16.597 6.66675 16 7.2637 16 8.00008V13.3334C16 14.0698 16.597 14.6667 17.3333 14.6667H22.6667C23.403 14.6667 24 14.0698 24 13.3334V8.00008C24 7.2637 23.403 6.66675 22.6667 6.66675H17.3333ZM8 18.6667C8 17.9304 8.59695 17.3334 9.33333 17.3334H22.6667C23.403 17.3334 24 17.9304 24 18.6667C24 19.4031 23.403 20.0001 22.6667 20.0001H9.33333C8.59695 20.0001 8 19.4031 8 18.6667ZM9.33333 22.6667C8.59695 22.6667 8 23.2637 8 24.0001C8 24.7365 8.59695 25.3334 9.33333 25.3334H18.6667C19.403 25.3334 20 24.7365 20 24.0001C20 23.2637 19.403 22.6667 18.6667 22.6667H9.33333Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M8.0013 3.99992C6.52854 3.99992 5.33464 5.19383 5.33464 6.66659V25.3333C5.33464 26.806 6.52854 27.9999 8.0013 27.9999H24.0013C25.4741 27.9999 26.668 26.806 26.668 25.3333V6.66659C26.668 5.19383 25.4741 3.99992 24.0013 3.99992H8.0013ZM2.66797 6.66659C2.66797 3.72107 5.05578 1.33325 8.0013 1.33325H24.0013C26.9468 1.33325 29.3346 3.72107 29.3346 6.66659V25.3333C29.3346 28.2788 26.9468 30.6666 24.0013 30.6666H8.0013C5.05578 30.6666 2.66797 28.2788 2.66797 25.3333V6.66659Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var tv = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 28, viewBox: "0 0 26 28", width: 26, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M1.34375 27.3346C1.05486 27.3346 0.815972 27.2402 0.627083 27.0513C0.438195 26.8624 0.34375 26.6235 0.34375 26.3346V3.8013C0.34375 3.51241 0.438195 3.27352 0.627083 3.08464C0.815972 2.89575 1.05486 2.8013 1.34375 2.8013H4.34375V0.667969H9.67708V2.8013H12.6771C12.966 2.8013 13.2049 2.89575 13.3938 3.08464C13.5826 3.27352 13.6771 3.51241 13.6771 3.8013V26.3346C13.6771 26.6235 13.5826 26.8624 13.3938 27.0513C13.2049 27.2402 12.966 27.3346 12.6771 27.3346H1.34375ZM2.34375 25.3346H11.6771V4.8013H2.34375V25.3346ZM20.7437 12.8346L19.3104 9.5013L15.8438 7.96797L19.3104 6.46797L20.7437 3.3013L22.1771 6.46797L25.6438 7.96797L22.1771 9.5013L20.7437 12.8346Z", fill: "currentColor" })] }) }; G(); var tL = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 25 24", width: 25, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M8.25 22C8.0375 22 7.85942 21.9281 7.71575 21.7843C7.57192 21.6406 7.5 21.4625 7.5 21.25V4.35C7.5 4.1375 7.57192 3.95933 7.71575 3.8155C7.85942 3.67183 8.0375 3.6 8.25 3.6H10.5V2.75C10.5 2.5375 10.5719 2.35933 10.7158 2.2155C10.8594 2.07183 11.0375 2 11.25 2H13.75C13.9625 2 14.1407 2.07183 14.2845 2.2155C14.4282 2.35933 14.5 2.5375 14.5 2.75V3.6H16.75C16.9625 3.6 17.1407 3.67183 17.2845 3.8155C17.4282 3.95933 17.5 4.1375 17.5 4.35V21.25C17.5 21.4625 17.4282 21.6406 17.2845 21.7843C17.1407 21.9281 16.9625 22 16.75 22H8.25ZM9 9.5H16V5.1H9V9.5Z", fill: "currentColor" })] }) }; G(); var tb = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 24 24", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M1 5C1.55228 5 2 5.44772 2 6L2 14L10 14V9C10 8.73478 10.1054 8.48043 10.2929 8.29289C10.4804 8.10536 10.7348 8 11 8H20C22.2091 8 24 9.79086 24 12V18C24 18.5523 23.5523 19 23 19C22.4477 19 22 18.5523 22 18V16H2V18C2 18.5523 1.55229 19 1 19C0.447716 19 0 18.5523 0 18V6C0 5.44772 0.447715 5 1 5ZM12 14H22V12C22 10.8954 21.1046 10 20 10H12V14Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M6 12C7.10457 12 8 11.1046 8 10C8 8.89543 7.10457 8 6 8C4.89543 8 4 8.89543 4 10C4 11.1046 4.89543 12 6 12Z", fill: "currentColor" })] }) }; G(); var ty = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, id: "Layer_1", viewBox: "0 0 874.96 511.88", xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("defs", { children: (0, l.jsx)("style", { children: ".cls-1{fill:#fff200;}.cls-2{fill:#1d252c;}" }) }), (0, l.jsx)("polygon", { className: "cls-1", points: "700.16 371.89 874.96 371.89 874.96 511.88 700.13 511.88 656.63 470.92 656.63 413.15 700.16 371.89" }), (0, l.jsx)("path", { className: "cls-2", d: "m156.87,110.49l3.39-1.23c2.16-1.03,4.75-2.8,7.78-5.32,3.03-2.52,6.06-5.42,9.09-8.71,3.03-3.29,5.65-7.68,7.86-13.18,2.21-5.5,3.31-11.27,3.31-17.34,0-15.92-7.19-29.64-21.57-41.14-14.38-11.51-34-17.26-58.87-17.26H0v220.98h114.19c29.27,0,89.9-5.45,89.9-63.18,0-44.15-46.19-53.22-47.22-53.63m-85.4-52.38h26.33c5.27,0,9.58,1.55,12.92,4.66,3.34,3.11,5.01,6.94,5.01,11.51s-1.67,8.41-5.01,11.51c-3.34,3.1-7.65,4.66-12.92,4.66h-26.33v-32.34Zm49.17,112.24c-4.12,3.88-9.29,5.82-15.52,5.82h-33.66v-39.67h33.66c6.23,0,11.4,1.91,15.52,5.73,4.12,3.82,6.17,8.49,6.17,14.02s-2.06,10.23-6.17,14.11" }), (0, l.jsx)("path", { className: "cls-2", d: "m213.68,355.1l3.39-1.23c2.16-1.03,4.75-2.8,7.78-5.32,3.03-2.52,6.06-5.42,9.09-8.71,3.03-3.29,5.65-7.68,7.86-13.18,2.21-5.5,3.31-11.28,3.31-17.34,0-15.93-7.19-29.64-21.57-41.14-14.38-11.51-34.01-17.26-58.87-17.26H57.02v220.98h113.98c29.27,0,89.9-5.45,89.9-63.18,0-44.15-46.19-53.22-47.22-53.63m-85.19-52.39h26.13c5.28,0,9.58,1.55,12.93,4.66,3.34,3.11,5.01,6.95,5.01,11.52s-1.67,8.41-5.01,11.52c-3.34,3.11-7.65,4.66-12.93,4.66h-26.13v-32.36Zm48.97,112.25c-4.12,3.88-9.29,5.82-15.52,5.82h-33.45v-39.67h33.45c6.23,0,11.4,1.91,15.52,5.73,4.12,3.82,6.17,8.49,6.17,14.02s-2.06,10.23-6.17,14.11" }), (0, l.jsx)("polygon", { className: "cls-2", points: "387.08 173.67 280.26 173.67 280.26 139 367.48 139 367.48 88.45 280.26 88.45 280.26 60.1 387.34 60.1 387.34 6.32 208.78 6.32 208.78 227.3 387.08 227.3 387.08 173.67" }), (0, l.jsx)("polygon", { className: "cls-2", points: "569.81 6.32 569.81 60.1 628.22 60.1 628.22 227.3 699.26 227.3 699.26 60.1 757.66 60.1 757.66 6.32 569.81 6.32" }), (0, l.jsx)("path", { className: "cls-2", d: "m489.04,170.13c-3.91,3.39-9.32,5.09-16.26,5.09s-14.15-1.9-21.65-5.7c-7.5-3.8-12.51-6.86-15.03-9.17-1.43-1.31-2.66-2.46-3.74-3.49l-42.16,40.04,2.67,2.67c2.57,2.67,6.52,5.86,11.87,9.55,5.34,3.7,11.53,7.4,18.57,11.1,7.04,3.7,15.82,6.86,26.35,9.48,10.53,2.62,21.39,3.93,32.59,3.93,27.95,0,50.19-7.24,66.73-21.73,16.54-14.49,24.81-31.95,24.81-52.39,0-11.81-2.39-22.19-7.16-31.13-4.78-8.94-10.74-15.67-17.88-20.19-7.14-4.52-14.87-8.58-23.19-12.17-7.59-3.28-14.68-5.76-21.29-7.46-.64-.16-1.28-.33-1.91-.48-7.14-1.7-13.07-3.85-17.8-6.47-4.72-2.62-7.09-5.63-7.09-9.02,0-4.11,1.65-7.5,4.93-10.17,3.29-2.67,7.96-4.01,14.02-4.01,14.43,0,23.26,6.48,27.81,11.18l42.3-40.18-.77-.89c-1.85-2.36-5.03-5.06-9.55-8.09-4.52-3.03-9.78-6.09-15.79-9.17-6.01-3.08-13.82-5.73-23.42-7.94-9.61-2.21-19.65-3.31-30.13-3.31-26.51,0-47.85,7.01-64.03,21.04-16.18,14.02-24.27,30.49-24.27,49.39,0,10.07,1.8,19.11,5.39,27.12,3.6,8.01,8.17,14.38,13.72,19.11,5.55,4.73,11.74,8.89,18.57,12.48,5.74,3.02,11.51,5.52,17.32,7.56,1.11.39,2.22.79,3.33,1.15,6.93,2.21,13.2,4.26,18.8,6.16,5.6,1.9,10.2,3.93,13.79,6.09,3.6,2.16,5.39,4.72,5.39,7.71,0,4.83-1.95,8.94-5.86,12.33" }), (0, l.jsx)("path", { className: "cls-2", d: "m387.34,382.25c0,14.59-11.77,26.44-26.36,26.55-14.74.11-26.75-11.81-26.75-26.55v-131.24h-71.53v127.9c0,52.75,42.76,95.51,95.51,95.51h4.48c52.75,0,95.51-42.76,95.51-95.51v-127.9h-70.86v131.24Z" }), (0, l.jsx)("polygon", { className: "cls-2", points: "580.37 326.17 533.53 251.01 461.91 251.01 544.63 393.09 544.63 471.99 616.11 471.99 616.11 393.09 698.82 251.01 627.21 251.01 580.37 326.17" }), (0, l.jsx)("path", { className: "cls-2", d: "m691.39,441.78c0,4.78-3.87,8.65-8.65,8.65s-8.65-3.87-8.65-8.65,3.87-8.65,8.65-8.65,8.65,3.87,8.65,8.65" }), (0, l.jsx)("path", { className: "cls-2", d: "m697.94,322.23c0-6.55,5.22-11.81,11.81-11.81s11.81,5.22,11.81,11.76-5.22,11.76-11.81,11.76-11.81-5.06-11.81-11.71Zm22.08-.05c0-5.96-4.36-10.32-10.27-10.32s-10.22,4.42-10.22,10.38,4.52,10.27,10.22,10.27,10.27-4.31,10.27-10.32Zm-14.21-6.33h3.99c2.66,0,4.42,1.17,4.42,3.57v.05c0,1.86-1.17,2.87-2.87,3.19l3.57,5.43h-1.97l-3.41-5.16h-1.86v5.16h-1.86v-12.24Zm3.99,5.75c1.7,0,2.55-.69,2.55-2.08v-.05c0-1.54-.91-2.08-2.55-2.08h-2.13v4.2h2.13Z" })] }) }; G(); var tw = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 32, viewBox: "0 0 32 32", width: 32, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M16.001 28.6663C14.249 28.6663 12.6023 28.3339 11.0607 27.669C9.51914 27.0041 8.17825 26.1018 7.03803 24.962C5.89781 23.8222 4.99503 22.4819 4.3297 20.941C3.66459 19.4001 3.33203 17.7538 3.33203 16.002C3.33203 14.25 3.66448 12.6032 4.32936 11.0617C4.99425 9.52012 5.89659 8.17923 7.03637 7.03901C8.17614 5.89879 9.51648 4.99601 11.0574 4.33067C12.5983 3.66556 14.2446 3.33301 15.9964 3.33301C17.7484 3.33301 19.3951 3.66545 20.9367 4.33034C22.4783 4.99523 23.8191 5.89756 24.9594 7.03734C26.0996 8.17712 27.0024 9.51745 27.6677 11.0583C28.3328 12.5992 28.6654 14.2456 28.6654 15.9973C28.6654 17.7493 28.3329 19.3961 27.668 20.9377C27.0031 22.4792 26.1008 23.8201 24.961 24.9603C23.8213 26.1006 22.4809 27.0033 20.94 27.6687C19.3991 28.3338 17.7528 28.6663 16.001 28.6663ZM15.9987 26.6663C17.2496 26.6663 18.4543 26.4548 19.6127 26.0317C20.7709 25.6086 21.8295 24.9962 22.7884 24.1947L7.8037 9.21001C7.01059 10.1689 6.40036 11.2275 5.97303 12.3857C5.5457 13.5441 5.33203 14.7488 5.33203 15.9997C5.33203 18.9775 6.36536 21.4997 8.43203 23.5663C10.4987 25.633 13.0209 26.6663 15.9987 26.6663ZM24.1937 22.7893C24.9953 21.8305 25.6076 20.7719 26.0307 19.6137C26.4538 18.4552 26.6654 17.2506 26.6654 15.9997C26.6654 13.0219 25.632 10.4997 23.5654 8.43301C21.4987 6.36634 18.9765 5.33301 15.9987 5.33301C14.7447 5.33301 13.5371 5.54245 12.376 5.96134C11.2151 6.38001 10.1595 6.99445 9.20903 7.80468L24.1937 22.7893Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M13.5788 20.0348H18.842V18.9821H13.5788V20.0348ZM13.5788 17.2277H18.842V16.1751H13.5788V17.2277ZM12.2159 22.6663C11.8614 22.6663 11.5613 22.5435 11.3157 22.2979C11.0701 22.0523 10.9473 21.7522 10.9473 21.3977V10.6016C10.9473 10.2471 11.0701 9.94704 11.3157 9.70143C11.5613 9.45581 11.8614 9.33301 12.2159 9.33301H17.7894L21.4736 13.0172V21.3977C21.4736 21.7522 21.3508 22.0523 21.1052 22.2979C20.8595 22.5435 20.5595 22.6663 20.205 22.6663H12.2159ZM17.2631 13.5435V10.3856H12.2159C12.1618 10.3856 12.1124 10.4082 12.0674 10.4532C12.0224 10.4981 11.9999 10.5476 11.9999 10.6016V21.3977C11.9999 21.4518 12.0224 21.5013 12.0674 21.5462C12.1124 21.5912 12.1618 21.6137 12.2159 21.6137H20.205C20.259 21.6137 20.3085 21.5912 20.3534 21.5462C20.3984 21.5013 20.4209 21.4518 20.4209 21.3977V13.5435H17.2631Z", fill: "currentColor" })] }) }; G(); var tj = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", viewBox: "0 0 19 26", xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsxs)("g", { clipPath: "url(#bluetooth_filled_icon_1)", fill: "currentColor", children: [(0, l.jsx)("path", { d: "M19 13.019c-.06 2.402-.214 4.785-.948 7.086-.593 1.858-1.543 3.472-3.21 4.562-1.122.732-2.373 1.088-3.682 1.236-1.514.172-3.024.13-4.52-.204-2.521-.562-4.256-2.077-5.293-4.446C.663 19.687.34 18.03.172 16.339a32.425 32.425 0 0 1 .084-7.42c.23-1.786.657-3.52 1.563-5.102 1.188-2.071 3-3.22 5.295-3.61 1.763-.301 3.529-.285 5.284.116 2.494.57 4.196 2.09 5.22 4.426.693 1.576 1.023 3.246 1.177 4.95.099 1.103.138 2.212.205 3.318v.002Zm-3.715 4.346L10.9 12.937c1.458-1.472 2.909-2.938 4.284-4.33-2.181-2.205-4.36-4.408-6.534-6.609v8.634l-3.565-3.61L3.67 8.42l4.602 4.612-4.562 4.58 1.35 1.377 3.604-3.65v8.72l6.62-6.694v.001Z" }), (0, l.jsx)("path", { d: "M10.539 19.462c.69-.695 1.365-1.379 1.974-1.994l-1.974-1.992v3.988-.002Zm.018-12.923v4.025l1.99-2.012-1.99-2.013Z" }), (0, l.jsx)("path", { d: "m10.557 6.54 1.99 2.012c-.653.662-1.328 1.344-1.99 2.012V6.54Z" })] }), (0, l.jsx)("defs", { children: (0, l.jsx)("clipPath", { id: "bluetooth_filled_icon_1", children: (0, l.jsx)("path", { d: "M0 0h19v26H0z", fill: "currentColor" }) }) })] }) }; G(); var tk = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 23, viewBox: "0 0 20 23", width: 20, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M9.60297 0.735085C9.34607 0.542546 9.02234 0.532439 8.75744 0.708687C8.49254 0.884936 8.3282 1.21978 8.3282 1.58325V6.58325C8.3282 7.13554 8.70129 7.58325 9.16153 7.58325C9.62177 7.58325 9.99486 7.13554 9.99486 6.58325V3.38682L14.3836 6.67605L12.017 8.66402C11.6399 8.98073 11.5482 9.60426 11.8122 10.0567C12.0761 10.5092 12.5957 10.6192 12.9727 10.3025L16.3712 7.44776C16.6003 7.25531 16.7337 6.93779 16.7264 6.60231C16.7191 6.26683 16.572 5.95813 16.3348 5.78036L9.60297 0.735085Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M1.18364 17.764L8.3282 11.7626V11.4039L1.18364 5.40249C0.806604 5.08577 0.714908 4.46224 0.978837 4.00979C1.24277 3.55734 1.76237 3.44731 2.13942 3.76402L10.4569 10.7507C10.4677 10.7593 10.4782 10.7682 10.4887 10.7774L18.8061 17.764C19.1831 18.0807 19.2748 18.7043 19.0109 19.1567C18.747 19.6092 18.2274 19.7192 17.8503 19.4025L15.865 17.7349L9.6032 22.4312C9.34631 22.6239 9.02252 22.6341 8.75756 22.4579C8.49259 22.2817 8.3282 21.9468 8.3282 21.5833V14.2039L2.13942 19.4025C1.76237 19.7192 1.24277 19.6092 0.978837 19.1567C0.714908 18.7043 0.806604 18.0807 1.18364 17.764ZM14.3817 16.4889L9.99486 12.8039V19.779L14.3817 16.4889Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var tM = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 25 24", width: 25, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M11.75 20.1498V12.4248L5 8.5248V16.2498L11.75 20.1498ZM13.25 20.1498L20 16.2498V8.4998L13.25 12.4248V20.1498ZM11.75 21.8748L4.25 17.5498C4.01667 17.4165 3.83333 17.2331 3.7 16.9998C3.56667 16.7665 3.5 16.5165 3.5 16.2498V7.7498C3.5 7.48314 3.56667 7.23314 3.7 6.9998C3.83333 6.76647 4.01667 6.58314 4.25 6.4498L11.75 2.1248C11.9833 1.99147 12.2333 1.9248 12.5 1.9248C12.7667 1.9248 13.0167 1.99147 13.25 2.1248L20.75 6.4498C20.9833 6.58314 21.1667 6.76647 21.3 6.9998C21.4333 7.23314 21.5 7.48314 21.5 7.7498V16.2498C21.5 16.5165 21.4333 16.7665 21.3 16.9998C21.1667 17.2331 20.9833 17.4165 20.75 17.5498L13.25 21.8748C13.0167 22.0081 12.7667 22.0748 12.5 22.0748C12.2333 22.0748 11.9833 22.0081 11.75 21.8748ZM16.6 8.7498L19.15 7.2748L12.5 3.4248L9.95 4.8998L16.6 8.7498ZM12.5 11.1498L15.1 9.6248L8.425 5.7748L5.825 7.2748L12.5 11.1498Z", fill: "currentColor" })] }) }; G(); var tH = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 24 24", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M11.5177 0.123459C11.8177 -0.0415041 12.1815 -0.041453 12.4815 0.123459L22.4815 5.62346C22.4887 5.62738 22.495 5.63306 22.502 5.63713C22.5257 5.65087 22.5488 5.66536 22.5714 5.68108C22.5836 5.68964 22.5957 5.69838 22.6075 5.70744C22.6693 5.75476 22.7262 5.80924 22.7764 5.87151C22.7835 5.88017 22.7902 5.88898 22.797 5.89787C22.8146 5.9213 22.831 5.9458 22.8468 5.97112C22.853 5.98117 22.8594 5.99112 22.8653 6.00139C22.8686 6.00708 22.8729 6.01221 22.8761 6.01799C22.912 6.08338 22.9389 6.15137 22.9591 6.22014C22.9627 6.23272 22.9657 6.24548 22.9688 6.25822C22.976 6.28674 22.9809 6.31542 22.9854 6.34416C22.9871 6.3549 22.989 6.36557 22.9903 6.37639C22.9953 6.41682 22.999 6.4571 22.9991 6.49748L23.0001 6.50041V17.5004C22.9999 17.865 22.801 18.2007 22.4815 18.3764L12.4805 23.8764C12.4452 23.8959 12.408 23.912 12.3702 23.9272C12.3656 23.929 12.3612 23.9313 12.3565 23.933C12.3238 23.9456 12.2903 23.9562 12.2559 23.9653C12.2488 23.9672 12.2417 23.9694 12.2345 23.9711C12.2078 23.9775 12.1808 23.9825 12.1534 23.9867C12.1381 23.9891 12.1229 23.9919 12.1075 23.9936C12.0722 23.9974 12.0364 24.0004 12.0001 24.0004L11.8975 23.9946C11.8953 23.9943 11.893 23.9938 11.8907 23.9936C11.8753 23.9919 11.8601 23.9891 11.8448 23.9867C11.8174 23.9825 11.7904 23.9776 11.7638 23.9711C11.7565 23.9694 11.7495 23.9672 11.7423 23.9653C11.708 23.9561 11.6744 23.9456 11.6417 23.933C11.6371 23.9313 11.6326 23.929 11.628 23.9272C11.5902 23.912 11.553 23.8959 11.5177 23.8764L1.51766 18.3764C1.19823 18.2007 1.00021 17.865 1.00008 17.5004V6.51213C0.999486 6.46663 1.00218 6.42101 1.00789 6.37541C1.00921 6.36493 1.01113 6.35457 1.01278 6.34416C1.01731 6.31545 1.02226 6.28671 1.02938 6.25822C1.03255 6.24549 1.03548 6.2327 1.03914 6.22014C1.05927 6.15128 1.08713 6.08346 1.12313 6.01799C1.12621 6.01238 1.12972 6.00691 1.13289 6.00139C1.1388 5.99113 1.14518 5.98116 1.15145 5.97112C1.16719 5.94582 1.18364 5.92129 1.20125 5.89787C1.20795 5.88899 1.21476 5.88017 1.22176 5.87151C1.27193 5.80926 1.32903 5.75478 1.39071 5.70744C1.40251 5.69838 1.41458 5.68965 1.42684 5.68108C1.44816 5.66619 1.46995 5.65221 1.49227 5.63908C1.50078 5.63407 1.50896 5.62824 1.51766 5.62346L11.5177 0.123459ZM3.00008 16.9086L11.0001 21.308V12.5912L3.00008 8.19084V16.9086ZM18.0001 9.83928V13.0004C17.9999 13.5524 17.5521 14.0002 17.0001 14.0004C16.4479 14.0004 16.0003 13.5525 16.0001 13.0004V10.9389L13.0001 12.5903V21.308L21.0001 16.9086V8.19084L18.0001 9.83928ZM4.0743 6.49944L11.9991 10.8578L15.0245 9.1928C13.4773 8.33475 11.7513 7.37861 10.2745 6.56194C9.26901 6.00588 8.37949 5.51416 7.74129 5.16155L7.12508 4.82072L4.0743 6.49944ZM9.19832 3.68108C9.77142 3.99778 10.4727 4.38635 11.2423 4.81194C13.0814 5.82901 15.3089 7.06184 17.0958 8.05412L19.9239 6.49944L12.0001 2.14104L9.19832 3.68108Z", fill: "currentColor" })] }) }; G(); var tV = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 43, viewBox: "0 0 44 43", width: 44, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("rect", { height: 41.5514, rx: 10.1215, stroke: "currentColor", strokeWidth: 1.06542, width: 41.5514, x: .95312, y: .53271 }), (0, l.jsx)("path", { d: "M24.9727 32.0003H19.0273C18.357 32.0003 17.7142 31.7232 17.2403 31.2299C16.7663 30.7366 16.5 30.0676 16.5 29.3699V13.9624C16.5 13.2648 16.7663 12.5957 17.2403 12.1025C17.7142 11.6092 18.357 11.332 19.0273 11.332H24.9727C25.643 11.332 26.2858 11.6092 26.7597 12.1025C27.2337 12.5957 27.5 13.2648 27.5 13.9624V29.3699C27.5 30.0676 27.2337 30.7366 26.7597 31.2299C26.2858 31.7232 25.643 32.0003 24.9727 32.0003ZM19.0273 12.6472C18.6921 12.6472 18.3707 12.7858 18.1338 13.0324C17.8968 13.2791 17.7636 13.6136 17.7636 13.9624V29.3699C17.7636 29.7188 17.8968 30.0533 18.1338 30.2999C18.3707 30.5466 18.6921 30.6851 19.0273 30.6851H24.9727C25.3079 30.6851 25.6293 30.5466 25.8662 30.2999C26.1032 30.0533 26.2364 29.7188 26.2364 29.3699V13.9624C26.2364 13.6136 26.1032 13.2791 25.8662 13.0324C25.6293 12.7858 25.3079 12.6472 24.9727 12.6472H19.0273Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M24.787 12.6468H19.2144V10H24.787V12.6468ZM20.478 11.3317L23.5233 11.3152L20.478 11.3317Z", fill: "currentColor" })] }) }; G(); var tZ = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: "100%", viewBox: "0 0 50 50", width: "100%", xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("rect", { height: 49, opacity: .3, rx: 5.5, stroke: "currentColor", width: 49, x: .5, y: .5 }), (0, l.jsx)("path", { d: "M28.3781 37.5003H21.6219C20.8602 37.5003 20.1298 37.1854 19.5912 36.6249C19.0526 36.0643 18.75 35.304 18.75 34.5113V17.0027C18.75 16.21 19.0526 15.4497 19.5912 14.8892C20.1298 14.3286 20.8602 14.0137 21.6219 14.0137H28.3781C29.1398 14.0137 29.8702 14.3286 30.4088 14.8892C30.9474 15.4497 31.25 16.21 31.25 17.0027V34.5113C31.25 35.304 30.9474 36.0643 30.4088 36.6249C29.8702 37.1854 29.1398 37.5003 28.3781 37.5003ZM21.6219 15.5082C21.2411 15.5082 20.8758 15.6656 20.6066 15.9459C20.3373 16.2262 20.186 16.6064 20.186 17.0027V34.5113C20.186 34.9076 20.3373 35.2878 20.6066 35.568C20.8758 35.8483 21.2411 36.0058 21.6219 36.0058H28.3781C28.7589 36.0058 29.1241 35.8483 29.3934 35.568C29.6627 35.2878 29.814 34.9076 29.814 34.5113V17.0027C29.814 16.6064 29.6627 16.2262 29.3934 15.9459C29.1241 15.6656 28.7589 15.5082 28.3781 15.5082H21.6219Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M28.1667 15.5078H21.8342V12.5H28.1667V15.5078ZM23.2702 14.0132L26.7308 13.9945L23.2702 14.0132Z", fill: "currentColor" })] }) }; G(); var tN = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 52, viewBox: "0 0 52 52", width: 52, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("rect", { height: 49.3917, rx: 12.0313, stroke: "currentColor", strokeWidth: 1.26645, width: 49.3917, x: 1.42937, y: 1.55974 }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M14.7961 18.9265C15.3484 18.9265 15.7961 19.3742 15.7961 19.9265L15.7961 27.9265L23.7961 27.9265V22.9265C23.7961 22.6613 23.9015 22.4069 24.089 22.2194C24.2766 22.0319 24.5309 21.9265 24.7961 21.9265H33.7961C36.0053 21.9265 37.7961 23.7174 37.7961 25.9265V31.9265C37.7961 32.4788 37.3484 32.9265 36.7961 32.9265C36.2439 32.9265 35.7961 32.4788 35.7961 31.9265V29.9265H15.7961V31.9265C15.7961 32.4788 15.3484 32.9265 14.7961 32.9265C14.2439 32.9265 13.7961 32.4788 13.7961 31.9265V19.9265C13.7961 19.3742 14.2439 18.9265 14.7961 18.9265ZM25.7961 27.9265H35.7961V25.9265C35.7961 24.8219 34.9007 23.9265 33.7961 23.9265H25.7961V27.9265Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M19.7961 25.9265C20.9007 25.9265 21.7961 25.0311 21.7961 23.9265C21.7961 22.8219 20.9007 21.9265 19.7961 21.9265C18.6916 21.9265 17.7961 22.8219 17.7961 23.9265C17.7961 25.0311 18.6916 25.9265 19.7961 25.9265Z", fill: "currentColor" })] }) }; G(); var tR = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 60, viewBox: "0 0 60 60", width: 60, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("rect", { height: 59, opacity: .3, rx: 12, stroke: "currentColor", width: 59, x: .5, y: .5 }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M28.3163 8.11413C26.1803 8.60588 24.3961 9.81962 23.2556 11.5568C22.1644 13.219 21.8165 14.5223 21.9089 16.6023C21.9676 17.9258 22.1624 18.7006 22.7267 19.8564C22.9827 20.3807 23.0556 20.4512 23.3415 20.4512C23.7949 20.4512 23.8101 20.152 23.404 19.2268C22.4629 17.0825 22.527 14.701 23.5802 12.6862C24.1037 11.6846 25.4483 10.3055 26.4237 9.76977C27.614 9.11601 28.5606 8.88003 29.9926 8.88003C32.1205 8.88003 33.6156 9.50588 35.1347 11.0328C36.5389 12.4443 37.243 14.1154 37.2571 16.0712C37.2685 17.6269 36.9709 18.5221 35.1902 22.2897C34.8529 23.0035 33.5576 25.8132 32.3117 28.5336C31.066 31.2539 30.0224 33.4797 29.9926 33.4798C29.9629 33.4798 29.3351 32.1545 28.5974 30.5344C27.8598 28.9145 27.172 27.4987 27.069 27.3884C26.9467 27.2574 26.8057 27.212 26.6627 27.2573C26.1722 27.413 26.1382 27.3149 28.3133 32.0231C28.8904 33.2722 29.4368 34.4524 29.5277 34.6457C29.6557 34.9181 29.7603 34.9971 29.993 34.9971C30.2406 34.9971 30.3307 34.9166 30.5067 34.5375C30.6242 34.2847 31.1357 33.1775 31.6436 32.0771C32.1514 30.9767 33.1865 28.7381 33.9439 27.1023C34.7013 25.4666 35.4049 23.9336 35.5074 23.6957C35.6099 23.4577 36.1102 22.3627 36.6191 21.2623C37.9378 18.4105 38.0222 18.1319 38.0778 16.4497C38.1328 14.7808 37.983 13.9923 37.3606 12.6762C36.8109 11.5139 36.1124 10.5943 35.2157 9.8525C34.394 9.17257 33.0811 8.48421 32.1015 8.21957C31.2177 7.981 29.1456 7.92314 28.3163 8.11413ZM28.5326 12.4139C27.6326 12.7344 26.5611 13.7989 26.2118 14.7194C25.311 17.0931 26.7783 19.7492 29.2327 20.1878C33.1158 20.8818 35.6199 16.3602 32.9497 13.4761C32.0997 12.5579 31.4167 12.2482 30.1609 12.2114C29.3825 12.1886 29.0483 12.2301 28.5326 12.4139ZM31.3454 13.3507C33.3186 14.2842 33.7921 16.8168 32.2855 18.3787C31.6205 19.0681 30.9418 19.358 29.9926 19.358C29.3287 19.358 29.0834 19.3068 28.6408 19.0758C26.7088 18.0676 26.2124 15.6825 27.6045 14.0971C28.5088 13.0671 30.0824 12.7531 31.3454 13.3507ZM24.2824 22.4736C24.211 22.545 24.1526 22.6879 24.1526 22.7913C24.1526 23.0873 25.2425 25.3521 25.4172 25.4191C25.6454 25.5066 25.9911 25.2886 25.9911 25.0572C25.9911 24.8099 25.0627 22.7909 24.8304 22.5331C24.6306 22.3115 24.4628 22.2932 24.2824 22.4736ZM23.8282 28.4161C13.3081 31.7103 10.3489 32.6472 10.1835 32.7357C9.99204 32.8382 9.98457 33.0977 10.0113 38.7583L10.0393 44.6738L11.6615 45.279C13.2463 45.8703 16.9495 47.2395 20.8541 48.678C21.9248 49.0724 23.5064 49.6571 24.3689 49.9774C29.449 51.8639 29.8351 51.9951 30.1552 51.9432C30.3344 51.9141 32.4759 51.1511 34.9142 50.2475C37.3524 49.3439 40.3938 48.2188 41.6726 47.7471C45.1328 46.4708 45.1815 46.4484 45.2213 46.1085C45.2482 45.8784 45.2013 45.806 44.991 45.7532C44.7309 45.6879 44.3596 45.8175 36.5896 48.6856C35.2513 49.1797 33.3569 49.8788 32.3798 50.2394C31.4026 50.5999 30.5627 50.8949 30.5131 50.8949C30.4636 50.8949 30.4357 48.5781 30.4512 45.7466L30.4793 40.5983L31.2904 40.2993C31.7365 40.1348 34.3645 39.1616 37.1304 38.1365C46.1375 34.7984 47.9906 34.1137 48.567 33.9108L49.1348 33.711V38.8711V44.0313L48.4589 44.2925C48.0872 44.4362 47.7222 44.5994 47.6478 44.6553C47.4537 44.8013 47.4811 45.2659 47.6886 45.3455C47.8682 45.4144 49.1651 45.0429 49.7026 44.7685L50 44.6168V38.7293C50 33.146 49.9898 32.8363 49.8031 32.7364C49.6948 32.6784 47.1764 31.8682 44.2064 30.9359C35.0986 28.0764 35.3139 28.139 35.1247 28.2961C34.8872 28.4931 34.9733 28.862 35.2919 29.0125C35.4406 29.0829 37.9956 29.9002 40.9696 30.8288C43.9437 31.7575 46.757 32.6466 47.2212 32.8046C48.229 33.1478 48.3137 33.074 45.8904 33.9653C43.6755 34.78 42.138 35.3486 38.2659 36.7853C33.1048 38.7002 30.1602 39.7556 29.9784 39.7556C29.8685 39.7556 29.1175 39.5094 28.3095 39.2085C26.6465 38.5891 26.2615 38.5575 26.2615 39.0409C26.2615 39.4224 26.2441 39.4124 28.0459 40.0687L29.5059 40.6005L29.5341 45.7477C29.5495 48.5787 29.5252 50.8942 29.48 50.8935C29.3976 50.8921 28.3627 50.5164 23.8282 48.8418C20.5192 47.6198 20.275 47.5294 17.9882 46.6796C16.8878 46.2707 15.0384 45.588 13.8786 45.1625C12.7187 44.7369 11.5629 44.2981 11.31 44.1872L10.8504 43.9855V38.8965C10.8504 34.888 10.8792 33.8075 10.986 33.8075C11.0606 33.8075 11.4622 33.933 11.8782 34.0863C12.2944 34.2398 13.1458 34.5522 13.7704 34.7808C14.395 35.0094 15.709 35.496 16.6904 35.8621C17.6718 36.2282 18.7912 36.6415 19.1778 36.7805C19.5644 36.9196 20.6838 37.3344 21.6652 37.7024C24.2966 38.689 24.4598 38.738 24.6725 38.6046C24.7732 38.5415 24.871 38.3863 24.8899 38.2596C24.9333 37.9677 24.6587 37.8374 21.8815 36.8313C20.7216 36.4112 19.5293 35.9728 19.2319 35.8573C18.9345 35.7417 18.0341 35.4078 17.2311 35.115C15.8396 34.6078 12.7222 33.4609 12.1482 33.245C11.9312 33.1635 11.9098 33.1257 12.04 33.0541C12.1293 33.005 14.4896 32.2519 17.2852 31.3806C24.1918 29.2279 24.7272 29.0497 24.8826 28.8537C25.0582 28.6322 25.0532 28.5591 24.8479 28.3537C24.6424 28.1483 24.693 28.1453 23.8282 28.4161ZM12.8692 36.6915C12.8295 36.7311 12.7971 37.0707 12.7971 37.446C12.7971 38.2336 12.8644 38.3067 13.9283 38.6727C14.9428 39.0218 14.96 39.013 14.96 38.1466C14.96 37.6794 14.9097 37.3641 14.8248 37.2984C14.6421 37.1573 13.2633 36.6194 13.0843 36.6194C13.0057 36.6194 12.9088 36.6518 12.8692 36.6915ZM17.3515 38.3808C17.2853 38.4469 17.2311 38.8064 17.2311 39.1797C17.2311 39.9427 17.2307 39.9423 18.4307 40.3985C19.3783 40.7586 19.3941 40.749 19.3941 39.807C19.3941 39.0192 19.3846 38.9896 19.0967 38.8785C17.6181 38.3075 17.4677 38.2646 17.3515 38.3808Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var tS = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 43, viewBox: "0 0 43 43", width: 43, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("rect", { height: 41.5514, rx: 10.1215, stroke: "currentColor", strokeWidth: 1.06542, width: 41.5514, x: .53271, y: .53271 }), (0, l.jsx)("path", { d: "M14.7958 12.1631C14.97 11.9542 15.228 11.8333 15.5 11.8333H26.5C26.7721 11.8333 27.03 11.9542 27.2042 12.1631L31.7875 17.6631C32.0813 18.0157 32.0691 18.5311 31.7591 18.8694L21.6757 29.8694C21.5021 30.0588 21.2569 30.1666 21 30.1666C20.7431 30.1666 20.4979 30.0588 20.3243 29.8694L10.2409 18.8694C9.93086 18.5311 9.91869 18.0157 10.2125 17.6631L14.7958 12.1631ZM15.1507 14.601L12.8738 17.3333H16.0615L15.1507 14.601ZM13.0005 19.1666L18.771 25.4618L16.6726 19.1666H13.0005ZM18.6051 19.1666L21 26.3512L23.3949 19.1666H18.6051ZM25.3274 19.1666L23.229 25.4618L28.9995 19.1666H25.3274ZM29.1262 17.3333L26.8493 14.601L25.9385 17.3333H29.1262ZM25.2282 13.6666H16.7718L17.994 17.3333H24.006L25.2282 13.6666Z", fill: "currentColor" })] }) }; G(); var tP = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 60, viewBox: "0 0 60 60", width: 60, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("rect", { height: 59, opacity: .3, rx: 12, stroke: "currentColor", width: 59, x: .5, y: .5 }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M23.7681 7.3189C23.0499 7.68289 22.4148 8.3159 22.0966 8.98464C21.9319 9.33099 21.9119 9.96944 21.9116 14.892C21.9112 19.139 21.8802 20.4112 21.777 20.4112C21.5672 20.4113 19.7456 19.974 19.2534 19.8052C17.1495 19.0844 15.8773 18.005 15.8763 16.94C15.875 15.6041 17.4535 14.4589 20.3452 13.6979L21.6896 13.344V12.967C21.6896 12.6029 21.6766 12.5915 21.3021 12.6289C20.4126 12.7176 18.743 13.2359 17.7056 13.7452C15.3675 14.8931 14.502 16.3912 15.2767 17.9488C15.9797 19.362 17.9845 20.4828 20.9698 21.1319L21.9111 21.3365V24.0634V26.7902L22.271 26.825L22.6309 26.8598V24.1347V21.4097H22.9468C23.1207 21.4097 23.5721 21.4421 23.9499 21.4817L24.637 21.5536L24.2178 21.9838C23.8827 22.3275 23.8217 22.4509 23.9141 22.5978C24.2191 23.0821 24.3462 23.0351 25.2767 22.0942C25.7706 21.5948 26.1745 21.1481 26.1745 21.1017C26.1745 20.9294 24.1149 18.9691 23.9339 18.9691C23.8306 18.9691 23.6896 19.0749 23.6205 19.2043C23.5088 19.4132 23.5659 19.5116 24.1301 20.0827L24.7653 20.7258L24.058 20.6683C23.669 20.6367 23.2012 20.5753 23.0185 20.5318L22.6863 20.4527L22.6539 15.4121C22.6208 10.2512 22.6382 9.98076 23.0595 9.11133C23.4183 8.37071 24.2995 7.87326 25.2461 7.87692C26.1879 7.88058 27.0094 8.40787 27.4042 9.26199C27.5982 9.68167 27.6094 10.1708 27.6117 18.2757C27.6136 25.0565 27.643 26.8457 27.7525 26.8456C27.8287 26.8455 28.028 26.6011 28.1955 26.3023L28.5 25.7591V19.5375V13.316L28.7492 13.4147C28.8863 13.469 29.4219 13.6249 29.9396 13.7611C31.6565 14.2128 33.3844 15.1589 33.8819 15.9196C33.9739 16.0603 34.1087 16.4165 34.1814 16.7112C34.2708 17.0729 34.3784 17.2594 34.5129 17.2852C35.1077 17.3992 35.2046 16.5533 34.6979 15.6685C34.3103 14.9914 33.4012 14.2269 32.4195 13.7527C31.5403 13.328 29.9287 12.8044 29.1921 12.704C28.6373 12.6284 28.6098 12.6366 28.5893 12.8848C28.5774 13.0278 28.5401 12.2961 28.5062 11.2589C28.4511 9.56806 28.4179 9.32123 28.1859 8.8737C27.5819 7.70874 26.6174 7.09026 25.2886 7.01582C24.5285 6.97322 24.3996 6.99884 23.7681 7.3189ZM31.416 23.5061C30.5876 23.7201 29.6744 24.4692 29.263 25.272C29.1791 25.4359 28.973 25.7919 28.8052 26.0631C28.3778 26.7539 28.4014 26.8657 28.9655 26.8243C29.4101 26.7918 29.4491 26.7586 29.8402 26.0797C30.5523 24.8436 31.2684 24.3018 32.1969 24.2966C33.2664 24.2905 34.3473 25.0529 34.5995 25.9911C34.8286 26.8436 34.6893 27.5035 34.0563 28.5646C33.7411 29.0929 33.4821 29.6087 33.4808 29.7108C33.4763 30.0539 33.0315 30.8915 32.6391 31.2957C32.2933 31.6519 31.8922 32.2964 30.8096 34.236C30.2391 35.258 29.4467 35.8317 28.5254 35.8898C28.2598 35.9066 28.0154 35.9474 27.9823 35.9806C27.9492 36.0137 28.0349 36.1995 28.1728 36.3934C28.409 36.7258 28.4539 36.7424 28.9525 36.6833C30.066 36.5511 30.7129 36.0134 31.6868 34.4107C33.0541 32.1604 35.3416 28.1037 35.4735 27.6954C35.6775 27.0635 35.5786 25.8905 35.2708 25.2926C34.7058 24.1953 33.7086 23.5315 32.5177 23.4603C32.1048 23.4356 31.6089 23.4562 31.416 23.5061ZM36.5839 25.6523C36.1092 25.8909 36.084 25.9277 36.0518 26.4297C36.0257 26.8385 36.0552 26.9566 36.1837 26.9566C36.2748 26.9566 36.3782 26.9098 36.4135 26.8527C36.555 26.6233 37.2294 26.3777 37.8574 26.3268C38.7614 26.2539 39.579 26.66 40.0998 27.4407C40.4173 27.9166 40.5 28.338 40.5 29L40.4597 29.4808L38.3398 33.1833C37.1738 35.2196 36.1005 37.0425 35.9548 37.2343C35.2993 38.0967 33.6274 38.3124 32.6827 37.6564C32.2316 37.3431 31.7334 36.5737 31.5657 35.9314L31.4978 35.6716L31.1617 35.9943C30.9768 36.1717 30.8255 36.4095 30.8255 36.5225C30.8255 36.8456 31.2122 37.5109 31.6753 37.9849C32.9995 39.3401 35.1781 39.3346 36.4922 37.9727C36.7158 37.7408 37.5695 36.3781 38.3893 34.9442C39.209 33.5103 40.1797 31.813 40.5463 31.1723C41.3607 29.7495 41.5547 29.0143 41.3536 28.1138C41.1697 27.2902 40.8279 26.6731 40.3097 26.228C39.597 25.6161 39.1781 25.4667 38.0789 25.4328C37.227 25.4064 37.0099 25.4383 36.5839 25.6523ZM20.4938 27.513C19.7678 27.7895 19.0831 28.3775 18.7347 29.0241C18.4185 29.6108 16.5284 35.1792 16.2638 36.3035C16.0752 37.1045 16.0465 38.9009 16.212 39.5481C16.472 40.5652 16.6971 41.2409 16.9327 41.7114C17.0702 41.986 18.1089 43.5336 19.241 45.1505C20.3732 46.7675 21.4494 48.3854 21.6329 48.746C21.9477 49.3645 21.9665 49.4751 21.9665 50.7015C21.9665 52.1029 22.0415 52.3024 22.5418 52.2314C22.7899 52.1961 22.7979 52.1585 22.8285 50.8681C22.8457 50.1382 22.8141 49.4143 22.7583 49.2595C22.7023 49.1046 22.5969 48.7777 22.524 48.5329C22.4511 48.2881 21.9594 47.478 21.4315 46.7325C20.9035 45.9871 20.023 44.7447 19.4749 43.9716C17.3352 40.954 17.0349 40.2152 17.0455 37.995L17.0524 36.5528L18.1893 33.1744C18.8147 31.3163 19.3958 29.6614 19.4807 29.4969C19.702 29.0681 20.5008 28.4166 20.9626 28.2881C21.5244 28.1317 31.1776 28.1402 31.5218 28.2973C32.2065 28.6098 32.3565 29.6027 31.8126 30.2232C30.3487 31.8936 27.4287 33.0855 24.8515 33.0648C23.4948 33.0539 23.101 33.1306 23.0081 33.4239C22.9241 33.6887 23.0276 33.7873 24.3637 34.7173C24.842 35.0501 25.8074 35.8988 26.5091 36.6033C28.322 38.4232 29.6651 40.5104 30.4936 42.7949C30.6835 43.318 30.8088 43.5059 31.0008 43.5541C31.1411 43.5894 31.3086 43.5856 31.3729 43.5458C31.9555 43.1851 30.2254 39.5731 28.409 37.3578C27.7383 36.5398 26.1322 34.9352 25.3646 34.3163L24.9421 33.9756L25.8629 33.8962C27.9682 33.7143 30.1541 32.8267 31.6542 31.5445C32.7409 30.6156 33.0837 30.0342 33.0174 29.2328C32.9552 28.4824 32.5401 27.8216 31.9372 27.5136C31.5148 27.2976 31.3085 27.2898 26.262 27.3C21.477 27.3097 20.9794 27.3281 20.4938 27.513ZM41.4106 30.5989C41.1545 31.0951 41.1878 31.1723 41.6581 31.1723C42.6656 31.1723 43.5814 31.774 43.9618 32.6861C44.1566 33.1531 44.1574 34.0723 43.9633 34.5317C43.759 35.0154 41.1711 39.4573 40.8302 39.9097C40.1623 40.7959 38.7662 41.0396 37.7655 40.4447C37.2119 40.1157 36.7625 39.5504 36.634 39.0212C36.547 38.6633 36.3745 38.6365 36.0186 38.9251L35.7609 39.1342L36.0593 39.5657C37.3308 41.4038 37.714 41.6498 39.1863 41.5737C40.6957 41.4957 41.3691 40.97 42.4211 39.0489C42.605 38.7133 43.0186 37.9895 43.3403 37.4403C44.9131 34.7561 45 34.5507 45 33.5215C45 32.9347 44.937 32.6423 44.7139 32.1937C44.2171 31.195 43.1263 30.4074 42.1028 30.3084C41.6175 30.2614 41.5759 30.2789 41.4106 30.5989ZM43.3124 38.3556C43.0829 38.7824 43.0393 38.9879 43.0822 39.4372C43.1922 40.5842 42.673 42.9723 41.9912 44.4556C41.7404 45.0012 40.9087 46.3433 40.6569 46.6087C40.098 47.1977 39.5273 47.9991 39.2776 48.5455C38.9491 49.2642 38.7499 50.8959 38.8898 51.7226C38.9574 52.1217 39.0138 52.2003 39.2536 52.2285C39.4097 52.2468 39.5904 52.1969 39.6552 52.1176C39.72 52.0381 39.7928 51.3492 39.8169 50.5865C39.8664 49.0242 39.9395 48.828 40.892 47.7021C42.2705 46.0723 43.0454 44.6138 43.5736 42.6544C43.7513 41.9951 43.8262 41.3317 43.8646 40.0744C43.9365 37.7234 43.8301 37.3923 43.3124 38.3556Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var tI = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 51, viewBox: "0 0 52 51", width: 52, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M28.2961 15.7429C28.2961 17.1236 27.1769 18.2429 25.7961 18.2429C24.4154 18.2429 23.2961 17.1236 23.2961 15.7429C23.2961 14.3622 24.4154 13.2429 25.7961 13.2429C27.1769 13.2429 28.2961 14.3622 28.2961 15.7429Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M29.7961 20.2429C30.1474 20.2429 30.4729 20.4272 30.6536 20.7284L31.9058 22.8154C32.8094 24.3214 34.437 25.2429 36.1933 25.2429H36.7961C37.3484 25.2429 37.7961 25.6906 37.7961 26.2429C37.7961 26.7952 37.3484 27.2429 36.7961 27.2429H36.1933C33.7344 27.2429 31.4559 25.9528 30.1908 23.8444L29.23 22.2429H23.7961V30.2429C23.7961 30.7952 23.3484 31.2429 22.7961 31.2429H16.4356C16.0824 31.2429 15.7961 31.5292 15.7961 31.8823C15.7961 32.19 16.0153 32.4541 16.3177 32.5108L18.9804 33.01C19.5233 33.1118 19.8808 33.6344 19.779 34.1772C19.6772 34.72 19.1547 35.0776 18.6119 34.9758L15.9491 34.4765C14.7008 34.2425 13.7961 33.1525 13.7961 31.8823C13.7961 30.4246 14.9778 29.2429 16.4356 29.2429H21.7961V23.1866L21.4015 23.8444C20.1364 25.9528 17.8578 27.2429 15.399 27.2429H14.7961C14.2439 27.2429 13.7961 26.7952 13.7961 26.2429C13.7961 25.6906 14.2439 25.2429 14.7961 25.2429H15.399C17.1553 25.2429 18.7828 24.3214 19.6865 22.8154L20.9386 20.7284C21.1194 20.4272 21.4449 20.2429 21.7961 20.2429H29.7961Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M25.7961 36.3228L20.9804 37.2258C20.4376 37.3276 19.915 36.97 19.8133 36.4272C19.7115 35.8844 20.069 35.3618 20.6119 35.26L25.5894 34.3267C25.6044 34.3236 25.6195 34.3207 25.6347 34.3183L35.2746 32.5108C35.577 32.4541 35.7961 32.19 35.7961 31.8823C35.7961 31.5292 35.5099 31.2429 35.1567 31.2429H28.7961C28.2439 31.2429 27.7961 30.7952 27.7961 30.2429V26.7429C27.7961 26.1906 28.2439 25.7429 28.7961 25.7429C29.3484 25.7429 29.7961 26.1906 29.7961 26.7429V29.2429H35.1567C36.6144 29.2429 37.7961 30.4246 37.7961 31.8823C37.7961 33.1525 36.8915 34.2425 35.6431 34.4765L31.17 35.3152C31.6035 35.4894 31.8684 35.9505 31.779 36.4272C31.6772 36.97 31.1547 37.3276 30.6119 37.2258L25.7961 36.3228Z", fill: "currentColor" }), (0, l.jsx)("rect", { height: 49.3917, rx: 12.0313, stroke: "currentColor", strokeWidth: 1.26645, width: 49.3917, x: 1.42937, y: .876147 })] }) }; G(); var tO = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 52, viewBox: "0 0 52 52", width: 52, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M26.5461 19.5847C26.5461 17.2375 28.4489 15.3347 30.7961 15.3347H36.0461V16.5847C36.0461 18.9319 34.1434 20.8347 31.7961 20.8347H29.7961C29.3819 20.8347 29.0461 21.1705 29.0461 21.5847C29.0461 21.9989 29.3819 22.3347 29.7961 22.3347H31.7961C34.9718 22.3347 37.5461 19.7604 37.5461 16.5847V14.5847C37.5461 14.1705 37.2104 13.8347 36.7961 13.8347H30.7961C27.6205 13.8347 25.0461 16.4091 25.0461 19.5847V24.7117C23.9946 23.5584 22.4799 22.8347 20.7961 22.8347H14.7961C14.3819 22.8347 14.0461 23.1705 14.0461 23.5847V25.5847C14.0461 28.7604 16.6205 31.3347 19.7961 31.3347H25.0461V36.5847C25.0461 36.9989 25.3819 37.3347 25.7961 37.3347C26.2104 37.3347 26.5461 36.9989 26.5461 36.5847V19.5847ZM25.0461 29.8347H19.7961C17.4489 29.8347 15.5461 27.9319 15.5461 25.5847V24.3347H20.7961C23.1434 24.3347 25.0461 26.2375 25.0461 28.5847V29.8347Z", fill: "currentColor" }), (0, l.jsx)("rect", { height: 49.3917, rx: 12.0313, stroke: "currentColor", strokeWidth: 1.26645, width: 49.3917, x: 1.42937, y: 1.21794 })] }) }; G(); var tA = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 60, viewBox: "0 0 60 60", width: 60, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("rect", { height: 59, opacity: .3, rx: 12, stroke: "currentColor", width: 59, x: .5, y: .5 }), (0, l.jsxs)("g", { clipPath: "url(#boxed-ring-a)", children: [(0, l.jsx)("path", { d: "M29.9982 46.7603C20.9841 46.7603 13.6602 39.3941 13.6602 30.3518C13.6602 21.3096 20.9841 13.9434 29.9982 13.9434C39.0123 13.9434 46.3362 21.3096 46.3362 30.3518C46.3362 39.3941 39.0123 46.7603 29.9982 46.7603ZM29.9982 14.0842C21.0686 14.0842 13.801 21.3941 13.801 30.3518C13.801 39.3096 21.0686 46.6194 29.9982 46.6194C38.9278 46.6194 46.1954 39.3236 46.1954 30.3518C46.1954 21.38 38.9278 14.0842 29.9982 14.0842Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M29.9975 46.1975C21.2229 46.1975 14.082 39.0848 14.082 30.3524C14.082 21.62 21.2229 14.5073 29.9975 14.5073C38.7722 14.5073 45.913 21.62 45.913 30.3524C45.913 39.0848 38.7722 46.1975 29.9975 46.1975ZM29.9975 14.6482C21.2933 14.6482 14.2229 21.6904 14.2229 30.3524C14.2229 39.0144 21.2933 46.0566 29.9975 46.0566C38.7017 46.0566 45.7722 39.0144 45.7722 30.3524C45.7722 21.6904 38.7017 14.6482 29.9975 14.6482Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M32.7053 45.9021C31.8321 46.057 30.9307 46.1275 30.0011 46.1275C29.0715 46.1275 28.1842 46.043 27.2969 45.9021C27.9588 45.1556 28.9166 44.6768 30.0011 44.6768C31.0856 44.6768 32.0434 45.1556 32.7053 45.9021Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M32.7055 45.9012L32.7196 45.9717L32.8464 45.9435L32.7619 45.8449L32.7055 45.9012ZM27.2971 45.9012L27.2408 45.859L27.1562 45.9576L27.283 45.9858L27.2971 45.9012ZM32.6915 45.8308C31.8182 45.9858 30.9168 46.0562 30.0013 46.0562V46.197C30.9309 46.197 31.8323 46.1125 32.7055 45.9717L32.6915 45.8308ZM30.0013 46.0562C29.0858 46.0562 28.1844 45.9717 27.3112 45.8308L27.283 45.9717C28.1703 46.1266 29.0717 46.197 29.9872 46.197V46.0562H30.0013ZM27.3534 45.9435C28.0013 45.2111 28.945 44.7463 30.0013 44.7463V44.6055C28.9027 44.6055 27.9168 45.0843 27.2548 45.8449L27.3534 45.9435ZM30.0013 44.7604C31.0577 44.7604 32.0013 45.2252 32.6492 45.9576L32.7619 45.859C32.0858 45.0984 31.114 44.6196 30.0154 44.6196V44.7604H30.0013Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M17.8996 40.5499C16.7165 39.1696 15.7729 37.5639 15.125 35.8315C16.8151 36.1273 18.0968 37.5921 18.0968 39.3668C18.1109 39.7893 18.0405 40.1837 17.8996 40.5499Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M17.9006 40.5494L17.8442 40.5917L17.9288 40.6902L17.971 40.5776L17.9006 40.5494ZM15.14 35.8311L15.1541 35.7607L15.0273 35.7466L15.0696 35.8593L15.14 35.8311ZM17.9569 40.5072C16.7879 39.1269 15.8442 37.5353 15.1964 35.817L15.0696 35.8593C15.7175 37.6057 16.6611 39.1973 17.8583 40.5917L17.9569 40.5072ZM15.1259 35.9015C16.7879 36.1832 18.0414 37.6339 18.0414 39.3663H18.1823C18.1823 37.5635 16.8724 36.0705 15.1541 35.7607L15.1259 35.9015ZM18.0414 39.3663C18.0414 39.7748 17.971 40.1691 17.8442 40.5212L17.971 40.5635C18.0978 40.1832 18.1823 39.7748 18.1823 39.3522H18.0414V39.3663Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M42.055 40.5921C43.2522 39.1977 44.2099 37.578 44.8719 35.8315C43.1536 36.0991 41.8438 37.578 41.8438 39.3668C41.8438 39.8034 41.9142 40.2118 42.055 40.5921Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M42.0575 40.5916L42.1138 40.6339L42.0293 40.7184L41.9871 40.6057L42.0575 40.5916ZM44.8744 35.8311L44.8603 35.7607L44.973 35.7466L44.9307 35.8593L44.8744 35.8311ZM42.0012 40.5494C43.1983 39.155 44.1561 37.5494 44.804 35.8029L44.9307 35.8452C44.2688 37.6057 43.311 39.2254 42.1138 40.6339L42.0012 40.5494ZM44.8744 35.9015C43.1983 36.1691 41.9026 37.6198 41.9026 39.3663H41.7617C41.7617 37.5494 43.0997 36.0283 44.8462 35.7607L44.8744 35.9015ZM41.9166 39.3663C41.9166 39.7888 41.9871 40.1973 42.1279 40.5635L42.0012 40.6057C41.8603 40.2114 41.7758 39.7888 41.7758 39.3522H41.9166V39.3663Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M30.0149 50.0002C29.9586 50.0002 29.9022 50.0002 29.8459 50.0002V49.5776C35.0712 49.6199 40.0008 47.634 43.7332 43.9579C47.4656 40.2819 49.536 35.3945 49.5783 30.1692C49.6628 20.8171 43.2966 14.3241 39.9022 12.1833C36.4938 10.7467 32.0431 10.4086 30.1698 10.4227C28.2825 10.3664 23.8318 10.634 20.4093 12.0143C16.9726 14.0988 10.5079 20.4791 10.4233 29.8452C10.3248 40.634 19.029 49.4931 29.8318 49.5776V50.0002C18.8036 49.9157 9.90222 40.8593 10.0008 29.8312C10.0853 20.2819 16.705 13.7607 20.198 11.6481L20.2262 11.634C23.7191 10.2255 28.2543 9.95793 30.1698 10.0002C32.0712 9.9861 36.6205 10.3241 40.0853 11.803L40.1135 11.8171C43.5642 13.9861 50.0853 20.6199 50.0008 30.1692C49.9586 35.5072 47.8318 40.5213 44.029 44.2537C40.2543 47.972 35.2825 50.0002 30.0149 50.0002Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M30 48C20.0719 48 12 39.9281 12 30C12 20.0719 20.0719 12 30 12C39.9281 12 48 20.0719 48 30C48 39.9281 39.9281 48 30 48ZM30 12.1406C20.1562 12.1406 12.1406 20.1562 12.1406 30C12.1406 39.8438 20.1562 47.8594 30 47.8594C39.8438 47.8594 47.8594 39.8438 47.8594 30C47.8594 20.1562 39.8438 12.1406 30 12.1406Z", fill: "currentColor" })] }), (0, l.jsx)("defs", { children: (0, l.jsx)("clipPath", { id: "boxed-ring-a", children: (0, l.jsx)("rect", { fill: "white", height: 40, transform: "translate(10 10)", width: 40 }) }) })] }) }; G(); var tz = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 60, viewBox: "0 0 60 60", width: 60, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("rect", { height: 59, opacity: .3, rx: 12, stroke: "currentColor", width: 59, x: .5, y: .5 }), (0, l.jsxs)("g", { clipPath: "url(#boxed-ring-or4-a)", children: [(0, l.jsx)("path", { d: "M30.0005 45.8449C21.2258 45.8449 14.085 38.7323 14.085 29.9999C14.085 21.2675 21.2258 14.1548 30.0005 14.1548C38.7751 14.1548 45.9159 21.2675 45.9159 29.9999C45.9159 38.7323 38.7751 45.8449 30.0005 45.8449ZM30.0005 14.2956C21.2962 14.2956 14.2258 21.3379 14.2258 29.9999C14.2258 38.6618 21.2962 45.7041 30.0005 45.7041C38.7047 45.7041 45.7751 38.6618 45.7751 29.9999C45.7751 21.3379 38.7047 14.2956 30.0005 14.2956Z", fill: "#151619", stroke: "black", strokeWidth: .375 }), (0, l.jsx)("path", { d: "M30 48C20.0719 48 12 39.9281 12 30C12 20.0719 20.0719 12 30 12C39.9281 12 48 20.0719 48 30C48 39.9281 39.9281 48 30 48ZM30 12.1406C20.1562 12.1406 12.1406 20.1562 12.1406 30C12.1406 39.8438 20.1562 47.8594 30 47.8594C39.8438 47.8594 47.8594 39.8438 47.8594 30C47.8594 20.1562 39.8438 12.1406 30 12.1406Z", fill: "#151619" }), (0, l.jsx)("circle", { cx: 30.1077, cy: 30.0003, r: 19.6429, stroke: "black", strokeWidth: .5 })] }), (0, l.jsx)("defs", { children: (0, l.jsx)("clipPath", { id: "boxed-ring-or4-a", children: (0, l.jsx)("rect", { fill: "white", height: 40, transform: "translate(10 10)", width: 40 }) }) })] }) }; G(); var tB = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 43, viewBox: "0 0 44 43", width: 44, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("rect", { height: 41.5514, rx: 10.1215, stroke: "currentColor", strokeWidth: 1.06542, width: 41.5514, x: 1.37402, y: .53271 }), (0, l.jsx)("path", { d: "M15.6381 27.3618C15.2727 27.7273 14.6758 27.7275 14.3481 27.3279C13.7414 26.5881 13.241 25.7659 12.8468 24.8615C12.3239 23.6621 12.0625 22.3764 12.0625 21.0042C12.0625 19.6154 12.3229 18.3216 12.8438 17.123C13.2363 16.2196 13.7365 15.4011 14.3443 14.6674C14.6744 14.2689 15.2716 14.2716 15.6375 14.6375C16.0034 15.0034 15.9983 15.5934 15.6766 15.9987C15.2256 16.5669 14.8542 17.1921 14.5625 17.8745C14.1458 18.8491 13.9375 19.891 13.9375 21C13.9375 22.1083 14.1458 23.1521 14.5625 24.1312C14.8538 24.8157 15.2244 25.4401 15.6745 26.0044C15.9962 26.4079 16.0031 26.9969 15.6381 27.3618ZM18.4704 24.5295C18.1016 24.8984 17.4955 24.8979 17.1922 24.4734C16.9364 24.1153 16.717 23.728 16.534 23.3115C16.2197 22.5955 16.0625 21.8263 16.0625 21.004C16.0625 20.1653 16.2188 19.3883 16.5312 18.673C16.7132 18.2565 16.9325 17.8709 17.1893 17.5161C17.4944 17.0946 18.0983 17.0983 18.4662 17.4662C18.8312 17.8312 18.8233 18.4179 18.5509 18.8564C18.4402 19.0347 18.3419 19.2221 18.2562 19.4187C18.0437 19.9062 17.9375 20.4333 17.9375 21C17.9375 21.5666 18.0437 22.0937 18.2562 22.5812C18.3428 22.7797 18.442 22.9688 18.5541 23.1486C18.8254 23.5839 18.8331 24.1668 18.4704 24.5295ZM21.9995 22.9375C21.4665 22.9375 21.0104 22.7477 20.6313 22.3682C20.2521 21.9887 20.0625 21.5325 20.0625 20.9995C20.0625 20.4665 20.2522 20.0104 20.6318 19.6312C21.0113 19.2521 21.4675 19.0625 22.0005 19.0625C22.5335 19.0625 22.9896 19.2522 23.3688 19.6317C23.7479 20.0112 23.9375 20.4675 23.9375 21.0005C23.9375 21.5335 23.7478 21.9896 23.3682 22.3687C22.9887 22.7479 22.5325 22.9375 21.9995 22.9375ZM26.8047 24.4777C26.5028 24.8996 25.9001 24.9001 25.5333 24.5333C25.1697 24.1697 25.1815 23.5845 25.4533 23.148C25.5661 22.9668 25.665 22.776 25.75 22.5755C25.9583 22.0841 26.0625 21.559 26.0625 21C26.0625 20.4333 25.9583 19.9062 25.75 19.4187C25.6771 19.2482 25.5481 19.0386 25.4112 18.8382C25.1258 18.4204 25.1483 17.8516 25.5062 17.4938C25.8894 17.1106 26.5186 17.1068 26.8335 17.5478C27.0805 17.8938 27.2922 18.2689 27.4688 18.673C27.7812 19.3883 27.9375 20.1653 27.9375 21.004C27.9375 21.8263 27.7803 22.5955 27.466 23.3115C27.2823 23.7297 27.0618 24.1184 26.8047 24.4777ZM29.6536 27.3259C29.3251 27.7267 28.7264 27.7264 28.36 27.36C27.9955 26.9955 28.0006 26.4076 28.3212 26.004C28.7732 25.4352 29.1453 24.8091 29.4375 24.1257C29.8542 23.1514 30.0625 22.1098 30.0625 21.001C30.0625 19.8753 29.8521 18.8271 29.4312 17.8562C29.1379 17.1794 28.7685 16.5603 28.3232 15.9989C28.0017 15.5935 27.9966 15.0034 28.3625 14.6375C28.7284 14.2716 29.3256 14.2689 29.6557 14.6674C30.2635 15.4011 30.7637 16.2196 31.1562 17.123C31.6771 18.3216 31.9375 19.6154 31.9375 21.0042C31.9375 22.3764 31.6761 23.6621 31.1532 24.8615C30.7594 25.7651 30.2595 26.5866 29.6536 27.3259Z", fill: "currentColor" })] }) }; G(); var tE = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: "100%", viewBox: "0 0 50 50", width: "100%", xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("rect", { height: 49, opacity: .3, rx: 5.5, stroke: "currentColor", width: 49, x: .5, y: .5 }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M14.9999 25.2083C15.1041 19.7917 19.5832 15.4167 24.9999 15.4167C30.4166 15.4167 34.8957 19.7917 34.9999 25.2083C34.9999 30.625 30.5207 35 24.9999 35C19.4791 35.1042 14.9999 30.7292 14.9999 25.2083ZM33.9582 25.2083C33.8541 20.3125 29.8957 16.4583 24.9999 16.4583C20.1041 16.4583 16.1457 20.4167 16.0416 25.2083C16.1457 30.1042 20.1041 33.9583 24.9999 33.9583C29.8957 34.0625 33.8541 30.1042 33.9582 25.2083Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M20.6922 12.8798C22.1516 12.6845 23.5296 12.5 24.9999 12.5C26.7707 12.5 28.5416 12.7083 30.4166 13.0208C31.8749 13.4375 32.9166 14.4792 33.8541 15.625C35.6249 18.125 37.0832 20.8333 37.3957 23.8542C37.6041 26.875 36.8749 29.8958 35.1041 32.2917C31.1457 37.9167 23.4374 39.1667 17.8124 35.2083C13.6457 32.0833 11.7707 26.7708 13.1249 21.6667C13.7499 19.0625 15.1041 16.875 16.8749 14.8958C17.2916 14.4792 17.8124 13.9583 18.3332 13.5417C18.9582 13.2292 19.6874 13.0208 20.4166 12.9167C20.5088 12.9044 20.6007 12.8921 20.6922 12.8798ZM29.2707 13.9583C27.8124 13.6458 26.4582 13.5417 24.9999 13.5417C23.3332 13.5417 21.6666 13.75 19.8957 14.0625C18.7499 14.4792 17.7082 15.3125 16.9791 16.3542C15.3124 18.6458 13.9582 21.1458 13.6457 23.9583C13.2291 28.5417 15.6249 33.0208 19.7916 35.2083C23.6457 37.1875 28.2291 36.7708 31.7707 34.2708C35.6249 31.3542 37.2916 26.3542 35.9374 21.7708C35.2082 19.4792 33.9582 17.3958 32.3957 15.625C31.9791 15.2083 31.5624 14.7917 31.0416 14.4792C30.5207 14.1667 29.8957 14.0625 29.2707 13.9583Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var tF = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 60, viewBox: "0 0 60 60", width: 60, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("rect", { height: 59, opacity: .3, rx: 12, stroke: "currentColor", width: 59, x: .5, y: .5 }), (0, l.jsx)("path", { d: "M29.6722 17.4843C27.3466 17.4843 25.457 15.5839 25.457 13.251C25.457 10.9181 27.3466 9.01758 29.6722 9.01758C31.9979 9.01758 33.8875 10.9181 33.8875 13.251C33.8875 15.5839 31.9979 17.4843 29.6722 17.4843ZM29.6722 9.05392C27.3684 9.05392 25.4934 10.9399 25.4934 13.251C25.4934 15.5621 27.3684 17.448 29.6722 17.448C31.9761 17.448 33.8511 15.5657 33.8511 13.251C33.8511 10.9362 31.9761 9.05392 29.6722 9.05392Z", fill: "currentColor", stroke: "currentColor", strokeWidth: .4 }), (0, l.jsx)("path", { d: "M29.6726 17.3391C27.4087 17.3391 25.5664 15.5041 25.5664 13.2511C25.5664 10.9982 27.4087 9.16309 29.6726 9.16309C31.9365 9.16309 33.7788 10.9982 33.7788 13.2511C33.7788 15.5041 31.9365 17.3391 29.6726 17.3391ZM29.6726 9.19942C27.4269 9.19942 25.6027 11.0163 25.6027 13.2511C25.6027 15.4859 27.4269 17.3028 29.6726 17.3028C31.9183 17.3028 33.7425 15.4859 33.7425 13.2511C33.7425 11.0163 31.9183 9.19942 29.6726 9.19942Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M30.3758 17.2629C30.1506 17.3029 29.918 17.3211 29.6782 17.3211C29.4383 17.3211 29.2094 17.2993 28.9805 17.2629C29.1513 17.0703 29.3984 16.9468 29.6782 16.9468C29.958 16.9468 30.2051 17.0703 30.3758 17.2629Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M30.3692 17.2625L30.3729 17.2807L30.4056 17.2734L30.3838 17.248L30.3692 17.2625ZM28.9738 17.2625L28.9593 17.2516L28.9375 17.2771L28.9702 17.2843L28.9738 17.2625ZM30.3656 17.2444C30.1403 17.2843 29.9077 17.3025 29.6715 17.3025V17.3388C29.9114 17.3388 30.1439 17.317 30.3692 17.2807L30.3656 17.2444ZM29.6715 17.3025C29.4353 17.3025 29.2028 17.2807 28.9775 17.2444L28.9702 17.2807C29.1991 17.3207 29.4317 17.3388 29.6679 17.3388V17.3025H29.6715ZM28.9884 17.2734C29.1555 17.0845 29.399 16.9646 29.6715 16.9646V16.9282C29.3881 16.9282 29.1337 17.0518 28.9629 17.248L28.9884 17.2734ZM29.6715 16.9682C29.9441 16.9682 30.1875 17.0881 30.3547 17.2771L30.3838 17.2516C30.2093 17.0554 29.9586 16.9319 29.6752 16.9319V16.9682H29.6715Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M26.5518 15.8824C26.2466 15.5263 26.0031 15.112 25.8359 14.665C26.272 14.7413 26.6027 15.1193 26.6027 15.5771C26.6063 15.6861 26.5881 15.7879 26.5518 15.8824Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M26.5538 15.8822L26.5393 15.8931L26.5611 15.9185L26.572 15.8895L26.5538 15.8822ZM25.8416 14.6649L25.8452 14.6467L25.8125 14.6431L25.8234 14.6721L25.8416 14.6649ZM26.5683 15.8713C26.2667 15.5152 26.0233 15.1046 25.8561 14.6612L25.8234 14.6721C25.9906 15.1227 26.234 15.5333 26.5429 15.8931L26.5683 15.8713ZM25.8379 14.683C26.2667 14.7557 26.5901 15.13 26.5901 15.577H26.6265C26.6265 15.1118 26.2885 14.7266 25.8452 14.6467L25.8379 14.683ZM26.5901 15.577C26.5901 15.6823 26.572 15.7841 26.5393 15.8749L26.572 15.8858C26.6047 15.7877 26.6265 15.6823 26.6265 15.5733H26.5901V15.577Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M32.785 15.8933C33.0938 15.5335 33.3409 15.1156 33.5117 14.665C33.0684 14.7341 32.7305 15.1156 32.7305 15.5771C32.7305 15.6898 32.7486 15.7952 32.785 15.8933Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M32.7833 15.8931L32.7979 15.904L32.7761 15.9258L32.7652 15.8967L32.7833 15.8931ZM33.5101 14.6649L33.5065 14.6467L33.5355 14.6431L33.5246 14.6721L33.5101 14.6649ZM32.7688 15.8822C33.0777 15.5224 33.3248 15.1082 33.4919 14.6576L33.5246 14.6685C33.3538 15.1227 33.1067 15.5406 32.7979 15.904L32.7688 15.8822ZM33.5101 14.683C33.0777 14.7521 32.7434 15.1264 32.7434 15.577H32.707C32.707 15.1082 33.0522 14.7157 33.5028 14.6467L33.5101 14.683ZM32.747 15.577C32.747 15.686 32.7652 15.7913 32.8015 15.8858L32.7688 15.8967C32.7325 15.795 32.7107 15.686 32.7107 15.5733H32.747V15.577Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M29.6756 18.3196C29.661 18.3196 29.6465 18.3196 29.632 18.3196V18.2106C30.9801 18.2215 32.2519 17.7091 33.2149 16.7607C34.1778 15.8123 34.712 14.5513 34.7229 13.2032C34.7447 10.7904 33.1022 9.11517 32.2265 8.56283C31.3471 8.19218 30.1988 8.10497 29.7155 8.1086C29.2286 8.09407 28.0803 8.16311 27.1973 8.51922C26.3107 9.05703 24.6427 10.7031 24.6209 13.1196C24.5955 15.9031 26.8412 18.1888 29.6283 18.2106V18.3196C26.7831 18.2978 24.4865 15.9613 24.5119 13.116C24.5337 10.6523 26.2416 8.96982 27.1428 8.42474L27.1501 8.42111C28.0513 8.05773 29.2213 7.98869 29.7155 7.99959C30.2061 7.99596 31.3798 8.08317 32.2737 8.46472L32.281 8.46835C33.1713 9.02796 34.8537 10.7395 34.8319 13.2032C34.821 14.5804 34.2723 15.874 33.2912 16.837C32.3173 17.7963 31.0346 18.3196 29.6756 18.3196Z", fill: "currentColor", stroke: "currentColor", strokeWidth: .3 }), (0, l.jsx)("path", { d: "M16.688 23.2016C14.4787 23.2016 12.6836 21.3962 12.6836 19.1799C12.6836 16.9637 14.4787 15.1582 16.688 15.1582C18.8974 15.1582 20.6925 16.9637 20.6925 19.1799C20.6925 21.3962 18.8974 23.2016 16.688 23.2016ZM16.688 15.1927C14.4994 15.1927 12.7181 16.9844 12.7181 19.1799C12.7181 21.3755 14.4994 23.1671 16.688 23.1671C18.8767 23.1671 20.658 21.3789 20.658 19.1799C20.658 16.9809 18.8767 15.1927 16.688 15.1927Z", fill: "currentColor", stroke: "currentColor", strokeWidth: .4 }), (0, l.jsx)("path", { d: "M16.6899 23.0641C14.5393 23.0641 12.7891 21.3208 12.7891 19.1805C12.7891 17.0402 14.5393 15.2969 16.6899 15.2969C18.8406 15.2969 20.5908 17.0402 20.5908 19.1805C20.5908 21.3208 18.8406 23.0641 16.6899 23.0641ZM16.6899 15.3314C14.5565 15.3314 12.8236 17.0575 12.8236 19.1805C12.8236 21.3036 14.5565 23.0296 16.6899 23.0296C18.8234 23.0296 20.5563 21.3036 20.5563 19.1805C20.5563 17.0575 18.8234 15.3314 16.6899 15.3314Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M17.349 22.9917C17.135 23.0297 16.9141 23.047 16.6862 23.047C16.4584 23.047 16.2409 23.0263 16.0234 22.9917C16.1857 22.8088 16.4204 22.6914 16.6862 22.6914C16.9521 22.6914 17.1868 22.8088 17.349 22.9917Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M17.3523 22.9914L17.3558 23.0087L17.3868 23.0018L17.3661 22.9776L17.3523 22.9914ZM16.0267 22.9914L16.0129 22.9811L15.9922 23.0052L16.0233 23.0121L16.0267 22.9914ZM17.3489 22.9742C17.1348 23.0121 16.9139 23.0294 16.6895 23.0294V23.0639C16.9174 23.0639 17.1383 23.0432 17.3523 23.0087L17.3489 22.9742ZM16.6895 23.0294C16.4651 23.0294 16.2442 23.0087 16.0302 22.9742L16.0233 23.0087C16.2407 23.0467 16.4617 23.0639 16.6861 23.0639V23.0294H16.6895ZM16.0405 23.0018C16.1993 22.8223 16.4306 22.7083 16.6895 22.7083V22.6738C16.4202 22.6738 16.1786 22.7912 16.0164 22.9776L16.0405 23.0018ZM16.6895 22.7118C16.9484 22.7118 17.1797 22.8257 17.3385 23.0052L17.3661 22.9811C17.2004 22.7947 16.9622 22.6773 16.693 22.6773V22.7118H16.6895Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M13.7191 21.6794C13.4292 21.3411 13.1979 20.9476 13.0391 20.5229C13.4533 20.5954 13.7675 20.9545 13.7675 21.3894C13.7709 21.493 13.7536 21.5897 13.7191 21.6794Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M13.7199 21.6796L13.706 21.69L13.7268 21.7141L13.7371 21.6865L13.7199 21.6796ZM13.0432 20.5232L13.0467 20.5059L13.0156 20.5024L13.026 20.5301L13.0432 20.5232ZM13.7337 21.6693C13.4471 21.3309 13.2158 20.9409 13.0571 20.5197L13.026 20.5301C13.1848 20.9581 13.4161 21.3482 13.7095 21.69L13.7337 21.6693ZM13.0398 20.5404C13.4471 20.6095 13.7544 20.965 13.7544 21.3896H13.7889C13.7889 20.9478 13.4679 20.5818 13.0467 20.5059L13.0398 20.5404ZM13.7544 21.3896C13.7544 21.4897 13.7371 21.5864 13.706 21.6727L13.7371 21.6831C13.7682 21.5899 13.7889 21.4897 13.7889 21.3862H13.7544V21.3896Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M19.6416 21.6898C19.9351 21.348 20.1698 20.951 20.332 20.5229C19.9109 20.5885 19.5898 20.951 19.5898 21.3894C19.5898 21.4964 19.6071 21.5966 19.6416 21.6898Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M19.6467 21.69L19.6605 21.7003L19.6398 21.721L19.6295 21.6934L19.6467 21.69ZM20.3371 20.5232L20.3337 20.5059L20.3613 20.5024L20.3509 20.5301L20.3371 20.5232ZM19.6329 21.6796C19.9263 21.3379 20.1611 20.9443 20.3199 20.5162L20.3509 20.5266C20.1887 20.9581 19.954 21.3551 19.6605 21.7003L19.6329 21.6796ZM20.3371 20.5404C19.9263 20.606 19.6087 20.9616 19.6087 21.3896H19.5742C19.5742 20.9443 19.9022 20.5715 20.3302 20.5059L20.3371 20.5404ZM19.6122 21.3896C19.6122 21.4932 19.6295 21.5933 19.664 21.6831L19.6329 21.6934C19.5984 21.5968 19.5777 21.4932 19.5777 21.3862H19.6122V21.3896Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M16.6908 23.9959C16.677 23.9959 16.6632 23.9959 16.6494 23.9959V23.8924C17.9301 23.9027 19.1384 23.416 20.0532 22.515C20.968 21.614 21.4754 20.4161 21.4858 19.1353C21.5065 16.8431 19.9461 15.2517 19.1142 14.727C18.2788 14.3749 17.1879 14.292 16.7288 14.2955C16.2662 14.2817 15.1753 14.3473 14.3365 14.6856C13.4942 15.1965 11.9096 16.7603 11.8889 19.0559C11.8648 21.7003 13.9982 23.8716 16.6459 23.8924V23.9959C13.9429 23.9752 11.7612 21.7555 11.7854 19.0525C11.8061 16.712 13.4286 15.1136 14.2847 14.5958L14.2916 14.5924C15.1477 14.2472 16.2593 14.1816 16.7288 14.1919C17.1948 14.1885 18.3098 14.2713 19.1591 14.6338L19.166 14.6372C20.0117 15.1689 21.6101 16.7948 21.5894 19.1353C21.579 20.4437 21.0577 21.6726 20.1257 22.5875C19.2005 23.4988 17.9819 23.9959 16.6908 23.9959Z", fill: "currentColor", stroke: "currentColor", strokeWidth: .3 }), (0, l.jsx)("path", { d: "M12.7272 36.3022C10.5954 36.3022 8.86328 34.5601 8.86328 32.4216C8.86328 30.2831 10.5954 28.541 12.7272 28.541C14.8591 28.541 16.5912 30.2831 16.5912 32.4216C16.5912 34.5601 14.8591 36.3022 12.7272 36.3022ZM12.7272 28.5743C10.6154 28.5743 8.89659 30.3031 8.89659 32.4216C8.89659 34.5401 10.6154 36.2689 12.7272 36.2689C14.8391 36.2689 16.5579 34.5435 16.5579 32.4216C16.5579 30.2998 14.8391 28.5743 12.7272 28.5743Z", fill: "currentColor", stroke: "currentColor", strokeWidth: .4 }), (0, l.jsx)("path", { d: "M12.7289 36.169C10.6537 36.169 8.96484 34.4869 8.96484 32.4217C8.96484 30.3565 10.6537 28.6743 12.7289 28.6743C14.8041 28.6743 16.4929 30.3565 16.4929 32.4217C16.4929 34.4869 14.8041 36.169 12.7289 36.169ZM12.7289 28.7076C10.6703 28.7076 8.99815 30.3731 8.99815 32.4217C8.99815 34.4702 10.6703 36.1357 12.7289 36.1357C14.7874 36.1357 16.4596 34.4702 16.4596 32.4217C16.4596 30.3731 14.7874 28.7076 12.7289 28.7076Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M13.3689 36.0989C13.1624 36.1355 12.9492 36.1522 12.7294 36.1522C12.5095 36.1522 12.2997 36.1322 12.0898 36.0989C12.2464 35.9223 12.4729 35.8091 12.7294 35.8091C12.9859 35.8091 13.2124 35.9223 13.3689 36.0989Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M13.3671 36.0989L13.3704 36.1156L13.4004 36.1089L13.3804 36.0856L13.3671 36.0989ZM12.088 36.0989L12.0747 36.0889L12.0547 36.1123L12.0847 36.1189L12.088 36.0989ZM13.3638 36.0823C13.1572 36.1189 12.9441 36.1356 12.7275 36.1356V36.1689C12.9474 36.1689 13.1606 36.1489 13.3671 36.1156L13.3638 36.0823ZM12.7275 36.1356C12.511 36.1356 12.2978 36.1156 12.0913 36.0823L12.0847 36.1156C12.2945 36.1522 12.5077 36.1689 12.7242 36.1689V36.1356H12.7275ZM12.1013 36.1089C12.2545 35.9357 12.4777 35.8258 12.7275 35.8258V35.7925C12.4677 35.7925 12.2346 35.9057 12.078 36.0856L12.1013 36.1089ZM12.7275 35.8291C12.9774 35.8291 13.2005 35.939 13.3538 36.1123L13.3804 36.0889C13.2205 35.9091 12.9907 35.7958 12.7309 35.7958V35.8291H12.7275Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M9.86714 34.8332C9.58734 34.5067 9.36416 34.127 9.21094 33.7173C9.61066 33.7872 9.91378 34.1337 9.91378 34.5534C9.91711 34.6533 9.90045 34.7466 9.86714 34.8332Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M9.86702 34.8331L9.8537 34.8431L9.87368 34.8664L9.88368 34.8398L9.86702 34.8331ZM9.21415 33.7173L9.21748 33.7006L9.1875 33.6973L9.19749 33.7239L9.21415 33.7173ZM9.88034 34.8231C9.60387 34.4967 9.3807 34.1203 9.22747 33.7139L9.19749 33.7239C9.35072 34.137 9.57389 34.5134 9.85703 34.8431L9.88034 34.8231ZM9.21082 33.7339C9.60387 33.8005 9.90033 34.1436 9.90033 34.5533H9.93364C9.93364 34.127 9.62386 33.7739 9.21748 33.7006L9.21082 33.7339ZM9.90033 34.5533C9.90033 34.6499 9.88368 34.7432 9.8537 34.8265L9.88368 34.8365C9.91365 34.7465 9.93364 34.6499 9.93364 34.55H9.90033V34.5533Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M15.5773 34.8432C15.8604 34.5134 16.0869 34.1303 16.2435 33.7173C15.8371 33.7806 15.5273 34.1303 15.5273 34.5534C15.5273 34.6566 15.544 34.7532 15.5773 34.8432Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M15.5817 34.8431L15.595 34.8531L15.575 34.8731L15.565 34.8465L15.5817 34.8431ZM16.2479 33.7173L16.2445 33.7006L16.2712 33.6973L16.2612 33.7239L16.2479 33.7173ZM15.5683 34.8331C15.8515 34.5034 16.078 34.1236 16.2312 33.7106L16.2612 33.7206C16.1046 34.137 15.8781 34.52 15.595 34.8531L15.5683 34.8331ZM16.2479 33.7339C15.8515 33.7972 15.545 34.1403 15.545 34.5533H15.5117C15.5117 34.1236 15.8282 33.7639 16.2412 33.7006L16.2479 33.7339ZM15.5484 34.5533C15.5484 34.6533 15.565 34.7499 15.5983 34.8365L15.5683 34.8465C15.535 34.7532 15.515 34.6533 15.515 34.55H15.5484V34.5533Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M12.7335 37.0679C12.7202 37.0679 12.7069 37.0679 12.6936 37.0679V36.968C13.9293 36.978 15.0952 36.5083 15.9779 35.6389C16.8606 34.7695 17.3503 33.6137 17.3603 32.3779C17.3802 30.1661 15.8746 28.6305 15.0719 28.1242C14.2658 27.7844 13.2132 27.7045 12.7702 27.7078C12.3238 27.6945 11.2712 27.7578 10.4618 28.0842C9.64903 28.5772 8.12011 30.0862 8.10012 32.3013C8.0768 34.8528 10.1354 36.948 12.6902 36.968V37.0679C10.0821 37.0479 7.97687 34.9061 8.00019 32.2979C8.02018 30.0395 9.58574 28.4973 10.4118 27.9976L10.4185 27.9943C11.2446 27.6612 12.3171 27.5979 12.7702 27.6079C13.2198 27.6046 14.2958 27.6845 15.1152 28.0343L15.1218 28.0376C15.9379 28.5506 17.4802 30.1195 17.4602 32.3779C17.4502 33.6403 16.9472 34.8261 16.0479 35.7089C15.1551 36.5882 13.9793 37.0679 12.7335 37.0679Z", fill: "currentColor", stroke: "currentColor", strokeWidth: .3 }), (0, l.jsx)("path", { d: "M19.9539 47.3379C17.8996 47.3379 16.2305 45.6591 16.2305 43.5984C16.2305 41.5376 17.8996 39.8589 19.9539 39.8589C22.0082 39.8589 23.6773 41.5376 23.6773 43.5984C23.6773 45.6591 22.0082 47.3379 19.9539 47.3379ZM19.9539 39.891C17.9189 39.891 16.2626 41.5569 16.2626 43.5984C16.2626 45.6398 17.9189 47.3058 19.9539 47.3058C21.989 47.3058 23.6452 45.6431 23.6452 43.5984C23.6452 41.5537 21.989 39.891 19.9539 39.891Z", fill: "currentColor", stroke: "currentColor", strokeWidth: .4 }), (0, l.jsx)("path", { d: "M19.9553 47.2095C17.9555 47.2095 16.3281 45.5885 16.3281 43.5984C16.3281 41.6083 17.9555 39.9873 19.9553 39.9873C21.955 39.9873 23.5824 41.6083 23.5824 43.5984C23.5824 45.5885 21.955 47.2095 19.9553 47.2095ZM19.9553 40.0194C17.9716 40.0194 16.3602 41.6243 16.3602 43.5984C16.3602 45.5725 17.9716 47.1774 19.9553 47.1774C21.939 47.1774 23.5503 45.5725 23.5503 43.5984C23.5503 41.6243 21.939 40.0194 19.9553 40.0194Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M20.5685 47.1425C20.3695 47.1778 20.1641 47.1939 19.9522 47.1939C19.7404 47.1939 19.5382 47.1746 19.3359 47.1425C19.4868 46.9724 19.7051 46.8633 19.9522 46.8633C20.1994 46.8633 20.4177 46.9724 20.5685 47.1425Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M20.5694 47.142L20.5726 47.158L20.6015 47.1516L20.5822 47.1291L20.5694 47.142ZM19.3368 47.142L19.3239 47.1324L19.3047 47.1548L19.3336 47.1612L19.3368 47.142ZM20.5662 47.1259C20.3672 47.1612 20.1617 47.1773 19.9531 47.1773V47.2094C20.1649 47.2094 20.3704 47.1901 20.5694 47.158L20.5662 47.1259ZM19.9531 47.1773C19.7444 47.1773 19.539 47.158 19.34 47.1259L19.3336 47.158C19.5358 47.1933 19.7412 47.2094 19.9499 47.2094V47.1773H19.9531ZM19.3496 47.1516C19.4973 46.9847 19.7123 46.8788 19.9531 46.8788V46.8467C19.7027 46.8467 19.478 46.9558 19.3272 47.1291L19.3496 47.1516ZM19.9531 46.882C20.1938 46.882 20.4089 46.9879 20.5565 47.1548L20.5822 47.1324C20.4281 46.959 20.2067 46.8499 19.9563 46.8499V46.882H19.9531Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M17.1948 45.922C16.9252 45.6074 16.7102 45.2415 16.5625 44.8467C16.9477 44.9141 17.2398 45.2479 17.2398 45.6524C17.243 45.7487 17.2269 45.8385 17.1948 45.922Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M17.1978 45.9222L17.1849 45.9318L17.2042 45.9543L17.2138 45.9286L17.1978 45.9222ZM16.5686 44.8469L16.5719 44.8308L16.543 44.8276L16.5526 44.8533L16.5686 44.8469ZM17.2106 45.9126C16.9442 45.598 16.7291 45.2353 16.5815 44.8437L16.5526 44.8533C16.7003 45.2513 16.9153 45.6141 17.1882 45.9318L17.2106 45.9126ZM16.5654 44.8629C16.9442 44.9271 17.2299 45.2578 17.2299 45.6526H17.262C17.262 45.2417 16.9635 44.9015 16.5719 44.8308L16.5654 44.8629ZM17.2299 45.6526C17.2299 45.7457 17.2138 45.8355 17.1849 45.9158L17.2138 45.9254C17.2427 45.8387 17.262 45.7457 17.262 45.6494H17.2299V45.6526Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M22.7044 45.9316C22.9772 45.6138 23.1955 45.2447 23.3464 44.8467C22.9548 44.9077 22.6562 45.2447 22.6562 45.6524C22.6562 45.7519 22.6723 45.8449 22.7044 45.9316Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M22.7002 45.9318L22.7131 45.9415L22.6938 45.9607L22.6842 45.935L22.7002 45.9318ZM23.3422 44.8469L23.339 44.8308L23.3647 44.8276L23.355 44.8533L23.3422 44.8469ZM22.6874 45.9222C22.9602 45.6044 23.1785 45.2385 23.3261 44.8405L23.355 44.8501C23.2042 45.2513 22.9859 45.6205 22.7131 45.9415L22.6874 45.9222ZM23.3422 44.8629C22.9602 44.9239 22.6649 45.2545 22.6649 45.6526H22.6328C22.6328 45.2385 22.9377 44.8918 23.3358 44.8308L23.3422 44.8629ZM22.6681 45.6526C22.6681 45.7489 22.6842 45.842 22.7163 45.9254L22.6874 45.935C22.6553 45.8452 22.636 45.7489 22.636 45.6494H22.6681V45.6526Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M19.9559 48.0764C19.9431 48.0764 19.9302 48.0764 19.9174 48.0764V47.9801C21.1083 47.9897 22.2317 47.5371 23.0823 46.6994C23.9329 45.8616 24.4048 44.7478 24.4144 43.5569C24.4337 41.4256 22.9828 39.9458 22.2092 39.4579C21.4325 39.1305 20.4181 39.0535 19.9912 39.0567C19.5611 39.0439 18.5468 39.1048 17.7668 39.4194C16.9836 39.8945 15.5103 41.3485 15.491 43.4831C15.4685 45.9418 17.4522 47.9608 19.9142 47.9801V48.0764C17.4009 48.0571 15.3722 45.9932 15.3947 43.4799C15.414 41.3036 16.9226 39.8174 17.7187 39.336L17.7251 39.3327C18.5211 39.0118 19.5547 38.9508 19.9912 38.9604C20.4246 38.9572 21.4613 39.0342 22.251 39.3713L22.2574 39.3745C23.0438 39.8688 24.53 41.3806 24.5107 43.5569C24.5011 44.7735 24.0164 45.9162 23.1497 46.7668C22.2895 47.6142 21.1564 48.0764 19.9559 48.0764Z", fill: "currentColor", stroke: "currentColor", strokeWidth: .3 }), (0, l.jsx)("path", { d: "M32.5986 50.1313C30.6606 50.1313 29.0859 48.5476 29.0859 46.6035C29.0859 44.6594 30.6606 43.0757 32.5986 43.0757C34.5366 43.0757 36.1113 44.6594 36.1113 46.6035C36.1113 48.5476 34.5366 50.1313 32.5986 50.1313ZM32.5986 43.106C30.6788 43.106 29.1162 44.6776 29.1162 46.6035C29.1162 48.5294 30.6788 50.101 32.5986 50.101C34.5185 50.101 36.081 48.5324 36.081 46.6035C36.081 44.6746 34.5185 43.106 32.5986 43.106Z", fill: "currentColor", stroke: "currentColor", strokeWidth: .4 }), (0, l.jsx)("path", { d: "M32.5937 50.0106C30.7072 50.0106 29.1719 48.4814 29.1719 46.604C29.1719 44.7265 30.7072 43.1973 32.5937 43.1973C34.4803 43.1973 36.0155 44.7265 36.0155 46.604C36.0155 48.4814 34.4803 50.0106 32.5937 50.0106ZM32.5937 43.2275C30.7223 43.2275 29.2022 44.7416 29.2022 46.604C29.2022 48.4663 30.7223 49.9804 32.5937 49.9804C34.4651 49.9804 35.9853 48.4663 35.9853 46.604C35.9853 44.7416 34.4651 43.2275 32.5937 43.2275Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M33.1784 49.9466C32.9907 49.9799 32.7969 49.995 32.597 49.995C32.3972 49.995 32.2064 49.9768 32.0156 49.9466C32.1579 49.7861 32.3639 49.6831 32.597 49.6831C32.8302 49.6831 33.0361 49.7861 33.1784 49.9466Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M33.1775 49.947L33.1805 49.9622L33.2078 49.9561L33.1896 49.9349L33.1775 49.947ZM32.0147 49.947L32.0025 49.938L31.9844 49.9592L32.0116 49.9652L32.0147 49.947ZM33.1744 49.9319C32.9867 49.9652 32.7929 49.9804 32.5961 49.9804V50.0106C32.7959 50.0106 32.9897 49.9925 33.1775 49.9622L33.1744 49.9319ZM32.5961 49.9804C32.3992 49.9804 32.2054 49.9622 32.0177 49.9319L32.0116 49.9622C32.2024 49.9955 32.3962 50.0106 32.593 50.0106V49.9804H32.5961ZM32.0268 49.9561C32.1661 49.7987 32.369 49.6987 32.5961 49.6987V49.6685C32.3599 49.6685 32.1479 49.7714 32.0056 49.9349L32.0268 49.9561ZM32.5961 49.7018C32.8232 49.7018 33.0261 49.8017 33.1654 49.9592L33.1896 49.938C33.0442 49.7744 32.8353 49.6715 32.5991 49.6715V49.7018H32.5961Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M29.9911 48.7962C29.7367 48.4994 29.5338 48.1542 29.3945 47.7817C29.7579 47.8453 30.0335 48.1603 30.0335 48.5418C30.0365 48.6327 30.0214 48.7174 29.9911 48.7962Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M29.9927 48.7958L29.9806 48.8049L29.9988 48.8261L30.0079 48.8018L29.9927 48.7958ZM29.3992 47.7814L29.4023 47.7662L29.375 47.7632L29.3841 47.7874L29.3992 47.7814ZM30.0049 48.7867C29.7535 48.4899 29.5506 48.1478 29.4113 47.7783L29.3841 47.7874C29.5234 48.1629 29.7263 48.5051 29.9837 48.8049L30.0049 48.7867ZM29.3962 47.7965C29.7535 47.8571 30.023 48.169 30.023 48.5414H30.0533C30.0533 48.1538 29.7717 47.8328 29.4023 47.7662L29.3962 47.7965ZM30.023 48.5414C30.023 48.6292 30.0079 48.714 29.9806 48.7897L30.0079 48.7988C30.0351 48.7171 30.0533 48.6292 30.0533 48.5384H30.023V48.5414Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M35.186 48.8053C35.4434 48.5055 35.6494 48.1572 35.7917 47.7817C35.4222 47.8393 35.1406 48.1572 35.1406 48.5418C35.1406 48.6357 35.1558 48.7235 35.186 48.8053Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M35.1847 48.8049L35.1968 48.814L35.1786 48.8321L35.1695 48.8079L35.1847 48.8049ZM35.7903 47.7814L35.7873 47.7662L35.8115 47.7632L35.8024 47.7874L35.7903 47.7814ZM35.1726 48.7958C35.43 48.496 35.6359 48.1508 35.7752 47.7753L35.8024 47.7844C35.6601 48.1629 35.4542 48.5111 35.1968 48.814L35.1726 48.7958ZM35.7903 47.7965C35.43 47.854 35.1514 48.1659 35.1514 48.5414H35.1211C35.1211 48.1508 35.4088 47.8237 35.7843 47.7662L35.7903 47.7965ZM35.1544 48.5414C35.1544 48.6323 35.1695 48.7201 35.1998 48.7988L35.1726 48.8079C35.1423 48.7231 35.1241 48.6323 35.1241 48.5384H35.1544V48.5414Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M32.5962 50.8284C32.5841 50.8284 32.5719 50.8284 32.5598 50.8284V50.7376C33.6833 50.7467 34.7431 50.3197 35.5456 49.5293C36.3481 48.739 36.7932 47.6882 36.8023 46.5648C36.8205 44.5541 35.4517 43.1581 34.7219 42.6978C33.9891 42.3889 33.0322 42.3162 32.6295 42.3193C32.2237 42.3072 31.2668 42.3647 30.531 42.6614C29.7921 43.1096 28.4022 44.4814 28.384 46.4951C28.3628 48.8147 30.2342 50.7194 32.5568 50.7376V50.8284C30.1857 50.8102 28.2719 48.8631 28.2931 46.4921C28.3113 44.439 29.7346 43.0369 30.4855 42.5827L30.4916 42.5797C31.2426 42.2769 32.2176 42.2193 32.6295 42.2284C33.0383 42.2254 34.0164 42.2981 34.7613 42.616L34.7674 42.6191C35.5093 43.0854 36.9113 44.5117 36.8931 46.5648C36.8841 47.7124 36.4268 48.7905 35.6092 49.5929C34.7976 50.3924 33.7287 50.8284 32.5962 50.8284Z", fill: "currentColor", stroke: "currentColor", strokeWidth: .3 }), (0, l.jsx)("path", { d: "M43.3449 43.2934C41.5231 43.2934 40.043 41.8047 40.043 39.9773C40.043 38.1498 41.5231 36.6611 43.3449 36.6611C45.1666 36.6611 46.6468 38.1498 46.6468 39.9773C46.6468 41.8047 45.1666 43.2934 43.3449 43.2934ZM43.3449 36.6896C41.5402 36.6896 40.0714 38.1669 40.0714 39.9773C40.0714 41.7876 41.5402 43.265 43.3449 43.265C45.1496 43.265 46.6183 41.7905 46.6183 39.9773C46.6183 38.1641 45.1496 36.6896 43.3449 36.6896Z", fill: "currentColor", stroke: "currentColor", strokeWidth: .4 }), (0, l.jsx)("path", { d: "M43.3415 43.1795C41.5682 43.1795 40.125 41.742 40.125 39.9772C40.125 38.2124 41.5682 36.7749 43.3415 36.7749C45.1149 36.7749 46.558 38.2124 46.558 39.9772C46.558 41.742 45.1149 43.1795 43.3415 43.1795ZM43.3415 36.8034C41.5824 36.8034 40.1535 38.2266 40.1535 39.9772C40.1535 41.7278 41.5824 43.151 43.3415 43.151C45.1006 43.151 46.5296 41.7278 46.5296 39.9772C46.5296 38.2266 45.1006 36.8034 43.3415 36.8034Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M43.8938 43.1197C43.7173 43.151 43.5352 43.1653 43.3473 43.1653C43.1594 43.1653 42.9801 43.1482 42.8008 43.1197C42.9346 42.9689 43.1281 42.8721 43.3473 42.8721C43.5665 42.8721 43.76 42.9689 43.8938 43.1197Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M43.891 43.1198L43.8939 43.134L43.9195 43.1283L43.9024 43.1084L43.891 43.1198ZM42.798 43.1198L42.7866 43.1112L42.7695 43.1312L42.7951 43.1369L42.798 43.1198ZM43.8882 43.1056C43.7117 43.1369 43.5295 43.1511 43.3445 43.1511V43.1796C43.5324 43.1796 43.7146 43.1625 43.891 43.134L43.8882 43.1056ZM43.3445 43.1511C43.1595 43.1511 42.9773 43.134 42.8008 43.1056L42.7951 43.134C42.9745 43.1653 43.1567 43.1796 43.3417 43.1796V43.1511H43.3445ZM42.8094 43.1283C42.9403 42.9803 43.131 42.8864 43.3445 42.8864V42.8579C43.1225 42.8579 42.9232 42.9547 42.7895 43.1084L42.8094 43.1283ZM43.3445 42.8892C43.558 42.8892 43.7487 42.9832 43.8797 43.1312L43.9024 43.1112C43.7658 42.9575 43.5694 42.8608 43.3474 42.8608V42.8892H43.3445Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M40.9006 42.038C40.6615 41.7591 40.4708 41.4346 40.3398 41.0845C40.6814 41.1442 40.9405 41.4403 40.9405 41.7989C40.9433 41.8843 40.9291 41.964 40.9006 42.038Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M40.8971 42.0375L40.8857 42.0461L40.9028 42.066L40.9113 42.0432L40.8971 42.0375ZM40.3392 41.084L40.342 41.0697L40.3164 41.0669L40.3249 41.0897L40.3392 41.084ZM40.9085 42.029C40.6722 41.7501 40.4815 41.4284 40.3506 41.0811L40.3249 41.0897C40.4559 41.4426 40.6466 41.7643 40.8885 42.0461L40.9085 42.029ZM40.3363 41.0982C40.6722 41.1551 40.9256 41.4483 40.9256 41.7984H40.954C40.954 41.4341 40.6893 41.1324 40.342 41.0697L40.3363 41.0982ZM40.9256 41.7984C40.9256 41.881 40.9113 41.9607 40.8857 42.0319L40.9113 42.0404C40.9369 41.9635 40.954 41.881 40.954 41.7956H40.9256V41.7984Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M45.781 42.0466C46.0229 41.7648 46.2165 41.4374 46.3503 41.0845C46.003 41.1386 45.7383 41.4374 45.7383 41.7989C45.7383 41.8872 45.7525 41.9697 45.781 42.0466Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M45.7824 42.0461L45.7938 42.0546L45.7767 42.0717L45.7682 42.0489L45.7824 42.0461ZM46.3517 41.084L46.3489 41.0697L46.3717 41.0669L46.3631 41.0897L46.3517 41.084ZM45.771 42.0375C46.013 41.7557 46.2066 41.4312 46.3375 41.0783L46.3631 41.0868C46.2293 41.4426 46.0358 41.77 45.7938 42.0546L45.771 42.0375ZM46.3517 41.0982C46.013 41.1523 45.7511 41.4455 45.7511 41.7984H45.7227C45.7227 41.4312 45.9931 41.1238 46.346 41.0697L46.3517 41.0982ZM45.754 41.7984C45.754 41.8838 45.7682 41.9664 45.7967 42.0404L45.771 42.0489C45.7426 41.9692 45.7255 41.8838 45.7255 41.7956H45.754V41.7984Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M43.3458 43.9481C43.3344 43.9481 43.323 43.9481 43.3116 43.9481V43.8627C44.3677 43.8713 45.3639 43.4699 46.1183 42.727C46.8726 41.984 47.291 40.9963 47.2996 39.9403C47.3166 38.0502 46.03 36.738 45.344 36.3053C44.6552 36.015 43.7557 35.9467 43.3771 35.9495C42.9957 35.9381 42.0962 35.9922 41.4045 36.2712C40.71 36.6924 39.4034 37.9819 39.3863 39.8748C39.3664 42.0552 41.1255 43.8456 43.3088 43.8627V43.9481C41.08 43.931 39.281 42.1007 39.3009 39.8719C39.318 37.942 40.6559 36.6241 41.3618 36.1971L41.3675 36.1943C42.0734 35.9097 42.99 35.8556 43.3771 35.8641C43.7614 35.8613 44.6808 35.9296 45.381 36.2285L45.3867 36.2313C46.0841 36.6697 47.402 38.0104 47.3849 39.9403C47.3764 41.0191 46.9466 42.0324 46.178 42.7867C45.4152 43.5382 44.4104 43.9481 43.3458 43.9481Z", fill: "currentColor", stroke: "currentColor", strokeWidth: .3 }), (0, l.jsx)("path", { d: "M47.1302 31.2812C45.3859 31.2812 43.9688 29.8559 43.9688 28.1062C43.9688 26.3565 45.3859 24.9312 47.1302 24.9312C48.8744 24.9312 50.2916 26.3565 50.2916 28.1062C50.2916 29.8559 48.8744 31.2812 47.1302 31.2812ZM47.1302 24.9584C45.4023 24.9584 43.996 26.3729 43.996 28.1062C43.996 29.8395 45.4023 31.254 47.1302 31.254C48.858 31.254 50.2643 29.8422 50.2643 28.1062C50.2643 26.3701 48.858 24.9584 47.1302 24.9584Z", fill: "currentColor", stroke: "currentColor", strokeWidth: .4 }), (0, l.jsx)("path", { d: "M47.1304 31.1721C45.4325 31.1721 44.0508 29.7958 44.0508 28.1061C44.0508 26.4163 45.4325 25.04 47.1304 25.04C48.8283 25.04 50.2101 26.4163 50.2101 28.1061C50.2101 29.7958 48.8283 31.1721 47.1304 31.1721ZM47.1304 25.0673C45.4462 25.0673 44.078 26.43 44.078 28.1061C44.078 29.7822 45.4462 31.1448 47.1304 31.1448C48.8147 31.1448 50.1828 29.7822 50.1828 28.1061C50.1828 26.43 48.8147 25.0673 47.1304 25.0673Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M47.6559 31.1155C47.4869 31.1455 47.3125 31.1591 47.1326 31.1591C46.9528 31.1591 46.7811 31.1428 46.6094 31.1155C46.7375 30.9711 46.9228 30.8784 47.1326 30.8784C47.3425 30.8784 47.5278 30.9711 47.6559 31.1155Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M47.648 31.115L47.6507 31.1286L47.6753 31.1232L47.6589 31.1041L47.648 31.115ZM46.6015 31.115L46.5906 31.1068L46.5742 31.1259L46.5987 31.1313L46.6015 31.115ZM47.6453 31.1014C47.4763 31.1313 47.3019 31.145 47.1247 31.145V31.1722C47.3046 31.1722 47.479 31.1559 47.648 31.1286L47.6453 31.1014ZM47.1247 31.145C46.9476 31.145 46.7732 31.1286 46.6042 31.1014L46.5987 31.1286C46.7704 31.1586 46.9449 31.1722 47.122 31.1722V31.145H47.1247ZM46.6124 31.1232C46.7377 30.9814 46.9203 30.8915 47.1247 30.8915V30.8643C46.9122 30.8643 46.7214 30.9569 46.5933 31.1041L46.6124 31.1232ZM47.1247 30.8942C47.3291 30.8942 47.5117 30.9842 47.6371 31.1259L47.6589 31.1068C47.5281 30.9596 47.34 30.867 47.1275 30.867V30.8942H47.1247Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M44.783 30.0795C44.5541 29.8124 44.3715 29.5017 44.2461 29.1665C44.5731 29.2237 44.8211 29.5072 44.8211 29.8506C44.8239 29.9323 44.8102 30.0086 44.783 30.0795Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M44.7864 30.0797L44.7755 30.0879L44.7919 30.107L44.8001 30.0852L44.7864 30.0797ZM44.2523 29.1667L44.255 29.1531L44.2305 29.1504L44.2386 29.1722L44.2523 29.1667ZM44.7973 30.0716C44.5711 29.8045 44.3885 29.4965 44.2632 29.164L44.2386 29.1722C44.364 29.5101 44.5466 29.8181 44.7783 30.0879L44.7973 30.0716ZM44.2495 29.1804C44.5711 29.2349 44.8137 29.5156 44.8137 29.8508H44.8409C44.8409 29.502 44.5875 29.2131 44.255 29.1531L44.2495 29.1804ZM44.8137 29.8508C44.8137 29.9298 44.8001 30.0062 44.7755 30.0743L44.8001 30.0825C44.8246 30.0089 44.8409 29.9298 44.8409 29.8481H44.8137V29.8508Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M49.4588 30.0877C49.6905 29.8179 49.8758 29.5044 50.0039 29.1665C49.6714 29.2183 49.418 29.5044 49.418 29.8506C49.418 29.9351 49.4316 30.0141 49.4588 30.0877Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M49.4635 30.0879L49.4744 30.0961L49.458 30.1124L49.4499 30.0906L49.4635 30.0879ZM50.0086 29.1667L50.0058 29.1531L50.0276 29.1504L50.0195 29.1722L50.0086 29.1667ZM49.4526 30.0797C49.6842 29.8099 49.8696 29.4992 49.9949 29.1613L50.0195 29.1695C49.8914 29.5101 49.706 29.8236 49.4744 30.0961L49.4526 30.0797ZM50.0086 29.1804C49.6842 29.2322 49.4335 29.5129 49.4335 29.8508H49.4062C49.4062 29.4992 49.6652 29.2049 50.0031 29.1531L50.0086 29.1804ZM49.4362 29.8508C49.4362 29.9326 49.4499 30.0116 49.4771 30.0825L49.4526 30.0906C49.4253 30.0143 49.409 29.9326 49.409 29.8481H49.4362V29.8508Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M47.1307 31.9083C47.1198 31.9083 47.1089 31.9083 47.098 31.9083V31.8265C48.1091 31.8347 49.063 31.4504 49.7852 30.7391C50.5074 30.0278 50.908 29.0821 50.9162 28.071C50.9326 26.2613 49.7007 25.005 49.0439 24.5907C48.3844 24.3127 47.5231 24.2473 47.1607 24.25C46.7955 24.2391 45.9343 24.2909 45.272 24.558C44.607 24.9613 43.3561 26.1959 43.3397 28.0083C43.3207 30.0959 45.0049 31.8102 47.0953 31.8265V31.9083C44.9613 31.8919 43.2389 30.1395 43.258 28.0056C43.2743 26.1578 44.5552 24.8959 45.2311 24.4871L45.2366 24.4844C45.9125 24.2119 46.79 24.1601 47.1607 24.1683C47.5286 24.1655 48.4089 24.231 49.0793 24.5171L49.0848 24.5198C49.7525 24.9395 51.0143 26.2232 50.998 28.071C50.9898 29.1039 50.5783 30.0741 49.8424 30.7963C49.112 31.5158 48.15 31.9083 47.1307 31.9083Z", fill: "currentColor", stroke: "currentColor", strokeWidth: .3 }), (0, l.jsx)("path", { d: "M42.142 20.3012C40.4753 20.3012 39.1211 18.9392 39.1211 17.2673C39.1211 15.5954 40.4753 14.2334 42.142 14.2334C43.8087 14.2334 45.1629 15.5954 45.1629 17.2673C45.1629 18.9392 43.8087 20.3012 42.142 20.3012ZM42.142 14.2594C40.4909 14.2594 39.1471 15.611 39.1471 17.2673C39.1471 18.9236 40.4909 20.2752 42.142 20.2752C43.7931 20.2752 45.1369 18.9262 45.1369 17.2673C45.1369 15.6084 43.7931 14.2594 42.142 14.2594Z", fill: "currentColor", stroke: "currentColor", strokeWidth: .4 }), (0, l.jsx)("path", { d: "M42.142 20.1969C40.5196 20.1969 39.1992 18.8818 39.1992 17.2672C39.1992 15.6525 40.5196 14.3374 42.142 14.3374C43.7644 14.3374 45.0848 15.6525 45.0848 17.2672C45.0848 18.8818 43.7644 20.1969 42.142 20.1969ZM42.142 14.3634C40.5326 14.3634 39.2253 15.6656 39.2253 17.2672C39.2253 18.8688 40.5326 20.1709 42.142 20.1709C43.7514 20.1709 45.0587 18.8688 45.0587 17.2672C45.0587 15.6656 43.7514 14.3634 42.142 14.3634Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M42.6406 20.1426C42.4792 20.1712 42.3125 20.1843 42.1406 20.1843C41.9688 20.1843 41.8047 20.1686 41.6406 20.1426C41.763 20.0046 41.9401 19.916 42.1406 19.916C42.3412 19.916 42.5182 20.0046 42.6406 20.1426Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M42.6433 20.1419L42.6459 20.155L42.6693 20.1497L42.6537 20.1315L42.6433 20.1419ZM41.6432 20.1419L41.6328 20.1341L41.6172 20.1523L41.6406 20.1576L41.6432 20.1419ZM42.6406 20.1289C42.4792 20.1576 42.3125 20.1706 42.1432 20.1706V20.1966C42.3151 20.1966 42.4818 20.181 42.6433 20.155L42.6406 20.1289ZM42.1432 20.1706C41.974 20.1706 41.8073 20.155 41.6458 20.1289L41.6406 20.155C41.8047 20.1836 41.9714 20.1966 42.1406 20.1966V20.1706H42.1432ZM41.6536 20.1497C41.7734 20.0143 41.9479 19.9284 42.1432 19.9284V19.9023C41.9401 19.9023 41.7578 19.9909 41.6354 20.1315L41.6536 20.1497ZM42.1432 19.931C42.3386 19.931 42.513 20.0169 42.6328 20.1523L42.6537 20.1341C42.5287 19.9935 42.349 19.9049 42.1458 19.9049V19.931H42.1432Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M39.9076 19.1522C39.6888 18.897 39.5143 18.6001 39.3945 18.2798C39.707 18.3345 39.944 18.6053 39.944 18.9334C39.9466 19.0116 39.9336 19.0845 39.9076 19.1522Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M39.9024 19.1522L39.8919 19.16L39.9076 19.1782L39.9154 19.1574L39.9024 19.1522ZM39.3919 18.2798L39.3945 18.2668L39.3711 18.2642L39.3789 18.285L39.3919 18.2798ZM39.9128 19.1444C39.6966 18.8892 39.5221 18.5949 39.4023 18.2772L39.3789 18.285C39.4987 18.6079 39.6732 18.9022 39.8945 19.16L39.9128 19.1444ZM39.3893 18.2928C39.6966 18.3449 39.9284 18.6131 39.9284 18.9334H39.9544C39.9544 18.6001 39.7122 18.3241 39.3945 18.2668L39.3893 18.2928ZM39.9284 18.9334C39.9284 19.009 39.9154 19.0819 39.8919 19.147L39.9154 19.1548C39.9388 19.0845 39.9544 19.009 39.9544 18.9308H39.9284V18.9334Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M44.3711 19.16C44.5925 18.9022 44.7695 18.6027 44.8919 18.2798C44.5742 18.3293 44.332 18.6027 44.332 18.9334C44.332 19.0142 44.3451 19.0897 44.3711 19.16Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M44.3711 19.16L44.3815 19.1678L44.3659 19.1834L44.3581 19.1626L44.3711 19.16ZM44.8919 18.2798L44.8893 18.2668L44.9102 18.2642L44.9024 18.285L44.8919 18.2798ZM44.3607 19.1522C44.582 18.8944 44.7591 18.5975 44.8789 18.2746L44.9024 18.2824C44.78 18.6079 44.6029 18.9074 44.3815 19.1678L44.3607 19.1522ZM44.8919 18.2928C44.582 18.3423 44.3424 18.6105 44.3424 18.9334H44.3164C44.3164 18.5975 44.5638 18.3162 44.8867 18.2668L44.8919 18.2928ZM44.3451 18.9334C44.3451 19.0116 44.3581 19.0871 44.3841 19.1548L44.3607 19.1626C44.3346 19.0897 44.319 19.0116 44.319 18.9308H44.3451V18.9334Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M42.1461 20.9002C42.1356 20.9002 42.1252 20.9002 42.1148 20.9002V20.822C43.081 20.8299 43.9925 20.4627 44.6826 19.783C45.3727 19.1033 45.7555 18.1996 45.7633 17.2334C45.779 15.5042 44.6019 14.3037 43.9742 13.9078C43.344 13.6422 42.5211 13.5797 42.1747 13.5823C41.8257 13.5719 41.0028 13.6214 40.37 13.8766C39.7346 14.262 38.5392 15.4417 38.5236 17.1735C38.5054 19.1684 40.1148 20.8064 42.1122 20.822V20.9002C40.0731 20.8845 38.4272 19.21 38.4455 17.1709C38.4611 15.4053 39.6851 14.1995 40.3309 13.8089L40.3361 13.8063C40.982 13.5458 41.8205 13.4964 42.1747 13.5042C42.5263 13.5016 43.3674 13.5641 44.0081 13.8375L44.0133 13.8401C44.6513 14.2412 45.8571 15.4678 45.8415 17.2334C45.8336 18.2204 45.4404 19.1475 44.7373 19.8376C44.0393 20.5252 43.12 20.9002 42.1461 20.9002Z", fill: "currentColor", stroke: "currentColor", strokeWidth: .3 }), (0, l.jsx)("line", { stroke: "currentColor", strokeWidth: .516, x1: 28.7227, x2: 31.4747, y1: 25.2859, y2: 25.2859 }), (0, l.jsx)("circle", { cx: 30.1002, cy: 30.274, r: 3.268, stroke: "currentColor", strokeWidth: .516 }), (0, l.jsx)("path", { d: "M29.9908 20.4299L29.7199 20.6265V20.4795L29.9985 20.2798H30.1254V21.3525H29.9908V20.4299ZM30.707 21.3742C30.5088 21.3742 30.3602 21.2473 30.3525 21.0445H30.4872C30.4949 21.1652 30.5708 21.255 30.707 21.255C30.8355 21.255 30.9299 21.1792 30.9299 21.0569C30.9299 20.9253 30.8262 20.8572 30.6884 20.8572H30.6126V20.7349H30.6884C30.8184 20.7349 30.9051 20.6683 30.9051 20.5553C30.9051 20.4547 30.8277 20.3773 30.7085 20.3773C30.5769 20.3773 30.498 20.4547 30.4949 20.5723H30.3602C30.368 20.3788 30.5042 20.2581 30.7116 20.2581C30.8881 20.2581 31.0398 20.3618 31.0398 20.5553C31.0398 20.6652 30.9655 20.7658 30.8571 20.7968C30.9949 20.8309 31.063 20.9423 31.063 21.0569C31.063 21.2488 30.9113 21.3742 30.707 21.3742Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M22.5962 24.0413L22.3253 24.2379V24.0908L22.604 23.8911H22.7309V24.9639H22.5962V24.0413ZM22.9641 24.9639V24.8385L23.3929 24.3772C23.4642 24.3013 23.4905 24.2317 23.4905 24.1697C23.4905 24.0614 23.4208 23.9886 23.3047 23.9886C23.1762 23.9886 23.0988 24.0645 23.0988 24.2208H22.9626C22.9626 23.9933 23.1035 23.8694 23.3063 23.8694C23.4967 23.8694 23.6251 23.9871 23.6251 24.1682C23.6251 24.2781 23.5772 24.3663 23.4982 24.4499L23.136 24.84H23.6453V24.9639H22.9641Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M20.7017 31.7815L20.4308 31.9781V31.831L20.7094 31.6313H20.8364V32.7041H20.7017V31.7815ZM21.3034 31.7815L21.0325 31.9781V31.831L21.3111 31.6313H21.438V32.7041H21.3034V31.7815Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M24.4869 37.6291L24.216 37.8257V37.6787L24.4946 37.479H24.6215V38.5518H24.4869V37.6291ZM25.2418 38.5734C25.1303 38.5734 25.0545 38.5347 24.9987 38.4821C24.8842 38.3722 24.8656 38.222 24.8656 38.0146C24.8656 37.8072 24.8842 37.657 24.9987 37.5471C25.0545 37.4945 25.1303 37.4573 25.2418 37.4573C25.3532 37.4573 25.4291 37.4945 25.4848 37.5471C25.5994 37.657 25.6179 37.8072 25.6179 38.0146C25.6179 38.222 25.5994 38.3722 25.4848 38.4821C25.4291 38.5347 25.3532 38.5734 25.2418 38.5734ZM25.2418 38.4527C25.3021 38.4527 25.3548 38.4326 25.3873 38.4031C25.4647 38.3319 25.4802 38.2391 25.4802 38.0146C25.4802 37.8521 25.4771 37.7096 25.3873 37.6276C25.3548 37.5982 25.3021 37.5781 25.2418 37.5781C25.1814 37.5781 25.1288 37.5982 25.0963 37.6276C25.0065 37.7096 25.0034 37.8521 25.0034 38.0146C25.0034 38.2437 25.0204 38.3335 25.0963 38.4031C25.1288 38.4326 25.1814 38.4527 25.2418 38.4527Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M32.1779 40.1213C32.0076 40.1213 31.8621 40.0067 31.8482 39.8349H31.9891C31.9968 39.9324 32.0742 40.0021 32.1841 40.0021C32.3822 40.0021 32.4194 39.8086 32.4194 39.5841C32.39 39.6708 32.2754 39.725 32.1686 39.725C31.9596 39.725 31.8172 39.5764 31.8172 39.3674C31.8172 39.1631 31.9612 39.0052 32.1872 39.0052C32.3126 39.0052 32.4086 39.0609 32.4643 39.1337C32.5463 39.2405 32.5587 39.3937 32.5587 39.5454C32.5587 39.6987 32.5494 39.8597 32.472 39.9758C32.4194 40.0563 32.3219 40.1213 32.1779 40.1213ZM32.1826 39.6073C32.325 39.6073 32.4039 39.5021 32.4039 39.3659C32.4039 39.2389 32.3281 39.1244 32.1795 39.1244C32.037 39.1244 31.9581 39.2296 31.9581 39.3659C31.9581 39.4959 32.0309 39.6073 32.1826 39.6073Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M38.209 36.6818C38.0031 36.6818 37.8437 36.5626 37.8437 36.3629C37.8437 36.2453 37.9164 36.1431 38.0248 36.1013C37.9288 36.058 37.8669 35.9667 37.8669 35.8629C37.8669 35.6834 38.0093 35.5657 38.209 35.5657C38.4087 35.5657 38.5511 35.6834 38.5511 35.8629C38.5511 35.9667 38.4923 36.058 38.3963 36.1013C38.5047 36.1431 38.5743 36.2453 38.5743 36.3629C38.5743 36.5626 38.4149 36.6818 38.209 36.6818ZM38.209 36.0441C38.3391 36.0441 38.4118 35.962 38.4118 35.8629C38.4118 35.753 38.3282 35.6818 38.209 35.6818C38.0898 35.6818 38.0062 35.753 38.0062 35.8629C38.0062 35.962 38.079 36.0441 38.209 36.0441ZM38.209 36.5657C38.3406 36.5657 38.4335 36.4837 38.4335 36.3567C38.4335 36.2422 38.3514 36.1586 38.209 36.1586C38.0666 36.1586 37.9846 36.2422 37.9846 36.3567C37.9846 36.4837 38.0774 36.5657 38.209 36.5657Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M39.4579 29.6079L39.9131 28.6543H39.3465V28.5351H40.0524V28.6543L39.6035 29.6079H39.4579Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M37.1941 23.9533C37.0671 23.9533 36.9711 23.8929 36.9154 23.8171C36.8365 23.7103 36.8194 23.5663 36.8194 23.4131C36.8194 23.2443 36.8473 23.0586 36.9526 22.9425C37.0114 22.8775 37.0981 22.8372 37.2188 22.8372C37.3907 22.8372 37.5269 22.9456 37.5408 23.1189H37.4015C37.3922 23.0214 37.3148 22.9564 37.208 22.9564C37.0021 22.9564 36.9588 23.1716 36.9588 23.3666C36.999 23.2846 37.0965 23.2273 37.2126 23.2273C37.4278 23.2273 37.5609 23.379 37.5609 23.588C37.5609 23.7908 37.4185 23.9533 37.1941 23.9533ZM37.1972 23.8341C37.3411 23.8341 37.4247 23.7273 37.4247 23.5895C37.4247 23.4595 37.352 23.3449 37.1941 23.3449C37.0501 23.3449 36.9727 23.4518 36.9727 23.5895C36.9727 23.718 37.0501 23.8341 37.1972 23.8341Z", fill: "currentColor" })] }) }; G(); var tT = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: "100%", viewBox: "0 0 50 50", width: "100%", xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("rect", { height: 49, opacity: .3, rx: 5.5, stroke: "currentColor", width: 49, x: .5, y: .5 }), (0, l.jsx)("path", { d: "M37.9556 29.7526C37.9556 23.0288 32.5049 17.5781 25.7812 17.5781C19.0574 17.5781 13.6067 23.0288 13.6067 29.7526", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 1.0625 }), (0, l.jsx)("path", { d: "M29.1016 28.646H22.4609", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 1.0625 }), (0, l.jsx)("path", { d: "M29.1016 24.2188H22.4609", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 1.0625 })] }) }; G(); var tD = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 43, viewBox: "0 0 44 43", width: 44, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("rect", { height: 41.5514, rx: 10.1215, stroke: "currentColor", strokeWidth: 1.06542, width: 41.5514, x: 1.36425, y: .53271 }), (0, l.jsx)("path", { d: "M25.1202 24.2177C26.0796 24.0178 26.0867 24.0164 26.0867 24.0164L25.1202 24.2177Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M21.193 11.4192C19.7478 14.3264 16.7994 20.3864 16.06 22.8928C15.07 26.2486 17.05 31.0833 22 31.0833C26.95 31.0833 28.93 26.2486 27.94 22.8928C27.2006 20.3864 24.2522 14.3264 22.807 11.4192C22.4734 10.7481 21.5266 10.7481 21.193 11.4192ZM26.0867 24.0164L26.0875 24.0202L26.0885 24.0246L26.0907 24.0354L26.0962 24.0641C26.1004 24.0863 26.1053 24.1149 26.1104 24.1493C26.1207 24.2179 26.132 24.3103 26.1397 24.4225C26.1551 24.6459 26.1569 24.9537 26.1058 25.312C26.0027 26.0336 25.6818 26.9692 24.8285 27.8026C23.9753 28.636 23.0174 28.9494 22.2785 29.0501C21.9117 29.1 21.5966 29.0983 21.3678 29.0832C21.253 29.0757 21.1583 29.0646 21.0881 29.0546C21.0529 29.0496 21.0236 29.0448 21.0008 29.0408L20.9715 29.0354L20.9605 29.0332L20.9559 29.0323L20.9539 29.0319C20.9539 29.0319 20.952 29.0315 21.1585 28.0858L20.952 29.0315C20.4173 28.9201 20.0762 28.4064 20.1903 27.8841C20.3036 27.3653 20.8233 27.0331 21.3544 27.138C21.3572 27.1384 21.3639 27.1396 21.3744 27.1411C21.3986 27.1445 21.4419 27.1498 21.501 27.1537C21.62 27.1616 21.7965 27.1631 22.005 27.1347C22.4166 27.0786 22.9437 26.9086 23.4285 26.4351C23.9132 25.9616 24.0873 25.4468 24.1447 25.0448C24.1738 24.8412 24.1722 24.6688 24.1642 24.5525C24.1602 24.4949 24.1548 24.4525 24.1512 24.4289C24.1497 24.4187 24.1486 24.4121 24.1481 24.4094C24.0407 23.8907 24.3808 23.383 24.912 23.2724C25.4467 23.161 25.9727 23.4941 26.0867 24.0164Z", fill: "currentColor" })] }) }; G(); var tW = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: "100%", viewBox: "0 0 50 50", width: "100%", xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("rect", { height: 49, opacity: .3, rx: 5.5, stroke: "currentColor", width: 49, x: .5, y: .5 }), (0, l.jsx)("path", { d: "M21.0625 19.3804C21.5813 17.5591 23.7405 13.0048 24.6223 11.1766C24.7761 10.8578 25.2239 10.8578 25.3777 11.1766C26.2595 13.0048 28.4187 17.5591 28.9375 19.3804C29.5937 21.6842 28.2812 25.0034 25 25.0034C21.7188 25.0034 20.4062 21.6842 21.0625 19.3804ZM26.9303 19.6421C26.5782 19.7181 26.3527 20.0666 26.4239 20.4228L26.426 20.4361C26.4283 20.4524 26.432 20.4814 26.4346 20.521C26.4399 20.6009 26.441 20.7192 26.4217 20.859C26.3836 21.135 26.2682 21.4884 25.9469 21.8135C25.6255 22.1385 25.2761 22.2553 25.0033 22.2938C24.8651 22.3133 24.7481 22.3122 24.6692 22.3068C24.63 22.3042 24.6013 22.3005 24.5853 22.2981L24.572 22.296C24.22 22.224 23.8754 22.4521 23.8003 22.8083C23.7248 23.1668 23.9508 23.5195 24.3053 23.5959L24.4422 22.9467C24.3053 23.5959 24.3062 23.5961 24.3065 23.5962L24.3079 23.5965L24.3109 23.5971L24.3182 23.5986L24.3377 23.6023C24.3528 23.6051 24.3722 23.6084 24.3955 23.6118C24.4421 23.6187 24.5048 23.6263 24.5809 23.6315C24.7325 23.6418 24.9415 23.643 25.1846 23.6087C25.6744 23.5396 26.3093 23.3244 26.875 22.7523C27.4406 22.1801 27.6533 21.5378 27.7216 21.0424C27.7555 20.7965 27.7543 20.5851 27.7441 20.4317C27.739 20.3547 27.7315 20.2913 27.7247 20.2442C27.7213 20.2206 27.718 20.201 27.7153 20.1857L27.7116 20.166L27.7102 20.1586L27.7095 20.1556L27.709 20.1529L27.0672 20.2914C27.3843 20.223 27.5447 20.1883 27.6259 20.1707C27.7077 20.153 27.7089 20.1528 27.709 20.1529C27.6334 19.7944 27.2848 19.5657 26.9303 19.6421Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M21.2637 34.2154L20.6237 34.3535L21.1804 34.2333C21.2615 34.2157 21.2636 34.2153 21.2637 34.2154Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M18.177 25.2391C17.2951 27.0673 15.136 31.6216 14.6172 33.4429C13.9609 35.7467 15.2734 39.0659 18.5547 39.0659C21.8359 39.0659 23.1484 35.7467 22.4922 33.4429C21.9734 31.6216 19.8142 27.0673 18.9324 25.2391C18.7786 24.9203 18.3308 24.9203 18.177 25.2391ZM21.2637 34.2154L21.2642 34.2181L21.2648 34.2211L21.2663 34.2285L21.27 34.2482C21.2727 34.2635 21.276 34.2831 21.2794 34.3067C21.2862 34.3538 21.2937 34.4172 21.2988 34.4942C21.309 34.6476 21.3102 34.859 21.2763 35.1049C21.208 35.6003 20.9953 36.2426 20.4296 36.8148C19.864 37.3869 19.2291 37.6021 18.7393 37.6712C18.4962 37.7055 18.2872 37.7043 18.1356 37.694C18.0595 37.6888 17.9968 37.6812 17.9502 37.6743C17.9268 37.6709 17.9075 37.6676 17.8923 37.6648L17.8729 37.6611L17.8656 37.6596L17.8626 37.659L17.8612 37.6587C17.8609 37.6586 17.86 37.6584 17.9969 37.0092L17.86 37.6584C17.5055 37.582 17.2794 37.2293 17.355 36.8708C17.4301 36.5146 17.7747 36.2865 18.1267 36.3585L18.14 36.3606C18.156 36.363 18.1847 36.3667 18.2239 36.3693C18.3028 36.3747 18.4198 36.3758 18.558 36.3563C18.8308 36.3178 19.1802 36.201 19.5016 35.876C19.8229 35.5509 19.9383 35.1975 19.9764 34.9215C19.9957 34.7817 19.9946 34.6634 19.9893 34.5835C19.9866 34.5439 19.983 34.5149 19.9807 34.4986L19.9786 34.4853C19.9074 34.1291 20.1328 33.7806 20.485 33.7046C20.8394 33.6282 21.1881 33.8569 21.2637 34.2154Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M34.1543 34.2154L33.5157 34.3532L34.071 34.2333C34.1521 34.2157 34.1542 34.2153 34.1543 34.2154Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M31.0676 25.2391C30.1858 27.0673 28.0266 31.6216 27.5078 33.4429C26.8516 35.7467 28.1641 39.0659 31.4453 39.0659C34.7266 39.0659 36.0391 35.7467 35.3828 33.4429C34.864 31.6216 32.7049 27.0673 31.823 25.2391C31.6692 24.9203 31.2214 24.9203 31.0676 25.2391ZM34.1543 34.2154L34.1548 34.2181L34.1555 34.2211L34.1569 34.2285L34.1606 34.2482C34.1619 34.2556 34.1634 34.2641 34.1649 34.2735C34.1666 34.2835 34.1683 34.2945 34.17 34.3067C34.1768 34.3538 34.1843 34.4172 34.1894 34.4942C34.1996 34.6476 34.2008 34.859 34.1669 35.1049C34.0986 35.6003 33.8859 36.2426 33.3203 36.8148C32.7547 37.3869 32.1197 37.6021 31.6299 37.6712C31.3868 37.7055 31.1779 37.7043 31.0262 37.694C30.9501 37.6888 30.8874 37.6812 30.8408 37.6743C30.8175 37.6709 30.7981 37.6676 30.783 37.6648L30.7635 37.6611L30.7562 37.6596L30.7532 37.659L30.7519 37.6587C30.7515 37.6586 30.7506 37.6584 30.8875 37.0092L30.7506 37.6584C30.3961 37.582 30.1701 37.2293 30.2457 36.8708C30.3208 36.5146 30.6653 36.2865 31.0174 36.3585L31.0306 36.3606C31.0466 36.363 31.0754 36.3667 31.1145 36.3693C31.1934 36.3747 31.3104 36.3758 31.4486 36.3563C31.7214 36.3178 32.0708 36.201 32.3922 35.876C32.7135 35.5509 32.8289 35.1975 32.867 34.9215C32.8863 34.7817 32.8852 34.6634 32.8799 34.5835C32.8773 34.5439 32.8736 34.5149 32.8713 34.4986L32.8692 34.4853C32.798 34.1291 33.0235 33.7806 33.3756 33.7046C33.7301 33.6282 34.0787 33.8569 34.1543 34.2154Z", fill: "currentColor" })] }) }; G(); var tG = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 80, viewBox: "0 0 80 80", width: 80, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M51.0863 27.1226C51.3769 26.8849 53.6865 25.5326 53.6865 25.5326L50.1252 24.9902C49.4175 23.9054 47.4134 21.4757 43.5913 21.2826H43.569C38.3911 21.134 36.0517 25.4286 35.5227 27.7542C35.3364 28.4155 31.4473 42.3915 25.8224 51.6494C25.1966 52.6822 24.5186 53.6555 23.8257 54.5397H26.5898C26.9772 53.9824 27.3571 53.4029 27.7222 52.801C33.6154 43.1048 37.5119 28.9133 37.6758 28.3115L37.6907 28.2594C37.7354 28.0588 38.8231 23.3779 43.4945 23.5042C45.1336 23.5859 46.3107 24.2323 47.1079 24.901C46.4448 24.9679 45.7072 25.1462 44.8057 25.5326C43.189 26.179 42.1162 27.197 41.6096 28.5418C40.6634 31.068 42.1162 33.8915 42.593 34.8202C45.752 40.9723 39.8439 46.0397 34.3306 49.2049L33.295 49.8365L34.3381 51.2408L37.0127 54.8295L37.5119 55.4759L38.2793 55.2158C39.9929 54.6289 41.8331 54.7477 43.4647 55.5427C45.0963 56.3452 46.3107 57.7272 46.8993 59.4436C47.1973 60.3203 47.3165 61.2268 47.2495 62.1184C48.0094 61.8658 48.7544 61.5835 49.4771 61.2565C49.4398 60.4021 49.2834 59.555 49.0003 58.7229C48.218 56.4418 46.6013 54.6065 44.4407 53.5441C42.5259 52.6079 40.3877 52.3776 38.3314 52.8828L36.9606 51.0476C40.0301 50.2823 46.2288 48.343 49.1716 44.5908C53.3065 39.3154 51.1757 34.7757 49.7602 31.7664C49.3579 30.8971 49.2834 30.1393 49.5516 29.4259C50.0806 28.0142 50.6841 27.457 51.0938 27.1226M49.3355 38.825C49.2983 39.1668 49.2461 39.5086 49.1568 39.8653C49.0673 40.2145 48.9481 40.5785 48.7917 40.9426C48.6873 41.1878 48.5682 41.433 48.434 41.6857C48.367 41.8119 48.2925 41.9382 48.218 42.0646C47.9945 42.4435 47.7263 42.8298 47.4134 43.2236C45.8562 45.2075 43.0848 46.6341 40.5367 47.6074C41.0284 47.1839 41.4904 46.753 41.915 46.322C42.1982 46.0322 42.4663 45.7425 42.7197 45.4452C43.0996 45.0069 43.4423 44.5611 43.7478 44.1152C43.949 43.8181 44.1427 43.5134 44.314 43.2163C44.8356 42.3097 45.2081 41.3959 45.4391 40.4597C45.5433 40.0436 45.6104 39.6349 45.6551 39.2486C45.67 39.1519 45.6775 39.0554 45.6849 38.9588C45.7072 38.669 45.7147 38.3941 45.7147 38.1266C45.7147 38.0375 45.7147 37.9483 45.7072 37.8591C45.6998 37.6808 45.6849 37.5174 45.67 37.3464C45.6626 37.2647 45.6551 37.183 45.6402 37.1013C45.6178 36.9378 45.5955 36.7818 45.5657 36.6332C45.521 36.4028 45.4763 36.1874 45.4241 35.9793C45.372 35.7713 45.3124 35.5781 45.2528 35.3923C45.2155 35.2661 45.1708 35.1545 45.1261 35.0431C45.0814 34.9317 45.0441 34.8276 44.9995 34.7236C44.8951 34.471 44.7908 34.2556 44.7089 34.0846C44.6567 33.9806 44.6121 33.8915 44.5673 33.8098C44.4482 33.572 44.3289 33.3416 44.2321 33.1113C44.1203 32.8587 44.016 32.6135 43.9341 32.3683C43.7106 31.759 43.5764 31.2092 43.5392 30.7113C43.4945 30.1912 43.5392 29.7232 43.6957 29.3294C43.7329 29.2402 43.7702 29.1436 43.8148 29.0544C43.8596 28.9653 43.9117 28.8836 43.9713 28.8019C44.0905 28.6384 44.2247 28.4824 44.3886 28.3412C44.7089 28.0514 45.1336 27.8136 45.6476 27.6056H45.67L45.6775 27.5908C45.7966 27.5387 45.9233 27.4941 46.05 27.4495C46.7428 27.2043 47.5474 27.078 48.4266 27.0632C48.2329 27.2861 48.0541 27.5238 47.8976 27.7914C47.7337 28.0514 47.5922 28.3412 47.4729 28.6458C47.4059 28.8241 47.3538 29.0099 47.3016 29.1882C47.242 29.4111 47.2048 29.6414 47.1824 29.8718C47.1302 30.4588 47.1824 31.0532 47.3538 31.6699C47.4506 32.0191 47.5773 32.3683 47.7486 32.725C47.9051 33.0593 48.0615 33.4011 48.218 33.7428C48.2478 33.8172 48.285 33.8915 48.3149 33.9658C48.4862 34.367 48.6576 34.7682 48.7991 35.1843C48.8363 35.2809 48.8662 35.3775 48.896 35.474C48.9853 35.749 49.0674 36.0239 49.1344 36.3063C49.1716 36.4697 49.2089 36.6406 49.2387 36.804C49.3206 37.2498 49.3653 37.7031 49.3653 38.1638C49.3653 38.3866 49.3579 38.6096 49.3355 38.8325", fill: "currentColor", fillOpacity: .5 }), (0, l.jsx)("path", { d: "M31.4468 61.635C32.1844 61.9248 32.9443 62.1848 33.7117 62.4003C33.4658 60.253 34.2481 58.0908 35.9095 56.59L34.4194 54.9405C32.4824 56.694 31.4468 59.1311 31.4468 61.635Z", fill: "currentColor", fillOpacity: .5 }), (0, l.jsx)("path", { d: "M19.2431 16.267C19.0494 16.0515 18.7439 16.0144 18.4385 16.2893L17.8275 16.8465L18.58 17.6713L19.1761 17.1289C19.4815 16.854 19.4294 16.4676 19.2431 16.267Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M20.9796 18.9054C21.3446 18.571 21.2999 18.1475 21.0764 17.9023C20.8678 17.672 20.4506 17.568 20.1005 17.8875L19.3777 18.5413L20.2792 19.5296L20.9721 18.898L20.9796 18.9054Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M26.5821 11.6164C26.4033 11.2597 26.0531 11.1705 25.6582 11.3712L24.8908 11.7575L25.4869 12.9463L26.2096 12.5823C26.6193 12.3742 26.7758 12.0027 26.5821 11.6164Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M53.7835 15.2638C54.6924 15.769 55.728 15.4273 56.2644 14.454C56.8083 13.4732 56.5401 12.4181 55.6312 11.9203C54.7223 11.415 53.6866 11.7568 53.1502 12.7302C52.6064 13.7109 52.8745 14.766 53.7835 15.2638Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M39.9999 4C20.115 4 4 20.1158 4 39.9988C4 59.8817 20.115 75.9978 39.9999 75.9978C59.8847 75.9978 76 59.8817 76 39.9988C76 20.1158 59.8773 4 39.9999 4ZM63.6844 16.2522L60.1157 19.8187L61.8665 21.5722L60.7937 22.6496L57.9179 19.7741L62.5594 15.1303L63.6844 16.2597V16.2522ZM51.749 11.9577C52.6952 10.2487 54.6844 9.65433 56.3757 10.5905C58.0669 11.5267 58.6182 13.5254 57.6795 15.2343C56.7332 16.9432 54.744 17.5376 53.0528 16.6015C51.3616 15.6653 50.8028 13.6665 51.749 11.9577ZM44.7755 6.75657L50.1174 7.96027L49.7821 9.44628L47.8898 9.01528L46.7871 13.9341L45.23 13.5848L46.3401 8.66609L44.4477 8.23517L44.783 6.75657H44.7755ZM38.6588 10.5682C37.7499 10.3527 36.6696 10.0184 36.6249 8.66609C36.5802 7.26924 37.7276 6.44451 38.9866 6.39993C39.7913 6.3702 40.6406 6.68227 41.2441 7.3807L40.2606 8.49519C39.9626 8.10885 39.4039 7.91568 38.9494 7.9305C38.5396 7.94538 38.2044 8.11629 38.2192 8.4506C38.2341 8.91129 38.8004 9.00047 39.4485 9.14905C40.365 9.34966 41.4601 9.632 41.5123 10.9991C41.5644 12.4108 40.4245 13.2133 39.1505 13.2579C38.2416 13.2877 37.2656 12.9384 36.5877 12.1359L37.6158 10.9769C37.9957 11.4895 38.6737 11.7273 39.1952 11.7125C39.6199 11.6976 39.918 11.5192 39.9105 11.2221C39.8956 10.806 39.3294 10.7242 38.6663 10.5682M32.5943 7.3584L34.1886 13.726L32.639 14.1123L31.0446 7.74477L32.5868 7.3584H32.5943ZM25.1216 10.011C26.4701 9.33484 27.5206 9.92923 27.99 10.858C28.3253 11.5267 28.2358 12.2845 27.6919 12.9384L30.389 14.7067L28.735 15.539L26.4924 14.0009L26.1125 14.1866L27.1854 16.3117L25.7624 17.025L22.812 11.1626L25.1141 10.0035L25.1216 10.011ZM17.716 14.9891C18.5951 14.1866 19.6531 14.3427 20.1895 14.9371C20.5844 15.368 20.7259 16.007 20.3236 16.6683C21.1432 16.2374 21.8733 16.4231 22.3203 16.9061C22.9834 17.6342 23.0653 18.9939 22.0223 19.9376L20.1075 21.6837L15.6895 16.8318L17.716 14.9891ZM28.6605 70.2022C29.3907 70.4845 30.1282 70.2765 30.687 69.6375L31.745 70.6554C30.7466 71.7402 29.4055 72.1194 27.9602 71.5619C25.9262 70.7817 25.524 68.8722 26.12 67.3118C26.7458 65.6847 28.4593 64.4365 30.5752 65.2537C31.7971 65.7218 32.4601 66.5986 32.6464 67.7354L31.1638 68.092C31.0595 67.4159 30.6423 66.8958 29.9792 66.6432C28.8691 66.2196 27.9974 66.8809 27.6622 67.7651C27.3194 68.6642 27.5728 69.7861 28.6679 70.2096M36.61 73.4785L35.038 73.2781L35.8724 66.8066L37.4444 67.0072L36.61 73.4785ZM44.6265 73.3676L43.0545 73.5386L42.5106 68.5527L40.5884 68.7607L40.4245 67.2599L45.8409 66.6654L46.0048 68.1663L44.0827 68.3744L44.6265 73.3597V73.3676ZM52.8368 71.1978L51.7416 68.6493L47.994 66.1677L49.7523 65.4097L51.9055 67.0147L52.2184 64.3473L53.9766 63.5894L53.2018 68.0177L54.297 70.5663L52.8442 71.1978H52.8368ZM40.0148 64.7188C26.3658 64.7188 15.3096 53.6554 15.3096 40.0137C15.3096 26.3721 26.3509 15.2938 39.9999 15.2938C53.6489 15.2938 64.7051 26.3572 64.7051 39.9988C64.7051 53.6405 53.6414 64.7039 39.9999 64.7039", fill: "currentColor" }), (0, l.jsx)("path", { d: "M20.1077 34.9465H20.7484V32.3162H19.7426V32.9107H20.1077V34.9465Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M22.9464 33.5565C23.2072 33.4301 23.3413 33.2073 23.3413 32.977C23.3413 32.5311 22.9688 32.2785 22.4547 32.2785C21.9406 32.2785 21.5309 32.546 21.5309 32.9843C21.5309 33.2147 21.65 33.4228 21.9108 33.549C21.5905 33.6531 21.434 33.8983 21.434 34.1806C21.434 34.6487 21.8438 34.9682 22.4323 34.9682C23.0209 34.9682 23.4232 34.6412 23.4232 34.1806C23.4232 33.9057 23.2891 33.6753 22.9464 33.5565ZM22.4472 32.8432C22.6111 32.8432 22.708 32.9324 22.708 33.0512C22.708 33.1478 22.626 33.2593 22.4994 33.3039L22.3876 33.2667C22.2386 33.2222 22.1641 33.1404 22.1641 33.0438C22.1641 32.9175 22.2833 32.8357 22.4472 32.8357M22.4547 34.396C22.2237 34.396 22.0747 34.3069 22.0747 34.136C22.0747 33.9875 22.1939 33.8759 22.3354 33.8314L22.4696 33.8686C22.6856 33.928 22.7899 34.0246 22.7899 34.1657C22.7899 34.3143 22.6559 34.396 22.4547 34.396Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M23.3853 35.4446H19.7495V36.091H23.3853V35.4446Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M25.2483 32.1751C24.4362 32.1751 23.8327 32.7175 23.8327 33.5422C23.8327 34.3669 24.4064 34.8053 25.0247 34.8053C25.3824 34.8053 25.7474 34.6493 25.9635 34.3298C25.8144 35.1322 25.1961 35.3774 24.451 35.3774V36.1353C26.0528 36.1353 26.8053 35.1694 26.8053 33.9806C26.8053 32.9255 26.2019 32.1751 25.2557 32.1751M25.2557 34.0846C24.9577 34.0846 24.6597 33.9063 24.6597 33.5051C24.6597 33.1633 24.8906 32.9255 25.2557 32.9255C25.6208 32.9255 25.8592 33.1707 25.8592 33.5051C25.8592 33.884 25.5612 34.0771 25.2557 34.0771", fill: "currentColor" }), (0, l.jsx)("path", { d: "M29.6442 32.2338H28.8172L27.126 34.5594V35.2727H28.8172V36.0974H29.6368V35.2727H30.27V34.5074H29.6368V32.2338H29.6442ZM28.8247 34.5074H27.9306L28.8247 33.2665V34.5074Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M48.784 40.9355C48.9405 40.5715 49.0596 40.2148 49.149 39.8582C49.2385 39.509 49.298 39.1597 49.3279 38.818C49.3502 38.5876 49.3577 38.3647 49.3577 38.1492C49.3577 37.6812 49.3129 37.2354 49.231 36.7896C49.2012 36.6261 49.164 36.4552 49.1267 36.2917C49.0596 36.0094 48.9777 35.7345 48.8883 35.4596C48.8585 35.363 48.8212 35.2664 48.7915 35.1698C48.6425 34.7537 48.4786 34.3451 48.3072 33.9512C48.2774 33.8769 48.2401 33.8027 48.2103 33.7284C48.0539 33.3866 47.8974 33.0448 47.741 32.7104C47.5771 32.3538 47.443 32.0046 47.3461 31.6553C47.1821 31.0461 47.1226 30.4442 47.1747 29.8647C47.1971 29.6344 47.2343 29.404 47.2939 29.1812C47.3386 28.9954 47.3908 28.8171 47.4578 28.6387C47.5771 28.3341 47.7186 28.0517 47.8825 27.7843C48.0464 27.5243 48.2252 27.2791 48.4115 27.0561C47.5323 27.071 46.7277 27.2047 46.0274 27.4425C45.9007 27.487 45.7741 27.5316 45.6548 27.5837H45.6474L45.6251 27.5986C45.111 27.8066 44.6938 28.0517 44.3659 28.3341C44.2021 28.4753 44.0679 28.6313 43.9488 28.7948C43.8891 28.8765 43.837 28.9657 43.7923 29.0474C43.7476 29.1366 43.7029 29.2257 43.6731 29.3223C43.5241 29.7235 43.4719 30.1842 43.5166 30.7043C43.5614 31.2021 43.6954 31.7594 43.9115 32.3687C44.0009 32.6064 44.0978 32.8516 44.2095 33.1117C44.3138 33.3346 44.4256 33.5723 44.5448 33.8101C44.582 33.8844 44.6267 33.981 44.6788 34.085C44.7683 34.2634 44.8651 34.4788 44.9694 34.724C45.0142 34.8206 45.0514 34.932 45.0961 35.0435C45.1333 35.155 45.1781 35.2739 45.2228 35.3927C45.2823 35.5785 45.3419 35.7716 45.3941 35.9797C45.4463 36.1877 45.4984 36.4032 45.5357 36.6335C45.5655 36.7896 45.5878 36.9456 45.6102 37.1016C45.6176 37.1833 45.6325 37.2651 45.64 37.3468C45.6548 37.5103 45.6697 37.6812 45.6773 37.8595C45.6773 37.9486 45.6773 38.0378 45.6773 38.127C45.6773 38.3944 45.6773 38.6768 45.6474 38.9591C45.64 39.0557 45.6325 39.1523 45.6176 39.2489C45.5729 39.6353 45.5058 40.0439 45.4016 40.46C45.1706 41.3962 44.7981 42.3101 44.2766 43.2166C44.1052 43.5138 43.9189 43.8184 43.7104 44.1157C43.4049 44.5614 43.0622 45.0072 42.6822 45.4457C42.4289 45.7354 42.1607 46.0326 41.8775 46.3224C41.4529 46.7533 40.991 47.1843 40.4992 47.6078C43.0547 46.6419 45.8263 45.2078 47.3833 43.2241C47.6888 42.8302 47.957 42.4439 48.188 42.0649C48.2625 41.9386 48.337 41.8123 48.404 41.686C48.5381 41.4334 48.6573 41.1882 48.7616 40.943", fill: "currentColor" }), (0, l.jsx)("path", { d: "M40.0001 0C17.9445 0 0 17.9424 0 40C0 62.0576 17.9445 80 40.0001 80C62.0557 80 80 62.0576 80 40C80 17.9424 62.0557 0 40.0001 0ZM41.478 77.6353C40.9829 77.6584 40.4953 77.6656 40.0001 77.6656C39.5051 77.6656 39.0324 77.6505 38.5523 77.6353C18.4246 76.88 2.3406 60.3292 2.32559 40.0224C2.32559 40.015 2.32559 40.0075 2.32559 40C2.32559 19.1919 19.1974 2.32698 40.0001 2.32698C60.803 2.32698 77.1195 18.6532 77.66 38.9899C77.6672 39.3266 77.6744 39.6633 77.6744 40C77.6744 40.3591 77.6744 40.7108 77.66 41.07C77.1044 60.8904 61.253 76.88 41.4855 77.6432", fill: "currentColor", fillOpacity: .5 })] }) }; G(); var tU = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 24 24", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M11 15C11 14.4477 11.4477 14 12 14C12.5523 14 13 14.4477 13 15C13 15.5523 12.5523 16 12 16C11.4477 16 11 15.5523 11 15Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M8 1C8.55228 1 9 1.44772 9 2V4C9 4.55228 8.55228 5 8 5C7.44772 5 7 4.55228 7 4V2C7 1.44772 7.44772 1 8 1Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M16 1C16.5523 1 17 1.44772 17 2V4C17 4.55228 16.5523 5 16 5C15.4477 5 15 4.55228 15 4V2C15 1.44772 15.4477 1 16 1Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M11 11C11 10.4477 11.4477 10 12 10C12.5523 10 13 10.4477 13 11C13 11.5523 12.5523 12 12 12C11.4477 12 11 11.5523 11 11Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M15 11C15 10.4477 15.4477 10 16 10C16.5523 10 17 10.4477 17 11C17 11.5523 16.5523 12 16 12C15.4477 12 15 11.5523 15 11Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M7 11C7 10.4477 7.44772 10 8 10C8.55228 10 9 10.4477 9 11C9 11.5523 8.55228 12 8 12C7.44772 12 7 11.5523 7 11Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M7 15C7 14.4477 7.44772 14 8 14C8.55228 14 9 14.4477 9 15C9 15.5523 8.55228 16 8 16C7.44772 16 7 15.5523 7 15Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M18 5H6C4.89543 5 4 5.89543 4 7V17C4 18.1046 4.89543 19 6 19H18C19.1046 19 20 18.1046 20 17V7C20 5.89543 19.1046 5 18 5ZM6 3C3.79086 3 2 4.79086 2 7V17C2 19.2091 3.79086 21 6 21H18C20.2091 21 22 19.2091 22 17V7C22 4.79086 20.2091 3 18 3H6Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M2 7C2 4.79086 3.79086 3 6 3H18C20.2091 3 22 4.79086 22 7V8H2V7Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M18 5H6C5.25972 5 4.61337 5.4022 4.26756 6H19.7324C19.3866 5.4022 18.7403 5 18 5ZM21.874 6C21.4299 4.27477 19.8638 3 18 3H6C4.13616 3 2.57006 4.27477 2.12602 6C2.04375 6.31962 2 6.6547 2 7V8H22V7C22 6.6547 21.9562 6.31962 21.874 6Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var t$ = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 13, viewBox: "0 0 13 13", width: 13, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M12.5303 6.53033C12.8232 6.23744 12.8232 5.76256 12.5303 5.46967L7.75736 0.696699C7.46447 0.403806 6.98959 0.403806 6.6967 0.696699C6.40381 0.989593 6.40381 1.46447 6.6967 1.75736L10.9393 6L6.6967 10.2426C6.40381 10.5355 6.40381 11.0104 6.6967 11.3033C6.98959 11.5962 7.46447 11.5962 7.75736 11.3033L12.5303 6.53033ZM0 6.75L12 6.75V5.25L0 5.25L0 6.75Z", fill: "currentColor" })] }) }; G(); var tq = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 13, viewBox: "0 0 13 13", width: 13, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("rect", { fill: "currentColor", height: 13, transform: "rotate(45 12.5356 4.05023)", width: 2, x: 8.5, y: 3.5 }), (0, l.jsx)("rect", { fill: "currentColor", height: 13, transform: "rotate(135 13.9497 12.5355)", width: 2, x: 13.9497, y: 16 })] }) }; G(); var tK = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 13, viewBox: "0 0 13 13", width: 13, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("rect", { fill: "currentColor", height: 13, width: 2, x: 5.5, y: 0 }), (0, l.jsx)("rect", { fill: "currentColor", height: 13, transform: "rotate(90 13 5)", width: 2, x: 13, y: 5 })] }) }; G(); var tX = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 25, viewBox: "0 0 24 25", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M0 3.92188C0 3.36959 0.447715 2.92188 1 2.92188H23C23.5523 2.92188 24 3.36959 24 3.92188V17.9219C24 18.4742 23.5523 18.9219 23 18.9219H16C15.4477 18.9219 15 18.4742 15 17.9219C15 17.3696 15.4477 16.9219 16 16.9219H22V4.92188H2V16.9219H6C6.55228 16.9219 7 17.3696 7 17.9219V20.0534L11.4453 17.0898C11.9048 16.7835 12.5257 16.9076 12.832 17.3672C13.1384 17.8267 13.0142 18.4476 12.5547 18.7539L6.5547 22.7539C6.24784 22.9585 5.8533 22.9776 5.52814 22.8035C5.20298 22.6295 5 22.2907 5 21.9219V18.9219H1C0.447715 18.9219 0 18.4742 0 17.9219V3.92188Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M6 8.92188C6 8.36959 6.44772 7.92188 7 7.92188H17C17.5523 7.92188 18 8.36959 18 8.92188C18 9.47416 17.5523 9.92188 17 9.92188H7C6.44772 9.92188 6 9.47416 6 8.92188Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M7 11.9219C6.44772 11.9219 6 12.3696 6 12.9219C6 13.4742 6.44772 13.9219 7 13.9219H17C17.5523 13.9219 18 13.4742 18 12.9219C18 12.3696 17.5523 11.9219 17 11.9219H7Z", fill: "currentColor" })] }) }; G(); var tJ = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 10, viewBox: "0 0 14 10", width: 14, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M13.707.293a1 1 0 0 1 0 1.414l-8 8a1 1 0 0 1-1.414 0l-4-4a1 1 0 0 1 1.414-1.414L5 7.586 12.293.293a1 1 0 0 1 1.414 0Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var tY = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 10, viewBox: "0 0 12 10", width: 12, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M10.6222 2.99708C10.4363 2.81112 10.1348 2.81112 9.94881 2.99708L5.99981 6.94608L2.05082 2.99708C1.86485 2.81112 1.56335 2.81112 1.37738 2.99708C1.19142 3.18304 1.19142 3.48455 1.37738 3.67052L5.6631 7.95623C5.84906 8.14219 6.15057 8.14219 6.33653 7.95623L10.6222 3.67052C10.8082 3.48455 10.8082 3.18304 10.6222 2.99708Z", fill: "currentColor", fillRule: "evenodd", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round" })] }) }; G(); var tQ = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 16, viewBox: "0 0 16 16", width: 16, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M11 2 5 8l6 6", stroke: "currentColor", strokeLinecap: "round", strokeWidth: 1.5 })] }) }; G(); var t1 = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 16, viewBox: "0 0 16 16", width: 16, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "m5 14 6-6-6-6", stroke: "currentColor", strokeLinecap: "round", strokeWidth: 1.5 })] }) }; G(); var t2 = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 8, viewBox: "0 0 14 8", width: 14, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M1 0.999756L7 6.99976L13 0.999756", stroke: "currentColor" })] }) }; G(); var t3 = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 58, viewBox: "0 0 164 58", width: 164, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsxs)("g", { clipPath: "url(#cigna-logo-a)", children: [(0, l.jsx)("path", { d: "M19.0628 24.462C20.5512 24.462 30.2114 28.7955 30.2114 44.3612C30.2114 51.7999 27.7463 58 26.2936 58C25.652 58 25.4089 57.349 25.4089 56.098C25.4089 53.3437 26.3641 50.9039 26.3641 45.0256C26.3641 33.675 21.7638 29.0955 19.7043 26.5177C19.0965 25.7546 18.6357 25.2583 18.6357 24.8098C18.6357 24.6271 18.7634 24.462 19.0628 24.462ZM43.4113 24.8098C43.4113 25.2583 42.9505 25.7546 42.3427 26.5177C40.2842 29.0955 35.686 33.675 35.686 45.0236C35.686 50.9029 36.6371 53.3426 36.6371 56.098C36.6371 57.349 36.394 58 35.7545 58C34.2987 58 31.8347 51.7999 31.8347 44.3612C31.8347 28.7955 41.4968 24.462 42.9873 24.462C43.2846 24.462 43.4113 24.6271 43.4113 24.8098Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M27.4971 27.5777C27.4971 29.6105 29.0744 31.256 31.0216 31.256C32.9749 31.256 34.5542 29.6105 34.5542 27.5777C34.5542 25.5428 32.9749 23.8993 31.0226 23.8993C29.0744 23.8993 27.4971 25.5428 27.4971 27.5777Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M12.7006 21.7627C10.8567 20.9155 9.47549 19.2171 9.25074 17.5694C10.6197 16.6537 12.7824 16.5831 14.6274 17.4314C16.5582 18.319 17.0107 19.8192 17.022 21.1388C16.0382 22.0046 14.6335 22.6525 12.7006 21.7627ZM17.9904 11.8573C16.8033 10.0041 16.5275 7.65775 17.262 6.03712C19.0202 6.01325 21.0164 7.22586 22.2014 9.07697C23.4396 11.0184 22.9931 12.6401 22.2494 13.8392C20.8662 14.0416 19.2286 13.7987 17.9904 11.8573ZM20.7364 21.6714C19.2735 20.411 18.4512 18.4997 18.6677 16.9372C20.149 16.4658 22.1401 16.9745 23.603 18.2328C25.1354 19.5555 25.1599 21.0401 24.832 22.2465C23.7144 22.7708 22.2688 22.9888 20.7364 21.6703M25.212 16.9278C24.5827 14.8597 24.9372 12.5705 26.0579 11.2385C27.7221 11.6922 29.2851 13.3834 29.9144 15.4515C30.5733 17.6182 29.7223 19.025 28.7079 19.9542C27.3543 19.7694 25.8679 19.0945 25.212 16.9278ZM17.5041 32.0284C16.0474 32.317 14.5099 31.8924 13.6844 31.0027C14.1186 29.8607 15.3925 28.8848 16.8513 28.5972C18.3786 28.2961 19.2766 28.999 19.8364 29.787C19.6066 30.7317 19.0365 31.7242 17.5041 32.0284ZM13.6528 27.642C11.9927 27.4593 10.4807 26.4896 9.88617 25.2542C10.7249 24.1765 12.4095 23.5567 14.0706 23.7394C15.8104 23.9315 16.5439 24.9905 16.8881 26.0235C16.3324 26.961 15.3935 27.8341 13.6528 27.642ZM13.5046 15.1141C12.2021 13.9908 11.4717 12.2933 11.6648 10.9052C12.9795 10.4837 14.7499 10.9374 16.0525 12.0566C17.4122 13.2318 17.4377 14.5514 17.1456 15.6249C16.1495 16.0921 14.8664 16.2852 13.5046 15.1141ZM22.3802 6.20947C21.8551 4.48606 22.1534 2.57577 23.0851 1.46801C24.4744 1.84903 25.778 3.25683 26.3031 4.97816C26.8517 6.78463 26.1406 7.95468 25.2937 8.73333C24.1649 8.5776 22.9318 8.01697 22.3812 6.2105M0.570312 50.9299C0.570312 50.9766 0.599939 51.014 0.658169 51.014C0.712313 51.014 0.810386 50.9693 0.916631 50.9309C6.12877 49.031 13.8244 46.6992 24.6246 45.9891C24.6379 45.8894 24.7012 45.4004 24.7012 45.0236C24.7012 44.2293 24.6093 43.4009 24.5848 43.2628C13.5179 44.2947 5.8795 47.5557 0.861465 50.69C0.657147 50.8188 0.570312 50.8478 0.570312 50.9299ZM45.0288 21.1377C45.04 19.8192 45.4905 18.318 47.4213 17.4303C49.2643 16.5821 51.43 16.6517 52.7979 17.5684C52.5722 19.216 51.193 20.9145 49.3501 21.7606C47.4152 22.6504 46.0115 22.0036 45.0288 21.1377ZM39.8003 13.8381C39.0586 12.639 38.6101 11.0163 39.8503 9.07489C41.0344 7.22482 43.0295 6.01221 44.7887 6.03609C45.5212 7.65671 45.2433 10.003 44.0603 11.8562C42.8221 13.7977 41.1815 14.0406 39.8003 13.8381ZM37.2157 22.2455C36.8898 21.0391 36.9143 19.5545 38.4467 18.2318C39.9116 16.9735 41.8996 16.4648 43.383 16.9372C43.5975 18.4976 42.7762 20.4099 41.3122 21.6693C39.7829 22.9878 38.3333 22.7698 37.2157 22.2455ZM33.3408 19.9542C32.3264 19.025 31.4764 17.6182 32.1353 15.4505C32.7616 13.3834 34.3317 11.6932 35.9928 11.2385C37.1135 12.5705 37.468 14.8587 36.8387 16.9278C36.1798 19.0945 34.6995 19.7694 33.3408 19.9542ZM42.2153 29.788C42.7752 29.0021 43.669 28.2961 45.1994 28.5982C46.6602 28.8858 47.9311 29.8638 48.3663 31.0037C47.5429 31.8935 46.0034 32.317 44.5445 32.0295C43.0142 31.7253 42.4411 30.7317 42.2153 29.788ZM45.1626 26.0245C45.5069 24.9915 46.2414 23.9326 47.9812 23.7405C49.6412 23.5578 51.3238 24.1796 52.1625 25.2563C51.569 26.4896 50.056 27.4603 48.398 27.6431C46.6562 27.8351 45.7153 26.962 45.1626 26.0245ZM44.9041 15.6259C44.6109 14.5524 44.6344 13.2329 45.9983 12.0566C47.3008 10.9385 49.0702 10.4837 50.385 10.9063C50.577 12.2943 49.8466 13.9918 48.5451 15.1141C47.1843 16.2873 45.8981 16.0942 44.9041 15.6259ZM36.7549 8.73436C35.908 7.95572 35.1991 6.78567 35.7487 4.9792C36.2717 3.25787 37.5773 1.85007 38.9595 1.46905C39.8994 2.57785 40.1926 4.48709 39.6695 6.2105C39.1199 8.01697 37.8848 8.57863 36.7549 8.73436ZM61.1872 50.6911C56.1712 47.5568 48.5328 44.2958 37.4649 43.2638C37.3911 43.8478 37.3522 44.4358 37.3485 45.0246C37.3485 45.4015 37.4128 45.8905 37.4251 45.9901C48.2243 46.7013 55.9179 49.032 61.1341 50.9319C61.2414 50.9704 61.3415 51.015 61.3895 51.015C61.4508 51.015 61.4814 50.9766 61.4814 50.9319C61.4814 50.8489 61.3895 50.8198 61.1872 50.6911ZM31.0238 10.546C29.5905 9.86808 28.1787 8.6077 28.1787 5.98833C28.1787 3.48627 29.3403 1.07973 31.0249 4.76837e-07C32.7095 1.07973 33.871 3.48523 33.871 5.98729C33.871 8.6077 32.4612 9.86808 31.0238 10.546Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M85.0759 19.4019C85.0759 20.9446 86.3263 22.1956 87.875 22.1956C89.4197 22.1956 90.6721 20.9446 90.6721 19.4019C90.6721 17.8601 89.4197 16.6112 87.874 16.6112C86.3263 16.6112 85.0759 17.8601 85.0759 19.4019ZM106.924 34.1059C106.924 38.5151 105.228 40.3517 102.774 40.3517C100.299 40.3517 98.9122 38.2171 98.9122 34.4734C98.9122 30.6528 101.063 27.4946 105.046 27.4946C105.867 27.4946 106.441 27.5777 106.924 27.696V34.1059ZM107.163 41.338V42.7707C107.163 46.7002 104.781 48.2264 101.826 48.2264C99.1697 48.2264 97.2103 47.4135 96.5902 47.1944V51.0825C97.0948 51.2206 99.2524 51.9099 102.33 51.9099C107.796 51.9099 111.448 49.6176 111.448 41.7605V24.8046C110.747 24.624 108.181 23.9326 105.227 23.9326C97.5597 23.9326 94.2651 29.1547 94.2651 34.8046C94.2651 39.9987 96.8364 44.0705 101.761 44.0705C105.009 44.0705 106.57 42.0772 107.078 41.338H107.163ZM81.0917 38.9397C79.8607 39.5263 77.891 39.9125 75.9848 39.9125C70.7869 39.9125 66.959 36.1335 66.959 30.3756C66.959 24.6562 70.7604 20.8325 75.9848 20.8325C78.5745 20.8325 80.4174 21.4762 81.0927 21.8022V17.6868C79.9557 17.258 78.1117 16.825 75.5046 16.825C67.4392 16.825 62.0166 22.4936 62.0166 30.3777C62.0166 37.8288 67.006 43.922 75.5056 43.922C77.9983 43.922 79.8739 43.5202 81.0917 43.0572V38.9397ZM149.545 34.1059C149.545 38.5151 147.847 40.3517 145.394 40.3517C142.918 40.3517 141.524 38.2171 141.524 34.4734C141.524 30.6528 143.685 27.4946 147.665 27.4946C148.298 27.4844 148.929 27.552 149.545 27.696V34.1059ZM154.639 43.6407C154.493 42.5672 154.07 39.7329 154.07 37.2931V24.8046C153.362 24.624 150.795 23.9326 147.847 23.9326C140.176 23.9326 136.886 29.1547 136.886 34.8046C136.886 39.9987 139.449 44.0705 144.378 44.0705C147.978 44.0705 149.59 41.7055 150.199 40.4441H150.318C150.363 41.0431 150.525 43.078 150.579 43.6417H154.641L154.639 43.6407ZM90.1389 24.4247H85.6153V43.6396H90.1389V24.4247ZM116.569 43.6396V30.3445C116.569 28.5619 116.41 25.1431 116.364 24.3676H120.428L120.619 27.07H120.704C121.176 26.3142 122.697 23.9326 126.243 23.9326C130.524 23.9326 132.904 27.1302 132.904 31.1148V43.6407H128.383V32.0232C128.383 29.5762 127.045 27.7272 124.74 27.7272C122.364 27.7272 121.097 29.679 121.097 32.0232V43.6396H116.569ZM161.277 40.3382C161.162 40.2707 160.973 40.2395 160.718 40.2395H160.323V41.2009H160.741C160.89 41.2085 161.039 41.1892 161.182 41.1438C161.362 41.0711 161.453 40.9331 161.453 40.7265C161.453 40.5333 161.395 40.4046 161.277 40.3382ZM160.779 39.9198C161.103 39.9198 161.343 39.9509 161.494 40.0132C161.766 40.1316 161.9 40.3527 161.9 40.688C161.9 40.9268 161.815 41.1054 161.646 41.2144C161.53 41.2834 161.401 41.3272 161.268 41.3431C161.448 41.3618 161.611 41.4573 161.718 41.6058C161.806 41.7249 161.855 41.8684 161.86 42.0169V42.2121C161.86 42.2744 161.86 42.3398 161.865 42.4094C161.865 42.4571 161.874 42.5049 161.889 42.5495L161.903 42.5807H161.472L161.466 42.5547C161.465 42.5464 161.46 42.536 161.46 42.5246L161.451 42.4405V42.2298C161.451 41.9225 161.366 41.7179 161.204 41.6193C161.104 41.5653 160.933 41.5321 160.69 41.5321H160.325V42.5807H159.863V39.9198H160.781H160.779ZM159.373 39.7848C159.18 39.9763 159.028 40.2059 158.925 40.4594C158.823 40.7129 158.772 40.985 158.777 41.2591C158.777 41.8404 158.975 42.3388 159.373 42.7468C159.751 43.1486 160.279 43.3718 160.827 43.3624C161.396 43.3624 161.882 43.1569 162.281 42.7468C162.677 42.3398 162.877 41.8404 162.877 41.2622C162.877 40.6828 162.677 40.1907 162.281 39.7838C162.093 39.5857 161.867 39.429 161.617 39.3232C161.366 39.2175 161.098 39.1651 160.827 39.1692C160.556 39.1646 160.287 39.2169 160.037 39.3226C159.787 39.4284 159.561 39.5854 159.374 39.7838L159.373 39.7848ZM162.515 42.9783C162.297 43.2086 162.034 43.3908 161.744 43.5135C161.453 43.6362 161.141 43.6968 160.827 43.6915C160.512 43.697 160.2 43.6364 159.91 43.5137C159.619 43.391 159.357 43.2087 159.139 42.9783C158.914 42.7544 158.737 42.4865 158.618 42.1907C158.498 41.895 158.439 41.5777 158.444 41.258C158.444 40.5894 158.68 40.0184 159.143 39.545C159.361 39.3165 159.623 39.1358 159.913 39.014C160.202 38.8923 160.513 38.832 160.827 38.8369C161.141 38.8314 161.453 38.8914 161.743 39.0132C162.034 39.1349 162.296 39.3159 162.515 39.545C162.983 40.0153 163.216 40.5873 163.216 41.257C163.221 41.5773 163.162 41.8953 163.041 42.1914C162.921 42.4874 162.742 42.7553 162.515 42.9783Z", fill: "currentColor" })] }), (0, l.jsx)("defs", { children: (0, l.jsx)("clipPath", { id: "cigna-logo=a", children: (0, l.jsx)("rect", { fill: "white", height: 58, width: 164 }) }) })] }) }; G(); var t4 = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 25 24", width: 25, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M12.5 22C11.1333 22 9.84167 21.7375 8.625 21.2125C7.40833 20.6875 6.34583 19.9708 5.4375 19.0625C4.52917 18.1542 3.8125 17.0917 3.2875 15.875C2.7625 14.6583 2.5 13.3667 2.5 12C2.5 10.6167 2.7625 9.31667 3.2875 8.1C3.8125 6.88333 4.52917 5.825 5.4375 4.925C6.34583 4.025 7.40833 3.3125 8.625 2.7875C9.84167 2.2625 11.1333 2 12.5 2C13.8833 2 15.1833 2.2625 16.4 2.7875C17.6167 3.3125 18.675 4.025 19.575 4.925C20.475 5.825 21.1875 6.88333 21.7125 8.1C22.2375 9.31667 22.5 10.6167 22.5 12C22.5 13.3667 22.2375 14.6583 21.7125 15.875C21.1875 17.0917 20.475 18.1542 19.575 19.0625C18.675 19.9708 17.6167 20.6875 16.4 21.2125C15.1833 21.7375 13.8833 22 12.5 22ZM12.5 20.5C14.8667 20.5 16.875 19.6708 18.525 18.0125C20.175 16.3542 21 14.35 21 12C21 9.63333 20.175 7.625 18.525 5.975C16.875 4.325 14.8667 3.5 12.5 3.5C10.15 3.5 8.14583 4.325 6.4875 5.975C4.82917 7.625 4 9.63333 4 12C4 14.35 4.82917 16.3542 6.4875 18.0125C8.14583 19.6708 10.15 20.5 12.5 20.5Z", fill: "currentColor" })] }) }; G(); var t5 = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 32, viewBox: "0 0 32 32", width: 32, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("circle", { cx: 16, cy: 16, r: 15.5, stroke: "currentColor", strokeOpacity: .3 }), (0, l.jsx)("path", { d: "M21.25 9.25C21.25 8.42157 21.9216 7.75 22.75 7.75C23.5784 7.75 24.25 8.42157 24.25 9.25C24.25 10.0784 23.5784 10.75 22.75 10.75C22.6156 10.75 22.4854 10.7323 22.3615 10.6992L19.6992 13.3615C19.7323 13.4854 19.75 13.6156 19.75 13.75C19.75 14.5784 19.0784 15.25 18.25 15.25C17.4216 15.25 16.75 14.5784 16.75 13.75C16.75 13.7176 16.751 13.6854 16.7531 13.6534L14.4152 12.0948C14.2147 12.1942 13.9889 12.25 13.75 12.25C13.6156 12.25 13.4854 12.2323 13.3615 12.1992L10.6992 14.8615C10.7323 14.9854 10.75 15.1156 10.75 15.25C10.75 16.0784 10.0784 16.75 9.25 16.75C8.42157 16.75 7.75 16.0784 7.75 15.25C7.75 14.4216 8.42157 13.75 9.25 13.75C9.38437 13.75 9.51461 13.7677 9.63853 13.8008L12.3008 11.1385C12.2677 11.0146 12.25 10.8844 12.25 10.75C12.25 9.92157 12.9216 9.25 13.75 9.25C14.5784 9.25 15.25 9.92157 15.25 10.75C15.25 10.7824 15.249 10.8146 15.2469 10.8466L17.5848 12.4052C17.7853 12.3058 18.0111 12.25 18.25 12.25C18.3844 12.25 18.5146 12.2677 18.6385 12.3008L21.3008 9.63853C21.2677 9.51461 21.25 9.38437 21.25 9.25Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M22 13C22 12.5858 22.3358 12.25 22.75 12.25C23.1642 12.25 23.5 12.5858 23.5 13V23.5C23.5 23.9142 23.1642 24.25 22.75 24.25C22.3358 24.25 22 23.9142 22 23.5V13Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M18.25 16.75C17.8358 16.75 17.5 17.0858 17.5 17.5V23.5C17.5 23.9142 17.8358 24.25 18.25 24.25C18.6642 24.25 19 23.9142 19 23.5V17.5C19 17.0858 18.6642 16.75 18.25 16.75Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M9.25001 18.25C8.8358 18.25 8.50001 18.5858 8.50001 19V23.5C8.50001 23.9142 8.8358 24.25 9.25001 24.25C9.66422 24.25 10 23.9142 10 23.5V19C10 18.5858 9.66422 18.25 9.25001 18.25Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M13.75 13.75C13.3358 13.75 13 14.0858 13 14.5V23.5C13 23.9142 13.3358 24.25 13.75 24.25C14.1642 24.25 14.5 23.9142 14.5 23.5V14.5C14.5 14.0858 14.1642 13.75 13.75 13.75Z", fill: "currentColor" })] }) }; G(); var t6 = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 24 24", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("circle", { cx: 12, cy: 12, fill: "currentColor", r: 11, stroke: "currentColor" }), (0, l.jsx)("path", { d: "M7.75 12.5L10.9167 15.6666L17.25 9.33331", stroke: "white", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2 })] }) }; G(); var t7 = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 32, viewBox: "0 0 32 32", width: 32, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("circle", { cx: 16, cy: 16, r: 15.5, stroke: "currentColor", strokeOpacity: .3 }), (0, l.jsx)("path", { d: "M14.8615 18.9085H17.1385L16.5855 15.7913C16.9003 15.6604 17.1547 15.4568 17.3485 15.1805C17.5425 14.904 17.6395 14.597 17.6395 14.2595C17.6395 13.8078 17.4791 13.4217 17.1583 13.101C16.8374 12.7803 16.451 12.62 15.999 12.62C15.5472 12.62 15.1612 12.7802 14.841 13.1005C14.5207 13.4208 14.3605 13.8066 14.3605 14.2578C14.3605 14.5973 14.4575 14.905 14.6515 15.181C14.8453 15.457 15.1013 15.6604 15.4193 15.7913L14.8615 18.9085ZM16 25.5383C13.8898 24.9596 12.1426 23.7116 10.7583 21.7943C9.37393 19.8771 8.68176 17.732 8.68176 15.359V9.74825L16 7L23.3183 9.74825V15.359C23.3183 17.732 22.6261 19.8771 21.2418 21.7943C19.8574 23.7116 18.1102 24.9596 16 25.5383ZM16 24.0663C17.7138 23.5151 19.1288 22.4243 20.245 20.794C21.3612 19.1637 21.9193 17.3522 21.9193 15.3595V10.7L16 8.495L10.0808 10.7V15.3595C10.0808 17.3522 10.6388 19.1637 11.755 20.794C12.8712 22.4243 14.2862 23.5151 16 24.0663Z", fill: "currentColor" })] }) }; G(); var t8 = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 25 24", width: 25, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M11.025 14.275L8.575 11.825C8.425 11.675 8.24167 11.6 8.025 11.6C7.80833 11.6 7.61667 11.6833 7.45 11.85C7.3 12 7.225 12.1833 7.225 12.4C7.225 12.6167 7.3 12.8 7.45 12.95L10.5 16.025C10.65 16.175 10.825 16.25 11.025 16.25C11.225 16.25 11.4 16.175 11.55 16.025L17.525 10.05C17.6917 9.88333 17.775 9.69167 17.775 9.475C17.775 9.25833 17.6917 9.06667 17.525 8.9C17.3583 8.75 17.1625 8.67917 16.9375 8.6875C16.7125 8.69583 16.525 8.775 16.375 8.925L11.025 14.275ZM12.5 22C11.1333 22 9.84167 21.7375 8.625 21.2125C7.40833 20.6875 6.34583 19.9708 5.4375 19.0625C4.52917 18.1542 3.8125 17.0917 3.2875 15.875C2.7625 14.6583 2.5 13.3667 2.5 12C2.5 10.6167 2.7625 9.31667 3.2875 8.1C3.8125 6.88333 4.52917 5.825 5.4375 4.925C6.34583 4.025 7.40833 3.3125 8.625 2.7875C9.84167 2.2625 11.1333 2 12.5 2C13.8833 2 15.1833 2.2625 16.4 2.7875C17.6167 3.3125 18.675 4.025 19.575 4.925C20.475 5.825 21.1875 6.88333 21.7125 8.1C22.2375 9.31667 22.5 10.6167 22.5 12C22.5 13.3667 22.2375 14.6583 21.7125 15.875C21.1875 17.0917 20.475 18.1542 19.575 19.0625C18.675 19.9708 17.6167 20.6875 16.4 21.2125C15.1833 21.7375 13.8833 22 12.5 22ZM12.5 20.5C14.8667 20.5 16.875 19.6708 18.525 18.0125C20.175 16.3542 21 14.35 21 12C21 9.63333 20.175 7.625 18.525 5.975C16.875 4.325 14.8667 3.5 12.5 3.5C10.15 3.5 8.14583 4.325 6.4875 5.975C4.82917 7.625 4 9.63333 4 12C4 14.35 4.82917 16.3542 6.4875 18.0125C8.14583 19.6708 10.15 20.5 12.5 20.5Z", fill: "currentColor" })] }) }; G(); var t9 = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 32, viewBox: "0 0 32 32", width: 32, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("circle", { cx: 16, cy: 16, r: 15.5, stroke: "#4A4741", strokeOpacity: .3 }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M16 17.5C18.4853 17.5 20.5 15.4853 20.5 13C20.5 10.5147 18.4853 8.5 16 8.5C13.5147 8.5 11.5 10.5147 11.5 13C11.5 14.4577 12.1931 15.7535 13.2677 16.5759C10.901 17.6248 9.25 19.9946 9.25 22.75C9.25 23.1642 9.58579 23.5 10 23.5H22C22.4142 23.5 22.75 23.1642 22.75 22.75C22.75 20.7339 21.8651 18.9234 20.465 17.6877C20.1545 17.4136 19.6805 17.4431 19.4064 17.7537C19.1323 18.0643 19.1619 18.5382 19.4724 18.8123C20.3864 19.619 21.0164 20.7368 21.1969 22H10.8032C11.1671 19.4558 13.3551 17.5 16 17.5ZM13 13C13 11.3431 14.3431 10 16 10C17.6569 10 19 11.3431 19 13C19 14.6569 17.6569 16 16 16C14.3431 16 13 14.6569 13 13Z", fill: "#4A4741", fillRule: "evenodd" })] }) }; G(); var t0 = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 32, viewBox: "0 0 32 32", width: 32, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M20.139 6.73034C19.7584 6.73034 19.4368 6.5989 19.1744 6.33601C18.9119 6.07312 18.7807 5.75134 18.7807 5.37067C18.7807 4.99001 18.9121 4.66845 19.175 4.40601C19.4379 4.14379 19.7597 4.01267 20.1404 4.01267C20.521 4.01267 20.8426 4.14412 21.105 4.40701C21.3675 4.66967 21.4987 4.99145 21.4987 5.37234C21.4987 5.75301 21.3673 6.07456 21.1044 6.33701C20.8415 6.59923 20.5197 6.73034 20.139 6.73034ZM20.1004 27.9867C19.7197 27.9867 19.3983 27.8552 19.136 27.5923C18.8736 27.3297 18.7424 27.0079 18.7424 26.627C18.7424 26.2463 18.8738 25.9248 19.1367 25.6623C19.3996 25.4001 19.7214 25.269 20.102 25.269C20.4827 25.269 20.8043 25.4005 21.0667 25.6633C21.3289 25.9262 21.46 26.248 21.46 26.6287C21.46 27.0093 21.3287 27.3309 21.066 27.5933C20.8031 27.8556 20.4813 27.9867 20.1004 27.9867ZM25.4337 11.2433C25.053 11.2433 24.7316 11.1119 24.4694 10.849C24.2069 10.5861 24.0757 10.2643 24.0757 9.88368C24.0757 9.50301 24.2071 9.18145 24.47 8.91901C24.7329 8.65656 25.0547 8.52534 25.4354 8.52534C25.816 8.52534 26.1376 8.65679 26.4 8.91967C26.6623 9.18256 26.7934 9.50434 26.7934 9.88501C26.7934 10.2657 26.662 10.5872 26.3994 10.8497C26.1365 11.1121 25.8146 11.2433 25.4337 11.2433ZM25.3954 23.5123C25.0147 23.5123 24.6931 23.3809 24.4307 23.118C24.1683 22.8553 24.037 22.5336 24.037 22.1527C24.037 21.772 24.1685 21.4505 24.4314 21.188C24.6943 20.9258 25.016 20.7947 25.3967 20.7947C25.7776 20.7947 26.0991 20.9261 26.3614 21.189C26.6238 21.4517 26.755 21.7735 26.755 22.1543C26.755 22.535 26.6236 22.8566 26.3607 23.119C26.0978 23.3812 25.776 23.5123 25.3954 23.5123ZM27.3057 17.3587C26.925 17.3587 26.6035 17.2272 26.341 16.9643C26.0786 16.7015 25.9474 16.3797 25.9474 15.999C25.9474 15.6183 26.0788 15.2968 26.3417 15.0343C26.6046 14.7719 26.9264 14.6407 27.307 14.6407C27.6877 14.6407 28.0093 14.7721 28.2717 15.035C28.5341 15.2979 28.6654 15.6197 28.6654 16.0003C28.6654 16.381 28.5339 16.7026 28.271 16.965C28.0081 17.2275 27.6864 17.3587 27.3057 17.3587ZM15.9987 28.6663C14.2483 28.6663 12.6023 28.3339 11.0607 27.669C9.51914 27.0041 8.17825 26.1018 7.03803 24.962C5.89781 23.8222 4.99503 22.4819 4.3297 20.941C3.66459 19.4001 3.33203 17.7538 3.33203 16.002C3.33203 14.25 3.66459 12.6032 4.3297 11.0617C4.99459 9.52012 5.89703 8.17923 7.03703 7.03901C8.17703 5.89879 9.51759 4.99601 11.0587 4.33067C12.5998 3.66556 14.2465 3.33301 15.9987 3.33301V5.33301C13.0209 5.33301 10.4987 6.36634 8.43203 8.43301C6.36536 10.4997 5.33203 13.0219 5.33203 15.9997C5.33203 18.9775 6.36536 21.4997 8.43203 23.5663C10.4987 25.633 13.0209 26.6663 15.9987 26.6663V28.6663ZM20.3987 21.792L14.9987 16.392V9.66634H16.9987V15.6073L21.791 20.3997L20.3987 21.792Z", fill: "currentColor" })] }) }; G(); var ie = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "currentColor", height: 24, viewBox: "0 0 24 24", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" })] }) }; G(); var ir = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "currentColor", height: 33, viewBox: "0 0 104 33", width: 104, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M28.3 8.2A7.8 7.8 0 0 0 21.6 4 7.9 7.9 0 0 0 15 0a7.8 7.8 0 0 0-6.7 4 8 8 0 0 0-6.6 4.2 8.8 8.8 0 0 0-.1 8.1 8.8 8.8 0 0 0 0 8.2c1.5 2.7 4 4.1 6.7 4.2 1.4 2.4 3.9 4 6.7 4 2.8 0 5.4-1.6 6.7-4a8 8 0 0 0 6.7-4.2 8.8 8.8 0 0 0 0-8.1 9 9 0 0 0 0-8.2ZM22.2 5a7 7 0 0 1 5.3 3.7 7.9 7.9 0 0 1 .3 6.7c-.6-1-1.5-1.8-2.4-2.4-1-.6-2.1-1-3.2-1 .4-1.1.7-2.3.7-3.6a10 10 0 0 0-.7-3.4Zm0 8a7 7 0 0 1 5.1 3.3 7.2 7.2 0 0 1-5.1 3.5 8.9 8.9 0 0 0 0-6.9ZM14.9 1c2.3 0 4.4 1.2 5.6 3-1 .1-2.1.4-3.1 1-1 .7-1.9 1.5-2.5 2.5A7.9 7.9 0 0 0 9.2 4c1.3-1.8 3.4-3 5.7-3Zm1.3 17.8a7.6 7.6 0 0 0 4.3 2 6.9 6.9 0 0 1-4.8 3c.6-1.6.8-3.3.5-5Zm0-5a9 9 0 0 0-.5-4.8 7 7 0 0 1 4.8 3 8 8 0 0 0-4.3 1.9Zm-2 10a7 7 0 0 1-5-3c1.6-.1 3.1-.8 4.4-2a9 9 0 0 0 .5 5Zm-.6-10A7.6 7.6 0 0 0 9.3 12 6.9 6.9 0 0 1 14 9a9 9 0 0 0-.5 5ZM8.7 5a6.8 6.8 0 0 1 5.4 3 7.8 7.8 0 0 0-5.6 3.4A7.9 7.9 0 0 1 8.7 5Zm-.2 8.4a9 9 0 0 0 3.7 3 8.2 8.2 0 0 0-3.7 2.9 8 8 0 0 1 0-6Zm-.8 14.3A7 7 0 0 1 2.4 24a7.9 7.9 0 0 1-.4-6.7c.7 1 1.5 1.8 2.4 2.4 1 .6 2.2 1 3.3 1a8.9 8.9 0 0 0 0 7Zm0-7.9a7 7 0 0 1-5.2-3.4c.6-1 1.4-1.9 2.5-2.5.8-.5 1.7-.9 2.7-1a8.9 8.9 0 0 0 0 6.9ZM4.5 13c-1 .6-1.8 1.4-2.4 2.4-.9-2.1-.8-4.6.3-6.7 1.1-2 3.1-3.4 5.3-3.7a8.9 8.9 0 0 0 0 7c-1.1 0-2.2.4-3.2 1Zm3.4 11.3c0-1 .2-2 .6-3a7.9 7.9 0 0 0 5.6 3.5c-.6.8-1.3 1.4-2.2 2-1 .6-2 1-3.2 1-.5-1-.8-2.2-.8-3.5Zm7 7.4a6.9 6.9 0 0 1-5.6-3 6 6 0 0 0 3.1-1c1-.7 2-1.5 2.6-2.5a7.9 7.9 0 0 0 5.6 3.5 7.1 7.1 0 0 1-5.7 3Zm6.2-4a6.8 6.8 0 0 1-5.4-3 7.8 7.8 0 0 0 5.6-3.4c.3 1 .6 2 .6 3 0 1.3-.3 2.4-.8 3.5Zm.2-8.4a7.8 7.8 0 0 0-3.7-3 8.2 8.2 0 0 0 3.7-2.9 8 8 0 0 1 0 6Zm0-7.9A7.9 7.9 0 0 0 15.8 8a6.8 6.8 0 0 1 5.4-3 7.6 7.6 0 0 1 .1 6.4Zm6.1 12.7a7.2 7.2 0 0 1-5.3 3.7 8.9 8.9 0 0 0 0-7 7.7 7.7 0 0 0 5.6-3.4l.4 1c.5 2 .3 4-.7 5.7ZM61.5 3h1.8v21c0 2.6 1.4 3.7 3.2 3.7.7 0 1.2-.2 1.2-.2v1.7s-.6.4-1.6.4c-2.6 0-4.6-2.1-4.6-5.5V2.9Zm-4.2 17.7c-1.6 5.3-5.2 9-10.4 9-6 0-11.3-5.4-11.3-13.5 0-8 5.4-13.5 11.3-13.5 5.2 0 8.8 3.8 10.2 9.1h-2c-1.2-4.2-4-7.2-8.2-7.2-5 0-9.3 4.7-9.3 11.6 0 7 4.4 11.7 9.3 11.7 4.2 0 7-3 8.4-7.2h2Zm12-9.7h1.8v11c0 3.3 2.4 5.9 5.4 5.9 3.2 0 5.5-2.6 5.5-6V11h1.8v18.7h-1.2l-.6-2.8h-.2s-1.5 3-5.5 3-7-3.2-7-7.8V11Zm34.1 14a7.8 7.8 0 0 1-7.2 4.8c-4.8 0-8.3-4-8.3-9.5s3.5-9.6 8.1-9.6c4.4 0 8 3.9 8 9 0 .8-.2 1.4-.2 1.4H89.6c.4 4 3 6.8 6.6 6.8 2.6 0 4.2-1.7 5-3h2.2Zm-1.2-5.8c-.4-3.8-3-6.5-6.2-6.5s-5.8 2.7-6.4 6.5h12.6Z", fill: "currentColor" })] }) }; G(); var it = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 31, viewBox: "0 0 296 31", width: 296, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsxs)("g", { clipPath: "url(#core_power_yoga_logo_clip_path)", children: [(0, l.jsx)("path", { d: "M19.8858 11.3083C18.6215 9.76303 17.0762 8.70945 15.0393 8.70945C11.8084 8.70945 9.56077 11.3785 9.56077 14.469C9.56077 17.5595 11.6679 20.2285 14.8989 20.2285C17.0762 20.2285 18.6917 19.2452 19.956 17.5595H20.0263V21.0714C18.481 22.1249 16.9358 22.6868 15.1096 22.6868C10.4036 22.6868 6.89172 19.1749 6.89172 14.5392C6.89172 9.90351 10.6143 6.3916 15.1798 6.3916C16.8655 6.3916 18.5512 6.95349 19.956 7.93683V11.3083H19.8858Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M52.9679 8.35836C53.9513 7.16432 54.7239 6.25122 56.4798 6.25122C57.3929 6.25122 58.0953 6.53217 58.8679 6.9536L57.6037 9.34169C57.0418 8.9905 56.6906 8.63931 55.9882 8.63931C53.1084 8.63931 52.9679 12.3619 52.9679 14.3988V22.125H50.2989V6.60241H52.9679V8.35836Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M75.5845 12.7834C75.2333 10.5358 73.3369 8.70955 71.0191 8.70955C68.7714 8.70955 66.6643 10.5358 66.3131 12.7834H75.5845ZM66.1726 15.031C66.1726 17.9107 68.2798 20.2286 71.2298 20.2286C73.4774 20.2286 74.9524 18.8941 75.9357 16.9977L78.1833 18.2619C76.7084 21.0012 74.1798 22.6167 71.0191 22.6167C66.3833 22.6167 63.4333 19.1048 63.4333 14.6096C63.4333 10.0441 66.1024 6.25122 70.9488 6.25122C75.9357 6.25122 78.5345 10.3953 78.3238 14.9607H66.1726V15.031Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M88.7191 14.2584C88.7191 17.2786 90.4751 20.1584 93.7763 20.1584C97.1477 20.1584 98.9739 17.4191 98.9739 14.2584C98.9739 11.1679 97.0072 8.63931 93.7763 8.63931C90.6858 8.70955 88.7191 11.3786 88.7191 14.2584ZM88.8596 8.92028C90.1941 7.23457 92.0906 6.25122 94.2679 6.25122C98.8334 6.25122 101.713 10.1846 101.713 14.4691C101.713 18.8941 98.9036 22.6167 94.2679 22.6167C92.1608 22.6167 90.1941 21.7036 88.9298 20.0179H88.8596V30.9048H86.1906V6.67265H88.8596V8.92028Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M139.712 5.54883L134.936 17.2084L130.37 6.67264H127.35L134.936 23.3191L139.712 11.7298L144.558 23.3191L152.214 6.67264H149.194L144.558 17.2084L139.712 5.54883Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M168.018 12.7834C167.667 10.5358 165.77 8.70955 163.452 8.70955C161.205 8.70955 159.098 10.5358 158.746 12.7834H168.018ZM158.606 15.031C158.606 17.9107 160.713 20.2286 163.663 20.2286C165.911 20.2286 167.386 18.8941 168.369 16.9977L170.617 18.2619C169.142 21.0012 166.613 22.6167 163.452 22.6167C158.817 22.6167 155.867 19.1048 155.867 14.6096C155.867 10.0441 158.536 6.25122 163.382 6.25122C168.369 6.25122 170.968 10.3953 170.757 14.9607H158.606V15.031Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M179.256 8.35836C180.239 7.16432 181.012 6.25122 182.768 6.25122C183.681 6.25122 184.383 6.53217 185.156 6.9536L183.892 9.34169C183.33 8.9905 182.979 8.63931 182.276 8.63931C179.396 8.63931 179.256 12.3619 179.256 14.3988V22.125H176.587V6.60241H179.256V8.35836Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M115.48 20.0179C112.389 20.0179 109.931 17.5596 109.931 14.4691C109.931 11.3786 112.389 8.92028 115.48 8.92028C118.57 8.92028 121.029 11.3786 121.029 14.4691C121.099 17.4893 118.57 20.0179 115.48 20.0179ZM115.48 6.25122C110.985 6.25122 107.332 9.90361 107.332 14.3988C107.332 18.8941 110.985 22.5465 115.48 22.5465C119.975 22.5465 123.627 18.8941 123.627 14.3988C123.627 9.90361 120.045 6.25122 115.48 6.25122Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M204.963 6.81299L202.083 10.957L199.204 6.81299H194.427L200.117 14.7499V22.1249H204.05V14.7499L209.739 6.81299H204.963Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M223.155 14.1882C223.155 16.8573 225.121 18.7537 227.509 18.7537C229.898 18.7537 231.864 16.787 231.864 14.1882C231.864 12.0811 229.898 10.1144 227.509 10.1144C225.121 10.1846 223.155 12.0811 223.155 14.1882ZM236.008 14.1882C236.008 19.1751 232.426 22.6168 227.509 22.6168C222.593 22.6168 219.011 19.1049 219.011 14.1882C219.011 9.55249 223.084 6.32153 227.509 6.32153C231.934 6.32153 236.008 9.55249 236.008 14.1882Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M262.277 13.556C262.207 15.8036 262.067 17.7 260.732 19.5965C259.257 21.7036 256.939 22.6167 254.411 22.6167C249.564 22.6167 246.263 19.3155 246.263 14.5393C246.263 9.55242 249.634 6.25122 254.551 6.25122C257.712 6.25122 260.17 7.65599 261.434 10.5357L257.642 12.1512C257.08 10.6762 255.956 9.69288 254.34 9.69288C251.742 9.69288 250.337 12.2215 250.337 14.5393C250.337 16.9274 251.742 19.3155 254.411 19.3155C256.167 19.3155 257.431 18.4024 257.642 16.6465H254.411V13.4858H262.277V13.556Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M279.907 11.5189L281.593 16.4356H278.292L279.907 11.5189ZM277.8 6.81299L271.9 22.1249H276.114L277.168 19.4558H282.646L283.63 22.1249H287.914L282.155 6.81299H277.8Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M35.1274 19.6666C32.0369 19.6666 29.5785 17.2082 29.5785 14.1178C29.5785 11.0273 32.0369 8.56896 35.1274 8.56896C38.2178 8.56896 40.6762 11.0273 40.6762 14.1178C40.6762 17.138 38.2178 19.6666 35.1274 19.6666ZM35.1274 5.8999C30.6321 5.8999 26.9797 9.55229 26.9797 14.0475C26.9797 18.5428 30.6321 22.1951 35.1274 22.1951C39.6226 22.1951 43.275 18.5428 43.275 14.0475C43.275 9.55229 39.6226 5.8999 35.1274 5.8999Z", fill: "currentColor" })] }), (0, l.jsx)("defs", { children: (0, l.jsx)("clipPath", { id: "core_power_yoga_logo_clip_path", children: (0, l.jsx)("rect", { fill: "white", height: 30.9048, transform: "translate(0.5)", width: 295 }) }) })] }) }; G(); var ii = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 25, viewBox: "0 0 25 25", width: 25, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M22.3685 5.3375V18.5542C22.3685 18.9608 22.216 19.3167 21.911 19.6217C21.606 19.9267 21.2502 20.0792 20.8435 20.0792H3.56016C3.15349 20.0792 2.79766 19.9267 2.49266 19.6217C2.18766 19.3167 2.03516 18.9608 2.03516 18.5542V5.3375C2.03516 4.93083 2.18766 4.575 2.49266 4.27C2.79766 3.965 3.15349 3.8125 3.56016 3.8125H20.8435C21.2502 3.8125 21.606 3.965 21.911 4.27C22.216 4.575 22.3685 4.93083 22.3685 5.3375ZM3.56016 8.10792H20.8435V5.3375H3.56016V8.10792ZM3.56016 11.3867V18.5542H20.8435V11.3867H3.56016Z", fill: "currentColor" })] }) }; G(); var il = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 40, viewBox: "0 0 193 40", width: 193, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsxs)("g", { clipPath: "url(#cronometer-logo-a)", children: [(0, l.jsx)("path", { d: "M55.4563 18.5274C56.3475 17.9743 57.3834 17.6994 58.4316 17.7379C59.5703 17.6883 60.6932 18.0186 61.6237 18.6768C62.4758 19.3436 63.092 20.2659 63.3816 21.3084L66.9495 20.3247C66.4088 18.5928 65.3242 17.0813 63.8568 16.0142C62.2668 14.9136 60.3643 14.355 58.4316 14.4216C56.7341 14.3761 55.0565 14.797 53.5815 15.6384C52.227 16.4446 51.1366 17.6276 50.4432 19.0432C49.6808 20.6285 49.3036 22.3714 49.3421 24.13C49.3035 25.889 49.6808 27.6323 50.4432 29.2179C51.1364 30.6335 52.2269 31.8166 53.5815 32.6226C55.0564 33.4644 56.734 33.8855 58.4316 33.84C60.3642 33.9062 62.2666 33.3477 63.8568 32.2474C65.3241 31.18 66.4087 29.6683 66.9495 27.9363L63.3811 26.9563C63.1031 28.0356 62.4562 28.9837 61.5526 29.6361C60.649 30.2885 59.5456 30.6042 58.4337 30.5284C57.3855 30.5669 56.3497 30.2921 55.4585 29.739C54.6505 29.195 54.0265 28.4187 53.6689 27.5126C53.2483 26.4369 53.0449 25.2885 53.0705 24.1337C53.045 22.9789 53.2483 21.8305 53.6689 20.7547C54.0267 19.8488 54.6507 19.0726 55.4585 18.5284", fill: "currentColor" }), (0, l.jsx)("path", { d: "M76.0527 19.44C75.6336 19.4697 75.2187 19.5438 74.8153 19.661C74.427 19.7734 74.0553 19.9368 73.71 20.1468C73.2757 20.3981 72.8951 20.7321 72.5895 21.13C72.4452 21.3199 72.3148 21.5199 72.199 21.7284V19.4726H69.0732V33.4542H72.6415V26.3079C72.6344 25.8179 72.7094 25.3301 72.8632 24.8647C73.0007 24.4507 73.2237 24.0701 73.5177 23.7478C73.8118 23.4254 74.1702 23.1685 74.57 22.9937C75.0101 22.7891 75.4845 22.6685 75.9689 22.6379C76.4263 22.5935 76.8881 22.6352 77.33 22.7611V19.4726C76.9066 19.4214 76.4792 19.4103 76.0537 19.4395", fill: "currentColor" }), (0, l.jsx)("path", { d: "M88.5084 20.0289C87.3706 19.4107 86.0965 19.0857 84.8016 19.0834C83.5066 19.0811 82.2316 19.4015 81.0915 20.0158C80.0297 20.6318 79.1598 21.5304 78.5784 22.6116C77.9518 23.7968 77.6378 25.1223 77.6663 26.4626C77.6408 27.7924 77.9483 29.1074 78.561 30.2879C79.133 31.3727 79.9967 32.2761 81.0547 32.8963C82.1972 33.5156 83.476 33.8405 84.7756 33.8417C86.0752 33.8429 87.3547 33.5203 88.4984 32.9031C89.562 32.2866 90.4322 31.3852 91.011 30.3005C91.6056 29.1105 91.9157 27.7987 91.9169 26.4684C91.9181 25.1381 91.6104 23.8258 91.0179 22.6347C90.4409 21.549 89.5725 20.6457 88.5105 20.0263M87.3252 29.4058C87.0094 29.7627 86.622 30.0491 86.1882 30.2464C85.7544 30.4437 85.2839 30.5476 84.8074 30.5511C84.3308 30.5547 83.8589 30.4579 83.4222 30.2671C82.9855 30.0763 82.5937 29.7958 82.2725 29.4437C81.6632 28.5722 81.3632 27.5218 81.42 26.46C81.4051 25.7318 81.5266 25.0072 81.7784 24.3237C81.9912 23.7446 82.3746 23.2437 82.8779 22.8868C83.443 22.5218 84.1074 22.3411 84.7795 22.3695C85.2601 22.3374 85.7414 22.4219 86.1824 22.6157C86.6234 22.8095 87.0112 23.1069 87.3126 23.4826C87.9199 24.3527 88.2198 25.4003 88.1652 26.46C88.2101 27.5076 87.9147 28.5416 87.3232 29.4074", fill: "currentColor" }), (0, l.jsx)("path", { d: "M105.835 22.8063C105.661 22.171 105.382 21.5694 105.008 21.0269C104.592 20.4304 104.035 19.9456 103.387 19.6153C102.547 19.2126 101.622 19.0214 100.692 19.0584C99.4842 19.0122 98.2901 19.3235 97.2589 19.9532C96.8431 20.2258 96.4646 20.5513 96.1327 20.9216V19.4721H92.9816V33.4537H96.5763V26.36C96.552 25.6493 96.6509 24.9397 96.8685 24.2626C97.0178 23.8085 97.2752 23.3974 97.6185 23.0647C97.8966 22.8074 98.2311 22.6189 98.5953 22.5142C98.9129 22.4236 99.2413 22.3758 99.5716 22.3721C100.196 22.3324 100.815 22.5106 101.323 22.8763C101.73 23.2058 102.038 23.6405 102.215 24.1332C102.393 24.614 102.503 25.1173 102.541 25.6284C102.576 26.1249 102.594 26.5326 102.594 26.8516V33.4537H106.188V25.609C106.188 25.3756 106.171 25.0044 106.136 24.4953C106.09 23.9238 105.989 23.3581 105.836 22.8058", fill: "currentColor" }), (0, l.jsx)("path", { d: "M118.435 20.029C117.297 19.4107 116.023 19.0858 114.729 19.0835C113.434 19.0812 112.158 19.4016 111.018 20.0158C109.957 20.6318 109.087 21.5304 108.505 22.6116C107.879 23.7968 107.565 25.1223 107.593 26.4626C107.568 27.7924 107.875 29.1074 108.488 30.2879C109.06 31.3728 109.923 32.2763 110.982 32.8963C112.124 33.5157 113.403 33.8406 114.703 33.8418C116.002 33.843 117.282 33.5204 118.425 32.9032C119.489 32.2866 120.359 31.3852 120.938 30.3005C121.532 29.1108 121.842 27.7994 121.843 26.4695C121.845 25.1396 121.537 23.8276 120.945 22.6368C120.368 21.5512 119.5 20.6479 118.438 20.0284M117.253 29.4079C116.937 29.7648 116.549 30.0512 116.116 30.2485C115.682 30.4459 115.211 30.5497 114.735 30.5533C114.258 30.5568 113.786 30.4601 113.349 30.2693C112.913 30.0785 112.521 29.7979 112.2 29.4458C111.591 28.5743 111.29 27.524 111.347 26.4621C111.332 25.7339 111.454 25.0093 111.706 24.3258C111.919 23.7467 112.302 23.2457 112.806 22.889C113.371 22.5238 114.035 22.3431 114.707 22.3716C115.188 22.3395 115.669 22.4239 116.11 22.6177C116.551 22.8115 116.939 23.1089 117.24 23.4847C117.848 24.3548 118.148 25.4025 118.093 26.4621C118.138 27.5098 117.843 28.5438 117.251 29.4095", fill: "currentColor" }), (0, l.jsx)("path", { d: "M138.537 19.1358C137.646 19.1246 136.766 19.3359 135.977 19.7505C135.276 20.1233 134.678 20.6662 134.241 21.3295C133.912 20.7265 133.439 20.214 132.865 19.8374C132.048 19.3418 131.104 19.0985 130.149 19.1379C129.239 19.1247 128.341 19.3429 127.538 19.7721C126.961 20.0828 126.45 20.5037 126.035 21.011V19.4742H122.909V33.4558H126.477V24.9874C126.446 24.2727 126.686 23.5727 127.147 23.0263C127.381 22.7855 127.661 22.5944 127.97 22.4642C128.279 22.334 128.612 22.2675 128.947 22.2686C129.283 22.2698 129.615 22.3385 129.923 22.4708C130.231 22.603 130.51 22.7961 130.742 23.0384C131.214 23.6549 131.448 24.4212 131.401 25.1963V33.4558H134.942V24.9874C134.932 24.4976 135.037 24.0122 135.248 23.57C135.437 23.1772 135.732 22.8454 136.1 22.6121C136.489 22.3773 136.937 22.2584 137.391 22.2695C137.732 22.2525 138.073 22.3128 138.387 22.446C138.702 22.5791 138.982 22.7817 139.207 23.0384C139.679 23.6552 139.912 24.4214 139.864 25.1963V33.4558H143.406V24.2626C143.468 22.9169 143.03 21.5959 142.176 20.5537C141.356 19.6088 140.143 19.1361 138.537 19.1358Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M155.167 20.1205C154.045 19.4041 152.734 19.0428 151.403 19.0837C150.113 19.0588 148.84 19.3833 147.719 20.0226C146.651 20.6481 145.78 21.5608 145.205 22.6569C144.574 23.8891 144.26 25.2599 144.294 26.6442C144.269 27.9453 144.59 29.2296 145.225 30.3658C145.834 31.4369 146.726 32.3194 147.804 32.9163C148.971 33.5507 150.284 33.8698 151.613 33.8421C152.937 33.8509 154.235 33.4827 155.357 32.7805C156.49 32.0827 157.369 31.0388 157.864 29.8032L154.322 28.7932C154.086 29.3346 153.691 29.7909 153.188 30.1011C152.648 30.4155 152.03 30.5725 151.404 30.5542C150.932 30.5853 150.459 30.5048 150.023 30.3192C149.587 30.1336 149.202 29.8481 148.897 29.4858C148.453 28.8912 148.18 28.1865 148.107 27.4479H157.98C158.152 25.9558 157.974 24.4441 157.459 23.0332C157.016 21.848 156.215 20.8296 155.167 20.1205ZM151.559 22.14C151.98 22.1012 152.404 22.1665 152.793 22.3302C153.183 22.4939 153.526 22.7508 153.793 23.0784C154.133 23.6054 154.34 24.2076 154.394 24.8326H148.212C148.318 24.2551 148.551 23.7086 148.896 23.2332C149.222 22.8536 149.633 22.5567 150.096 22.3666C150.559 22.1765 151.061 22.0992 151.559 22.14Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M164.062 15.5869H160.52V19.4705H158.123V22.1895H160.52V27.5253C160.52 28.3621 160.529 29.1107 160.546 29.7711C160.569 30.4546 160.757 31.1225 161.093 31.7184C161.464 32.3899 162.054 32.9132 162.766 33.2005C163.561 33.5193 164.409 33.6863 165.266 33.6926C166.225 33.7119 167.183 33.6316 168.125 33.4532V30.5279C167.371 30.6375 166.607 30.6728 165.846 30.6332C165.549 30.6339 165.257 30.561 164.996 30.4209C164.734 30.2808 164.512 30.0779 164.348 29.8305C164.167 29.5135 164.075 29.1535 164.082 28.7884C164.068 28.3532 164.062 27.8626 164.062 27.3195V22.1916H168.125V19.4726H164.062L164.062 15.5869Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M179.598 20.1205C178.476 19.404 177.164 19.0427 175.834 19.0837C174.543 19.0588 173.27 19.3833 172.149 20.0226C171.081 20.6481 170.211 21.5608 169.636 22.6568C169.004 23.8891 168.691 25.2599 168.724 26.6442C168.699 27.9453 169.021 29.2297 169.656 30.3658C170.264 31.437 171.157 32.3196 172.235 32.9163C173.403 33.5507 174.716 33.8698 176.044 33.8421C177.368 33.8509 178.666 33.4826 179.788 32.7805C180.921 32.0827 181.801 31.0389 182.295 29.8031L178.754 28.7931C178.518 29.3344 178.122 29.7906 177.62 30.101C177.079 30.4155 176.461 30.5725 175.836 30.5542C175.363 30.5853 174.89 30.5048 174.455 30.3192C174.019 30.1336 173.633 29.8481 173.328 29.4858C172.884 28.8912 172.611 28.1865 172.539 27.4479H182.41C182.583 25.9558 182.404 24.4441 181.889 23.0331C181.447 21.8479 180.646 20.8294 179.598 20.1205ZM175.99 22.14C176.411 22.1012 176.834 22.1665 177.224 22.3302C177.613 22.4938 177.956 22.7508 178.223 23.0784C178.564 23.6054 178.77 24.2076 178.825 24.8326H172.641C172.747 24.2552 172.981 23.7088 173.325 23.2331C173.652 22.8537 174.063 22.5567 174.526 22.3667C174.989 22.1766 175.49 22.0987 175.989 22.1395", fill: "currentColor" }), (0, l.jsx)("path", { d: "M191.071 19.44C190.652 19.4697 190.238 19.5438 189.834 19.661C189.446 19.7734 189.074 19.9367 188.729 20.1468C188.294 20.3973 187.913 20.7306 187.607 21.1279C187.463 21.3178 187.332 21.5178 187.216 21.7263V19.4726H184.091V33.4542H187.659V26.3079C187.652 25.8179 187.727 25.3301 187.88 24.8647C188.018 24.4507 188.241 24.0702 188.535 23.7479C188.829 23.4256 189.188 23.1686 189.587 22.9937C190.028 22.789 190.502 22.6684 190.986 22.6379C191.444 22.5934 191.906 22.6352 192.348 22.7611V19.4726C191.924 19.4214 191.497 19.4103 191.072 19.4395", fill: "currentColor" }), (0, l.jsx)("path", { d: "M36.1374 21.7184C35.836 21.6695 35.5275 21.7416 35.279 21.919C35.0305 22.0964 34.8622 22.3648 34.8106 22.6658C34.7543 23.0079 34.6896 23.3579 34.6175 23.7053C33.9244 27.0216 32.6249 30.1814 30.7843 33.0258C28.8312 35.9526 26.5601 37.7 24.7096 37.7C23.8248 37.7192 22.9432 37.5856 22.1037 37.3053C19.8877 36.6141 17.5137 36.6154 15.2985 37.3089C14.4622 37.5869 13.5844 37.7192 12.7033 37.7C10.8543 37.7 8.58375 35.9537 6.6306 33.0284C4.79005 30.1843 3.49026 27.0249 2.79643 23.7089C2.02643 20.0158 2.17065 16.7647 3.21275 14.3063C3.6404 13.2241 4.28334 12.2399 5.10266 11.4136C5.92198 10.5873 6.9006 9.9359 7.97915 9.49904C9.05771 9.06217 10.2136 8.84889 11.3771 8.87213C12.5405 8.89536 13.6871 9.15463 14.7474 9.63421L14.8121 9.65895C16.0337 10.194 17.3508 10.4765 18.6843 10.4895H18.7338C20.0682 10.476 21.3861 10.1924 22.6079 9.65579L22.6664 9.63316C23.8271 9.12246 25.0825 8.86258 26.3506 8.87053C27.0745 8.87906 27.7933 8.99397 28.4838 9.21158C28.8809 9.33399 29.2692 9.48346 29.6459 9.65895C29.9231 9.78859 30.2404 9.80318 30.5284 9.69952C30.8164 9.59586 31.0516 9.38239 31.1827 9.10579C31.2467 8.96911 31.2832 8.82111 31.29 8.67029C31.2967 8.51948 31.2735 8.36883 31.2219 8.227C31.1702 8.08516 31.0909 7.95494 30.9888 7.84382C30.8866 7.7327 30.7634 7.64286 30.6264 7.57947C30.153 7.35883 29.6649 7.17084 29.1658 7.01684C28.2546 6.73005 27.3058 6.58069 26.3506 6.57368C24.7971 6.56415 23.2585 6.8765 21.8317 7.49105L21.7727 7.51368C21.1672 7.76922 20.5375 7.96318 19.8932 8.09263C19.8147 7.44474 19.6749 6.80575 19.4759 6.18421C23.9295 5.37631 23.7722 -0.00210571 23.7722 -0.00210571C20.1459 0.54421 18.5822 1.92105 17.9464 3.24474C17.3421 2.45931 16.6039 1.78672 15.7658 1.25789C15.6138 1.16072 15.444 1.09444 15.2664 1.06285C15.0887 1.03126 14.9066 1.03497 14.7304 1.07377C14.5542 1.11258 14.3873 1.18572 14.2393 1.28901C14.0913 1.3923 13.9651 1.52373 13.868 1.67579C13.7708 1.82785 13.7045 1.99755 13.6729 2.17523C13.6413 2.3529 13.645 2.53505 13.6838 2.71128C13.7226 2.88752 13.7958 3.05439 13.899 3.20236C14.0023 3.35033 14.1338 3.47651 14.2858 3.57368C15.0361 4.07666 15.6732 4.73054 16.1566 5.49357C16.64 6.25661 16.9589 7.11204 17.0932 8.00526C16.6013 7.87408 16.1183 7.71182 15.647 7.51947L15.5785 7.49316C14.1527 6.8802 12.6157 6.56859 11.0638 6.57789C7.54749 6.57789 2.99004 8.92684 1.08372 13.42C-0.464175 17.0705 -0.069923 21.2868 0.533761 24.1816C1.28928 27.7845 2.70353 31.2169 4.70535 34.3063C7.15904 37.981 10.0001 40.0053 12.7053 40.0053C13.8126 40.0245 14.9153 39.8594 15.9685 39.5168C17.7552 38.9508 19.6733 38.9508 21.4601 39.5168C22.5099 39.8585 23.6093 40.0231 24.7132 40.0037C27.3795 40.0037 30.2958 37.9253 32.7132 34.3016C34.7147 31.2122 36.1284 27.7797 36.8832 24.1768C36.9627 23.7974 37.0332 23.4153 37.0937 23.0411C37.1179 22.8917 37.1124 22.7391 37.0775 22.5919C37.0426 22.4448 36.9789 22.3059 36.8902 22.1834C36.8015 22.0609 36.6895 21.957 36.5606 21.8779C36.4317 21.7987 36.2884 21.7458 36.139 21.7221", fill: "currentColor" }), (0, l.jsx)("path", { d: "M41.3821 15.7284V15.7332L38.1642 13.4563L37.9979 13.3668L38.0178 13.1653L38.111 9.24052H38.1147C38.1165 9.03773 38.0655 8.83796 37.9667 8.66088C37.8679 8.48379 37.7246 8.33548 37.551 8.23052C37.3769 8.12449 37.1785 8.06532 36.9747 8.05878C36.771 8.05223 36.5689 8.09852 36.3884 8.19315L32.9799 9.89052C32.4886 10.1549 32.0699 10.536 31.7605 11.0003C31.4511 11.4646 31.2606 11.9979 31.2058 12.5532L30.9173 15.5868L28.4621 16.8974C27.5027 15.4556 26.236 14.2443 24.7528 13.3505C23.2696 12.4567 21.6067 11.9025 19.8838 11.7278C18.161 11.5532 16.4208 11.7623 14.7884 12.3403C13.1559 12.9183 11.6718 13.8507 10.4427 15.0705C9.35794 16.146 8.49684 17.4258 7.90927 18.8358C7.32169 20.2458 7.01918 21.7582 7.01918 23.2858C7.01918 24.8133 7.32169 26.3258 7.90927 27.7358C8.49684 29.1458 9.35794 30.4255 10.4427 31.501C12.0768 33.1251 14.154 34.2307 16.4138 34.6792C18.6737 35.1276 21.0157 34.8991 23.1462 34.0222C25.2767 33.1453 27.101 31.659 28.3904 29.7496C29.6797 27.8403 30.3768 25.5928 30.3942 23.2889C30.3947 21.7966 30.1047 20.3184 29.5405 18.9368L31.9616 17.6474L31.9574 17.6595L34.5742 19.2458C35.0537 19.535 35.5965 19.7027 36.1556 19.7346C36.7146 19.7664 37.2729 19.6613 37.7821 19.4284L41.1905 17.731C41.374 17.6448 41.5319 17.5122 41.6486 17.3463C41.7653 17.1804 41.8366 16.987 41.8557 16.7851C41.8749 16.5832 41.8411 16.3798 41.7577 16.195C41.6743 16.0101 41.5441 15.8502 41.38 15.731M28.0836 23.2889C28.0701 25.1375 27.5113 26.9408 26.4771 28.473C25.4428 30.0052 23.9793 31.198 22.27 31.9018C20.5607 32.6056 18.6817 32.7891 16.8685 32.4294C15.0552 32.0696 13.3885 31.1826 12.0774 29.8795C11.2073 29.0166 10.5166 27.99 10.0452 26.8588C9.57392 25.7277 9.33132 24.5144 9.33132 23.2889C9.33132 22.0635 9.57392 20.8502 10.0452 19.7191C10.5166 18.5879 11.2073 17.5613 12.0774 16.6984C13.0511 15.7322 14.2243 14.9906 15.5149 14.5257C16.8054 14.0608 18.182 13.8838 19.5482 14.0071C20.9144 14.1304 22.2371 14.5511 23.4235 15.2395C24.6099 15.928 25.6313 16.8677 26.4163 17.9926L23.2385 19.6884C22.7269 19.0535 22.0876 18.5331 21.3622 18.1609C20.6367 17.7888 19.8413 17.5731 19.0272 17.5279C18.2131 17.4827 17.3986 17.609 16.6364 17.8986C15.8742 18.1881 15.1813 18.6346 14.6026 19.2089C14.0643 19.7431 13.6371 20.3785 13.3455 21.0786C13.0539 21.7787 12.9039 22.5295 12.9039 23.2879C12.9039 24.0462 13.0539 24.7971 13.3455 25.4972C13.6371 26.1972 14.0643 26.8327 14.6026 27.3668C15.5048 28.2802 16.685 28.8678 17.9576 29.0372C19.2302 29.2066 20.523 28.9482 21.6327 28.3026C22.7424 27.6571 23.606 26.661 24.0878 25.471C24.5696 24.281 24.6422 22.9647 24.2942 21.7289L27.4895 20.0279C27.8829 21.0701 28.0841 22.175 28.0836 23.2889ZM17.9289 23.7847C18.0673 24.0569 18.3076 24.2635 18.5975 24.3594C18.8874 24.4553 19.2035 24.4328 19.4769 24.2968L22.1711 22.8621C22.2761 23.6798 22.0881 24.5083 21.6406 25.2006C21.1931 25.893 20.515 26.4046 19.7263 26.6447C18.9376 26.8848 18.0893 26.8379 17.3319 26.5123C16.5745 26.1868 15.9568 25.6036 15.5884 24.8661C15.2199 24.1286 15.1246 23.2845 15.3191 22.4833C15.5135 21.6822 15.9853 20.9758 16.6509 20.4893C17.3165 20.0028 18.1328 19.7677 18.9552 19.8256C19.7776 19.8836 20.5529 20.2308 21.1437 20.8058L18.4437 22.2463C18.3085 22.3131 18.1878 22.4059 18.0886 22.5196C17.9895 22.6332 17.9138 22.7653 17.866 22.9083C17.8181 23.0513 17.799 23.2024 17.8098 23.3528C17.8206 23.5032 17.8611 23.65 17.9289 23.7847ZM33.4148 13.2421C33.5 12.7916 33.5658 12.3968 33.9816 12.1726L35.738 11.2989L35.501 13.4479L33.2805 14.5532L33.4148 13.2421ZM36.5479 17.2658C36.3473 17.3331 36.1335 17.3511 35.9245 17.3182C35.7155 17.2853 35.5175 17.2025 35.3473 17.0768L34.2095 16.3984L36.4305 15.2932L38.3037 16.3921L36.5479 17.2658Z", fill: "currentColor" })] }), (0, l.jsx)("defs", { children: (0, l.jsx)("clipPath", { id: "cronometer-logo-a", children: (0, l.jsx)("rect", { fill: "white", height: 40, width: 192.347 }) }) })] }) }; G(); var io = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 24 24", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M5.67296 7.3605C5.67296 8.03756 5.18712 8.5991 4.55098 8.70357L8.24343 12.8383L11.6312 8.62318C11.0724 8.46304 10.6634 7.94799 10.6634 7.33736C10.6634 6.59876 11.2618 6 11.9999 6C12.738 6 13.3364 6.59876 13.3364 7.33736C13.3364 7.96149 12.9091 8.48577 12.3313 8.63328L15.711 12.8383L19.4451 8.65695C18.8109 8.55263 18.327 8.00154 18.327 7.33736C18.327 6.59876 18.9254 6 19.6635 6C20.4016 6 21 6.59876 21 7.33736C21 8.00927 20.5048 8.56545 19.8597 8.66041V17.5C19.8597 17.7761 19.6358 18 19.3597 18H4.59476C4.31861 18 4.09476 17.7761 4.09476 17.5V8.69881C3.47203 8.583 3 8.02787 3 7.3605C3 6.60912 3.59836 6 4.33648 6C5.0746 6 5.67296 6.60912 5.67296 7.3605Z", fill: "currentColor" })] }) }; G(); var ia = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 32, viewBox: "0 0 32 32", width: 32, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("circle", { cx: 16, cy: 16, r: 15.5, stroke: "#4A4741", strokeOpacity: .3 }), (0, l.jsxs)("g", { clipPath: "url(#clip0_3780_15896)", children: [(0, l.jsx)("path", { d: "M22.4167 16H9.58333C8.57081 16 7.75 16.9234 7.75 18.0625C7.75 19.4013 7.75 20.125 8.85 21.775C10.5 24.25 10.75 24.25 16 24.25C21.292 24.25 21.625 24.0625 23.15 21.775C23.967 20.5495 24.1772 19.835 24.2313 19", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2 }), (0, l.jsx)("path", { d: "M13 15.25L8.5 10.75", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2 }), (0, l.jsx)("path", { d: "M13.4023 15.5762V8.15161", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2 }), (0, l.jsx)("circle", { cx: 19.75, cy: 13, fill: "currentColor", r: .75 }), (0, l.jsx)("circle", { cx: 17.5, cy: 11.5, fill: "currentColor", r: .75 }), (0, l.jsx)("circle", { cx: 19.75, cy: 10, fill: "currentColor", r: .75 })] }), (0, l.jsx)("defs", { children: (0, l.jsx)("clipPath", { children: (0, l.jsx)("rect", { fill: "white", height: 18, transform: "translate(7 7)", width: 18 }) }) })] }) }; G(); var is = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 32, viewBox: "0 0 32 32", width: 32, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("circle", { cx: 16, cy: 16, r: 15.5, stroke: "#4A4741", strokeOpacity: .3 }), (0, l.jsx)("g", { clipPath: "url(#clip0_3780_15889)", children: (0, l.jsx)("path", { clipRule: "evenodd", d: "M23.0825 11.6092C20.6472 7.68784 15.4836 6.49691 11.5107 8.922C10.6932 9.42097 8.11721 11.2128 7.66145 15.2378C7.60967 15.6951 7.19696 16.0239 6.73965 15.9721C6.28233 15.9203 5.95358 15.5076 6.00537 15.0503C6.5446 10.2881 9.62556 8.12005 10.6423 7.49941C15.3807 4.60712 21.5702 6.01503 24.4984 10.7299C27.4259 15.4438 25.9418 21.6154 21.1938 24.5136C16.45 27.4092 10.2342 25.9468 7.30934 21.2372C6.48392 19.9081 7.22143 18.4047 8.13396 17.6466C8.75814 17.1281 9.56601 16.4979 10.3675 15.9928C10.7681 15.7403 11.1831 15.5089 11.5845 15.3383C11.9739 15.1728 12.4127 15.0372 12.8434 15.0372C13.4881 15.0372 14.0082 15.1669 14.4507 15.3818C14.8812 15.5909 15.2023 15.8647 15.4467 16.0801C15.4589 16.0909 15.471 16.1015 15.4829 16.112C15.956 16.5292 16.1573 16.7067 16.6323 16.7067C16.8097 16.7067 17.0696 16.6481 17.4092 16.5012C17.7404 16.358 18.1 16.1516 18.4628 15.9086C19.1898 15.4216 19.8648 14.8313 20.2554 14.4441C20.5822 14.12 21.1099 14.1223 21.4339 14.4491C21.7579 14.776 21.7556 15.3036 21.4288 15.6276C20.9774 16.0752 20.221 16.7369 19.3904 17.2933C18.9744 17.572 18.5236 17.8351 18.0708 18.031C17.6263 18.2232 17.1284 18.3733 16.6323 18.3733C15.5132 18.3733 14.8786 17.8068 14.4348 17.4105C14.4039 17.3829 14.3739 17.3562 14.3448 17.3305C14.1155 17.1285 13.9367 16.985 13.7226 16.881C13.5205 16.7829 13.2512 16.7039 12.8434 16.7039C12.7379 16.7039 12.5394 16.7434 12.2364 16.8722C11.9454 16.9959 11.6126 17.1781 11.2561 17.4028C10.5432 17.8521 9.79881 18.4304 9.19892 18.9287C8.61458 19.4141 8.5234 20.033 8.72518 20.3579C11.1639 24.2847 16.3579 25.5128 20.3255 23.091C24.2888 20.6718 25.5185 15.5317 23.0825 11.6092Z", fill: "currentColor", fillRule: "evenodd" }) }), (0, l.jsx)("defs", { children: (0, l.jsx)("clipPath", { children: (0, l.jsx)("rect", { fill: "white", height: 20, transform: "translate(6 6)", width: 20 }) }) })] }) }; G(); var iC = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 28 24", width: 28, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M6.10374 0.754258C6.3254 0.488266 6.65376 0.334473 7 0.334473H21C21.3462 0.334473 21.6746 0.488266 21.8963 0.754258L27.7296 7.75426C28.1035 8.20293 28.088 8.85895 27.6933 9.28948L14.86 23.2895C14.639 23.5306 14.327 23.6678 14 23.6678C13.673 23.6678 13.361 23.5306 13.14 23.2895L0.306655 9.28948C-0.0879984 8.85895 -0.103486 8.20293 0.27041 7.75426L6.10374 0.754258ZM6.55549 3.85694L3.65755 7.33447H7.71467L6.55549 3.85694ZM3.81878 9.66781L11.1631 17.6798L8.49245 9.66781H3.81878ZM10.952 9.66781L14 18.8118L17.048 9.66781H10.952ZM19.5076 9.66781L16.8369 17.6798L24.1812 9.66781H19.5076ZM24.3425 7.33447L21.4445 3.85694L20.2853 7.33447H24.3425ZM19.3813 2.66781H8.61866L10.1742 7.33447H17.8258L19.3813 2.66781Z", fill: "currentColor" })] }) }; G(); var iu = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 24 24", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M11.25 0.75C11.25 0.335786 11.5858 0 12 0C12.4142 0 12.75 0.335786 12.75 0.75V9.20772L16.9792 1.88259C17.1863 1.52387 17.645 1.40097 18.0037 1.60807C18.3624 1.81518 18.4853 2.27387 18.2782 2.63259L14.0569 9.94409L21.3661 5.72412C21.7248 5.51701 22.1835 5.63992 22.3906 5.99864C22.5977 6.35736 22.4748 6.81605 22.1161 7.02316L14.795 11.25H23.25C23.6642 11.25 24 11.5858 24 12C24 12.4142 23.6642 12.75 23.25 12.75H14.8003L22.1195 16.9757C22.4782 17.1828 22.6011 17.6415 22.394 18.0002C22.1869 18.3589 21.7282 18.4818 21.3695 18.2747L14.0473 14.0473L18.273 21.3664C18.4801 21.7251 18.3572 22.1838 17.9985 22.3909C17.6398 22.598 17.1811 22.4751 16.974 22.1164L12.75 14.8003V23.25C12.75 23.6642 12.4142 24 12 24C11.5858 24 11.25 23.6642 11.25 23.25V14.8058L7.0282 22.1182C6.8211 22.4769 6.36241 22.5998 6.00368 22.3927C5.64497 22.1856 5.52206 21.7269 5.72917 21.3682L9.95883 14.0422L2.63054 18.2732C2.27182 18.4803 1.81312 18.3574 1.60602 17.9986C1.39891 17.6399 1.52182 17.1812 1.88054 16.9741L9.19693 12.75H0.75C0.335787 12.75 0 12.4142 0 12C0 11.5858 0.335787 11.25 0.75 11.25H9.20226L1.88389 7.02474C1.52518 6.81763 1.40227 6.35894 1.60938 6.00022C1.81648 5.6415 2.27518 5.51859 2.63389 5.7257L9.94925 9.94923L5.72396 2.6308C5.51685 2.27208 5.63976 1.81339 5.99848 1.60628C6.3572 1.39918 6.81589 1.52208 7.023 1.8808L11.25 9.20219V0.75Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var id = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, height: 84.98001142204454, viewBox: "0, 0, 400,84.98001142204454", width: 400, xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsxs)("g", { children: [(0, l.jsx)("path", { d: "M0.000 41.750 L 0.000 83.500 27.500 83.500 L 55.000 83.500 55.000 77.334 L 55.000 71.168 35.625 71.126 L 16.250 71.083 16.207 59.125 L 16.164 47.167 34.332 47.167 L 52.500 47.167 52.500 40.917 L 52.500 34.667 34.333 34.667 L 16.167 34.667 16.167 23.583 L 16.167 12.500 35.167 12.500 L 54.167 12.500 54.167 6.250 L 54.167 0.000 27.083 0.000 L 0.000 0.000 0.000 41.750 M350.500 14.422 C 350.500 30.095,350.557 29.207,349.570 28.825 C 331.307 21.771,311.922 32.707,309.748 51.293 C 307.952 66.648,316.162 79.253,330.138 82.598 C 333.627 83.433,334.470 83.471,350.208 83.488 L 365.000 83.503 365.000 41.752 L 365.000 0.000 357.750 0.000 L 350.500 0.000 350.500 14.422 M373.333 0.745 L 373.333 1.491 375.625 1.537 L 377.917 1.583 377.960 7.625 L 378.004 13.667 378.917 13.667 L 379.829 13.667 379.873 7.625 L 379.917 1.583 382.208 1.537 L 384.500 1.491 384.500 0.745 L 384.500 0.000 378.917 0.000 L 373.333 0.000 373.333 0.745 M386.833 6.833 L 386.833 13.667 387.583 13.667 L 388.333 13.667 388.333 8.819 C 388.333 3.424,388.349 3.364,389.307 5.179 C 389.618 5.768,390.136 6.737,390.458 7.333 C 390.781 7.929,391.416 9.110,391.871 9.958 C 392.846 11.779,393.609 12.106,394.206 10.958 C 394.361 10.660,395.297 8.879,396.286 7.000 L 398.083 3.583 398.127 8.625 L 398.172 13.667 398.919 13.667 L 399.667 13.667 399.667 6.823 L 399.667 -0.020 399.042 0.032 C 398.351 0.089,398.457 -0.083,395.211 6.250 C 394.600 7.442,393.922 8.706,393.704 9.060 C 393.222 9.839,393.357 9.995,391.630 6.667 C 390.940 5.337,390.132 3.800,389.834 3.250 C 389.535 2.700,389.033 1.744,388.718 1.125 C 388.156 0.024,388.130 -0.000,387.489 -0.000 L 386.833 0.000 386.833 6.833 M151.972 13.150 C 151.942 13.233,150.754 14.526,149.333 16.023 C 147.912 17.520,146.078 19.459,145.258 20.331 C 144.437 21.203,143.012 22.707,142.091 23.672 C 140.529 25.311,139.479 26.421,132.617 33.688 L 130.000 36.460 130.000 37.560 L 130.000 38.661 134.292 38.706 L 138.583 38.750 138.675 53.333 C 138.772 68.740,138.807 69.457,139.600 72.062 C 141.279 77.579,145.300 81.700,150.667 83.403 C 152.894 84.110,153.003 84.137,154.500 84.349 C 160.027 85.130,165.923 84.245,172.493 81.649 L 173.833 81.120 173.833 75.393 C 173.833 69.175,173.871 69.391,172.900 69.983 C 172.455 70.254,170.487 71.130,168.500 71.940 C 167.940 72.169,166.665 72.519,165.250 72.833 C 159.238 74.166,154.216 71.478,153.503 66.545 C 153.198 64.435,153.284 38.888,153.597 38.768 C 153.742 38.712,158.093 38.667,163.266 38.667 L 172.671 38.667 172.627 33.292 L 172.583 27.917 163.000 27.833 L 153.417 27.750 153.373 20.375 L 153.330 13.000 152.679 13.000 C 152.321 13.000,152.003 13.068,151.972 13.150 M203.083 26.988 C 186.842 29.289,177.256 43.086,179.743 60.583 C 181.794 75.016,192.712 84.153,208.270 84.458 C 218.127 84.652,225.204 82.901,231.875 78.619 L 233.167 77.790 233.167 72.417 L 233.167 67.043 231.448 68.177 C 229.846 69.233,225.770 71.413,224.250 72.026 C 221.825 73.005,220.007 73.487,216.757 74.015 C 214.968 74.305,209.097 74.107,207.417 73.700 C 200.226 71.957,196.171 67.728,194.664 60.402 C 194.482 59.521,194.376 58.733,194.427 58.650 C 194.481 58.562,202.772 58.500,214.369 58.500 L 234.219 58.500 234.113 55.792 C 233.563 41.707,228.807 33.391,218.667 28.781 C 214.893 27.065,208.074 26.281,203.083 26.988 M274.833 27.007 C 270.021 27.778,266.568 29.623,262.601 33.542 C 261.511 34.619,260.592 35.500,260.559 35.500 C 260.527 35.500,260.500 33.775,260.500 31.667 L 260.500 27.833 253.167 27.833 L 245.833 27.833 245.833 55.667 L 245.833 83.500 253.167 83.500 L 260.500 83.500 260.500 64.956 L 260.500 46.412 261.360 45.331 C 262.783 43.543,265.858 40.586,267.219 39.698 C 272.784 36.065,279.429 37.506,282.068 42.917 C 283.471 45.795,283.395 44.577,283.458 65.208 L 283.514 83.500 290.757 83.500 L 298.000 83.500 297.996 65.042 C 297.993 54.402,297.923 45.877,297.830 44.917 C 296.629 32.541,287.017 25.055,274.833 27.007 M65.682 27.995 L 61.782 28.083 67.327 34.750 C 70.378 38.417,73.034 41.604,73.230 41.833 C 73.426 42.063,75.084 44.050,76.915 46.250 C 78.746 48.450,80.283 50.288,80.332 50.333 C 80.526 50.518,83.610 54.264,83.726 54.457 C 83.829 54.627,81.006 58.346,78.887 60.833 C 78.691 61.063,77.207 62.900,75.589 64.917 C 73.970 66.933,71.348 70.196,69.761 72.167 C 68.175 74.137,65.732 77.175,64.333 78.917 C 62.934 80.658,61.574 82.330,61.311 82.631 C 61.048 82.932,60.833 83.251,60.833 83.339 C 60.833 83.441,64.629 83.500,71.144 83.500 L 81.454 83.500 82.430 82.225 C 82.967 81.524,83.484 80.867,83.578 80.764 C 83.673 80.661,84.233 79.941,84.823 79.164 C 85.413 78.386,86.029 77.600,86.192 77.417 C 86.604 76.952,92.223 69.681,93.312 68.204 C 94.379 66.754,93.996 66.541,96.953 70.226 C 98.215 71.798,99.294 73.121,99.351 73.167 C 99.408 73.212,100.121 74.075,100.936 75.084 C 102.759 77.343,104.098 78.978,106.215 81.532 L 107.846 83.500 114.465 83.480 C 118.105 83.468,122.114 83.412,123.373 83.355 L 125.662 83.250 124.706 82.063 C 124.180 81.409,123.407 80.472,122.989 79.979 C 122.044 78.867,116.648 72.384,110.612 65.109 C 109.863 64.206,109.170 63.381,109.073 63.276 C 108.862 63.046,107.552 61.474,99.263 51.500 C 95.797 47.329,92.800 43.729,92.602 43.500 C 92.405 43.271,91.842 42.596,91.350 42.000 C 90.859 41.404,90.176 40.579,89.833 40.167 C 84.903 34.249,83.480 32.544,82.527 31.417 C 81.907 30.683,80.992 29.578,80.492 28.961 L 79.583 27.838 74.583 27.873 C 71.833 27.892,67.828 27.947,65.682 27.995 M211.917 37.123 C 214.906 38.095,217.007 39.920,218.493 42.837 C 219.478 44.770,220.558 48.840,220.279 49.568 C 220.134 49.945,194.878 49.978,194.734 49.602 C 194.594 49.238,194.973 47.390,195.523 45.750 C 197.244 40.620,200.105 38.022,205.417 36.765 C 206.319 36.551,210.941 36.806,211.917 37.123 M344.043 37.848 C 346.022 38.106,350.000 39.498,350.372 40.064 C 350.644 40.476,350.520 72.109,350.246 72.336 C 349.744 72.753,339.316 72.439,337.000 71.938 C 329.698 70.358,325.823 66.000,324.759 58.173 C 322.925 44.665,331.003 36.150,344.043 37.848 ", fill: "#040404", fillRule: "evenodd", stroke: "none" }), (0, l.jsx)("path", { d: "M54.294 6.375 L 54.250 12.750 35.292 12.792 L 16.333 12.835 16.333 23.667 L 16.333 34.499 34.542 34.541 L 52.750 34.583 52.750 40.917 L 52.750 47.250 34.542 47.292 L 16.333 47.335 16.333 59.084 L 16.333 70.833 35.646 70.833 C 51.778 70.833,54.990 70.871,55.148 71.061 C 55.284 71.224,55.325 73.038,55.294 77.436 L 55.250 83.583 27.625 83.625 L -0.000 83.668 -0.000 84.250 L 0.000 84.833 78.375 84.811 C 121.481 84.799,156.160 84.727,155.438 84.651 C 147.920 83.857,142.159 79.699,139.873 73.417 C 138.688 70.161,138.766 71.434,138.706 54.378 L 138.652 39.006 134.284 38.961 L 129.917 38.917 129.867 37.697 C 129.810 36.261,129.497 36.707,133.566 32.425 C 135.042 30.871,136.813 28.997,137.500 28.260 C 138.188 27.524,139.537 26.094,140.500 25.083 C 143.868 21.545,145.769 19.537,148.083 17.071 C 149.367 15.703,150.825 14.149,151.325 13.617 C 152.141 12.749,152.293 12.656,152.825 12.700 L 153.417 12.750 153.460 20.125 L 153.503 27.500 162.968 27.500 C 170.108 27.500,172.482 27.549,172.633 27.700 C 172.845 27.912,172.937 38.202,172.732 38.736 C 172.642 38.973,171.634 39.000,163.066 39.000 L 153.500 39.000 153.500 52.502 C 153.500 65.217,153.518 66.070,153.814 67.138 C 155.581 73.512,162.634 74.786,171.667 70.361 C 172.721 69.845,173.641 69.396,173.710 69.363 C 173.780 69.331,173.818 72.018,173.794 75.336 L 173.750 81.367 172.917 81.694 C 168.480 83.439,165.118 84.344,161.917 84.658 C 161.183 84.729,171.121 84.788,184.000 84.787 C 196.879 84.787,206.700 84.727,205.823 84.655 C 200.728 84.232,195.649 82.574,191.846 80.091 C 185.070 75.669,181.082 69.560,179.653 61.417 C 179.189 58.769,179.195 51.725,179.664 49.417 C 179.757 48.958,179.913 48.171,180.010 47.667 C 181.445 40.241,187.090 32.933,194.083 29.447 C 200.969 26.015,210.982 25.590,218.250 28.423 C 219.246 28.811,221.069 29.713,222.155 30.355 C 223.857 31.362,227.015 34.210,228.136 35.750 C 228.470 36.208,228.839 36.683,228.956 36.805 C 229.474 37.344,231.084 40.293,231.747 41.917 C 233.388 45.942,233.998 49.164,234.120 54.458 L 234.216 58.667 214.441 58.667 L 194.667 58.667 194.667 59.254 C 194.667 60.455,195.584 63.514,196.495 65.350 C 201.699 75.838,217.628 77.081,231.279 68.063 C 232.303 67.387,233.221 66.833,233.320 66.833 C 233.445 66.833,233.500 68.505,233.500 72.317 L 233.500 77.801 232.625 78.375 C 230.394 79.839,225.792 82.167,225.129 82.167 C 225.040 82.167,224.731 82.271,224.442 82.398 C 223.325 82.891,219.535 83.894,218.083 84.081 C 217.625 84.141,216.843 84.267,216.346 84.362 C 215.849 84.458,214.612 84.591,213.596 84.660 C 212.581 84.728,254.106 84.795,305.875 84.809 L 400.000 84.833 400.000 49.260 L 400.000 13.688 399.426 13.781 C 399.110 13.832,398.661 13.826,398.428 13.768 L 398.005 13.662 397.961 8.962 L 397.917 4.263 397.482 5.090 C 397.243 5.545,396.465 7.042,395.753 8.417 C 393.965 11.871,394.121 11.667,393.265 11.667 C 392.574 11.667,392.519 11.630,392.188 10.958 C 391.997 10.569,391.389 9.425,390.839 8.417 C 390.288 7.408,389.593 6.111,389.294 5.534 L 388.750 4.484 388.706 9.073 L 388.661 13.662 388.270 13.760 C 388.055 13.814,387.625 13.834,387.315 13.804 L 386.750 13.750 386.706 6.875 L 386.663 0.000 385.674 0.000 L 384.685 0.000 384.634 0.792 L 384.583 1.583 382.292 1.630 L 380.000 1.676 380.000 7.654 C 380.000 14.259,380.075 13.833,378.917 13.833 C 377.759 13.833,377.833 14.260,377.833 7.649 L 377.833 1.667 375.500 1.667 L 373.167 1.667 373.167 0.833 L 373.167 0.000 369.167 0.000 L 365.167 0.000 365.167 41.833 L 365.167 83.667 350.458 83.665 C 341.727 83.664,335.140 83.596,334.250 83.497 C 326.030 82.579,319.767 79.211,314.836 73.057 C 307.582 64.002,307.582 46.828,314.836 37.777 C 317.075 34.984,318.743 33.387,321.265 31.622 C 322.681 30.632,325.695 29.012,326.763 28.667 C 327.122 28.551,327.492 28.403,327.583 28.338 C 327.675 28.273,328.275 28.059,328.917 27.863 C 335.213 25.943,341.903 26.167,349.375 28.548 L 350.167 28.801 350.167 14.400 L 350.167 0.000 202.252 0.000 L 54.337 0.000 54.294 6.375 M389.274 1.792 C 390.129 3.431,390.843 4.788,392.606 8.122 C 393.384 9.592,393.209 9.743,395.168 5.928 C 396.012 4.285,397.032 2.310,397.435 1.540 C 397.837 0.770,398.167 0.109,398.167 0.070 C 398.167 0.032,395.956 0.000,393.253 0.000 L 388.340 0.000 389.274 1.792 M284.167 27.214 C 289.109 28.682,292.481 31.324,295.283 35.922 C 296.248 37.504,297.073 39.743,297.707 42.500 C 298.069 44.073,298.071 44.213,298.124 63.875 L 298.177 83.667 290.677 83.667 L 283.176 83.667 283.130 64.875 L 283.083 46.083 282.647 44.806 C 280.881 39.633,276.991 37.199,271.870 38.063 C 270.887 38.229,270.008 38.422,269.917 38.491 C 269.825 38.561,269.507 38.700,269.210 38.800 C 267.552 39.358,264.775 41.640,262.405 44.394 L 260.667 46.414 260.667 65.040 L 260.667 83.667 253.167 83.667 L 245.667 83.667 245.667 55.847 C 245.667 40.546,245.712 27.909,245.768 27.764 C 245.871 27.494,259.722 27.340,260.403 27.601 C 260.633 27.689,260.667 28.188,260.667 31.469 L 260.667 35.235 262.139 33.743 C 264.040 31.815,264.789 31.180,266.417 30.115 C 269.426 28.146,270.147 27.856,274.750 26.767 C 275.955 26.482,282.796 26.806,284.167 27.214 M81.200 29.516 C 83.150 31.889,83.775 32.643,84.501 33.500 C 84.851 33.912,85.575 34.782,86.110 35.432 C 87.307 36.886,90.122 40.262,91.169 41.500 C 91.595 42.004,92.937 43.617,94.151 45.083 C 95.366 46.550,96.524 47.938,96.725 48.167 C 96.926 48.396,97.614 49.220,98.254 49.999 C 98.893 50.778,99.580 51.603,99.780 51.832 C 99.979 52.062,100.392 52.558,100.696 52.934 C 101.001 53.310,101.653 54.097,102.146 54.684 C 103.304 56.061,103.501 56.298,108.582 62.417 C 110.941 65.258,113.034 67.771,113.232 68.000 C 113.429 68.229,114.113 69.054,114.751 69.833 C 115.389 70.612,115.952 71.287,116.002 71.333 C 116.082 71.406,117.666 73.310,123.478 80.317 C 124.269 81.271,125.171 82.342,125.482 82.697 C 125.792 83.052,126.004 83.385,125.952 83.437 C 125.900 83.489,121.782 83.574,116.801 83.625 L 107.745 83.717 107.292 83.123 C 107.042 82.796,106.739 82.429,106.618 82.306 C 106.497 82.184,105.727 81.255,104.907 80.243 C 104.087 79.231,102.592 77.401,101.583 76.177 C 100.575 74.953,98.896 72.894,97.851 71.601 C 96.807 70.308,95.610 68.837,95.190 68.333 C 94.771 67.829,94.400 67.379,94.366 67.333 C 94.301 67.244,93.792 67.808,93.250 68.571 C 93.067 68.830,92.100 70.100,91.101 71.395 C 90.103 72.690,89.144 73.938,88.970 74.167 C 88.266 75.097,87.092 76.589,87.002 76.667 C 86.949 76.712,86.428 77.387,85.843 78.167 C 85.259 78.946,84.677 79.696,84.551 79.833 C 84.425 79.971,83.831 80.721,83.230 81.500 C 82.630 82.279,81.995 83.085,81.820 83.292 L 81.502 83.667 71.001 83.667 C 63.718 83.667,60.500 83.613,60.500 83.490 C 60.500 83.393,61.010 82.699,61.634 81.948 C 62.258 81.198,63.846 79.233,65.162 77.583 C 66.479 75.933,67.600 74.546,67.655 74.500 C 67.709 74.454,69.103 72.733,70.752 70.674 C 72.401 68.616,75.051 65.316,76.642 63.341 C 78.233 61.366,80.461 58.594,81.593 57.181 L 83.652 54.613 83.122 53.931 C 82.830 53.557,82.544 53.212,82.486 53.167 C 82.427 53.121,81.006 51.433,79.328 49.417 C 77.650 47.400,75.959 45.375,75.571 44.917 C 75.182 44.458,73.124 41.983,70.997 39.417 C 68.870 36.850,66.952 34.546,66.735 34.296 C 65.289 32.637,61.823 28.414,61.604 28.042 C 61.506 27.876,63.359 27.833,70.649 27.833 L 79.817 27.833 81.200 29.516 M124.015 28.125 C 123.925 28.285,121.665 31.079,118.993 34.333 C 116.321 37.587,113.132 41.487,111.906 43.000 C 110.680 44.512,108.916 46.688,107.987 47.833 C 107.057 48.979,106.237 49.939,106.163 49.967 C 106.036 50.016,104.670 48.488,99.589 42.614 L 97.309 39.979 98.469 38.448 C 99.107 37.606,100.519 35.779,101.607 34.388 C 102.694 32.998,104.279 30.954,105.129 29.847 L 106.676 27.833 115.427 27.833 C 123.713 27.833,124.170 27.849,124.015 28.125 M205.361 37.001 C 200.869 37.633,197.246 40.912,195.693 45.750 C 195.233 47.184,194.794 49.301,194.916 49.498 C 194.984 49.609,199.307 49.667,207.616 49.667 L 220.213 49.667 220.109 48.782 C 219.119 40.359,213.484 35.857,205.361 37.001 M339.500 37.772 C 329.835 38.893,324.765 44.676,324.761 54.583 C 324.757 63.909,328.384 69.423,335.874 71.478 C 337.905 72.035,339.657 72.167,345.037 72.167 L 350.167 72.167 350.167 56.098 L 350.167 40.030 349.375 39.667 C 348.940 39.467,348.433 39.236,348.250 39.153 C 346.384 38.311,341.497 37.540,339.500 37.772 ", fill: "none", fillRule: "evenodd", stroke: "none" }), (0, l.jsx)("path", { d: "M106.217 28.455 C 105.876 28.909,99.477 37.189,97.462 39.783 C 97.354 39.921,97.884 40.640,99.195 42.133 C 100.234 43.316,101.908 45.247,102.917 46.423 C 103.925 47.599,105.057 48.895,105.432 49.303 L 106.114 50.044 107.276 48.647 C 107.915 47.879,109.896 45.461,111.677 43.275 C 113.459 41.088,115.539 38.538,116.299 37.608 C 117.060 36.678,118.533 34.867,119.573 33.583 C 120.612 32.300,122.000 30.613,122.656 29.833 C 123.311 29.054,123.922 28.285,124.013 28.125 C 124.170 27.849,123.714 27.833,115.431 27.833 L 106.684 27.833 106.217 28.455 ", fill: "#05ccfc", fillRule: "evenodd", stroke: "none" }), (0, l.jsx)("path", { d: "M54.206 6.208 L 54.167 12.500 35.167 12.500 C 24.717 12.500,16.167 12.556,16.167 12.625 C 16.167 12.859,54.168 12.690,54.258 12.456 C 54.302 12.342,54.317 9.474,54.292 6.083 L 54.246 -0.083 54.206 6.208 M350.374 14.363 C 350.336 27.961,350.316 28.813,350.042 28.885 C 349.768 28.957,349.769 28.963,350.047 28.981 C 350.514 29.011,350.505 29.321,350.459 14.250 L 350.415 -0.083 350.374 14.363 M386.743 6.833 C 386.743 10.637,386.765 12.194,386.791 10.292 C 386.818 8.390,386.818 5.277,386.791 3.375 C 386.765 1.473,386.743 3.029,386.743 6.833 M399.743 6.833 C 399.743 10.637,399.765 12.194,399.791 10.292 C 399.818 8.390,399.818 5.277,399.791 3.375 C 399.765 1.473,399.743 3.029,399.743 6.833 M375.581 1.622 L 377.829 1.676 377.876 7.630 L 377.923 13.583 377.920 7.583 L 377.917 1.583 375.625 1.576 L 373.333 1.569 375.581 1.622 M381.034 1.623 C 381.649 1.655,382.699 1.656,383.368 1.624 C 384.036 1.592,383.533 1.566,382.250 1.566 C 380.967 1.565,380.420 1.591,381.034 1.623 M389.250 2.167 C 389.392 2.442,389.546 2.667,389.592 2.667 C 389.638 2.667,389.559 2.442,389.417 2.167 C 389.274 1.892,389.121 1.667,389.075 1.667 C 389.029 1.667,389.108 1.892,389.250 2.167 M388.372 8.875 L 388.411 13.750 388.458 8.950 C 388.493 5.412,388.555 4.181,388.695 4.268 C 388.812 4.340,388.839 4.311,388.766 4.192 C 388.397 3.596,388.336 4.324,388.372 8.875 M389.083 5.000 C 389.226 5.275,389.379 5.500,389.425 5.500 C 389.471 5.500,389.392 5.275,389.250 5.000 C 389.108 4.725,388.954 4.500,388.908 4.500 C 388.862 4.500,388.941 4.725,389.083 5.000 M391.583 9.667 C 391.726 9.942,391.879 10.167,391.925 10.167 C 391.971 10.167,391.892 9.942,391.750 9.667 C 391.608 9.392,391.454 9.167,391.408 9.167 C 391.362 9.167,391.441 9.392,391.583 9.667 M394.742 9.849 C 394.595 10.132,394.505 10.394,394.541 10.430 C 394.577 10.466,394.732 10.234,394.884 9.915 C 395.227 9.196,395.108 9.141,394.742 9.849 M392.650 11.550 C 392.727 11.627,393.044 11.665,393.354 11.633 C 393.903 11.576,393.899 11.573,393.213 11.492 C 392.825 11.446,392.572 11.472,392.650 11.550 M152.460 12.951 C 152.668 12.991,152.968 12.990,153.127 12.948 C 153.286 12.906,153.117 12.874,152.750 12.875 C 152.383 12.877,152.253 12.911,152.460 12.951 M150.911 14.208 L 149.917 15.250 150.958 14.255 C 151.531 13.708,152.000 13.239,152.000 13.214 C 152.000 13.090,151.836 13.241,150.911 14.208 M153.414 20.417 L 153.417 27.750 163.042 27.833 C 168.335 27.879,172.667 27.860,172.667 27.792 C 172.667 27.723,168.355 27.667,163.085 27.667 L 153.504 27.667 153.457 20.375 L 153.411 13.083 153.414 20.417 M147.906 17.375 L 147.417 17.917 147.958 17.427 C 148.256 17.158,148.500 16.914,148.500 16.885 C 148.500 16.757,148.362 16.870,147.906 17.375 M145.333 20.083 C 144.650 20.771,144.129 21.333,144.175 21.333 C 144.221 21.333,144.817 20.771,145.500 20.083 C 146.183 19.396,146.704 18.833,146.658 18.833 C 146.612 18.833,146.016 19.396,145.333 20.083 M142.829 22.792 L 141.750 23.917 142.875 22.838 C 143.920 21.836,144.076 21.667,143.954 21.667 C 143.928 21.667,143.422 22.173,142.829 22.792 M139.411 26.375 L 138.417 27.417 139.458 26.422 C 140.031 25.875,140.500 25.406,140.500 25.380 C 140.500 25.257,140.336 25.407,139.411 26.375 M204.294 26.785 C 204.501 26.824,204.801 26.823,204.960 26.781 C 205.120 26.739,204.950 26.707,204.583 26.709 C 204.217 26.711,204.086 26.745,204.294 26.785 M209.542 26.786 C 209.794 26.824,210.206 26.824,210.458 26.786 C 210.710 26.748,210.504 26.717,210.000 26.717 C 209.496 26.717,209.290 26.748,209.542 26.786 M275.875 26.782 C 276.035 26.823,276.298 26.823,276.458 26.782 C 276.619 26.740,276.487 26.705,276.167 26.705 C 275.846 26.705,275.715 26.740,275.875 26.782 M279.847 26.728 C 279.885 26.762,280.479 26.832,281.167 26.883 C 282.093 26.952,282.244 26.938,281.750 26.831 C 281.083 26.686,279.716 26.612,279.847 26.728 M334.960 26.785 C 335.168 26.824,335.468 26.823,335.627 26.781 C 335.786 26.739,335.617 26.707,335.250 26.709 C 334.883 26.711,334.753 26.745,334.960 26.785 M339.960 26.785 C 340.168 26.824,340.468 26.823,340.627 26.781 C 340.786 26.739,340.617 26.707,340.250 26.709 C 339.883 26.711,339.753 26.745,339.960 26.785 M202.792 26.951 C 202.998 26.991,203.335 26.991,203.542 26.951 C 203.748 26.911,203.579 26.879,203.167 26.879 C 202.754 26.879,202.585 26.911,202.792 26.951 M211.294 26.951 C 211.501 26.991,211.801 26.990,211.960 26.948 C 212.120 26.906,211.950 26.874,211.583 26.875 C 211.217 26.877,211.086 26.911,211.294 26.951 M274.708 26.948 C 274.869 26.990,275.131 26.990,275.292 26.948 C 275.452 26.906,275.321 26.872,275.000 26.872 C 274.679 26.872,274.548 26.906,274.708 26.948 M333.627 26.951 C 333.834 26.991,334.134 26.990,334.294 26.948 C 334.453 26.906,334.283 26.874,333.917 26.875 C 333.550 26.877,333.420 26.911,333.627 26.951 M341.294 26.951 C 341.501 26.991,341.801 26.990,341.960 26.948 C 342.120 26.906,341.950 26.874,341.583 26.875 C 341.217 26.877,341.086 26.911,341.294 26.951 M199.583 27.500 C 199.159 27.683,199.597 27.683,200.167 27.500 C 200.502 27.393,200.518 27.366,200.250 27.362 C 200.067 27.359,199.767 27.421,199.583 27.500 M214.583 27.500 C 214.767 27.579,215.029 27.643,215.167 27.643 C 215.324 27.643,215.293 27.590,215.083 27.500 C 214.900 27.421,214.637 27.357,214.500 27.357 C 214.342 27.357,214.373 27.410,214.583 27.500 M253.125 27.791 L 260.500 27.837 260.500 31.668 C 260.500 35.419,260.556 35.801,261.021 35.208 C 261.228 34.945,261.222 34.938,260.962 35.143 C 260.690 35.356,260.670 35.144,260.628 31.559 L 260.583 27.750 253.167 27.747 L 245.750 27.745 253.125 27.791 M61.669 27.958 C 61.671 28.027,61.753 28.196,61.852 28.333 C 62.004 28.545,62.017 28.539,61.939 28.295 C 61.853 28.028,62.134 28.003,65.715 27.958 L 69.583 27.910 65.625 27.872 C 63.448 27.851,61.668 27.890,61.669 27.958 M347.417 28.167 C 347.600 28.245,347.863 28.310,348.000 28.310 C 348.158 28.310,348.127 28.257,347.917 28.167 C 347.733 28.088,347.471 28.023,347.333 28.023 C 347.176 28.023,347.207 28.076,347.417 28.167 M136.079 29.875 L 134.917 31.083 136.125 29.921 C 137.247 28.842,137.409 28.667,137.287 28.667 C 137.262 28.667,136.718 29.210,136.079 29.875 M220.000 29.417 C 220.229 29.548,220.492 29.655,220.583 29.655 C 220.675 29.655,220.563 29.548,220.333 29.417 C 220.104 29.286,219.842 29.178,219.750 29.178 C 219.658 29.178,219.771 29.286,220.000 29.417 M82.062 30.882 C 82.508 31.405,82.909 31.833,82.952 31.833 C 83.064 31.833,81.676 30.192,81.443 30.049 C 81.337 29.984,81.615 30.358,82.062 30.882 M133.746 32.375 L 132.583 33.583 133.792 32.421 C 134.456 31.782,135.000 31.238,135.000 31.213 C 135.000 31.091,134.825 31.253,133.746 32.375 M292.167 32.083 C 292.478 32.404,292.770 32.667,292.815 32.667 C 292.861 32.667,292.644 32.404,292.333 32.083 C 292.022 31.762,291.730 31.500,291.685 31.500 C 291.639 31.500,291.856 31.762,292.167 32.083 M320.083 32.602 L 319.417 33.198 320.125 32.668 C 320.735 32.212,320.955 31.993,320.792 32.002 C 320.769 32.004,320.450 32.273,320.083 32.602 M224.953 32.670 C 225.248 32.980,225.518 33.199,225.552 33.158 C 225.587 33.117,225.345 32.864,225.016 32.595 L 224.417 32.108 224.953 32.670 M262.412 33.542 L 261.250 34.750 262.458 33.588 C 263.581 32.508,263.743 32.333,263.621 32.333 C 263.595 32.333,263.051 32.877,262.412 33.542 M293.348 33.436 C 293.569 33.722,293.784 33.926,293.824 33.890 C 293.865 33.853,293.684 33.619,293.422 33.370 L 292.945 32.917 293.348 33.436 M318.409 34.042 L 317.750 34.750 318.458 34.091 C 318.848 33.729,319.167 33.410,319.167 33.383 C 319.167 33.257,319.022 33.383,318.409 34.042 M187.410 34.375 L 186.583 35.250 187.458 34.423 C 187.940 33.968,188.333 33.574,188.333 33.548 C 188.333 33.424,188.179 33.562,187.410 34.375 M84.667 34.052 C 84.667 34.081,84.910 34.325,85.208 34.594 L 85.750 35.083 85.260 34.542 C 84.804 34.037,84.667 33.923,84.667 34.052 M131.079 35.208 L 129.917 36.417 131.125 35.254 C 131.790 34.615,132.333 34.072,132.333 34.046 C 132.333 33.924,132.158 34.086,131.079 35.208 M227.160 34.875 C 227.850 35.611,228.000 35.743,228.000 35.618 C 228.000 35.591,227.644 35.235,227.208 34.826 L 226.417 34.083 227.160 34.875 M52.576 40.917 C 52.576 44.400,52.598 45.849,52.625 44.136 C 52.652 42.423,52.652 39.573,52.625 37.803 C 52.598 36.032,52.576 37.433,52.576 40.917 M316.333 36.083 C 315.928 36.496,315.635 36.833,315.681 36.833 C 315.726 36.833,316.095 36.496,316.500 36.083 C 316.905 35.671,317.199 35.333,317.153 35.333 C 317.107 35.333,316.738 35.671,316.333 36.083 M68.500 36.333 C 68.883 36.791,69.284 37.219,69.390 37.284 C 69.496 37.350,69.218 36.975,68.771 36.452 C 68.325 35.928,67.924 35.500,67.881 35.500 C 67.838 35.500,68.116 35.875,68.500 36.333 M129.905 37.667 L 129.917 38.750 134.167 38.754 L 138.417 38.758 134.216 38.710 L 130.015 38.661 129.954 37.622 L 129.894 36.583 129.905 37.667 M205.875 36.782 C 206.035 36.823,206.298 36.823,206.458 36.782 C 206.619 36.740,206.487 36.705,206.167 36.705 C 205.846 36.705,205.715 36.740,205.875 36.782 M340.377 37.620 C 340.631 37.658,341.006 37.657,341.211 37.617 C 341.416 37.578,341.208 37.546,340.750 37.548 C 340.292 37.549,340.124 37.581,340.377 37.620 M273.208 37.786 C 273.460 37.824,273.873 37.824,274.125 37.786 C 274.377 37.748,274.171 37.717,273.667 37.717 C 273.162 37.717,272.956 37.748,273.208 37.786 M296.012 37.750 C 296.012 37.842,296.119 38.104,296.250 38.333 C 296.381 38.563,296.488 38.675,296.488 38.583 C 296.488 38.492,296.381 38.229,296.250 38.000 C 296.119 37.771,296.012 37.658,296.012 37.750 M314.667 38.167 C 314.471 38.442,314.348 38.667,314.394 38.667 C 314.440 38.667,314.638 38.442,314.833 38.167 C 315.029 37.892,315.152 37.667,315.106 37.667 C 315.060 37.667,314.862 37.892,314.667 38.167 M270.333 38.174 C 270.151 38.298,270.218 38.313,270.583 38.232 C 271.196 38.095,271.329 37.999,270.903 38.003 C 270.727 38.004,270.471 38.081,270.333 38.174 M345.167 38.167 C 345.737 38.349,346.175 38.349,345.750 38.167 C 345.567 38.088,345.267 38.026,345.083 38.028 C 344.815 38.032,344.832 38.059,345.167 38.167 M230.083 39.000 C 230.226 39.275,230.379 39.500,230.425 39.500 C 230.471 39.500,230.392 39.275,230.250 39.000 C 230.108 38.725,229.954 38.500,229.908 38.500 C 229.862 38.500,229.941 38.725,230.083 39.000 M334.208 38.672 C 333.650 38.896,333.755 39.010,334.333 38.808 C 334.608 38.712,334.833 38.604,334.833 38.567 C 334.833 38.468,334.630 38.502,334.208 38.672 M158.375 38.792 C 161.010 38.817,165.323 38.817,167.958 38.792 C 170.594 38.766,168.438 38.745,163.167 38.745 C 157.896 38.745,155.740 38.766,158.375 38.792 M153.413 52.333 C 153.413 59.804,153.433 62.860,153.458 59.125 C 153.483 55.390,153.483 49.277,153.458 45.542 C 153.433 41.806,153.413 44.862,153.413 52.333 M216.160 39.708 C 216.850 40.444,217.000 40.577,217.000 40.451 C 217.000 40.425,216.644 40.068,216.208 39.660 L 215.417 38.917 216.160 39.708 M198.745 40.208 L 197.750 41.250 198.792 40.255 C 199.365 39.708,199.833 39.239,199.833 39.214 C 199.833 39.090,199.669 39.241,198.745 40.208 M279.167 39.385 C 279.167 39.414,279.410 39.658,279.708 39.927 L 280.250 40.417 279.760 39.875 C 279.304 39.370,279.167 39.257,279.167 39.385 M350.333 56.167 L 350.250 72.250 345.667 72.337 L 341.083 72.425 345.605 72.462 C 349.246 72.493,350.162 72.456,350.314 72.274 C 350.451 72.108,350.490 67.736,350.459 56.065 L 350.416 40.083 350.333 56.167 M263.996 42.458 L 262.583 43.917 264.042 42.504 C 265.396 41.191,265.576 41.000,265.455 41.000 C 265.430 41.000,264.773 41.656,263.996 42.458 M91.762 42.516 C 92.030 42.845,92.284 43.087,92.325 43.052 C 92.366 43.018,92.146 42.748,91.837 42.453 L 91.274 41.917 91.762 42.516 M231.929 43.000 C 231.990 43.229,232.110 43.529,232.195 43.667 C 232.302 43.840,232.315 43.790,232.238 43.500 C 232.176 43.271,232.057 42.971,231.972 42.833 C 231.865 42.660,231.851 42.710,231.929 43.000 M297.875 45.417 C 297.877 45.783,297.911 45.914,297.951 45.706 C 297.991 45.499,297.990 45.199,297.948 45.040 C 297.906 44.880,297.874 45.050,297.875 45.417 M94.562 45.882 C 95.008 46.405,95.409 46.833,95.452 46.833 C 95.564 46.833,94.176 45.192,93.943 45.049 C 93.837 44.984,94.115 45.358,94.562 45.882 M219.523 45.667 C 219.523 45.804,219.588 46.067,219.667 46.250 C 219.757 46.460,219.810 46.491,219.810 46.333 C 219.810 46.196,219.745 45.933,219.667 45.750 C 219.576 45.540,219.523 45.509,219.523 45.667 M260.541 64.873 L 260.500 83.497 253.125 83.542 L 245.750 83.587 253.130 83.627 C 258.911 83.658,260.528 83.622,260.590 83.458 C 260.633 83.344,260.650 74.925,260.626 64.750 L 260.582 46.250 260.541 64.873 M298.041 64.875 L 298.000 83.500 290.751 83.500 L 283.502 83.500 283.458 65.875 L 283.415 48.250 283.374 65.958 L 283.333 83.667 290.672 83.667 C 296.389 83.667,298.028 83.621,298.090 83.458 C 298.133 83.344,298.150 74.925,298.126 64.750 L 298.082 46.250 298.041 64.875 M195.104 46.923 C 195.047 47.072,195.006 47.319,195.014 47.472 C 195.022 47.625,195.095 47.529,195.175 47.258 C 195.333 46.732,195.277 46.472,195.104 46.923 M180.104 47.521 C 179.965 48.216,180.100 48.350,180.250 47.667 C 180.313 47.379,180.330 47.108,180.288 47.066 C 180.245 47.023,180.163 47.228,180.104 47.521 M233.268 47.583 C 233.405 48.196,233.501 48.329,233.497 47.903 C 233.496 47.727,233.419 47.471,233.326 47.333 C 233.202 47.151,233.187 47.218,233.268 47.583 M310.262 47.595 C 310.201 47.839,310.183 48.071,310.222 48.111 C 310.261 48.150,310.343 47.982,310.405 47.738 C 310.466 47.494,310.484 47.262,310.445 47.223 C 310.406 47.183,310.323 47.351,310.262 47.595 M77.667 47.385 C 77.667 47.414,77.910 47.658,78.208 47.927 L 78.750 48.417 78.260 47.875 C 77.804 47.370,77.667 47.257,77.667 47.385 M220.192 49.042 L 220.167 49.667 207.511 49.667 L 194.855 49.667 194.779 49.208 C 194.706 48.773,194.703 48.775,194.726 49.250 L 194.750 49.750 207.463 49.793 C 221.337 49.839,220.439 49.903,220.287 48.889 C 220.228 48.492,220.213 48.516,220.192 49.042 M325.083 49.167 C 325.020 49.455,325.003 49.725,325.045 49.768 C 325.088 49.810,325.171 49.605,325.229 49.313 C 325.368 48.618,325.233 48.483,325.083 49.167 M233.669 50.181 C 233.671 50.494,233.740 50.859,233.824 50.991 C 233.923 51.147,233.944 50.971,233.882 50.491 C 233.765 49.571,233.666 49.427,233.669 50.181 M80.333 50.443 C 80.333 50.534,80.540 50.790,80.792 51.013 L 81.250 51.417 80.833 50.917 C 80.604 50.642,80.398 50.385,80.375 50.347 C 80.352 50.309,80.333 50.352,80.333 50.443 M179.545 51.167 C 179.545 51.579,179.578 51.748,179.618 51.542 C 179.657 51.335,179.657 50.998,179.618 50.792 C 179.578 50.585,179.545 50.754,179.545 51.167 M233.957 52.917 C 234.006 53.833,234.073 54.615,234.106 54.653 C 234.220 54.783,234.142 52.752,234.005 52.000 C 233.914 51.499,233.898 51.803,233.957 52.917 M309.545 52.167 C 309.545 52.579,309.578 52.748,309.618 52.542 C 309.657 52.335,309.657 51.998,309.618 51.792 C 309.578 51.585,309.545 51.754,309.545 52.167 M179.375 52.750 C 179.377 53.117,179.411 53.247,179.451 53.040 C 179.491 52.832,179.490 52.532,179.448 52.373 C 179.406 52.214,179.374 52.383,179.375 52.750 M324.566 54.500 C 324.566 55.829,324.592 56.373,324.624 55.708 C 324.655 55.044,324.655 53.956,324.624 53.292 C 324.592 52.627,324.566 53.171,324.566 54.500 M101.229 53.882 C 101.675 54.405,102.076 54.833,102.119 54.833 C 102.231 54.833,100.843 53.192,100.610 53.049 C 100.504 52.984,100.782 53.358,101.229 53.882 M309.552 57.750 C 309.553 58.300,309.584 58.505,309.621 58.205 C 309.658 57.906,309.657 57.456,309.619 57.205 C 309.581 56.955,309.551 57.200,309.552 57.750 M179.375 58.250 C 179.377 58.617,179.411 58.747,179.451 58.540 C 179.491 58.332,179.490 58.032,179.448 57.873 C 179.406 57.714,179.374 57.883,179.375 58.250 M194.391 58.757 C 194.337 58.899,194.339 59.061,194.396 59.118 C 194.453 59.175,194.500 59.098,194.500 58.945 C 194.500 58.689,195.973 58.665,214.375 58.625 L 234.250 58.582 214.370 58.541 C 196.581 58.504,194.479 58.527,194.391 58.757 M309.709 59.417 C 309.711 59.783,309.745 59.914,309.785 59.706 C 309.824 59.499,309.823 59.199,309.781 59.040 C 309.739 58.880,309.707 59.050,309.709 59.417 M106.166 59.833 C 106.550 60.291,106.950 60.719,107.057 60.784 C 107.163 60.850,106.885 60.475,106.438 59.952 C 105.992 59.428,105.591 59.000,105.548 59.000 C 105.504 59.000,105.783 59.375,106.166 59.833 M179.520 59.847 C 179.531 60.160,179.601 60.642,179.675 60.917 C 179.764 61.245,179.779 61.074,179.718 60.417 C 179.615 59.315,179.489 58.950,179.520 59.847 M79.498 59.874 C 79.011 60.607,78.973 60.742,79.394 60.250 C 79.765 59.815,79.932 59.500,79.790 59.500 C 79.766 59.500,79.635 59.668,79.498 59.874 M325.033 59.917 C 325.033 60.100,325.093 60.438,325.167 60.667 C 325.272 60.997,325.300 61.014,325.300 60.750 C 325.300 60.567,325.240 60.229,325.167 60.000 C 325.061 59.670,325.033 59.653,325.033 59.917 M77.667 62.167 C 77.376 62.533,77.176 62.833,77.222 62.833 C 77.268 62.833,77.543 62.533,77.833 62.167 C 78.124 61.800,78.324 61.500,78.278 61.500 C 78.232 61.500,77.957 61.800,77.667 62.167 M325.596 62.167 C 325.657 62.396,325.776 62.696,325.861 62.833 C 325.969 63.007,325.982 62.956,325.904 62.667 C 325.843 62.438,325.724 62.137,325.639 62.000 C 325.531 61.826,325.518 61.877,325.596 62.167 M108.331 62.418 C 108.995 63.217,109.050 63.269,108.869 62.915 C 108.775 62.730,108.522 62.431,108.307 62.249 C 107.930 61.931,107.931 61.937,108.331 62.418 M310.762 64.833 C 310.824 65.063,310.943 65.362,311.028 65.500 C 311.135 65.674,311.149 65.623,311.071 65.333 C 311.010 65.104,310.890 64.804,310.805 64.667 C 310.698 64.493,310.685 64.544,310.762 64.833 M328.123 66.917 C 328.406 67.283,328.923 67.846,329.273 68.167 C 329.689 68.548,329.598 68.404,329.010 67.750 C 327.764 66.364,327.523 66.137,328.123 66.917 M93.987 67.292 C 93.799 67.540,93.801 67.552,93.999 67.375 C 94.189 67.206,94.327 67.252,94.741 67.625 L 95.250 68.083 94.760 67.542 C 94.185 66.904,94.261 66.929,93.987 67.292 M233.167 72.450 C 233.121 75.494,233.141 77.926,233.211 77.856 C 233.281 77.786,233.318 75.296,233.294 72.323 L 233.250 66.917 233.167 72.450 M112.833 67.885 C 112.833 67.914,113.077 68.158,113.375 68.427 L 113.917 68.917 113.427 68.375 C 112.971 67.870,112.833 67.757,112.833 67.885 M92.833 68.833 C 92.638 69.108,92.515 69.333,92.561 69.333 C 92.606 69.333,92.804 69.108,93.000 68.833 C 93.196 68.558,93.319 68.333,93.273 68.333 C 93.227 68.333,93.029 68.558,92.833 68.833 M138.872 68.833 C 138.872 69.154,138.906 69.285,138.948 69.125 C 138.990 68.965,138.990 68.702,138.948 68.542 C 138.906 68.381,138.872 68.512,138.872 68.833 M199.160 69.375 C 199.850 70.111,200.000 70.243,200.000 70.118 C 200.000 70.091,199.644 69.735,199.208 69.326 L 198.417 68.583 199.160 69.375 M200.416 70.474 C 200.598 70.689,200.897 70.941,201.081 71.036 C 201.435 71.217,201.384 71.161,200.585 70.498 C 200.103 70.098,200.097 70.097,200.416 70.474 M16.276 71.042 C 16.318 71.110,25.049 71.167,35.677 71.167 L 55.000 71.167 55.000 77.333 L 55.000 83.499 27.500 83.542 L -0.000 83.585 27.542 83.584 L 55.083 83.583 55.083 77.333 L 55.083 71.083 35.641 71.000 C 24.948 70.954,16.233 70.973,16.276 71.042 M335.083 71.500 C 335.267 71.579,335.529 71.643,335.667 71.643 C 335.824 71.643,335.793 71.590,335.583 71.500 C 335.400 71.421,335.137 71.357,335.000 71.357 C 334.842 71.357,334.873 71.410,335.083 71.500 M167.750 72.089 C 167.333 72.290,167.319 72.313,167.667 72.228 C 168.139 72.113,168.670 71.842,168.417 71.846 C 168.325 71.847,168.025 71.957,167.750 72.089 M338.875 72.282 C 339.035 72.323,339.298 72.323,339.458 72.282 C 339.619 72.240,339.487 72.205,339.167 72.205 C 338.846 72.205,338.715 72.240,338.875 72.282 M165.500 72.667 C 165.157 72.777,165.142 72.803,165.417 72.814 C 165.600 72.822,165.862 72.756,166.000 72.667 C 166.292 72.478,166.089 72.478,165.500 72.667 M161.292 73.122 C 161.681 73.157,162.319 73.157,162.708 73.122 C 163.098 73.087,162.779 73.058,162.000 73.058 C 161.221 73.058,160.902 73.087,161.292 73.122 M99.485 73.472 C 99.575 73.640,99.779 73.884,99.939 74.014 C 100.119 74.160,100.079 74.044,99.834 73.708 C 99.396 73.110,99.232 72.999,99.485 73.472 M205.917 73.333 C 206.100 73.412,206.362 73.477,206.500 73.477 C 206.658 73.477,206.627 73.424,206.417 73.333 C 206.233 73.255,205.971 73.190,205.833 73.190 C 205.676 73.190,205.707 73.243,205.917 73.333 M219.833 73.333 C 219.498 73.441,219.482 73.468,219.750 73.472 C 219.933 73.474,220.233 73.412,220.417 73.333 C 220.841 73.151,220.403 73.151,219.833 73.333 M185.165 73.998 C 185.454 74.363,185.778 74.716,185.884 74.782 C 185.991 74.847,185.789 74.548,185.436 74.117 C 185.082 73.686,184.758 73.333,184.716 73.333 C 184.673 73.333,184.875 73.632,185.165 73.998 M117.833 73.885 C 117.833 73.914,118.077 74.158,118.375 74.427 L 118.917 74.917 118.427 74.375 C 117.971 73.870,117.833 73.757,117.833 73.885 M208.708 73.948 C 208.869 73.990,209.131 73.990,209.292 73.948 C 209.452 73.906,209.321 73.872,209.000 73.872 C 208.679 73.872,208.548 73.906,208.708 73.948 M216.708 73.948 C 216.869 73.990,217.131 73.990,217.292 73.948 C 217.452 73.906,217.321 73.872,217.000 73.872 C 216.679 73.872,216.548 73.906,216.708 73.948 M209.875 74.115 C 210.035 74.157,210.298 74.157,210.458 74.115 C 210.619 74.073,210.487 74.039,210.167 74.039 C 209.846 74.039,209.715 74.073,209.875 74.115 M215.460 74.118 C 215.668 74.158,215.968 74.156,216.127 74.115 C 216.286 74.073,216.117 74.040,215.750 74.042 C 215.383 74.044,215.253 74.078,215.460 74.118 M67.333 75.000 C 66.950 75.458,66.673 75.833,66.719 75.833 C 66.765 75.833,67.116 75.458,67.500 75.000 C 67.884 74.542,68.160 74.167,68.114 74.167 C 68.069 74.167,67.717 74.542,67.333 75.000 M317.167 75.583 C 317.757 76.179,318.278 76.667,318.324 76.667 C 318.370 76.667,317.924 76.179,317.333 75.583 C 316.743 74.987,316.222 74.500,316.176 74.500 C 316.130 74.500,316.576 74.987,317.167 75.583 M186.917 76.000 C 187.368 76.458,187.775 76.833,187.821 76.833 C 187.867 76.833,187.535 76.458,187.083 76.000 C 186.632 75.542,186.225 75.167,186.179 75.167 C 186.133 75.167,186.465 75.542,186.917 76.000 M318.718 76.949 C 318.859 77.176,320.167 78.231,320.167 78.117 C 320.167 78.075,319.814 77.751,319.383 77.398 C 318.952 77.045,318.653 76.843,318.718 76.949 M141.985 77.305 C 142.075 77.473,142.279 77.717,142.439 77.847 C 142.619 77.993,142.579 77.877,142.334 77.542 C 141.896 76.944,141.732 76.833,141.985 77.305 M103.167 78.000 C 103.550 78.458,103.902 78.833,103.948 78.833 C 103.994 78.833,103.717 78.458,103.333 78.000 C 102.950 77.542,102.598 77.167,102.552 77.167 C 102.506 77.167,102.783 77.542,103.167 78.000 M85.411 78.371 C 84.010 80.217,83.807 80.500,83.875 80.500 C 83.947 80.500,85.834 78.092,86.062 77.708 C 86.345 77.235,86.029 77.556,85.411 78.371 M143.667 79.250 C 144.257 79.846,144.778 80.333,144.824 80.333 C 144.870 80.333,144.424 79.846,143.833 79.250 C 143.243 78.654,142.722 78.167,142.676 78.167 C 142.630 78.167,143.076 78.654,143.667 79.250 M321.833 79.241 C 321.833 79.287,322.058 79.441,322.333 79.583 C 322.608 79.726,322.833 79.804,322.833 79.759 C 322.833 79.713,322.608 79.559,322.333 79.417 C 322.058 79.274,321.833 79.196,321.833 79.241 M122.833 79.885 C 122.833 79.914,123.077 80.158,123.375 80.427 L 123.917 80.917 123.427 80.375 C 122.971 79.870,122.833 79.757,122.833 79.885 M229.292 80.095 C 228.669 80.433,228.707 80.574,229.333 80.250 C 229.608 80.108,229.833 79.956,229.833 79.912 C 229.833 79.805,229.815 79.811,229.292 80.095 M324.667 80.833 C 324.987 81.009,325.325 81.153,325.417 81.153 C 325.508 81.153,325.321 81.009,325.000 80.833 C 324.679 80.658,324.342 80.514,324.250 80.514 C 324.158 80.514,324.346 80.658,324.667 80.833 M106.167 81.667 C 106.550 82.125,106.902 82.500,106.948 82.500 C 106.994 82.500,106.717 82.125,106.333 81.667 C 105.950 81.208,105.598 80.833,105.552 80.833 C 105.506 80.833,105.783 81.208,106.167 81.667 M195.667 82.083 C 195.896 82.214,196.158 82.322,196.250 82.322 C 196.342 82.322,196.229 82.214,196.000 82.083 C 195.771 81.952,195.508 81.845,195.417 81.845 C 195.325 81.845,195.438 81.952,195.667 82.083 M328.083 82.167 C 328.267 82.245,328.529 82.310,328.667 82.310 C 328.824 82.310,328.793 82.257,328.583 82.167 C 328.400 82.088,328.137 82.023,328.000 82.023 C 327.842 82.023,327.873 82.076,328.083 82.167 M197.167 82.639 C 197.304 82.724,197.604 82.843,197.833 82.904 C 198.123 82.982,198.174 82.969,198.000 82.861 C 197.862 82.776,197.563 82.657,197.333 82.596 C 197.044 82.518,196.993 82.531,197.167 82.639 M107.406 83.125 L 107.896 83.667 109.573 83.632 L 111.250 83.597 109.586 83.542 C 108.049 83.491,107.883 83.452,107.419 83.035 L 106.917 82.583 107.406 83.125 M125.474 83.036 C 125.683 83.303,125.558 83.326,123.641 83.375 L 121.583 83.428 123.708 83.464 C 125.813 83.500,126.107 83.422,125.542 82.979 C 125.278 82.772,125.272 82.778,125.474 83.036 M60.778 83.111 C 60.236 83.653,60.525 83.667,71.042 83.626 L 81.417 83.586 71.108 83.542 C 62.048 83.503,60.810 83.467,60.894 83.249 C 60.997 82.981,60.956 82.933,60.778 83.111 M167.583 83.333 C 167.373 83.424,167.342 83.477,167.500 83.477 C 167.637 83.477,167.900 83.412,168.083 83.333 C 168.293 83.243,168.324 83.190,168.167 83.190 C 168.029 83.190,167.767 83.255,167.583 83.333 M333.127 83.285 C 333.334 83.324,333.634 83.323,333.794 83.281 C 333.953 83.239,333.783 83.207,333.417 83.209 C 333.050 83.211,332.920 83.245,333.127 83.285 M334.375 83.448 C 334.535 83.490,334.798 83.490,334.958 83.448 C 335.119 83.406,334.987 83.372,334.667 83.372 C 334.346 83.372,334.215 83.406,334.375 83.448 M343.458 83.625 C 347.423 83.650,353.910 83.650,357.875 83.625 C 361.840 83.600,358.596 83.580,350.667 83.580 C 342.738 83.580,339.494 83.600,343.458 83.625 M151.847 83.893 C 151.885 83.926,152.142 84.003,152.417 84.065 C 152.782 84.147,152.849 84.131,152.667 84.008 C 152.442 83.855,151.680 83.749,151.847 83.893 M164.917 84.000 C 164.492 84.183,164.930 84.183,165.500 84.000 C 165.835 83.893,165.851 83.866,165.583 83.862 C 165.400 83.859,165.100 83.921,164.917 84.000 M201.833 84.000 C 202.063 84.073,202.400 84.133,202.583 84.133 C 202.847 84.133,202.830 84.106,202.500 84.000 C 202.271 83.927,201.933 83.867,201.750 83.867 C 201.486 83.867,201.503 83.894,201.833 84.000 M160.917 84.500 L 159.750 84.608 160.750 84.628 C 161.300 84.639,162.050 84.585,162.417 84.510 C 163.237 84.340,162.687 84.336,160.917 84.500 M213.958 84.451 C 214.165 84.491,214.502 84.491,214.708 84.451 C 214.915 84.411,214.746 84.379,214.333 84.379 C 213.921 84.379,213.752 84.411,213.958 84.451 M155.961 84.621 C 156.261 84.658,156.711 84.657,156.961 84.619 C 157.212 84.581,156.967 84.551,156.417 84.552 C 155.867 84.553,155.662 84.584,155.961 84.621 M207.635 84.625 C 208.763 84.653,210.563 84.653,211.635 84.624 C 212.706 84.595,211.783 84.572,209.583 84.572 C 207.383 84.572,206.506 84.596,207.635 84.625 M158.208 84.786 C 158.460 84.824,158.873 84.824,159.125 84.786 C 159.377 84.748,159.171 84.717,158.667 84.717 C 158.162 84.717,157.956 84.748,158.208 84.786 ", fill: "none", fillRule: "evenodd", stroke: "none" }), (0, l.jsx)("path", { d: "M350.246 14.417 C 350.246 22.392,350.267 25.679,350.292 21.721 C 350.316 17.763,350.317 11.238,350.292 7.221 C 350.267 3.204,350.246 6.442,350.246 14.417 M365.082 41.833 C 365.082 64.887,365.101 74.319,365.125 62.792 C 365.149 51.265,365.149 32.402,365.125 20.875 C 365.101 9.348,365.082 18.779,365.082 41.833 M373.217 0.833 C 373.217 1.337,373.248 1.544,373.286 1.292 C 373.324 1.040,373.324 0.627,373.286 0.375 C 373.248 0.123,373.217 0.329,373.217 0.833 M384.548 0.750 C 384.549 1.208,384.581 1.376,384.620 1.123 C 384.658 0.869,384.657 0.494,384.617 0.289 C 384.578 0.084,384.546 0.292,384.548 0.750 M399.910 6.833 C 399.910 10.637,399.931 12.194,399.958 10.292 C 399.985 8.390,399.985 5.277,399.958 3.375 C 399.931 1.473,399.910 3.029,399.910 6.833 M379.909 7.667 C 379.909 11.012,379.931 12.381,379.958 10.708 C 379.985 9.035,379.985 6.298,379.958 4.625 C 379.931 2.952,379.909 4.321,379.909 7.667 M397.880 4.208 C 397.597 4.573,397.464 4.930,397.735 4.597 C 397.972 4.305,397.999 4.694,398.042 9.013 L 398.089 13.750 398.128 8.875 C 398.149 6.194,398.138 4.000,398.104 4.000 C 398.069 4.000,397.968 4.094,397.880 4.208 M388.500 8.917 C 388.500 11.560,388.535 13.687,388.578 13.644 C 388.691 13.531,388.706 4.317,388.593 4.205 C 388.542 4.153,388.500 6.274,388.500 8.917 M35.250 12.666 L 16.250 12.750 16.250 23.667 L 16.250 34.583 34.458 34.626 L 52.667 34.668 52.667 40.917 L 52.667 47.165 34.458 47.208 L 16.250 47.250 16.250 59.083 L 16.250 70.917 35.667 71.000 L 55.083 71.083 55.083 77.359 C 55.083 80.811,55.140 83.600,55.208 83.558 C 55.432 83.419,55.359 71.259,55.133 71.033 C 54.980 70.880,50.422 70.833,35.633 70.833 L 16.333 70.833 16.333 59.084 L 16.333 47.335 34.542 47.292 L 52.750 47.250 52.750 40.917 L 52.750 34.583 34.542 34.541 L 16.333 34.499 16.333 23.666 L 16.333 12.833 35.240 12.833 C 47.665 12.833,54.182 12.776,54.250 12.667 C 54.307 12.575,54.330 12.518,54.302 12.541 C 54.273 12.563,45.700 12.619,35.250 12.666 M151.333 13.618 L 150.417 14.583 151.339 13.708 C 152.250 12.843,153.156 12.532,153.390 13.004 C 153.437 13.098,153.456 13.079,153.433 12.963 C 153.305 12.317,152.258 12.644,151.333 13.618 M378.544 13.786 C 378.797 13.825,379.172 13.824,379.377 13.784 C 379.582 13.744,379.375 13.713,378.917 13.714 C 378.458 13.716,378.291 13.748,378.544 13.786 M387.211 13.786 C 387.464 13.825,387.839 13.824,388.044 13.784 C 388.249 13.744,388.042 13.713,387.583 13.714 C 387.125 13.716,386.957 13.748,387.211 13.786 M398.625 13.784 C 398.831 13.824,399.169 13.824,399.375 13.784 C 399.581 13.745,399.412 13.712,399.000 13.712 C 398.587 13.712,398.419 13.745,398.625 13.784 M148.911 16.208 L 147.917 17.250 148.958 16.255 C 149.531 15.708,150.000 15.239,150.000 15.214 C 150.000 15.090,149.836 15.241,148.911 16.208 M146.073 19.208 L 145.583 19.750 146.125 19.260 C 146.423 18.991,146.667 18.748,146.667 18.719 C 146.667 18.590,146.529 18.703,146.073 19.208 M143.078 22.375 L 142.083 23.417 143.125 22.422 C 143.698 21.875,144.167 21.406,144.167 21.380 C 144.167 21.257,144.002 21.407,143.078 22.375 M139.912 25.708 L 138.750 26.917 139.958 25.754 C 140.623 25.115,141.167 24.572,141.167 24.546 C 141.167 24.424,140.992 24.586,139.912 25.708 M337.375 26.619 C 337.627 26.658,338.040 26.658,338.292 26.619 C 338.544 26.581,338.337 26.550,337.833 26.550 C 337.329 26.550,337.123 26.581,337.375 26.619 M137.577 28.208 L 136.750 29.083 137.625 28.256 C 138.438 27.488,138.576 27.333,138.452 27.333 C 138.426 27.333,138.032 27.727,137.577 28.208 M158.208 27.625 C 160.844 27.651,165.156 27.651,167.792 27.625 C 170.427 27.599,168.271 27.578,163.000 27.578 C 157.729 27.578,155.573 27.599,158.208 27.625 M249.470 27.625 C 251.515 27.651,254.815 27.651,256.803 27.625 C 258.791 27.598,257.117 27.577,253.083 27.577 C 249.050 27.577,247.424 27.598,249.470 27.625 M172.741 33.250 C 172.741 36.275,172.764 37.536,172.791 36.052 C 172.819 34.568,172.819 32.093,172.791 30.552 C 172.764 29.011,172.741 30.225,172.741 33.250 M245.748 55.750 C 245.748 71.150,245.768 77.425,245.792 69.695 C 245.816 61.965,245.816 49.365,245.792 41.695 C 245.768 34.025,245.748 40.350,245.748 55.750 M269.667 28.250 C 269.438 28.381,269.325 28.488,269.417 28.488 C 269.508 28.488,269.771 28.381,270.000 28.250 C 270.229 28.119,270.342 28.012,270.250 28.012 C 270.158 28.012,269.896 28.119,269.667 28.250 M63.667 30.719 C 63.667 30.748,63.910 30.991,64.208 31.260 L 64.750 31.750 64.260 31.208 C 63.804 30.703,63.667 30.590,63.667 30.719 M188.824 32.958 L 188.250 33.583 188.875 33.009 C 189.457 32.474,189.577 32.333,189.449 32.333 C 189.422 32.333,189.140 32.615,188.824 32.958 M292.833 32.719 C 292.833 32.748,293.077 32.991,293.375 33.260 L 293.917 33.750 293.427 33.208 C 292.971 32.703,292.833 32.590,292.833 32.719 M131.578 34.542 L 130.583 35.583 131.625 34.589 C 132.198 34.041,132.667 33.573,132.667 33.547 C 132.667 33.424,132.502 33.574,131.578 34.542 M318.158 34.125 L 317.583 34.750 318.208 34.176 C 318.790 33.641,318.910 33.500,318.783 33.500 C 318.755 33.500,318.474 33.781,318.158 34.125 M187.324 34.292 L 186.750 34.917 187.375 34.342 C 187.957 33.808,188.077 33.667,187.949 33.667 C 187.922 33.667,187.640 33.948,187.324 34.292 M226.993 34.542 C 227.684 35.278,227.833 35.410,227.833 35.285 C 227.833 35.258,227.477 34.902,227.042 34.493 L 226.250 33.750 226.993 34.542 M316.500 35.750 C 316.095 36.162,315.801 36.500,315.847 36.500 C 315.893 36.500,316.262 36.162,316.667 35.750 C 317.072 35.337,317.365 35.000,317.319 35.000 C 317.274 35.000,316.905 35.337,316.500 35.750 M185.991 35.792 L 185.417 36.417 186.042 35.842 C 186.623 35.308,186.743 35.167,186.616 35.167 C 186.588 35.167,186.307 35.448,185.991 35.792 M207.292 36.789 C 207.681 36.824,208.319 36.824,208.708 36.789 C 209.098 36.754,208.779 36.725,208.000 36.725 C 207.221 36.725,206.902 36.754,207.292 36.789 M339.208 37.782 C 339.369 37.823,339.631 37.823,339.792 37.782 C 339.952 37.740,339.821 37.705,339.500 37.705 C 339.179 37.705,339.048 37.740,339.208 37.782 M341.708 37.782 C 341.869 37.823,342.131 37.823,342.292 37.782 C 342.452 37.740,342.321 37.705,342.000 37.705 C 341.679 37.705,341.548 37.740,341.708 37.782 M129.978 38.878 C 130.048 38.948,132.051 38.986,134.428 38.961 L 138.750 38.916 134.300 38.833 C 131.852 38.787,129.907 38.808,129.978 38.878 M158.304 38.958 C 160.991 38.984,165.341 38.984,167.970 38.958 C 170.599 38.932,168.400 38.911,163.083 38.911 C 157.767 38.911,155.616 38.933,158.304 38.958 M216.083 39.833 C 216.535 40.292,216.942 40.667,216.987 40.667 C 217.033 40.667,216.701 40.292,216.250 39.833 C 215.799 39.375,215.392 39.000,215.346 39.000 C 215.300 39.000,215.632 39.375,216.083 39.833 M349.875 39.884 C 350.149 40.106,350.167 41.084,350.167 56.141 L 350.167 72.162 344.917 72.210 L 339.667 72.257 344.958 72.254 L 350.250 72.250 350.292 56.131 L 350.335 40.013 349.959 39.830 C 349.620 39.666,349.612 39.671,349.875 39.884 M329.075 42.208 L 328.417 42.917 329.125 42.258 C 329.515 41.895,329.833 41.577,329.833 41.550 C 329.833 41.423,329.688 41.550,329.075 42.208 M262.573 44.042 L 262.083 44.583 262.625 44.094 C 263.130 43.638,263.243 43.500,263.115 43.500 C 263.086 43.500,262.842 43.744,262.573 44.042 M297.875 44.250 C 297.877 44.617,297.911 44.747,297.951 44.540 C 297.991 44.332,297.990 44.032,297.948 43.873 C 297.906 43.714,297.874 43.883,297.875 44.250 M298.042 45.750 C 298.044 46.117,298.078 46.247,298.118 46.040 C 298.158 45.832,298.156 45.532,298.115 45.373 C 298.073 45.214,298.040 45.383,298.042 45.750 M180.262 46.429 C 180.201 46.673,180.183 46.905,180.222 46.944 C 180.261 46.983,180.343 46.816,180.405 46.571 C 180.466 46.327,180.484 46.095,180.445 46.056 C 180.406 46.017,180.323 46.184,180.262 46.429 M283.247 65.583 C 283.247 75.575,283.267 79.687,283.292 74.721 C 283.316 69.755,283.316 61.580,283.292 56.554 C 283.267 51.529,283.247 55.592,283.247 65.583 M233.872 50.333 C 233.872 50.654,233.906 50.785,233.948 50.625 C 233.990 50.465,233.990 50.202,233.948 50.042 C 233.906 49.881,233.872 50.012,233.872 50.333 M309.397 54.917 C 309.397 56.017,309.424 56.445,309.457 55.868 C 309.490 55.292,309.489 54.392,309.456 53.868 C 309.423 53.345,309.397 53.817,309.397 54.917 M179.209 55.583 C 179.211 55.950,179.245 56.080,179.285 55.873 C 179.324 55.666,179.323 55.366,179.281 55.206 C 179.239 55.047,179.207 55.217,179.209 55.583 M233.130 66.974 C 233.297 67.080,233.332 68.274,233.296 72.539 C 233.271 75.525,233.306 77.934,233.375 77.891 C 233.681 77.702,233.517 66.833,233.208 66.836 C 232.995 66.838,232.974 66.875,233.130 66.974 M329.083 67.833 C 329.535 68.292,329.942 68.667,329.987 68.667 C 330.033 68.667,329.701 68.292,329.250 67.833 C 328.799 67.375,328.392 67.000,328.346 67.000 C 328.300 67.000,328.632 67.375,329.083 67.833 M199.250 69.333 C 199.701 69.792,200.108 70.167,200.154 70.167 C 200.200 70.167,199.868 69.792,199.417 69.333 C 198.965 68.875,198.558 68.500,198.513 68.500 C 198.467 68.500,198.799 68.875,199.250 69.333 M163.542 72.948 C 163.702 72.990,163.965 72.990,164.125 72.948 C 164.285 72.906,164.154 72.872,163.833 72.872 C 163.512 72.872,163.381 72.906,163.542 72.948 M315.167 73.552 C 315.167 73.581,315.410 73.825,315.708 74.094 L 316.250 74.583 315.760 74.042 C 315.304 73.537,315.167 73.423,315.167 73.552 M211.701 74.123 C 212.316 74.155,213.366 74.156,214.034 74.124 C 214.703 74.092,214.200 74.066,212.917 74.066 C 211.633 74.065,211.086 74.091,211.701 74.123 M317.083 75.667 C 317.535 76.125,317.942 76.500,317.987 76.500 C 318.033 76.500,317.701 76.125,317.250 75.667 C 316.799 75.208,316.392 74.833,316.346 74.833 C 316.300 74.833,316.632 75.208,317.083 75.667 M187.000 76.250 C 187.311 76.571,187.603 76.833,187.649 76.833 C 187.695 76.833,187.478 76.571,187.167 76.250 C 186.856 75.929,186.564 75.667,186.518 75.667 C 186.472 75.667,186.689 75.929,187.000 76.250 M120.167 76.552 C 120.167 76.581,120.410 76.825,120.708 77.094 L 121.250 77.583 120.760 77.042 C 120.304 76.537,120.167 76.423,120.167 76.552 M143.326 79.042 C 143.735 79.477,144.091 79.833,144.118 79.833 C 144.243 79.833,144.111 79.684,143.375 78.993 L 142.583 78.250 143.326 79.042 M325.333 81.222 C 325.333 81.266,325.575 81.385,325.871 81.488 C 326.167 81.591,326.336 81.607,326.246 81.523 C 326.056 81.346,325.333 81.107,325.333 81.222 M329.500 82.667 C 330.070 82.849,330.508 82.849,330.083 82.667 C 329.900 82.588,329.600 82.526,329.417 82.528 C 329.149 82.532,329.165 82.559,329.500 82.667 M60.759 82.990 C 60.598 83.168,60.505 83.412,60.553 83.532 C 60.620 83.700,60.643 83.696,60.654 83.513 C 60.661 83.383,60.791 83.139,60.942 82.971 C 61.094 82.804,61.181 82.667,61.135 82.667 C 61.089 82.667,60.920 82.812,60.759 82.990 M113.719 83.625 C 115.168 83.653,117.493 83.652,118.885 83.625 C 120.278 83.597,119.092 83.574,116.250 83.574 C 113.408 83.574,112.269 83.597,113.719 83.625 M166.083 83.833 C 165.873 83.924,165.842 83.977,166.000 83.977 C 166.137 83.977,166.400 83.912,166.583 83.833 C 166.793 83.743,166.824 83.690,166.667 83.690 C 166.529 83.690,166.267 83.755,166.083 83.833 M215.208 84.448 C 215.369 84.490,215.631 84.490,215.792 84.448 C 215.952 84.406,215.821 84.372,215.500 84.372 C 215.179 84.372,215.048 84.406,215.208 84.448 M213.794 84.618 C 214.001 84.658,214.301 84.656,214.460 84.615 C 214.620 84.573,214.450 84.540,214.083 84.542 C 213.717 84.544,213.586 84.578,213.794 84.618 M156.960 84.785 C 157.168 84.824,157.468 84.823,157.627 84.781 C 157.786 84.739,157.617 84.707,157.250 84.709 C 156.883 84.711,156.753 84.745,156.960 84.785 M159.794 84.785 C 160.001 84.824,160.301 84.823,160.460 84.781 C 160.620 84.739,160.450 84.707,160.083 84.709 C 159.717 84.711,159.586 84.745,159.794 84.785 M208.368 84.790 C 208.982 84.822,210.032 84.822,210.701 84.791 C 211.370 84.759,210.867 84.733,209.583 84.732 C 208.300 84.732,207.753 84.758,208.368 84.790 ", fill: "none", fillRule: "evenodd", stroke: "none" })] })] }) }; G(), G(); var ic = function ({ title: e = "Federal Communications Commission Official Logo", titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, role: "img", viewBox: "0 0 500 420", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M494.82,366.39A164.38,164.38,0,0,1,262.65,133.62a163.89,163.89,0,0,1,232.17,0,169.11,169.11,0,0,1,17.48,20.75l36.44-26.95A209.05,209.05,0,0,0,378.75,40c-108.13,0-197.06,82.12-208.27,187.54H90.91V90.16H190L226,40H48.74V460l42.17-31V272.49h79.57C181.69,377.89,270.62,460,378.75,460a208.94,208.94,0,0,0,170-87.41l-36.44-27A169.2,169.2,0,0,1,494.82,366.39Z", fill: "currentColor", transform: "translate(-48.74 -40)" }), (0, l.jsx)("path", { d: "M378.75,174.62a75.22,75.22,0,0,1,61.9,32.75l36.48-27a120.24,120.24,0,0,0-98.38-51.16c-66.55,0-120.47,54.07-120.47,120.79S312.2,370.75,378.75,370.77a120.18,120.18,0,0,0,98.38-51.15l-36.48-27a75.22,75.22,0,1,1-61.9-118Z", fill: "currentColor", transform: "translate(-48.74 -40)" })] }) }; G(); var ih = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-label": "Flo Health logo", "aria-labelledby": r, height: 36, viewBox: "0 0 78 36", width: 78, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M43.8 31.2c-.4 0-.4-.4.3-.5 1.5-.2 2.8-1 3.6-2.6 1-2 .2-4-.4-5-.9-1-.6-.9.2-.5l2.2 1.6c-.6-5.6 1.7-9.7 3.4-11.9 1-1 .8-.3.6.5-.4 2-.1 4.4.4 6-.2-3 1.2-18.8 11.5-18.8S80 11.3 77 20.4c-2.8 8.6-12.3 9.3-13.8 9.3a12 12 0 0 0 5.3 0c.5 0 1-.1.2.5A16.2 16.2 0 0 1 54.2 33v1.7c0 .5 0 .5-.3.2-.2-.4-.7-1-1.5-1.6a6.4 6.4 0 0 0-3.7-1.2h-.1.3l.2-.2c2.7-.8 5.3-2 8.4-4 4.4-3.1 6.7-6.5 6.6-6.7l-.2.3c-.9.9-4.1 4.5-9.7 7a30.1 30.1 0 0 1-10.4 2.7Zm-27-14.7c1.2.2.3 2-1 2l-.2.1-3.7.3a66 66 0 0 0-3.7 12.7c-.1 1.2-3.2 0-3.1-2 0-1.8 1.1-6 2.1-9.2a5.8 5.8 0 0 0-2.6 2.2c-1.3 0-3-1.1-2.2-2.8.9-1.7 3.5-2.4 6-2.8A43.4 43.4 0 0 1 12 8.5v-.1c-5.4 1-8 3-9 4.6-2.9-.1-4.5-4.2-.5-6C6.3 5.2 12.2 4.7 18 4.7c5.9 0 10.2 1 11.7 1.5 1.1.5.2 2.2-1 2.2l-.9-.2c-1.6-.2-5-.8-10-.5V8c-1.2 1.4-3 4.4-4.9 8.6h4ZM31 19.2c.7-.8 2.2-2.2 4.5-2.3 2.4 0 4.8 2.5 2.4 8.8-1.5 4-4.2 7.3-8 7.3-2.1 0-3.3-1.6-3.6-3.7-1.2 1.5-3.7 3.7-6.2 3.7-3.6 0-3.7-4.4-1.4-11.5 1.9-5.6 4.2-8.8 5-9.5 2.4-1.5 6 0 4.7 1.3a31 31 0 0 0-5.3 9c-1.8 4.6-2 7-.7 7s3.6-2.5 4.2-3.5l.1-.2v-.2c1-3 2.4-5.3 3.4-6l.9-.2Zm.2 10c1.7 0 3.4-2 4.5-4.5.7-2 .7-4.5-.9-4.5-.4 0-.8.2-1 .4 0 .2-.1.5-.3.6L31 24.8l-.2.3c-1 1.8-1 4.1.4 4.1Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(), G(), G(), G(), G(), G(), G(), G(); var i_ = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, "data-name": "Layer 1", fill: "currentColor", height: "800px", viewBox: "0 0 192 192", width: "800px", xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M58 142.39s1.16 1.25 1.76 1.86l3.12 3.13a46.32 46.32 0 0 0 65.5 0l34.09-34.06a46.38 46.38 0 0 0 0-65.53l-3.14-3.13a46.13 46.13 0 0 0-32.76-13.58 46.21 46.21 0 0 0-30.3 11.25l-.2.18-.22-.18a52.62 52.62 0 0 0-30.61-11.14A47.1 47.1 0 0 0 16 80.37c.62 18.74 11.26 31.35 15.81 35.9l23.54 23.55Zm-17.59-34.67C37.66 105 28.63 94.81 28.13 79.91a35 35 0 0 1 36.72-36.63 40.51 40.51 0 0 1 22.27 7.63l.23.17-27.64 27.64a46.25 46.25 0 0 0-13.52 34.37v.43l-.43-.43Zm113.46-2.94-34.05 34a34.28 34.28 0 0 1-48.39 0l-3.13-3.13c-.54-.55-1.06-1.1-1.55-1.68s-1-1.23-1.51-1.85a34.28 34.28 0 0 1 3.06-44.83l34.08-34.07a34 34 0 0 1 24.2-10.08 34.08 34.08 0 0 1 24.19 10.08l3.13 3.13a34.31 34.31 0 0 1-.03 48.43Z" }), (0, l.jsx)("circle", { cx: 125.89, cy: 81.02, r: 6 }), (0, l.jsx)("path", { d: "M0 0h192v192H0z", style: { fill: "none" } })] }) }; G(); var ip = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, viewBox: "0 0 80 38.1", x: "0px", xmlSpace: "preserve", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", y: "0px", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M37.8,19.7V29h-3V6h7.8c1.9,0,3.7,0.7,5.1,2c1.4,1.2,2.1,3,2.1,4.9c0,1.9-0.7,3.6-2.1,4.9c-1.4,1.3-3.1,2-5.1,2 L37.8,19.7L37.8,19.7z M37.8,8.8v8h5c1.1,0,2.2-0.4,2.9-1.2c1.6-1.5,1.6-4,0.1-5.5c0,0-0.1-0.1-0.1-0.1c-0.8-0.8-1.8-1.3-2.9-1.2 L37.8,8.8L37.8,8.8z", fill: "#5F6368" }), (0, l.jsx)("path", { d: "M56.7,12.8c2.2,0,3.9,0.6,5.2,1.8s1.9,2.8,1.9,4.8V29H61v-2.2h-0.1c-1.2,1.8-2.9,2.7-4.9,2.7 c-1.7,0-3.2-0.5-4.4-1.5c-1.1-1-1.8-2.4-1.8-3.9c0-1.6,0.6-2.9,1.8-3.9c1.2-1,2.9-1.4,4.9-1.4c1.8,0,3.2,0.3,4.3,1v-0.7 c0-1-0.4-2-1.2-2.6c-0.8-0.7-1.8-1.1-2.9-1.1c-1.7,0-3,0.7-3.9,2.1l-2.6-1.6C51.8,13.8,53.9,12.8,56.7,12.8z M52.9,24.2 c0,0.8,0.4,1.5,1,1.9c0.7,0.5,1.5,0.8,2.3,0.8c1.2,0,2.4-0.5,3.3-1.4c1-0.9,1.5-2,1.5-3.2c-0.9-0.7-2.2-1.1-3.9-1.1 c-1.2,0-2.2,0.3-3,0.9C53.3,22.6,52.9,23.3,52.9,24.2z", fill: "#5F6368" }), (0, l.jsx)("path", { d: "M80,13.3l-9.9,22.7h-3l3.7-7.9l-6.5-14.7h3.2l4.7,11.3h0.1l4.6-11.3H80z", fill: "#5F6368" }), (0, l.jsx)("path", { d: "M25.9,17.7c0-0.9-0.1-1.8-0.2-2.7H13.2v5.1h7.1c-0.3,1.6-1.2,3.1-2.6,4v3.3H22C24.5,25.1,25.9,21.7,25.9,17.7z", fill: "#4285F4" }), (0, l.jsx)("path", { d: "M13.2,30.6c3.6,0,6.6-1.2,8.8-3.2l-4.3-3.3c-1.2,0.8-2.7,1.3-4.5,1.3c-3.4,0-6.4-2.3-7.4-5.5H1.4v3.4 C3.7,27.8,8.2,30.6,13.2,30.6z", fill: "#34A853" }), (0, l.jsx)("path", { d: "M5.8,19.9c-0.6-1.6-0.6-3.4,0-5.1v-3.4H1.4c-1.9,3.7-1.9,8.1,0,11.9L5.8,19.9z", fill: "#FBBC04" }), (0, l.jsx)("path", { d: "M13.2,9.4c1.9,0,3.7,0.7,5.1,2l0,0l3.8-3.8c-2.4-2.2-5.6-3.5-8.8-3.4c-5,0-9.6,2.8-11.8,7.3l4.4,3.4 C6.8,11.7,9.8,9.4,13.2,9.4z", fill: "#EA4335" })] }) }; G(), G(); var im = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 33, viewBox: "0 0 156 33", width: 156, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M40.7869 6.33752H43.3869V13.5688C44.4431 12.025 45.9056 11.2125 47.6119 11.2125C49.9681 11.2125 51.3494 12.5125 51.3494 15.1125V23.9688H48.7494V15.8438C48.7494 14.0563 48.0994 13.5688 46.7994 13.5688C45.9869 13.5688 45.2556 14.0563 44.5244 14.95C43.7931 15.925 43.4681 17.1438 43.4681 18.6875V23.9688H40.8681L40.7869 6.33752Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M64.3506 18.3625H55.4944C55.4944 20.3125 56.6319 21.8562 58.5819 21.8562C59.9631 21.8562 61.2631 21.0437 61.8319 19.7437L64.0256 20.6375C62.7256 23.075 61.2631 24.1312 58.5006 24.1312C54.3569 24.1312 52.6506 20.6375 52.6506 17.6312C52.6506 14.625 54.3569 11.1312 58.5006 11.1312C62.4819 11.1312 64.2694 14.3812 64.2694 17.225V18.3625H64.3506ZM55.5756 16.25H61.6694C61.4256 14.7062 60.3694 13.4875 58.6631 13.4875C56.9569 13.4875 55.9006 14.625 55.5756 16.25Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M84.6631 11.2125C85.3131 11.2125 85.8819 11.375 86.6131 11.7C87.2631 12.025 87.7506 12.35 88.0756 12.7562V6.25623H90.6756V23.8875H88.0756V22.425C87.5881 23.2375 86.2069 24.05 84.6631 24.05C81.0069 24.05 79.0569 21.6937 79.0569 17.55C79.0569 13.65 81.0069 11.2125 84.6631 11.2125ZM81.7381 17.6312C81.7381 18.9312 82.0631 19.9062 82.6319 20.7187C83.2006 21.45 84.0131 21.8562 84.9069 21.8562C85.8819 21.8562 86.6131 21.45 87.1819 20.7187C87.7506 19.9875 88.0756 18.9312 88.0756 17.6312C88.0756 16.3312 87.7506 15.3562 87.1819 14.625C86.6131 13.8937 85.8006 13.4875 84.9069 13.4875C83.9319 13.4875 83.2006 13.8937 82.6319 14.625C82.0631 15.3562 81.7381 16.4125 81.7381 17.6312Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M100.506 13.1625L98.8806 14.625C98.3119 13.8938 97.5806 13.4875 96.6869 13.4875C95.9556 13.4875 95.4681 13.975 95.4681 14.7063C95.4681 14.95 95.5494 15.275 95.7931 15.4375C96.1994 15.8438 96.6056 16.0875 97.7431 16.4938C98.6369 16.8188 98.9619 16.9813 99.6931 17.3875C100.668 17.9563 101.156 18.7688 101.237 20.0688C101.237 21.2063 100.831 22.1 100.018 22.9125C99.2056 23.6438 98.1494 24.05 96.8494 24.05C94.4931 24.05 92.7869 22.5063 91.9744 20.7188L94.1681 19.5C94.8181 21.0438 95.7931 21.775 96.9306 21.775C98.0681 21.775 98.6369 21.2063 98.6369 20.15C98.6369 19.7438 98.4744 19.4188 97.9869 19.175C97.7431 19.0125 97.5806 18.9313 97.3369 18.85C96.9306 18.6875 96.0369 18.3625 95.6306 18.2C93.8431 17.4688 92.9494 16.3313 92.9494 14.7875C92.9494 13.8125 93.3556 12.9188 94.0056 12.2688C94.7369 11.5375 95.6306 11.2125 96.7681 11.2125C98.3119 11.2125 99.6931 11.9438 100.506 13.1625Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M108.793 24.1313C107.331 24.1313 106.031 23.4 105.462 22.5063V29.0063H102.862V11.375H105.462V12.8375C105.95 12.025 107.331 11.2125 108.875 11.2125C112.531 11.2125 114.481 13.5688 114.481 17.7125C114.4 21.6125 112.45 24.1313 108.793 24.1313ZM111.718 17.6313C111.718 16.3313 111.393 15.3563 110.825 14.625C110.256 13.8938 109.443 13.4875 108.55 13.4875C107.575 13.4875 106.843 13.8938 106.275 14.625C105.706 15.3563 105.381 16.4125 105.381 17.6313C105.381 18.9313 105.706 19.9063 106.275 20.7188C106.843 21.45 107.656 21.8563 108.55 21.8563C109.525 21.8563 110.256 21.45 110.825 20.7188C111.393 19.9875 111.718 18.9313 111.718 17.6313Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M139.994 20.6375C138.938 22.9125 137.151 24.1312 134.551 24.1312C132.682 24.1312 131.219 23.4812 130.163 22.2625C129.107 21.0437 128.619 19.5 128.619 17.6312C128.619 15.7625 129.107 14.2187 130.163 13C131.219 11.7812 132.682 11.1312 134.551 11.1312C137.151 11.1312 138.938 12.2687 139.994 14.625L137.719 15.6C137.069 14.1375 136.013 13.4062 134.632 13.4062C132.519 13.4062 131.463 15.1125 131.463 17.55C131.463 20.0687 132.519 21.6937 134.632 21.6937C136.013 21.6937 137.069 20.9625 137.719 19.5L139.994 20.6375Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M152.507 18.3625H143.651C143.651 20.3125 144.788 21.8562 146.738 21.8562C148.119 21.8562 149.419 21.0437 149.988 19.7437L152.182 20.6375C150.882 23.075 149.419 24.1312 146.657 24.1312C142.513 24.1312 140.807 20.6375 140.807 17.6312C140.807 14.625 142.513 11.1312 146.657 11.1312C150.638 11.1312 152.426 14.3812 152.426 17.225V18.3625H152.507ZM143.732 16.25H149.826C149.582 14.7062 148.526 13.4875 146.819 13.4875C145.113 13.4875 143.976 14.625 143.732 16.25Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M71.5005 11.2125C72.1505 11.2125 72.7193 11.375 73.4505 11.7C74.1005 12.025 74.588 12.35 74.913 12.7563V11.375H77.513V23.9688H75.3193L74.913 22.5063C74.4255 23.3188 73.0443 24.1313 71.5005 24.1313C67.8443 24.1313 65.8943 21.775 65.8943 17.6313C65.813 13.7313 67.763 11.2125 71.5005 11.2125ZM68.5755 17.7125C68.5755 19.0125 68.9005 19.9875 69.4693 20.8C70.038 21.5313 70.8505 21.9375 71.7443 21.9375C72.7193 21.9375 73.4505 21.5313 74.0193 20.8C74.588 20.0688 74.913 19.0125 74.913 17.7125C74.913 16.4125 74.588 15.4375 74.0193 14.7063C73.4505 13.975 72.638 13.5688 71.7443 13.5688C70.7693 13.5688 70.038 13.975 69.4693 14.7063C68.9005 15.3563 68.5755 16.4125 68.5755 17.7125Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M121.306 11.2125C121.956 11.2125 122.525 11.375 123.256 11.7C123.906 12.025 124.393 12.35 124.718 12.7563V11.375H127.318V23.9688H125.125L124.718 22.5063C124.231 23.3188 122.85 24.1313 121.306 24.1313C117.65 24.1313 115.7 21.775 115.7 17.6313C115.618 13.7313 117.568 11.2125 121.306 11.2125ZM118.381 17.7125C118.381 19.0125 118.706 19.9875 119.275 20.8C119.843 21.5313 120.656 21.9375 121.55 21.9375C122.525 21.9375 123.256 21.5313 123.825 20.8C124.393 20.0688 124.718 19.0125 124.718 17.7125C124.718 16.4125 124.393 15.4375 123.825 14.7063C123.256 13.975 122.443 13.5688 121.55 13.5688C120.575 13.5688 119.843 13.975 119.275 14.7063C118.625 15.3563 118.381 16.4125 118.381 17.7125Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M32.7438 16.0875C33.15 21.45 30.6313 24.4563 29.1688 26.5688C26.8938 29.0063 23.8875 32.3375 16.4938 32.5C10.1562 32.7438 7.06875 29.9813 4.46875 27.5438C1.05625 23.8063 0.1625 21.5313 0 16.0875C0 12.675 1.3 9.34378 3.575 6.33753C6.74375 1.86878 11.7813 0.325031 16.4938 3.0755e-05C21.3688 -0.162469 25.2688 2.27503 27.95 4.95628C31.3625 8.61253 32.4188 11.7 32.7438 16.0875Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M155.187 11.6999C155.106 11.6186 155.024 11.5374 154.943 11.4562C154.862 11.3749 154.699 11.2936 154.618 11.2936C154.293 11.2124 153.887 11.2124 153.562 11.4562C153.481 11.5374 153.399 11.6186 153.318 11.6999C153.237 11.7811 153.237 11.9437 153.156 12.0249C153.074 12.3499 153.074 12.7561 153.318 12.9999C153.399 13.0812 153.481 13.1624 153.562 13.2436C153.643 13.3249 153.806 13.4062 153.887 13.4062C153.968 13.4062 154.131 13.4874 154.212 13.4874C154.456 13.4874 154.699 13.4061 154.862 13.2436C154.943 13.1624 155.024 13.0812 155.106 12.9999C155.187 12.9187 155.187 12.7562 155.268 12.6749C155.431 12.3499 155.349 11.9436 155.187 11.6999ZM154.943 12.9186C154.862 12.9999 154.781 13.0812 154.781 13.1624C154.699 13.2437 154.618 13.2436 154.537 13.3249C154.212 13.4061 153.968 13.4062 153.724 13.1624C153.643 13.0812 153.562 12.9999 153.562 12.9186C153.481 12.8374 153.481 12.7562 153.399 12.6749C153.399 12.5937 153.318 12.5124 153.318 12.3499C153.318 12.1874 153.399 11.9437 153.481 11.7812C153.562 11.6999 153.643 11.6186 153.724 11.5374C153.806 11.4561 153.887 11.4561 153.968 11.3749C154.293 11.2936 154.537 11.2936 154.781 11.5374C154.862 11.6186 154.943 11.6999 154.943 11.7812C155.024 11.8624 155.024 11.9437 155.106 12.0249C155.187 12.3499 155.106 12.6749 154.943 12.9186Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M154.376 12.4312C154.457 12.4312 154.538 12.4312 154.619 12.3499C154.782 12.1874 154.782 11.9437 154.701 11.8624C154.538 11.6999 154.457 11.6999 154.294 11.6999H153.807V12.9999H153.969V12.4312H154.213L154.538 12.9999H154.782L154.376 12.4312ZM154.213 12.2687H153.969V11.8624C154.132 11.8624 154.294 11.8624 154.457 11.8624C154.538 11.9437 154.538 12.0249 154.538 12.1062C154.538 12.1874 154.457 12.1874 154.376 12.1874C154.294 12.2687 154.294 12.2687 154.213 12.2687Z", fill: "currentColor" })] }) }; G(); var ix = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 18, viewBox: "0 0 20 18", width: 20, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M16.4294 3.43818C14.9754 1.965 12.6226 1.965 11.1686 3.43818C10.9889 3.62027 10.8317 3.81581 10.6966 4.02143C10.5426 4.25606 10.2807 4.39737 10 4.39737C9.71936 4.39737 9.45752 4.25606 9.30346 4.02143C9.16845 3.81581 9.01123 3.62027 8.83151 3.43818C7.37751 1.965 5.0247 1.965 3.57071 3.43818C2.11717 4.9109 2.17005 7.38958 3.56879 8.79755C4.42767 9.66208 6.18447 11.4421 7.72536 13.0047C8.49607 13.7863 9.21316 14.5139 9.73757 15.0461L10 15.3125L10.2625 15.0461C10.7869 14.5139 11.504 13.7863 12.2747 13.0047C13.8156 11.4421 15.5724 9.66208 16.4313 8.79755C17.83 7.38958 17.8829 4.91089 16.4294 3.43818ZM10 16.5C9.40633 17.0847 9.40631 17.0847 9.40627 17.0847L8.55039 16.2159C8.02608 15.6838 7.30914 14.9563 6.53862 14.1749C4.99707 12.6116 3.24265 10.8341 2.38642 9.97218C0.354947 7.92732 0.277459 4.40226 2.3845 2.26741C4.48521 0.138988 7.89205 0.133048 10 2.24959C12.1081 0.133047 15.5149 0.138987 17.6156 2.26741C19.7226 4.40226 19.6451 7.92732 17.6137 9.97218C16.7575 10.8341 15.003 12.6116 13.4615 14.1749C12.691 14.9563 11.974 15.6838 11.4497 16.2159L10.5947 17.0837L10.594 17.0845C10.594 17.0845 10.5938 17.0847 10 16.5ZM10 16.5L10.594 17.0845C10.4374 17.2435 10.2233 17.3333 10 17.3333C9.77684 17.3333 9.5629 17.2437 9.40627 17.0847L10 16.5Z", fill: "currentColor" })] }) }; G(); var ig = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 24 24", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M14.3131 1.28924C14.4586 0.756448 14.1446 0.206631 13.6118 0.0611859C13.079 -0.0842591 12.5292 0.229745 12.3837 0.762534L11.6292 3.52654C10.9568 3.47037 10.19 3.48232 9.45218 3.57379L8.66099 0.823452C8.50831 0.292692 7.95427 -0.0137983 7.42351 0.138886C6.89275 0.29157 6.58626 0.845611 6.73894 1.37637L7.77456 4.97637C7.90385 5.42582 8.32095 5.71445 8.768 5.69962C8.85141 5.70224 8.93651 5.69439 9.02169 5.67503C9.99178 5.45455 11.1999 5.44605 11.9743 5.58432C12.6369 5.70264 12.9919 5.80293 13.6277 6.10089C13.4158 6.47486 13.2479 6.84838 13.0974 7.20171C13.0414 7.3332 12.9885 7.46013 12.9369 7.58404L12.9366 7.58469L12.9365 7.58484L12.9364 7.58506L12.9363 7.5853L12.9363 7.58534L12.9363 7.5854C12.7786 7.9636 12.6326 8.31383 12.4467 8.68045C12.1806 9.20541 11.5584 9.67005 10.6989 10.0263C9.86602 10.3714 8.97763 10.5446 8.43744 10.5954C7.88758 10.647 7.48369 11.1346 7.53533 11.6845C7.58698 12.2344 8.07459 12.6383 8.62446 12.5866C9.33071 12.5203 10.4188 12.3072 11.4645 11.8739C12.4835 11.4516 13.642 10.7456 14.2305 9.58489C14.4534 9.14528 14.6383 8.70146 14.8014 8.30979L14.8015 8.30964C14.8485 8.19672 14.8938 8.08813 14.9376 7.98522C15.1427 7.50351 15.3334 7.10252 15.5853 6.73883C16.0543 6.06157 16.8259 5.38308 18.6238 4.81895C19.1507 4.6536 19.4439 4.09239 19.2785 3.56543C19.1132 3.03848 18.552 2.74534 18.025 2.91068C16.6441 3.34398 15.6589 3.87783 14.925 4.50776C14.3906 4.2411 13.9898 4.06191 13.5932 3.92658L14.3131 1.28924ZM2.52694 1.83506C2.94055 1.46908 3.57254 1.5077 3.93852 1.92132C4.4232 2.4691 4.80439 3.10854 5.06649 3.71455C5.32136 4.30385 5.49991 4.94577 5.49991 5.49987C5.49991 6.06746 5.35856 6.76847 5.19925 7.47292C5.1388 7.74022 5.07446 8.01301 5.00791 8.29516L5.00791 8.29517C4.88695 8.80803 4.7587 9.35176 4.63333 9.94946C4.25066 11.7737 3.94701 13.8786 4.18369 16.0473C4.33859 17.4666 5.60662 18.8262 7.55709 19.932C9.4571 21.0091 11.7126 21.6726 13.2642 21.8337C15.593 22.0754 16.6488 21.7137 17.2232 21.2161C17.839 20.6826 18.1634 19.7927 18.5272 18.2678C18.5813 18.0413 18.6352 17.8187 18.6882 17.5997L18.6894 17.5949L18.6896 17.5939L18.69 17.5924C19.0818 15.9745 19.4264 14.5513 19.4331 13.2043C19.4403 11.7532 19.0494 10.4462 17.7978 9.21189C17.4045 8.82411 17.4001 8.19096 17.7879 7.79772C18.1757 7.40448 18.8088 7.40006 19.2021 7.78785C20.8946 9.45694 21.4425 11.3107 21.4331 13.2142C21.4252 14.8139 21.018 16.4869 20.632 18.0727L20.632 18.0727C20.5781 18.2943 20.5246 18.5142 20.4726 18.732C20.1242 20.1922 19.6986 21.7177 18.5327 22.7277C17.3255 23.7736 15.5679 24.0836 13.0577 23.823C11.2262 23.6329 8.70576 22.8822 6.57075 21.6718C4.4862 20.4901 2.46012 18.689 2.1955 16.2642C1.92517 13.7873 2.27668 11.4421 2.67593 9.53887C2.80549 8.9212 2.94583 8.32566 3.07071 7.79569C3.13532 7.52149 3.1958 7.26484 3.24851 7.03177C3.4141 6.29952 3.49991 5.81026 3.49991 5.49987C3.49991 5.32364 3.42851 4.96557 3.23082 4.50847C3.04035 4.0681 2.76638 3.61475 2.44067 3.24664C2.07469 2.83302 2.11332 2.20103 2.52694 1.83506Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var iv = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 36, viewBox: "0 0 40 36", width: 40, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M4.09291 19.4716L4.20973 19.3643C7.859 23.3356 19.4427 34.7056 19.5592 34.8195L19.4482 34.9329C19.4482 34.9329 19.4483 34.933 19.4483 34.933C19.6018 35.0833 19.8017 35.1586 20 35.1586C20.1976 35.1586 20.398 35.085 20.5523 34.9324C20.7006 34.7873 32.2593 23.4413 35.9071 19.4716L35.7903 19.3643L35.9071 19.4716C38.0296 17.1615 39.1586 14.4982 39.1586 11.7672C39.1586 5.73909 34.1429 0.841359 27.9851 0.841359C24.9615 0.841359 22.0979 2.02808 20 4.1271C17.9021 2.02808 15.0385 0.841359 12.0149 0.841359C5.85707 0.841359 0.841359 5.73909 0.841359 11.7672C0.841359 14.4982 1.97037 17.1615 4.09291 19.4716ZM19.3992 5.82036L19.3994 5.82058C19.7044 6.17722 20.2966 6.17775 20.6008 5.82036C22.4309 3.67288 25.1225 2.43975 27.9851 2.43975C33.2773 2.43975 37.5747 6.62946 37.5747 11.7685C37.5747 14.6874 36.0421 16.9747 34.745 18.3867C31.5783 21.8315 22.3578 30.9253 20 33.2455C17.6422 30.9253 8.42168 21.8315 5.25503 18.3867C3.95791 16.9747 2.42531 14.6874 2.42531 11.7685C2.42531 6.62946 6.72274 2.43975 12.0149 2.43975C14.8775 2.43975 17.5691 3.67288 19.3992 5.82036ZM11.7667 3.4023C7.13778 3.4023 3.37469 7.20687 3.37469 11.8798C3.37469 12.3191 3.72791 12.6784 4.16667 12.6784C4.60542 12.6784 4.95864 12.3191 4.95864 11.8798C4.95864 8.08418 8.01402 4.99941 11.7667 4.99941C12.2054 4.99941 12.5586 4.64016 12.5586 4.20086C12.5586 3.76156 12.2054 3.4023 11.7667 3.4023Z", fill: "currentColor", stroke: "currentColor", strokeWidth: .317282 })] }) }; G(); var iL = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 20, viewBox: "0 0 20 20", width: 20, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M11.25 1.5625C11.25 0.699555 11.9496 0 12.8125 0C13.6754 0 14.375 0.699555 14.375 1.5625V14.6875C14.375 15.5504 13.6754 16.25 12.8125 16.25C11.9496 16.25 11.25 15.5504 11.25 14.6875V1.5625Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M7.1875 3.75C6.32455 3.75 5.625 4.44955 5.625 5.3125V18.4375C5.625 19.3004 6.32455 20 7.1875 20C8.05044 20 8.75 19.3004 8.75 18.4375V5.3125C8.75 4.44955 8.05044 3.75 7.1875 3.75Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M1.5625 6.875C0.699555 6.875 0 7.57455 0 8.4375V12.8125C0 13.6754 0.699555 14.375 1.5625 14.375C2.42544 14.375 3.125 13.6754 3.125 12.8125V8.4375C3.125 7.57455 2.42544 6.875 1.5625 6.875Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M18.4375 5C17.5746 5 16.875 5.69955 16.875 6.5625V12.1875C16.875 13.0504 17.5746 13.75 18.4375 13.75C19.3004 13.75 20 13.0504 20 12.1875V6.5625C20 5.69955 19.3004 5 18.4375 5Z", fill: "currentColor" })] }) }; G(); var ib = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 25 24", width: 25, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M12.5 21C12.2 21 11.9125 20.9458 11.6375 20.8375C11.3625 20.7292 11.1167 20.5667 10.9 20.35L4.2 13.625C3.61667 13.0417 3.1875 12.375 2.9125 11.625C2.6375 10.875 2.5 10.0917 2.5 9.275C2.5 7.55833 3.05833 6.08333 4.175 4.85C5.29167 3.61667 6.68333 3 8.35 3C9.15 3 9.90417 3.15833 10.6125 3.475C11.3208 3.79167 11.95 4.23333 12.5 4.8C13.0333 4.23333 13.6542 3.79167 14.3625 3.475C15.0708 3.15833 15.825 3 16.625 3C18.2917 3 19.6875 3.61667 20.8125 4.85C21.9375 6.08333 22.5 7.55 22.5 9.25C22.5 10.0667 22.3583 10.85 22.075 11.6C21.7917 12.35 21.3667 13.0167 20.8 13.6L14.075 20.35C13.8583 20.5667 13.6167 20.7292 13.35 20.8375C13.0833 20.9458 12.8 21 12.5 21ZM13.5072 8.25C13.6357 8.25 13.75 8.28333 13.85 8.35C13.95 8.41667 14.0417 8.5 14.125 8.6L15.9 11.25H20.6033C20.7356 10.9262 20.8348 10.5976 20.9008 10.2643C20.9669 9.93092 21 9.59283 21 9.25C21 7.96667 20.5837 6.85417 19.7512 5.9125C18.9189 4.97083 17.8784 4.5 16.6298 4.5C16.0433 4.5 15.4792 4.62083 14.9375 4.8625C14.3958 5.10417 13.925 5.44167 13.525 5.875L12.85 6.6C12.8 6.65 12.75 6.69167 12.7 6.725C12.65 6.75833 12.5833 6.775 12.5 6.775C12.4167 6.775 12.3447 6.75933 12.284 6.728C12.2235 6.6965 12.1705 6.65383 12.125 6.6L11.45 5.875C11.0455 5.44467 10.5735 5.10792 10.034 4.86475C9.49467 4.62158 8.93333 4.5 8.35 4.5C7.10717 4.5 6.07142 4.97033 5.24275 5.911C4.41425 6.85167 4 7.96467 4 9.25C4 9.59533 4.03333 9.93583 4.1 10.2715C4.16667 10.6072 4.26375 10.9333 4.39125 11.25H9.5C9.62633 11.25 9.74625 11.2801 9.85975 11.3403C9.97342 11.4004 10.0618 11.4787 10.125 11.575L11.275 13.325L12.775 8.775C12.8263 8.625 12.9195 8.5 13.0545 8.4C13.1893 8.3 13.3403 8.25 13.5072 8.25ZM13.725 10.675L12.2 15.225C12.1505 15.375 12.0576 15.5 11.9213 15.6C11.7849 15.7 11.6362 15.75 11.475 15.75C11.3417 15.75 11.225 15.7167 11.125 15.65C11.025 15.5833 10.9417 15.5 10.875 15.4L9.1 12.75H5.45L11.975 19.275C12.0583 19.3583 12.14 19.4167 12.22 19.45C12.3 19.4833 12.3933 19.5 12.5 19.5C12.6067 19.5 12.7 19.4833 12.78 19.45C12.86 19.4167 12.9417 19.3583 13.025 19.275L19.525 12.75H15.5C15.3667 12.75 15.25 12.7167 15.15 12.65C15.05 12.5833 14.9583 12.5 14.875 12.4L13.725 10.675Z", fill: "currentColor" })] }) }; G(); var iy = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 21, viewBox: "0 0 20 21", width: 20, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M2.00422 10.7499C2.08755 6.41658 5.67088 2.91658 10.0042 2.91658C14.3375 2.91658 17.9209 6.41658 18.0042 10.7499C18.0042 15.0832 14.4209 18.5832 10.0042 18.5832C5.58755 18.6666 2.00422 15.1666 2.00422 10.7499ZM17.1709 10.7499C17.0875 6.83324 13.9209 3.74991 10.0042 3.74991C6.08755 3.74991 2.92088 6.91658 2.83755 10.7499C2.92088 14.6666 6.08755 17.7499 10.0042 17.7499C13.9209 17.8332 17.0875 14.6666 17.1709 10.7499Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M6.55808 0.887105C7.72558 0.730823 8.82801 0.583252 10.0042 0.583252C11.4209 0.583252 12.8376 0.749919 14.3376 0.999919C15.5042 1.33325 16.3376 2.16659 17.0876 3.08325C18.5042 5.08325 19.6709 7.24992 19.9209 9.66659C20.0876 12.0833 19.5042 14.4999 18.0876 16.4166C14.9209 20.9166 8.75423 21.9166 4.25423 18.7499C0.920893 16.2499 -0.579107 11.9999 0.504226 7.91659C1.00423 5.83325 2.08756 4.08325 3.50423 2.49992C3.83756 2.16659 4.25423 1.74992 4.67089 1.41659C5.17089 1.16659 5.75423 0.999919 6.33756 0.916585C6.41135 0.906747 6.48484 0.896909 6.55808 0.887105ZM13.4209 1.74992C12.2542 1.49992 11.1709 1.41659 10.0042 1.41659C8.67089 1.41659 7.33756 1.58325 5.92089 1.83325C5.00423 2.16659 4.17089 2.83325 3.58756 3.66659C2.25423 5.49992 1.17089 7.49992 0.920893 9.74992C0.587559 13.4166 2.50423 16.9999 5.83756 18.7499C8.92089 20.3333 12.5876 19.9999 15.4209 17.9999C18.5042 15.6666 19.8376 11.6666 18.7542 7.99992C18.1709 6.16659 17.1709 4.49992 15.9209 3.08325C15.5876 2.74992 15.2542 2.41659 14.8376 2.16659C14.4209 1.91659 13.9209 1.83325 13.4209 1.74992Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(), G(); var iw = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 28, viewBox: "0 0 28 28", width: 28, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M24.4993 14.0002H17.4993L15.166 25.6668L10.4993 2.3335L5.83268 21.0002L3.49935 14.0002H1.16602", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2.1 }), (0, l.jsx)("circle", { cx: 24.5, cy: 14, fill: "currentColor", r: 3.5 })] }) }; G(); var ij = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 20, viewBox: "0 0 63 20", width: 63, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M14.5129 -0.00231934C14.6163 0.0173467 14.6787 0.0766568 14.7538 0.122544C14.8995 0.211613 15.052 0.286219 15.1936 0.372271C15.262 0.413892 15.3644 0.427627 15.3926 0.50754C15.4018 0.520963 15.4019 0.533241 15.4031 0.559566C15.3458 0.623143 15.3236 0.713565 15.2774 0.788483C15.1506 0.993779 15.0403 1.21354 14.9109 1.42321C14.6487 1.84795 14.4077 2.29975 14.1464 2.72387C14.0217 2.92635 13.9358 3.13602 13.8113 3.33778C13.559 3.7466 13.3442 4.18269 13.0886 4.59682C12.0522 6.27634 11.1502 8.05689 10.1144 9.73703C10.015 9.89821 9.95157 10.0649 9.8526 10.2261C9.45349 10.8758 9.09145 11.5644 8.69014 12.2135C8.56237 12.4201 8.45953 12.6366 8.33407 12.8378C8.29092 12.9071 8.25395 13.056 8.17698 13.0875C8.16462 13.0959 8.15938 13.0955 8.13509 13.0979C7.93495 12.8832 7.71649 12.6775 7.53815 12.4424C7.40797 12.2708 7.22239 12.1304 7.08782 11.9534L6.95168 11.8285C6.77636 11.5981 6.5511 11.4141 6.37568 11.1834L6.13481 10.944C5.93971 10.6869 5.69129 10.4836 5.49598 10.2261L5.33889 10.0804C5.17531 9.86533 4.96858 9.6925 4.80478 9.4769C4.73022 9.37878 4.55774 9.30293 4.54297 9.15434L4.86762 8.83177C5.00659 8.72803 5.14536 8.61139 5.26558 8.4884H5.32842C6.19492 9.41301 7.04499 10.3553 7.91516 11.277H7.98847C8.32621 10.7311 8.63641 10.1496 8.9729 9.60176C9.0572 9.46452 9.1082 9.32311 9.19282 9.18555C10.0029 7.86856 10.7173 6.47529 11.5282 5.15871C11.5942 5.05153 11.6302 4.9428 11.6958 4.83614C11.9674 4.39444 12.22 3.92453 12.4917 3.48345C12.6017 3.305 12.6756 3.12083 12.7849 2.94238C13.1628 2.32576 13.5056 1.67418 13.8846 1.05902C14.0224 0.835307 14.1375 0.60202 14.2721 0.382676C14.3551 0.247304 14.4074 0.107769 14.5129 -0.00231934Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M42.6757 0.965321H43.2622C43.3286 0.965321 43.4455 0.948257 43.4926 0.975727C43.5213 0.992375 43.5226 1.02286 43.524 1.06937C43.427 1.19913 43.3828 1.49537 43.3145 1.66248C43.1817 1.98785 43.0844 2.35068 42.948 2.67179C42.9029 2.77813 42.8985 2.88614 42.8538 2.99435C42.7414 3.26624 42.6524 3.57591 42.5396 3.84759L42.4558 4.13894C42.3388 4.42092 42.2478 4.74036 42.1311 5.02339L42.0997 5.15865C41.7995 5.89275 41.5705 6.68428 41.2933 7.42701C41.1163 7.90128 40.9897 8.38554 40.8011 8.84213C40.7435 8.98166 40.7074 9.13035 40.6545 9.25834C40.6347 9.3062 40.6398 9.38528 40.6021 9.41442C40.5508 9.45417 40.4051 9.43523 40.3194 9.43523C40.0699 9.43523 39.763 9.47029 39.5339 9.42482C39.5258 9.40152 39.5232 9.36832 39.5234 9.33118C39.6051 9.20746 39.6115 9.03733 39.6701 8.89415C39.8461 8.46306 39.9626 8.00846 40.1309 7.56228C40.4329 6.76128 40.7006 5.92126 41.0001 5.11703C41.0996 4.84993 41.1682 4.58896 41.2724 4.33664C41.2899 4.27077 41.3073 4.2048 41.3247 4.13894C41.4625 3.80534 41.566 3.43273 41.7018 3.09841C41.7626 2.94857 41.7809 2.81299 41.8379 2.66138C41.971 2.30719 42.1039 1.92375 42.2359 1.56883C42.2829 1.4423 42.3218 1.32097 42.3615 1.20464C42.3882 1.1265 42.391 1.01412 42.4663 0.986132C42.5135 0.957726 42.6289 0.994248 42.6757 0.965321Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M8.28138 1.55846C9.35734 1.53785 10.3749 1.73868 11.1404 2.0475C11.2256 2.08184 11.2978 2.08528 11.3813 2.12034C11.4503 2.14927 11.5318 2.19495 11.6012 2.22439C11.698 2.2655 11.8097 2.26175 11.8107 2.40128C11.7592 2.45706 11.7369 2.5326 11.6955 2.59899C11.6103 2.73509 11.5187 2.8791 11.4336 3.0152C11.379 3.10271 11.379 3.22237 11.2347 3.2233C11.1739 3.17804 11.0896 3.17169 11.0147 3.14006C10.7317 3.0204 10.444 2.93747 10.1141 2.84871C9.84149 2.77536 9.53234 2.74039 9.23439 2.67182C9.08024 2.63634 8.92179 2.67484 8.76312 2.64061C8.50801 2.58556 7.93086 2.60658 7.69491 2.66142L7.35979 2.68223C7.20867 2.71896 7.02069 2.74882 6.87805 2.78628L6.7419 2.79669C6.15093 2.96848 5.60091 3.14391 5.10817 3.40019C4.65984 3.63338 4.2623 3.88362 3.8724 4.17018C3.74935 4.26061 3.64787 4.3913 3.5268 4.48234C3.38521 4.58879 3.24645 4.71605 3.13931 4.85693L2.97175 5.01301C2.85666 5.16399 2.71706 5.29905 2.60521 5.45004C2.36884 5.76917 2.16766 6.11431 1.9559 6.45935C1.89705 6.55518 1.86636 6.6557 1.81976 6.7611C1.72498 6.97545 1.62047 7.21051 1.52653 7.43745C1.38064 7.78987 1.31959 8.20099 1.22282 8.59243C1.18156 8.75954 1.20847 8.90033 1.17046 9.07108C1.14208 9.19865 1.16951 9.35753 1.13904 9.49769C1.11338 9.6159 1.12857 9.7879 1.12857 9.92431C1.12857 10.2482 1.14815 10.5799 1.21235 10.8504V10.9648C1.22795 11.0299 1.24785 11.1109 1.26471 11.1729C1.34619 11.4715 1.36305 11.7572 1.47416 12.0262C1.60591 12.345 1.72561 12.6663 1.86165 12.9731C1.90228 13.0647 1.96722 13.1597 2.01874 13.2436C2.10043 13.3767 2.15614 13.509 2.23867 13.639C2.38015 13.862 2.54321 14.0727 2.69946 14.2841C2.77455 14.3858 2.88567 14.4658 2.96128 14.5651C3.11565 14.7679 3.30174 14.9634 3.50586 15.1166C3.60933 15.1942 3.69489 15.3094 3.79909 15.3871C4.51929 15.9243 5.21468 16.3172 6.14496 16.6565C6.43464 16.7621 6.76285 16.806 7.06656 16.8855C7.20657 16.9221 7.35864 16.9171 7.48546 16.9479L7.86248 16.9687C8.0336 17.0059 8.26766 16.9895 8.46989 16.9895H8.75265C9.02012 16.9285 9.31566 16.9613 9.57999 16.8959C9.95627 16.8026 10.3333 16.718 10.6691 16.6045C12.6506 15.9347 14.1877 14.5037 14.9943 12.6713C15.1635 12.2871 15.2811 11.8716 15.4028 11.4435C15.4582 11.2484 15.4712 11.0432 15.518 10.8504L15.5285 10.6631C15.5803 10.433 15.5807 10.1629 15.5808 9.88269C15.5808 9.72443 15.602 9.52256 15.5703 9.38324L15.5599 9.14391C15.5086 8.92249 15.5231 8.68671 15.4656 8.46757C15.3109 7.8778 15.1843 7.24578 14.9001 6.78191L14.8058 6.5634C14.6301 6.2758 14.4837 5.98029 14.2927 5.71017C14.2173 5.60351 14.0685 5.50081 14.0623 5.33558C14.1332 5.25743 14.1627 5.14703 14.2194 5.05463C14.2888 4.94142 14.37 4.82312 14.4393 4.71126C14.4945 4.62209 14.5205 4.45466 14.6592 4.45113C14.7596 4.60783 14.9175 4.73602 15.0258 4.88815C15.2245 5.16743 15.4101 5.45774 15.5913 5.75179C15.6594 5.86219 15.6981 5.97914 15.7589 6.09516C16.0133 6.58161 16.2001 7.11946 16.3872 7.68717C16.4692 7.93607 16.487 8.21524 16.5548 8.46757C16.6176 8.70138 16.5844 8.96588 16.6386 9.20635V9.48729C16.6742 9.65076 16.6753 9.93742 16.6386 10.1012C16.6049 10.2512 16.6466 10.43 16.6176 10.559V10.6735C16.5644 10.9018 16.5712 11.1517 16.5129 11.3811C16.3655 11.96 16.2265 12.4886 16.0102 12.9835C15.3719 14.4444 14.4703 15.605 13.2349 16.4692C12.7932 16.7783 12.3232 17.0954 11.8002 17.3225C11.4813 17.4609 11.1457 17.5847 10.8053 17.6971C10.7006 17.7316 10.612 17.7346 10.5016 17.7699C10.1869 17.8704 9.82348 17.9078 9.47526 17.9884C9.3409 18.0195 9.20612 18.0035 9.08778 18.03H8.92021C8.78952 18.0585 8.40548 18.0804 8.27091 18.0508H7.99862C7.84352 18.0508 7.69156 18.039 7.55877 18.0092H7.4331L6.84663 17.926C6.59759 17.8618 6.32541 17.829 6.08213 17.7491C5.65296 17.6082 5.23981 17.4635 4.84635 17.2913C4.30942 17.0562 3.82789 16.723 3.38018 16.3964C2.40602 15.6856 1.71619 14.8286 1.0762 13.7847C0.866959 13.4433 0.702225 13.0029 0.542098 12.6193C0.509214 12.5404 0.506491 12.4701 0.479262 12.3904C0.385951 12.117 0.304788 11.8133 0.227918 11.5163C0.186342 11.3558 0.19671 11.2138 0.15461 11.0481C0.142881 11.0019 0.12403 10.9278 0.112719 10.8816L0.0917741 10.6631C0.079207 10.627 0.032499 10.5937 0.0184656 10.559C-0.0247864 10.4522 0.00799297 10.2504 0.00799297 10.122V9.1127C0.0208743 9.07534 0.0668492 9.02623 0.0813015 8.98783L0.0917741 8.87338C0.126439 8.73311 0.127591 8.58827 0.165083 8.43635C0.253891 8.07654 0.303636 7.711 0.416426 7.37501C0.688924 6.56351 1.03484 5.81027 1.48464 5.16909C1.62308 4.9717 1.79232 4.78722 1.93496 4.5968C2.10901 4.36435 2.30726 4.16436 2.51096 3.96208L2.70994 3.75397C2.88567 3.62183 3.03616 3.45638 3.21262 3.32736C3.4913 3.12362 3.77563 2.91988 4.07138 2.73425C4.65261 2.36955 5.32297 2.13314 6.01929 1.88102L6.27063 1.82899C6.52083 1.75345 6.80704 1.71703 7.07703 1.6521C7.20961 1.62026 7.35403 1.62755 7.47499 1.60008C7.65648 1.58967 7.83808 1.57927 8.01957 1.56886C8.09078 1.56886 8.23185 1.58926 8.28138 1.55846Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M28.723 1.56876C29.5104 1.55461 30.1322 1.70986 30.6081 2.00578C30.7222 2.07664 30.8079 2.18787 30.9118 2.26591C30.9618 2.30348 31.0213 2.34166 31.0584 2.39078C31.1504 2.51242 31.2163 2.62937 31.2993 2.76537C31.4372 2.99106 31.5703 3.28751 31.5716 3.63941C31.541 3.65856 31.5412 3.66792 31.4878 3.67063C31.4218 3.70882 31.2359 3.64815 31.1317 3.67063C31.0419 3.68998 30.8939 3.66178 30.8071 3.67063C30.5487 3.69706 30.1576 3.70975 29.9169 3.66022C29.8606 3.5595 29.8317 3.4338 29.7703 3.33766C29.6269 3.1128 29.3897 3.00396 29.0896 2.93185C28.8444 2.87296 28.4189 2.94985 28.2727 3.03591C28.1703 3.09626 28.0877 3.18772 28.0214 3.28563C27.9332 3.41591 27.906 3.67594 27.99 3.83711C28.2109 4.26102 28.9675 4.25062 29.4875 4.38859C29.7318 4.45342 30.0115 4.48682 30.252 4.56548C30.8507 4.76131 31.341 5.07586 31.5821 5.62682C31.6674 5.82182 31.6879 6.04928 31.7392 6.28236V6.45925C31.7668 6.59493 31.732 6.89523 31.6973 7.03154C31.6112 7.36908 31.4593 7.62453 31.2784 7.86396C31.1847 7.98778 31.0398 8.08497 30.9118 8.17612C30.6029 8.39619 30.2372 8.53146 29.8017 8.63395C29.6663 8.66579 29.539 8.65913 29.4142 8.68598H29.2467C29.0689 8.72313 28.7619 8.71126 28.5974 8.67557C28.4246 8.63811 28.2689 8.66506 28.1052 8.62355C27.4509 8.45789 26.9249 8.21514 26.5761 7.7495C26.4535 7.58583 26.3263 7.41019 26.241 7.20843C26.1969 7.10406 26.1825 7.00438 26.1468 6.89627C26.1097 6.784 26.0411 6.5813 26.0839 6.46965C26.1896 6.42356 26.4027 6.44884 26.5447 6.44884H27.4035C27.5377 6.44884 27.7221 6.43042 27.8224 6.46965C27.8723 6.55799 27.8873 6.67484 27.9376 6.77141C28.0873 7.05911 28.3628 7.23163 28.7126 7.32289C28.8094 7.34817 28.9106 7.3437 29.0267 7.3437C29.5242 7.3437 29.817 7.18002 29.9483 6.81303C29.9961 6.67953 29.9799 6.48786 29.9274 6.3656C29.8258 6.12898 29.5209 6.02732 29.2571 5.94939L28.9325 5.89736C28.2097 5.70559 27.4929 5.66824 26.9532 5.29385C26.6263 5.06712 26.3759 4.75434 26.241 4.33657C26.2039 4.22159 26.2165 4.12107 26.1887 3.99319C26.1571 3.84856 26.1532 3.57469 26.1887 3.4209C26.2223 3.27502 26.2434 3.12914 26.2934 2.99428C26.4697 2.51824 26.8272 2.19016 27.2359 1.94335C27.47 1.80205 27.7707 1.71651 28.0633 1.6416C28.2126 1.60331 28.3581 1.61069 28.5031 1.57917C28.5706 1.56449 28.6731 1.59987 28.723 1.56876Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M52.2225 1.56892C53.4817 1.54624 54.2894 1.93821 54.7673 2.6927C54.9207 2.93493 55.0789 3.25947 55.0815 3.63958C55.0662 3.64842 55.0514 3.65841 55.0396 3.67079C54.6835 3.67423 54.3275 3.67777 53.9714 3.6812C53.7896 3.6812 53.5767 3.69067 53.4268 3.66039C53.3826 3.58256 53.3616 3.47039 53.3116 3.38985C53.1543 3.13638 52.9284 3.00912 52.589 2.93202C52.2288 2.85023 51.8337 2.98498 51.636 3.14012C51.5855 3.17977 51.5559 3.25042 51.5208 3.30661C51.4224 3.46425 51.4308 3.74717 51.5313 3.89971C51.7679 4.25942 52.5134 4.26057 52.9974 4.38876C53.2162 4.44672 53.4686 4.47367 53.6886 4.54484C54.2767 4.73515 54.7273 4.9982 55.0186 5.48131C55.1152 5.64145 55.1652 5.8557 55.2176 6.05361C55.2211 6.11947 55.2246 6.18544 55.2281 6.25131C55.2681 6.43829 55.2629 6.77563 55.2176 6.95887C55.139 7.27758 55.0254 7.53906 54.8616 7.77048C54.5797 8.16869 54.1011 8.40697 53.5839 8.57169C53.4164 8.62506 53.2556 8.61102 53.0707 8.65493C52.762 8.72829 52.2385 8.72652 51.9292 8.65493C51.7345 8.60987 51.5618 8.62486 51.3846 8.57169C50.7721 8.38772 50.3194 8.09138 49.9918 7.6248C49.8334 7.39932 49.7375 7.16822 49.6462 6.86522C49.6127 6.75409 49.5675 6.60956 49.5938 6.46982C49.7679 6.42663 50.0342 6.44901 50.2431 6.44901H50.9134C51.0543 6.44901 51.2232 6.44276 51.3323 6.46982C51.3907 6.59645 51.4274 6.74889 51.4998 6.86522C51.647 7.10131 51.9135 7.24636 52.2225 7.32305C52.344 7.35323 52.5541 7.36228 52.6832 7.33346C52.777 7.31254 52.848 7.32638 52.9346 7.30224C53.1638 7.23835 53.3155 7.11068 53.4163 6.91724C53.4646 6.82464 53.5185 6.61258 53.4687 6.45941C53.3207 6.0048 52.8633 6.00647 52.3795 5.88712C52.155 5.83176 51.8885 5.79628 51.6674 5.73104L51.4894 5.71023C51.0732 5.599 50.6985 5.45821 50.3897 5.24199C50.0814 5.02608 49.868 4.70185 49.7404 4.30552C49.7079 4.20448 49.7236 4.10698 49.6985 3.99336C49.6657 3.84415 49.6644 3.56185 49.6985 3.41066C49.7324 3.26083 49.7478 3.11598 49.8033 2.98404C50.0105 2.49135 50.3606 2.17607 50.7982 1.9123C51.0514 1.75976 51.3748 1.69774 51.6988 1.62095C51.8056 1.59567 51.912 1.60129 52.013 1.57933C52.0777 1.56528 52.1748 1.59868 52.2225 1.56892Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M19.2068 1.74582H20.453C20.5655 1.74582 20.821 1.71159 20.8615 1.78744C20.9155 1.85945 20.8824 2.29949 20.8824 2.43257V3.73323C20.8824 3.91387 20.8475 4.18368 20.9034 4.32634C21.0242 4.39397 21.3996 4.35755 21.5841 4.35755H22.7675C22.9653 4.35755 23.2065 4.38128 23.3854 4.34715C23.4591 4.18784 23.4168 3.85435 23.4168 3.63959V2.42217C23.4168 2.20917 23.3974 1.9456 23.4377 1.76663C23.5314 1.72553 23.7176 1.74582 23.8462 1.74582H24.7363C24.8471 1.74582 25.0909 1.71336 25.1448 1.77704C25.1987 1.84852 25.1657 2.08077 25.1657 2.19325V8.10346C25.1657 8.18701 25.1873 8.43674 25.1553 8.48845C25.1174 8.54943 24.8739 8.51967 24.7782 8.51967H23.7729C23.6696 8.51967 23.4746 8.54776 23.4377 8.47805C23.4075 8.43455 23.4168 8.34267 23.4168 8.26994V6.51145C23.4168 6.30157 23.4426 6.04675 23.4063 5.85591C23.3879 5.84468 23.3684 5.82969 23.354 5.81429H21.6679C21.4604 5.81429 21.0732 5.77319 20.9138 5.8351C20.8438 5.96028 20.8824 6.25818 20.8824 6.43861V8.31156C20.8824 8.36515 20.8946 8.45183 20.8719 8.48845C20.841 8.5385 20.6897 8.51967 20.6101 8.51967H19.8351C19.6472 8.51967 19.308 8.55494 19.1649 8.49886C19.1179 8.39095 19.144 8.17473 19.144 8.03062V2.18285C19.144 2.10002 19.1221 1.82522 19.1544 1.77704C19.1645 1.76206 19.1933 1.75769 19.2068 1.74582Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M38.872 8.22812C38.8127 8.08452 38.7708 7.93604 38.715 7.8015C38.5369 7.37218 38.4058 6.92236 38.2332 6.50084C38.1325 6.25486 38.0843 6.01866 37.9819 5.77247C37.6066 4.87043 37.328 3.90357 36.9451 3.00466C36.7712 2.59667 36.6861 2.14768 36.4843 1.76643C36.3436 1.7117 36.0765 1.74562 35.8978 1.74562H34.6306C34.4934 1.87694 34.4685 2.10637 34.3898 2.2971C34.2228 2.70166 34.0999 3.13233 33.929 3.54574C33.493 4.60031 33.1708 5.72252 32.7246 6.77138C32.6809 6.87397 32.6729 6.97053 32.6303 7.07313C32.4993 7.38955 32.3834 7.7347 32.2533 8.05123C32.2002 8.18046 32.1909 8.32614 32.1172 8.43622C32.1198 8.47254 32.1209 8.48003 32.1381 8.49866C32.2004 8.54569 32.3936 8.51947 32.4942 8.51947H33.4367C33.5432 8.51947 33.7576 8.54912 33.8242 8.49866C33.9101 8.44091 33.9216 8.25944 33.9604 8.15528C34.0635 7.8784 34.1403 7.48601 34.285 7.25002C34.4607 7.21277 34.7147 7.22921 34.9239 7.22921H36.0758C36.2102 7.22921 36.6169 7.19664 36.6937 7.25002C36.7979 7.28644 36.8015 7.47883 36.8404 7.58299C36.9509 7.87912 37.0296 8.20949 37.1545 8.49866C37.2861 8.52852 37.4828 8.51947 37.6467 8.51947H38.4741C38.5822 8.51947 38.875 8.54361 38.9349 8.49866C38.9419 8.49522 38.9488 8.49168 38.9558 8.48825C38.9516 8.37723 38.905 8.30772 38.872 8.22812ZM35.9188 5.90774H35.1124C34.9711 5.90774 34.819 5.91846 34.7353 5.86612C34.7378 5.75332 34.7816 5.69672 34.8087 5.61639C34.8726 5.42639 34.9267 5.25064 34.9867 5.07531C35.1533 4.58824 35.269 4.07994 35.4684 3.61857H35.5208C35.6135 3.77455 35.6457 3.97079 35.7093 4.15965C35.8198 4.48794 35.933 4.83443 36.0549 5.15856C36.1203 5.33222 36.1552 5.50641 36.2225 5.66842C36.2412 5.71378 36.2386 5.75801 36.2644 5.79328C36.2618 5.95706 36.0741 5.90774 35.9188 5.90774Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M44.5877 1.74592H48.5778C48.715 1.74592 48.9042 1.72677 49.0072 1.76673C49.0483 1.86006 49.0281 2.04455 49.0281 2.17253C49.0281 2.45441 49.0671 2.86626 49.0176 3.11942C48.871 3.18632 48.5689 3.15063 48.3683 3.15063H46.9336C46.7379 3.15063 46.4404 3.11099 46.2843 3.17144C46.2406 3.24667 46.2528 3.39412 46.2528 3.51482V4.24319C46.2528 4.35494 46.2234 4.54192 46.3052 4.57616C46.3699 4.62381 46.7021 4.59697 46.8184 4.59697H48.2217C48.3611 4.59697 48.7646 4.56575 48.8186 4.63859C48.8626 4.69592 48.8396 4.8673 48.8396 4.96115V5.60628C48.8396 5.71522 48.8496 5.85122 48.8186 5.92884C48.6573 5.9996 48.3328 5.96006 48.117 5.96006H46.9126C46.7146 5.96006 46.4739 5.93675 46.2947 5.97047C46.2834 5.98878 46.2683 6.00813 46.2528 6.02249V7.89544C46.2528 8.02249 46.2812 8.4618 46.211 8.49895C46.1485 8.54588 45.9555 8.51976 45.8549 8.51976H44.9124C44.8172 8.51976 44.5726 8.54952 44.5353 8.48855C44.4983 8.42788 44.5249 8.11781 44.5249 8.02031V2.33902C44.5249 2.15297 44.5078 1.91906 44.5458 1.76673C44.5693 1.76059 44.5737 1.75892 44.5877 1.74592Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M62.4027 8.30121C62.3276 8.08186 62.249 7.88115 62.1723 7.67689C61.9913 7.19544 61.8416 6.71534 61.6486 6.25136C61.5516 6.01808 61.5049 5.78781 61.4078 5.55421C61.0669 4.73469 60.8071 3.85659 60.4652 3.03613C60.2906 2.61732 60.1993 2.12816 59.973 1.75628C59.7908 1.72173 59.5458 1.74587 59.3446 1.74587H58.1508C58.1427 1.75305 58.1274 1.75961 58.1193 1.76668C58.0409 1.79582 57.9842 2.05866 57.9518 2.15168C57.8928 2.32077 57.8109 2.50629 57.7423 2.67194C57.6693 2.84821 57.6364 3.01865 57.5643 3.19221C57.1288 4.23888 56.7996 5.35058 56.3704 6.39704C56.2665 6.65051 56.215 6.8967 56.1086 7.14622C55.9719 7.4666 55.8704 7.80477 55.7421 8.13472C55.7209 8.18893 55.6094 8.4345 55.6269 8.46769V8.49891C55.7475 8.52908 55.9345 8.51972 56.0876 8.51972H56.894C57.0108 8.51972 57.2594 8.55489 57.3339 8.49891C57.4259 8.4346 57.4278 8.23805 57.47 8.12432C57.5741 7.84389 57.6551 7.48377 57.8052 7.23987C58.3709 7.1995 58.991 7.22946 59.575 7.22946C59.7055 7.22946 60.133 7.19773 60.2034 7.25027C60.2942 7.28201 60.3284 7.52206 60.3605 7.62486C60.449 7.90851 60.5462 8.22983 60.6642 8.49891C60.835 8.5372 61.0878 8.51972 61.2926 8.51972H62.4236C62.4354 8.50734 62.4502 8.49735 62.4655 8.4885C62.4603 8.40224 62.424 8.36354 62.4027 8.30121ZM59.7531 5.86637C59.7163 5.93608 59.5212 5.90799 59.418 5.90799H58.5906C58.4983 5.90799 58.3324 5.92984 58.2764 5.88718H58.2555C58.2222 5.70758 58.3761 5.40635 58.4335 5.25246C58.5739 4.87672 58.6728 4.48361 58.8105 4.11828C58.8752 3.9467 58.9018 3.76117 58.9886 3.61883C59.01 3.62299 59.0088 3.62143 59.02 3.62923C59.0933 3.65909 59.1526 3.98332 59.1876 4.07666C59.3433 4.49183 59.4713 4.9507 59.6274 5.36691C59.6721 5.48616 59.7004 5.60624 59.7426 5.72069C59.7564 5.75826 59.7779 5.8286 59.7531 5.86637Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M42.9382 14.9084C42.9348 14.846 42.9312 14.7836 42.9278 14.7211C42.8903 14.5651 42.8626 14.396 42.8125 14.2425C42.614 13.6335 42.2084 13.1208 41.6501 12.869C41.4902 12.7969 41.3101 12.7588 41.1265 12.7129C40.9306 12.664 40.5518 12.6671 40.3619 12.7129C40.2696 12.7352 40.197 12.7271 40.1106 12.7545C39.6294 12.9076 39.2525 13.1649 39.0005 13.5453C38.9733 13.5433 38.9649 13.5408 38.9481 13.5349C38.907 13.3268 38.9272 13.0379 38.9272 12.7962V10.9232C38.9272 10.8611 38.9429 10.7471 38.9167 10.7047C38.9133 10.6943 38.9097 10.6839 38.9063 10.6735C38.8664 10.6644 38.8409 10.6538 38.7911 10.6527C38.6771 10.7225 38.1729 10.6038 38.058 10.6735C38.0475 10.6769 38.037 10.6805 38.0266 10.6839C37.9827 10.9128 38.0161 11.2154 38.0161 11.4643V17.8427C38.0316 17.8571 38.0467 17.8764 38.058 17.8948H38.6549C38.7278 17.8948 38.837 17.9101 38.8644 17.8635C38.8909 17.8184 38.8748 17.7088 38.8748 17.645C38.8748 17.47 38.8693 17.2726 38.8853 17.1144L38.8958 17.104C38.9201 17.1064 38.9253 17.106 38.9377 17.1144C38.9954 17.1426 39.0079 17.2082 39.0424 17.26C39.1055 17.355 39.1881 17.4437 39.2623 17.5306C39.3795 17.6677 39.7433 17.8671 39.9326 17.9364C40.0763 17.989 40.2298 18.016 40.3829 18.0508H40.4876C40.8188 18.1226 41.263 18.0251 41.4825 17.9364C41.5774 17.898 41.6714 17.8827 41.7548 17.8323C42.4527 17.4112 42.7299 16.8666 42.9382 15.9594C42.9417 15.8831 42.9452 15.8067 42.9487 15.7305C42.9966 15.5124 42.9857 15.1239 42.9382 14.9084ZM42.0166 15.7305C41.9715 15.9346 41.9548 16.1367 41.8805 16.3132C41.7163 16.7028 41.4169 17.0387 41.0113 17.1872C40.8817 17.2346 40.7469 17.2493 40.6028 17.2808C40.3356 17.3393 39.9442 17.1905 39.7964 17.1144C39.3307 16.8743 39.0963 16.4855 38.9481 15.9282C38.9175 15.8129 38.9308 15.6862 38.9063 15.5744V15.3351C38.8786 15.1906 38.9486 14.7753 38.99 14.6379C39.1249 14.1914 39.4222 13.7859 39.8278 13.6078C39.943 13.5696 40.0582 13.5315 40.1734 13.4933C40.228 13.4794 40.2895 13.4976 40.3305 13.4725C41.3193 13.4695 41.7407 13.9454 41.9538 14.7107C42.0123 14.9209 42.0271 15.1697 42.0271 15.4495C42.0236 15.5432 42.0201 15.6368 42.0166 15.7305Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M44.7028 10.6525C44.7843 10.6511 44.8481 10.6599 44.9123 10.6733L44.9228 10.7045C44.9674 10.7736 44.9332 10.9728 44.9332 11.0895V15.5638C44.9332 15.9331 44.8766 16.7452 45.017 16.9581C45.1422 17.1478 45.3036 17.046 45.5092 17.1246C45.5675 17.2256 45.559 17.7188 45.5302 17.8633C45.5116 17.8733 45.5126 17.8765 45.4883 17.8842C45.4431 17.9124 45.1104 17.9057 45.0589 17.8946C44.9329 17.8674 44.8148 17.9059 44.7028 17.8738C44.4411 17.7986 44.2288 17.6593 44.1268 17.4263C44.0131 17.1665 44.0221 16.7906 44.0221 16.417V11.2456C44.0221 11.0609 44.0087 10.8354 44.0431 10.6837C44.1525 10.6376 44.3686 10.6629 44.5143 10.6629C44.5698 10.6629 44.6661 10.6752 44.7028 10.6525Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M24.9949 10.6633C25.1932 10.6617 25.7182 10.6252 25.8536 10.6841C25.873 10.8552 25.8641 11.0682 25.8641 11.2564V16.407C25.8641 16.6235 25.8473 16.8448 25.9374 16.9689C26.066 17.1459 26.2299 17.0485 26.4296 17.1249C26.4745 17.2258 26.465 17.7525 26.4401 17.8741L26.4087 17.8845C26.3543 17.9185 26.069 17.8949 25.9793 17.8949C25.4585 17.8949 25.1457 17.7262 25.0054 17.3539C24.9725 17.2666 24.9624 17.1725 24.9425 17.0833V16.844C24.9096 16.691 24.9321 16.4748 24.9321 16.3029V15.2416C24.9321 13.7336 24.9033 12.1952 24.9425 10.7049C24.961 10.6936 24.9804 10.6787 24.9949 10.6633Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M27.7448 10.7152C28.0877 10.71 28.3005 10.8769 28.3837 11.1314L28.3942 11.2771C28.4015 11.3169 28.4028 11.4298 28.3837 11.4852C28.303 11.7178 28.1406 11.832 27.881 11.891C27.3963 12.0012 27.0527 11.4616 27.2317 11.0482C27.2758 10.9463 27.3919 10.8223 27.4935 10.7776C27.5684 10.7448 27.6763 10.758 27.7448 10.7152Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M36.1074 10.7151C36.5667 10.7142 36.9067 11.1013 36.7043 11.5683C36.6274 11.746 36.4556 11.8439 36.2435 11.8909C35.7859 11.9923 35.3896 11.5013 35.5733 11.0689C35.624 10.9496 35.7479 10.8179 35.8665 10.7671C35.9384 10.7363 36.0434 10.7548 36.1074 10.7151Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M19.3908 10.9546H23.2552C23.4106 10.9546 23.5996 10.939 23.737 10.965C23.8028 11.0789 23.7867 11.6345 23.7579 11.7662L23.7265 11.7766C23.6592 11.8228 23.5229 11.7874 23.4332 11.787L22.7839 11.7974C22.2665 11.7973 21.72 11.7973 21.2026 11.7974C20.9289 11.7974 20.597 11.7602 20.3438 11.8078C20.3325 11.8261 20.3174 11.8455 20.3019 11.8599V13.1813C20.3019 13.4132 20.2782 13.7022 20.3229 13.8993C20.4903 13.9734 20.8329 13.9305 21.056 13.9305H23.2762C23.371 13.9305 23.4656 13.918 23.5066 13.9721C23.5382 14.0132 23.5275 14.1086 23.5275 14.1802C23.5275 14.3529 23.5295 14.5442 23.517 14.7005C23.4986 14.7117 23.4791 14.7267 23.4647 14.7421H21.3911C21.0679 14.7421 20.6253 14.7001 20.3438 14.7629C20.2682 14.8942 20.3019 15.1888 20.3019 15.3872V16.459C20.3019 16.645 20.2848 16.8791 20.3229 17.0313C20.4808 17.1032 20.8873 17.0625 21.1083 17.0625H23.517C23.6139 17.0625 23.716 17.0488 23.7579 17.1041C23.7895 17.1452 23.7788 17.2406 23.7788 17.3122C23.7788 17.4926 23.777 17.689 23.7684 17.8533C23.6839 17.9068 23.5245 17.8949 23.3809 17.8949H19.3803C19.3697 17.8866 19.3775 17.8913 19.3594 17.8845C19.2971 17.7505 19.328 17.4775 19.328 17.2914V11.5581C19.328 11.3671 19.3133 11.1331 19.3489 10.9754C19.3724 10.9693 19.3768 10.9676 19.3908 10.9546Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M34.0997 12.8585H33.5132C33.4988 12.8739 33.4793 12.8889 33.4609 12.9002C33.4565 13.0376 33.4575 13.2122 33.4504 13.3476C33.4468 13.4161 33.4701 13.5388 33.4399 13.5869V13.6077C33.3212 13.6028 33.3208 13.5239 33.2724 13.4516C33.1993 13.3429 33.0841 13.2171 32.9791 13.1395C32.6298 12.881 32.1907 12.6695 31.5758 12.6817C31.5231 12.7141 31.4157 12.6763 31.3454 12.6921C31.1774 12.7297 30.9943 12.7461 30.8427 12.8065C30.1736 13.0735 29.6982 13.5721 29.4813 14.2841C29.4244 14.4706 29.4098 14.6684 29.3661 14.8668V15.0124C29.3153 15.2461 29.3607 15.6508 29.4079 15.8449C29.4555 16.0401 29.4704 16.1943 29.5336 16.3651C29.7522 16.9554 30.1683 17.3999 30.738 17.645C31.1908 17.8398 31.9295 17.8923 32.4241 17.6866C32.8249 17.5199 33.052 17.2985 33.3247 17.0103C33.3519 17.0123 33.3603 17.0148 33.3771 17.0207C33.435 17.1671 33.398 17.5156 33.398 17.7074C33.398 18.5465 33.0704 18.9528 32.4345 19.1537C32.3054 19.1746 32.1762 19.1954 32.0471 19.2162C31.9808 19.2127 31.9144 19.2092 31.8481 19.2058C31.7623 19.2237 31.568 19.1992 31.4711 19.1746C31.1123 19.0832 30.7979 18.9187 30.6123 18.6543C30.5243 18.5289 30.4847 18.3562 30.4028 18.2277C30.2271 18.2067 29.6791 18.178 29.5546 18.2485C29.4997 18.5382 29.796 18.9862 29.9211 19.1537C30.2026 19.5305 30.6268 19.7857 31.1464 19.9237C31.2731 19.9574 31.4007 19.9593 31.5234 19.9862H31.7852C31.9104 20.013 32.2562 20.0041 32.3822 19.9758C32.5594 19.9359 32.7409 19.9152 32.9058 19.8613C33.4975 19.668 33.9298 19.2581 34.1625 18.7063C34.2143 18.5836 34.2439 18.4437 34.2777 18.3109C34.2969 18.2356 34.2717 18.1229 34.3091 18.0612V12.9002C34.2838 12.8466 34.1795 12.8585 34.0997 12.8585ZM33.4085 15.5639C33.3672 15.7514 33.3428 15.9425 33.2724 16.105C33.1228 16.4498 32.8359 16.7594 32.4869 16.9062C32.3336 16.9707 32.1766 16.9916 31.9947 17.0311H31.8376C31.5664 17.0311 31.3896 16.9731 31.2092 16.8958C30.8257 16.7313 30.5702 16.4295 30.4133 16.0426C30.3512 15.8893 30.3366 15.7039 30.2981 15.5327V15.0645C30.2989 14.9133 30.3186 14.7479 30.361 14.617C30.5126 14.1478 30.7967 13.7748 31.2302 13.5869C31.3217 13.5473 31.4357 13.5174 31.5339 13.4933C31.5885 13.4798 31.65 13.4973 31.691 13.4725C32.5584 13.4706 33.0392 13.8407 33.2933 14.4401C33.3433 14.558 33.3423 14.6663 33.3771 14.8043C33.4206 14.9772 33.4543 15.3557 33.4085 15.5639Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M50.9929 15.2932C50.9929 14.9198 50.9568 14.6191 50.8672 14.3463C50.5488 13.378 49.8284 12.6574 48.5213 12.6815C48.469 12.714 48.3611 12.6766 48.2909 12.6919C48.1665 12.7191 48.0278 12.7248 47.9034 12.7647C47.5243 12.8865 47.233 13.0631 46.9504 13.2746C46.8475 13.3517 46.756 13.4731 46.6781 13.5764C46.6428 13.6231 46.5865 13.6631 46.5525 13.7116C46.3962 13.934 46.2729 14.2059 46.1859 14.492C46.1615 14.6203 46.137 14.7487 46.1126 14.877V15.0019C46.0879 15.1136 46.0614 15.5081 46.0917 15.647C46.1276 15.812 46.1218 15.9909 46.165 16.1465C46.3439 16.7923 46.6533 17.2956 47.1389 17.6344C47.4456 17.8483 47.7955 17.952 48.2281 18.0506C48.4056 18.0911 48.8198 18.0778 48.9821 18.0402C49.0975 18.0136 49.1954 18.0213 49.3068 17.9882C49.7611 17.8533 50.1827 17.6367 50.4378 17.3014C50.4792 17.247 50.5442 17.2022 50.5844 17.1454C50.6883 16.9985 50.7514 16.8461 50.8253 16.6667C50.8583 16.5868 50.9242 16.4703 50.8881 16.3858C50.7004 16.3487 50.446 16.3754 50.2388 16.3754C50.1746 16.3754 50.0522 16.3583 50.0084 16.3858C49.943 16.4099 49.8135 16.7254 49.7571 16.802C49.5877 17.0318 49.3096 17.1662 48.9926 17.2494C48.8269 17.2929 48.5647 17.298 48.3956 17.2598C48.3106 17.2407 48.2422 17.2531 48.1652 17.2286C47.7108 17.0844 47.4189 16.811 47.2122 16.417C47.1428 16.2846 47.0569 16.0963 47.0447 15.9175C47.0392 15.8385 47.0052 15.7401 47.0447 15.6886C47.0901 15.6349 47.2078 15.647 47.3065 15.647H50.7206C50.7854 15.647 50.9065 15.6638 50.951 15.6366C50.9614 15.6332 50.9719 15.6296 50.9824 15.6262C51.0002 15.5338 50.9929 15.4024 50.9929 15.2932ZM50.0398 14.929C50.0321 14.9532 50.029 14.9522 50.0189 14.9707C49.8455 15.0045 49.6065 14.9915 49.401 14.9915C49.2831 14.9915 49.1347 15.0023 49.0345 14.9811H48.6889C48.4133 14.9811 48.1331 14.9914 47.872 14.9915C47.6409 14.9916 47.196 15.0345 47.0447 14.9499C47.0076 14.7589 47.092 14.5648 47.1494 14.4296C47.3055 14.0618 47.5508 13.7651 47.9139 13.6076C48.0236 13.56 48.1491 13.5247 48.27 13.4931C48.3226 13.4793 48.3961 13.4974 48.4375 13.4723C49.2091 13.4657 49.6597 13.7702 49.8932 14.2943C49.9257 14.3672 49.9739 14.4615 49.998 14.544C50.0084 14.6134 50.0189 14.6827 50.0294 14.7522C50.0407 14.7924 50.0691 14.8828 50.0398 14.929Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M27.3829 12.8582C27.6471 12.8571 28.0016 12.8225 28.2417 12.8686L28.2522 12.8998C28.2865 12.955 28.2626 13.1135 28.2626 13.1912V17.5302C28.2626 17.6125 28.2888 17.7836 28.2522 17.8424C28.2379 17.8881 28.2195 17.8952 28.1579 17.8944C28.1294 17.9093 28.0109 17.8944 27.9485 17.8944C27.7609 17.8944 27.5306 17.9173 27.362 17.884L27.3515 17.8528C27.3067 17.7934 27.3306 17.6162 27.3306 17.5198V13.2536C27.3306 13.131 27.3161 12.969 27.3515 12.879C27.3647 12.8723 27.3732 12.8677 27.3829 12.8582Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M35.7389 12.8584C36.0017 12.8572 36.3239 12.8223 36.5662 12.8688C36.5762 12.8873 36.5794 12.8863 36.5871 12.9105C36.6283 12.9767 36.5976 13.1729 36.5976 13.2642V17.4472C36.5976 17.5821 36.6098 17.7458 36.5871 17.8634C36.5686 17.8734 36.5695 17.8765 36.5452 17.8842C36.5092 17.9073 36.4116 17.8946 36.3567 17.8946H35.8959C35.8195 17.8946 35.7422 17.9051 35.7074 17.8634C35.6615 17.8024 35.6865 17.6184 35.6865 17.52V13.3163C35.6865 13.1781 35.6737 13.0104 35.697 12.8897C35.7123 12.8808 35.727 12.8708 35.7389 12.8584Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var ik = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 53, viewBox: "0 0 121 53", width: 121, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("rect", { height: 50.0224, rx: 3, width: 119, x: 1, y: 1 }), (0, l.jsx)("rect", { height: 50.0224, rx: 3, stroke: "currentColor", strokeWidth: 2, width: 119, x: 1, y: 1 }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M33.2348 10C33.4002 10.0315 33.5002 10.1264 33.6204 10.1999C33.8535 10.3425 34.0976 10.4619 34.3244 10.5996C34.4339 10.6662 34.5977 10.6882 34.643 10.8162C34.6577 10.8376 34.6579 10.8573 34.6597 10.8994C34.568 11.0012 34.5325 11.1459 34.4586 11.2659C34.2555 11.5945 34.079 11.9463 33.8718 12.2819C33.452 12.9618 33.0663 13.685 32.648 14.3639C32.4484 14.6881 32.3109 15.0237 32.1116 15.3467C31.7077 16.0011 31.3639 16.6991 30.9549 17.3621C29.2957 20.0505 27.8518 22.9008 26.1939 25.5903C26.0348 25.8483 25.9332 26.1151 25.7748 26.3731C25.1359 27.4131 24.5564 28.5154 23.914 29.5544C23.7094 29.8852 23.5448 30.2317 23.344 30.5538C23.2749 30.6647 23.2157 30.9031 23.0925 30.9536C23.0727 30.9669 23.0644 30.9664 23.0255 30.9702C22.7051 30.6264 22.3554 30.2971 22.0699 29.9209C21.8615 29.6462 21.5645 29.4214 21.3491 29.138L21.1311 28.9382C20.8505 28.5694 20.4899 28.2747 20.2091 27.9055L19.8235 27.5224C19.5112 27.1108 19.1136 26.7853 18.8009 26.3731L18.5495 26.1399C18.2876 25.7956 17.9567 25.519 17.6945 25.1738C17.5751 25.0168 17.299 24.8954 17.2754 24.6575L17.7951 24.1412C18.0175 23.9751 18.2397 23.7884 18.4321 23.5915H18.5327C19.9198 25.0716 21.2805 26.58 22.6734 28.0554H22.7908C23.3314 27.1814 23.828 26.2507 24.3666 25.3737C24.5015 25.154 24.5832 24.9277 24.7186 24.7075C26.0153 22.5993 27.159 20.369 28.457 18.2615C28.5626 18.0899 28.6203 17.9159 28.7252 17.7452C29.1601 17.0381 29.5645 16.2859 29.9993 15.5798C30.1753 15.2942 30.2937 14.9994 30.4687 14.7137C31.0736 13.7267 31.6222 12.6837 32.2289 11.6989C32.4496 11.3408 32.6338 10.9674 32.8492 10.6163C32.9821 10.3996 33.0658 10.1762 33.2348 10Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M78.3155 11.549H79.2543C79.3606 11.549 79.5477 11.5217 79.6231 11.5657C79.6691 11.5923 79.6712 11.6411 79.6734 11.7156C79.5182 11.9233 79.4474 12.3975 79.3381 12.665C79.1254 13.1858 78.9697 13.7666 78.7514 14.2807C78.6792 14.4509 78.6721 14.6238 78.6005 14.797C78.4206 15.2322 78.2781 15.7279 78.0976 16.1628L77.9635 16.6292C77.7762 17.0806 77.6306 17.5919 77.4438 18.045L77.3935 18.2615C76.9129 19.4366 76.5464 20.7036 76.1027 21.8926C75.8194 22.6518 75.6167 23.4269 75.3148 24.1578C75.2226 24.3812 75.1647 24.6192 75.0801 24.8241C75.0484 24.9007 75.0566 25.0273 74.9962 25.0739C74.9141 25.1375 74.6809 25.1072 74.5436 25.1072C74.1443 25.1072 73.6529 25.1634 73.2863 25.0906C73.2732 25.0533 73.2692 25.0001 73.2696 24.9407C73.4003 24.7426 73.4105 24.4703 73.5042 24.2411C73.7861 23.551 73.9725 22.8233 74.2419 22.1091C74.7253 20.8269 75.1538 19.4822 75.6333 18.1949C75.7925 17.7673 75.9023 17.3496 76.0691 16.9457C76.0971 16.8402 76.125 16.7346 76.153 16.6292C76.3734 16.0952 76.5392 15.4987 76.7565 14.9636C76.8539 14.7237 76.8832 14.5067 76.9744 14.264C77.1875 13.697 77.4002 13.0832 77.6114 12.5151C77.6867 12.3126 77.7491 12.1183 77.8126 11.9321C77.8554 11.807 77.8597 11.6272 77.9803 11.5823C78.0559 11.5369 78.2406 11.5953 78.3155 11.549Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M23.2627 12.4984C24.985 12.4654 26.6138 12.7869 27.8392 13.2813C27.9755 13.3362 28.0912 13.3417 28.2248 13.3979C28.3353 13.4442 28.4657 13.5173 28.5769 13.5644C28.7318 13.6302 28.9106 13.6242 28.9121 13.8476C28.8298 13.9368 28.7941 14.0578 28.7277 14.164C28.5915 14.3819 28.4448 14.6124 28.3086 14.8303C28.2211 14.9704 28.2211 15.1619 27.9901 15.1634C27.8929 15.091 27.7579 15.0808 27.6381 15.0302C27.1849 14.8386 26.7244 14.7059 26.1964 14.5638C25.76 14.4464 25.2651 14.3904 24.7882 14.2806C24.5414 14.2238 24.2878 14.2855 24.0338 14.2307C23.6254 14.1426 22.7016 14.1762 22.3239 14.264L21.7874 14.2973C21.5455 14.3561 21.2446 14.4039 21.0163 14.4639L20.7983 14.4805C19.8523 14.7555 18.9719 15.0363 18.1831 15.4466C17.4655 15.8198 16.8291 16.2204 16.205 16.6791C16.008 16.8239 15.8456 17.0331 15.6518 17.1788C15.4251 17.3492 15.203 17.5529 15.0315 17.7784L14.7633 18.0283C14.579 18.27 14.3556 18.4862 14.1765 18.7279C13.7982 19.2387 13.4761 19.7912 13.1372 20.3435C13.0429 20.4969 12.9938 20.6578 12.9192 20.8265C12.7675 21.1697 12.6002 21.5459 12.4498 21.9092C12.2163 22.4733 12.1186 23.1314 11.9637 23.758C11.8976 24.0255 11.9407 24.2509 11.8799 24.5242C11.8344 24.7284 11.8784 24.9828 11.8296 25.2071C11.7885 25.3963 11.8128 25.6717 11.8128 25.89C11.8128 26.4085 11.8442 26.9395 11.9469 27.3724V27.5557C11.9719 27.6598 12.0037 27.7895 12.0307 27.8888C12.1612 28.3667 12.1881 28.824 12.366 29.2546C12.5769 29.7649 12.7685 30.2793 12.9863 30.7703C13.0513 30.9171 13.1553 31.0691 13.2377 31.2034C13.3685 31.4164 13.4577 31.6283 13.5898 31.8363C13.8163 32.1933 14.0773 32.5306 14.3274 32.869C14.4476 33.0317 14.6255 33.1598 14.7465 33.3187C14.9936 33.6434 15.2915 33.9563 15.6182 34.2015C15.7839 34.3258 15.9208 34.5101 16.0876 34.6346C17.2405 35.4945 18.3536 36.1235 19.8428 36.6666C20.3065 36.8357 20.8319 36.9058 21.318 37.0331C21.5422 37.0917 21.7856 37.0837 21.9886 37.133L22.5921 37.1663C22.866 37.2259 23.2407 37.1996 23.5644 37.1996H24.017C24.4452 37.102 24.9183 37.1545 25.3414 37.0497C25.9437 36.9005 26.5472 36.7651 27.0849 36.5834C30.2566 35.5112 32.7173 33.2205 34.0084 30.2873C34.2792 29.6723 34.4674 29.0071 34.6622 28.3219C34.7509 28.0095 34.7717 27.6811 34.8466 27.3724L34.8634 27.0726C34.9464 26.7044 34.947 26.272 34.9472 25.8234C34.9472 25.5701 34.9811 25.2469 34.9304 25.0239L34.9137 24.6408C34.8315 24.2864 34.8548 23.9089 34.7628 23.5582C34.5152 22.6141 34.3125 21.6024 33.8575 20.8599L33.7067 20.5101C33.4254 20.0497 33.191 19.5767 32.8852 19.1443C32.7645 18.9735 32.5263 18.8091 32.5164 18.5446C32.6299 18.4195 32.6772 18.2428 32.7679 18.0949C32.879 17.9137 33.009 17.7243 33.1199 17.5453C33.2083 17.4025 33.2499 17.1345 33.472 17.1289C33.6326 17.3797 33.8854 17.5849 34.0587 17.8284C34.3769 18.2755 34.674 18.7402 34.964 19.2109C35.0729 19.3876 35.135 19.5748 35.2322 19.7605C35.6396 20.5392 35.9385 21.4002 36.238 22.3089C36.3693 22.7074 36.3978 23.1542 36.5063 23.5582C36.6069 23.9324 36.5537 24.3558 36.6404 24.7408V25.1905C36.6974 25.4521 36.6992 25.911 36.6404 26.1732C36.5866 26.4134 36.6533 26.6995 36.6069 26.9061V27.0893C36.5217 27.4547 36.5326 27.8548 36.4392 28.2219C36.2033 29.1487 35.9807 29.9948 35.6345 30.787C34.6128 33.1255 33.1696 34.9834 31.1921 36.3668C30.485 36.8615 29.7326 37.3692 28.8954 37.7326C28.3849 37.9542 27.8476 38.1524 27.3028 38.3323C27.1352 38.3876 26.9933 38.3924 26.8166 38.4489C26.3129 38.6098 25.7312 38.6695 25.1738 38.7986C24.9587 38.8484 24.7429 38.8228 24.5535 38.8653H24.2853C24.0761 38.9109 23.4613 38.9459 23.2459 38.8986H22.81C22.5618 38.8986 22.3185 38.8796 22.1059 38.8319H21.9048L20.966 38.6987C20.5673 38.5959 20.1316 38.5435 19.7422 38.4155C19.0552 38.19 18.3939 37.9583 17.764 37.6827C16.9046 37.3064 16.1337 36.7731 15.4171 36.2502C13.8577 35.1124 12.7534 33.7406 11.729 32.0695C11.394 31.523 11.1303 30.8181 10.874 30.204C10.8214 30.0778 10.817 29.9652 10.7734 29.8376C10.6241 29.4 10.4941 28.9138 10.3711 28.4384C10.3045 28.1814 10.3211 27.9542 10.2537 27.6889C10.235 27.615 10.2048 27.4964 10.1867 27.4224L10.1532 27.0726C10.133 27.0148 10.0583 26.9615 10.0358 26.9061C9.96658 26.735 10.019 26.412 10.019 26.2065V24.5909C10.0397 24.5311 10.1133 24.4524 10.1364 24.391L10.1532 24.2078C10.2086 23.9832 10.2105 23.7514 10.2705 23.5082C10.4127 22.9322 10.4923 22.3471 10.6728 21.8093C11.109 20.5102 11.6628 19.3045 12.3828 18.2781C12.6044 17.9622 12.8753 17.6668 13.1036 17.362C13.3823 16.9899 13.6996 16.6698 14.0257 16.346L14.3442 16.0129C14.6255 15.8013 14.8664 15.5365 15.1489 15.33C15.5949 15.0038 16.0501 14.6777 16.5235 14.3806C17.4539 13.7968 18.527 13.4183 19.6416 13.0148L20.044 12.9315C20.4445 12.8106 20.9026 12.7523 21.3348 12.6483C21.547 12.5974 21.7782 12.609 21.9718 12.565C22.2623 12.5484 22.553 12.5317 22.8436 12.5151C22.9576 12.5151 23.1834 12.5477 23.2627 12.4984Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M55.9846 12.5149C57.2449 12.4922 58.2404 12.7407 59.0022 13.2144C59.1847 13.3278 59.322 13.5059 59.4883 13.6308C59.5683 13.6909 59.6635 13.7521 59.723 13.8307C59.8702 14.0254 59.9756 14.2126 60.1086 14.4303C60.3294 14.7916 60.5424 15.2661 60.5444 15.8294C60.4955 15.8601 60.4958 15.8751 60.4103 15.8794C60.3047 15.9405 60.0072 15.8434 59.8404 15.8794C59.6965 15.9104 59.4596 15.8653 59.3207 15.8794C58.9071 15.9217 58.281 15.942 57.8957 15.8628C57.8055 15.7015 57.7593 15.5003 57.661 15.3464C57.4315 14.9865 57.0518 14.8122 56.5714 14.6968C56.1789 14.6025 55.4978 14.7256 55.2638 14.8634C55.0998 14.96 54.9675 15.1064 54.8614 15.2631C54.7203 15.4717 54.6767 15.8879 54.8111 16.1459C55.1649 16.8245 56.3759 16.8078 57.2084 17.0287C57.5993 17.1325 58.0471 17.1859 58.4322 17.3119C59.3904 17.6253 60.1753 18.1288 60.5612 19.0108C60.6978 19.3229 60.7307 19.687 60.8127 20.0601V20.3433C60.8569 20.5605 60.8013 21.0412 60.7456 21.2594C60.6078 21.7997 60.3647 22.2086 60.0751 22.5919C59.9252 22.7901 59.6932 22.9457 59.4883 23.0916C58.9938 23.4438 58.4084 23.6604 57.7113 23.8244C57.4946 23.8754 57.2907 23.8648 57.0911 23.9077H56.8228C56.5383 23.9672 56.0468 23.9482 55.7835 23.8911C55.5068 23.8311 55.2577 23.8742 54.9955 23.8078C53.9483 23.5426 53.1062 23.154 52.548 22.4087C52.3517 22.1467 52.148 21.8655 52.0115 21.5425C51.941 21.3755 51.9178 21.2159 51.8607 21.0428C51.8013 20.8631 51.6915 20.5387 51.7601 20.3599C51.9292 20.2862 52.2704 20.3266 52.4977 20.3266H53.8724C54.0873 20.3266 54.3823 20.2971 54.5429 20.3599C54.6229 20.5014 54.6469 20.6884 54.7273 20.843C54.967 21.3035 55.4079 21.5797 55.9679 21.7258C56.1229 21.7662 56.2849 21.7591 56.4708 21.7591C57.2671 21.7591 57.7358 21.4971 57.946 20.9096C58.0225 20.6959 57.9965 20.3891 57.9125 20.1934C57.7499 19.8146 57.2619 19.6519 56.8396 19.5271L56.3199 19.4438C55.1628 19.1369 54.0155 19.0771 53.1515 18.4778C52.6283 18.1148 52.2275 17.6142 52.0115 16.9454C51.9522 16.7614 51.9723 16.6005 51.9277 16.3958C51.8773 16.1642 51.8709 15.7258 51.9277 15.4797C51.9815 15.2461 52.0154 15.0126 52.0954 14.7968C52.3777 14.0347 52.9498 13.5096 53.6041 13.1145C53.9788 12.8883 54.4601 12.7514 54.9285 12.6314C55.1675 12.5701 55.4004 12.582 55.6326 12.5315C55.7405 12.508 55.9047 12.5647 55.9846 12.5149Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M93.6052 12.5152C95.6209 12.4789 96.9139 13.1063 97.6788 14.314C97.9244 14.7018 98.1776 15.2213 98.1817 15.8298C98.1573 15.8439 98.1336 15.8599 98.1147 15.8797C97.5447 15.8852 96.9747 15.8909 96.4048 15.8964C96.1137 15.8964 95.7729 15.9115 95.533 15.8631C95.4623 15.7385 95.4286 15.5589 95.3486 15.43C95.0968 15.0243 94.7352 14.8206 94.1919 14.6971C93.6154 14.5662 92.9829 14.7819 92.6664 15.0303C92.5856 15.0937 92.5381 15.2068 92.482 15.2968C92.3246 15.5491 92.338 16.002 92.4987 16.2462C92.8776 16.822 94.0709 16.8238 94.8457 17.029C95.1959 17.1218 95.5999 17.1649 95.9521 17.2789C96.8934 17.5835 97.6148 18.0046 98.0812 18.7779C98.2357 19.0343 98.3157 19.3772 98.3997 19.694C98.4052 19.7994 98.4109 19.905 98.4164 20.0105C98.4805 20.3098 98.4721 20.8498 98.3997 21.1431C98.2738 21.6533 98.0919 22.0719 97.8297 22.4423C97.3786 23.0797 96.6125 23.4611 95.7845 23.7248C95.5164 23.8103 95.2589 23.7878 94.963 23.8581C94.4688 23.9755 93.6308 23.9727 93.1358 23.8581C92.8241 23.7859 92.5477 23.8099 92.264 23.7248C91.2835 23.4303 90.5588 22.956 90.0344 22.2091C89.7809 21.8482 89.6274 21.4782 89.4812 20.9932C89.4276 20.8153 89.3553 20.5839 89.3974 20.3603C89.676 20.2911 90.1023 20.3269 90.4368 20.3269H91.5097C91.7353 20.3269 92.0055 20.3169 92.1802 20.3603C92.2738 20.563 92.3324 20.807 92.4484 20.9932C92.684 21.3711 93.1106 21.6033 93.6052 21.7261C93.7998 21.7744 94.1361 21.7889 94.3428 21.7427C94.4928 21.7092 94.6065 21.7314 94.7451 21.6928C95.1121 21.5905 95.3548 21.3861 95.5163 21.0765C95.5935 20.9282 95.6799 20.5888 95.6001 20.3436C95.3632 19.6159 94.631 19.6186 93.8566 19.4275C93.4972 19.3389 93.0706 19.2821 92.7167 19.1777L92.4317 19.1444C91.7655 18.9663 91.1657 18.7409 90.6714 18.3948C90.1779 18.0492 89.8363 17.5302 89.6321 16.8958C89.5799 16.734 89.6051 16.578 89.565 16.3961C89.5124 16.1572 89.5104 15.7053 89.565 15.4633C89.6192 15.2235 89.6438 14.9916 89.7327 14.7804C90.0644 13.9917 90.6248 13.4871 91.3252 13.0648C91.7306 12.8206 92.2483 12.7214 92.767 12.5984C92.938 12.558 93.1083 12.567 93.2699 12.5318C93.3735 12.5093 93.5289 12.5628 93.6052 12.5152Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M40.7469 12.7983H42.7419C42.9219 12.7983 43.3309 12.7435 43.3957 12.8649C43.4822 12.9802 43.4292 13.6846 43.4292 13.8976V15.9796C43.4292 16.2688 43.3734 16.7007 43.4627 16.929C43.6562 17.0373 44.257 16.979 44.5524 16.979H46.4467C46.7634 16.979 47.1495 17.017 47.4358 16.9623C47.5538 16.7073 47.4861 16.1735 47.4861 15.8297V13.8809C47.4861 13.54 47.4551 13.1181 47.5196 12.8316C47.6695 12.7658 47.9675 12.7983 48.1734 12.7983H49.5984C49.7757 12.7983 50.166 12.7463 50.2522 12.8482C50.3385 12.9627 50.2857 13.3344 50.2857 13.5145V22.9752C50.2857 23.109 50.3202 23.5087 50.2689 23.5915C50.2084 23.6891 49.8185 23.6415 49.6654 23.6415H48.0561C47.8908 23.6415 47.5786 23.6865 47.5196 23.5749C47.4712 23.5052 47.4861 23.3582 47.4861 23.2417V20.4268C47.4861 20.0909 47.5273 19.683 47.4693 19.3775C47.4398 19.3595 47.4086 19.3355 47.3855 19.3109H44.6865C44.3544 19.3109 43.7346 19.2451 43.4795 19.3442C43.3673 19.5446 43.4292 20.0214 43.4292 20.3102V23.3084C43.4292 23.3942 43.4486 23.5329 43.4124 23.5915C43.363 23.6716 43.1207 23.6415 42.9933 23.6415H41.7528C41.4519 23.6415 40.9089 23.698 40.6799 23.6082C40.6046 23.4355 40.6463 23.0893 40.6463 22.8587V13.4978C40.6463 13.3653 40.6113 12.9254 40.6631 12.8482C40.6792 12.8243 40.7253 12.8173 40.7469 12.7983Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M72.2288 23.1748C72.1338 22.945 72.0667 22.7073 71.9774 22.4919C71.6924 21.8047 71.4825 21.0847 71.2062 20.4099C71.045 20.0162 70.9678 19.6381 70.8039 19.244C70.2032 17.8 69.7571 16.2523 69.1443 14.8134C68.866 14.1603 68.7297 13.4416 68.4066 12.8313C68.1815 12.7437 67.7538 12.798 67.4678 12.798H65.4394C65.2198 13.0082 65.1799 13.3755 65.0538 13.6808C64.7866 14.3284 64.5898 15.0178 64.3162 15.6795C63.6183 17.3676 63.1026 19.164 62.3883 20.843C62.3184 21.0072 62.3055 21.1618 62.2375 21.326C62.0277 21.8325 61.8422 22.385 61.6339 22.8917C61.549 23.0986 61.534 23.3318 61.416 23.508C61.4202 23.5661 61.4219 23.5781 61.4495 23.6079C61.5493 23.6832 61.8584 23.6412 62.0195 23.6412H63.5283C63.6988 23.6412 64.0419 23.6887 64.1486 23.6079C64.286 23.5155 64.3045 23.225 64.3665 23.0583C64.5316 22.615 64.6545 21.9869 64.8862 21.6092C65.1673 21.5495 65.574 21.5758 65.9088 21.5758H67.7528C67.9679 21.5758 68.6189 21.5237 68.7419 21.6092C68.9087 21.6675 68.9144 21.9754 68.9766 22.1422C69.1536 22.6162 69.2795 23.145 69.4795 23.6079C69.6901 23.6557 70.0051 23.6412 70.2674 23.6412H71.5918C71.7648 23.6412 72.2335 23.6799 72.3294 23.6079C72.3407 23.6024 72.3517 23.5968 72.363 23.5913C72.3562 23.4135 72.2816 23.3023 72.2288 23.1748ZM67.5014 19.4605H66.2105C65.9844 19.4605 65.741 19.4777 65.607 19.3939C65.6109 19.2133 65.6811 19.1227 65.7244 18.9941C65.8268 18.69 65.9133 18.4087 66.0094 18.128C66.2761 17.3483 66.4613 16.5347 66.7805 15.7961H66.8643C67.0127 16.0458 67.0643 16.3599 67.1661 16.6623C67.343 17.1878 67.5242 17.7424 67.7193 18.2613C67.8239 18.5392 67.8799 18.8181 67.9875 19.0774C68.0175 19.15 68.0133 19.2208 68.0546 19.2773C68.0506 19.5395 67.75 19.4605 67.5014 19.4605Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M81.3849 12.7985H87.772C87.9916 12.7985 88.2945 12.7678 88.4593 12.8318C88.5252 12.9812 88.4929 13.2765 88.4929 13.4814C88.4929 13.9326 88.5552 14.5919 88.4761 14.9971C88.2414 15.1042 87.7578 15.0471 87.4367 15.0471H85.1401C84.8269 15.0471 84.3506 14.9836 84.1007 15.0804C84.0308 15.2008 84.0504 15.4368 84.0504 15.63V16.796C84.0504 16.9749 84.0033 17.2742 84.1342 17.329C84.2378 17.4053 84.7696 17.3623 84.9557 17.3623H87.202C87.4252 17.3623 88.0711 17.3123 88.1576 17.4289C88.228 17.5207 88.1911 17.795 88.1911 17.9453V18.9779C88.1911 19.1523 88.2072 19.37 88.1576 19.4943C87.8993 19.6076 87.3799 19.5443 87.0344 19.5443H85.1065C84.7895 19.5443 84.4043 19.5069 84.1174 19.5609C84.0993 19.5902 84.0752 19.6212 84.0504 19.6442V22.6423C84.0504 22.8457 84.0958 23.5489 83.9833 23.6084C83.8834 23.6835 83.5745 23.6417 83.4134 23.6417H81.9046C81.7522 23.6417 81.3608 23.6893 81.3011 23.5917C81.2417 23.4946 81.2843 22.9983 81.2843 22.8422V13.7479C81.2843 13.4501 81.257 13.0756 81.3178 12.8318C81.3554 12.822 81.3624 12.8193 81.3849 12.7985Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M109.902 23.2916C109.782 22.9405 109.656 22.6192 109.533 22.2922C109.244 21.5215 109.004 20.753 108.695 20.0103C108.54 19.6369 108.465 19.2683 108.309 18.8944C107.764 17.5825 107.348 16.1769 106.801 14.8635C106.521 14.1931 106.375 13.4101 106.013 12.8148C105.721 12.7595 105.329 12.7982 105.007 12.7982H103.096C103.083 12.8097 103.058 12.8202 103.046 12.8315C102.92 12.8781 102.829 13.2989 102.777 13.4478C102.683 13.7184 102.552 14.0154 102.442 14.2806C102.325 14.5627 102.273 14.8356 102.157 15.1134C101.46 16.7888 100.933 18.5684 100.246 20.2435C100.08 20.6493 99.9972 21.0433 99.8268 21.4428C99.6081 21.9556 99.4456 22.4969 99.2401 23.0251C99.2062 23.1119 99.0277 23.505 99.0557 23.5581V23.6081C99.2488 23.6564 99.5482 23.6414 99.7933 23.6414H101.084C101.271 23.6414 101.669 23.6977 101.788 23.6081C101.936 23.5051 101.939 23.1905 102.006 23.0084C102.173 22.5596 102.302 21.9831 102.543 21.5927C103.448 21.528 104.441 21.576 105.376 21.576C105.585 21.576 106.269 21.5252 106.382 21.6093C106.527 21.6601 106.582 22.0444 106.633 22.2089C106.775 22.663 106.93 23.1773 107.119 23.6081C107.393 23.6694 107.797 23.6414 108.125 23.6414H109.936C109.955 23.6216 109.978 23.6056 110.003 23.5914C109.994 23.4533 109.936 23.3914 109.902 23.2916ZM105.661 19.394C105.602 19.5056 105.29 19.4607 105.124 19.4607H103.8C103.652 19.4607 103.387 19.4956 103.297 19.4274H103.263C103.21 19.1399 103.457 18.6577 103.548 18.4113C103.773 17.8099 103.932 17.1806 104.152 16.5958C104.255 16.3211 104.298 16.0241 104.437 15.7963C104.471 15.803 104.469 15.8005 104.487 15.8129C104.605 15.8607 104.699 16.3798 104.755 16.5292C105.005 17.1937 105.21 17.9283 105.46 18.5945C105.531 18.7854 105.576 18.9776 105.644 19.1609C105.666 19.221 105.7 19.3336 105.661 19.394Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M78.7384 33.8683C78.7329 33.7683 78.7272 33.6684 78.7217 33.5685C78.6617 33.3186 78.6174 33.048 78.5373 32.8023C78.2194 31.8274 77.5701 31.0067 76.6765 30.6037C76.4205 30.4882 76.1323 30.4273 75.8383 30.3538C75.5248 30.2755 74.9184 30.2805 74.6145 30.3538C74.4666 30.3895 74.3504 30.3765 74.2121 30.4204C73.4418 30.6655 72.8385 31.0774 72.4351 31.6863C72.3916 31.683 72.3782 31.679 72.3513 31.6697C72.2854 31.3365 72.3178 30.874 72.3178 30.4871V27.4889C72.3178 27.3895 72.3429 27.207 72.301 27.1392C72.2955 27.1225 72.2898 27.1058 72.2843 27.0892C72.2204 27.0747 72.1797 27.0577 72.0999 27.0559C71.9175 27.1676 71.1103 26.9776 70.9264 27.0892C70.9096 27.0947 70.8929 27.1004 70.8761 27.1058C70.8058 27.4723 70.8593 27.9566 70.8593 28.3551V38.5653C70.8841 38.5883 70.9083 38.6193 70.9264 38.6486H71.8819C71.9986 38.6486 72.1735 38.6731 72.2172 38.5987C72.2596 38.5264 72.234 38.351 72.234 38.2489C72.234 37.9687 72.2251 37.6528 72.2507 37.3994L72.2675 37.3828C72.3064 37.3866 72.3148 37.3861 72.3346 37.3994C72.4269 37.4445 72.4471 37.5497 72.5022 37.6326C72.6033 37.7847 72.7354 37.9266 72.8543 38.0657C73.0418 38.2852 73.6242 38.6043 73.9272 38.7153C74.1572 38.7995 74.4029 38.8427 74.648 38.8985H74.8156C75.3457 39.0134 76.0569 38.8573 76.4082 38.7153C76.5601 38.6538 76.7107 38.6293 76.8441 38.5487C77.9613 37.8746 78.405 37.0028 78.7384 35.5506C78.744 35.4285 78.7497 35.3062 78.7552 35.1841C78.8318 34.835 78.8144 34.2132 78.7384 33.8683ZM77.2632 35.1841C77.1909 35.5109 77.1643 35.8344 77.0453 36.1169C76.7824 36.7407 76.3031 37.2783 75.6538 37.516C75.4465 37.592 75.2307 37.6154 75.0001 37.6659C74.5722 37.7595 73.9458 37.5213 73.7092 37.3994C72.9637 37.0152 72.5885 36.3927 72.3513 35.5006C72.3022 35.316 72.3235 35.1133 72.2843 34.9343V34.5512C72.24 34.32 72.352 33.6551 72.4184 33.4352C72.6343 32.7205 73.1102 32.0714 73.7595 31.7863C73.9439 31.7251 74.1283 31.6642 74.3127 31.603C74.4001 31.5807 74.4985 31.6099 74.5642 31.5697C76.1469 31.5649 76.8215 32.3267 77.1626 33.5518C77.2563 33.8883 77.28 34.2865 77.28 34.7344C77.2744 34.8843 77.2687 35.0342 77.2632 35.1841Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M81.5625 27.0559C81.693 27.0537 81.7951 27.0677 81.8978 27.0892L81.9146 27.1392C81.986 27.2498 81.9313 27.5686 81.9313 27.7554V34.9176C81.9313 35.5088 81.8407 36.8088 82.0655 37.1496C82.2658 37.4532 82.5243 37.2903 82.8534 37.4161C82.9466 37.5778 82.933 38.3673 82.8869 38.5987C82.8572 38.6147 82.8587 38.6197 82.8198 38.632C82.7476 38.6771 82.215 38.6665 82.1325 38.6486C81.9308 38.6052 81.7417 38.6668 81.5625 38.6153C81.1436 38.4951 80.8038 38.272 80.6405 37.8991C80.4585 37.4832 80.4729 36.8814 80.4729 36.2834V28.0053C80.4729 27.7096 80.4514 27.3487 80.5064 27.1059C80.6816 27.0321 81.0276 27.0725 81.2608 27.0725C81.3496 27.0725 81.5037 27.0922 81.5625 27.0559Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M50.0192 27.0728C50.3367 27.0703 51.1771 27.0118 51.3939 27.1061C51.4249 27.3801 51.4106 27.7211 51.4106 28.0222V36.2671C51.4106 36.6137 51.3837 36.968 51.528 37.1665C51.7339 37.4498 51.9962 37.2939 52.3159 37.4163C52.3877 37.5777 52.3726 38.4209 52.3327 38.6156L52.2824 38.6322C52.1954 38.6867 51.7385 38.6489 51.595 38.6489C50.7614 38.6489 50.2606 38.3787 50.036 37.7828C49.9834 37.643 49.9673 37.4925 49.9354 37.3497V36.9666C49.8828 36.7218 49.9186 36.3757 49.9186 36.1005V34.4016C49.9186 31.9877 49.8725 29.5251 49.9354 27.1394C49.9649 27.1214 49.9961 27.0975 50.0192 27.0728Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M54.4238 27.156C54.9727 27.1476 55.3133 27.4148 55.4464 27.8222L55.4632 28.0554C55.4749 28.1192 55.4771 28.2999 55.4464 28.3885C55.3173 28.7608 55.0573 28.9437 54.6418 29.0381C53.8659 29.2145 53.3159 28.3507 53.6024 27.689C53.673 27.5259 53.8589 27.3273 54.0215 27.2559C54.1413 27.2033 54.314 27.2244 54.4238 27.156Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M67.8035 27.1558C68.5388 27.1543 69.083 27.774 68.7591 28.5216C68.6359 28.8061 68.3609 28.9626 68.0215 29.0379C67.2889 29.2003 66.6545 28.4143 66.9486 27.7221C67.0297 27.5312 67.228 27.3203 67.4179 27.239C67.5329 27.1897 67.7011 27.2194 67.8035 27.1558Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M41.0503 27.5392H47.2363C47.4851 27.5392 47.7875 27.5142 48.0074 27.5558C48.1129 27.7382 48.0871 28.6275 48.041 28.8384L47.9907 28.855C47.883 28.929 47.6648 28.8723 47.5213 28.8717L46.4819 28.8883C45.6536 28.8882 44.7788 28.8882 43.9505 28.8883C43.5125 28.8883 42.9812 28.8287 42.5759 28.905C42.5578 28.9343 42.5336 28.9653 42.5088 28.9883V31.1036C42.5088 31.4747 42.4708 31.9374 42.5423 32.2529C42.8104 32.3715 43.3588 32.3029 43.7158 32.3029H47.2698C47.4217 32.3029 47.5731 32.2829 47.6386 32.3695C47.6892 32.4353 47.6721 32.588 47.6721 32.7026C47.6721 32.9789 47.6753 33.2852 47.6554 33.5354C47.6259 33.5534 47.5947 33.5774 47.5716 33.602H44.2523C43.7349 33.602 43.0265 33.5348 42.5759 33.6354C42.4548 33.8456 42.5088 34.3171 42.5088 34.6347V36.3503C42.5088 36.6481 42.4813 37.0227 42.5423 37.2664C42.7951 37.3815 43.4459 37.3164 43.7997 37.3164H47.6554C47.8105 37.3164 47.9739 37.2944 48.041 37.383C48.0916 37.4488 48.0745 37.6015 48.0745 37.7161C48.0745 38.0048 48.0715 38.3193 48.0577 38.5823C47.9224 38.6679 47.6673 38.6489 47.4375 38.6489H41.0336C41.0165 38.6356 41.0291 38.6431 41.0001 38.6322C40.9003 38.4177 40.9498 37.9806 40.9498 37.6828V28.5052C40.9498 28.1994 40.9263 27.825 40.9833 27.5725C41.0208 27.5627 41.0279 27.56 41.0503 27.5392Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M64.5857 30.5872H63.6469C63.6238 30.6118 63.5926 30.6358 63.5631 30.6538C63.5561 30.8738 63.5577 31.1533 63.5463 31.37C63.5406 31.4796 63.5779 31.6762 63.5296 31.7531V31.7864C63.3395 31.7786 63.339 31.6522 63.2614 31.5366C63.1443 31.3625 62.9599 31.1612 62.792 31.0369C62.2327 30.6232 61.53 30.2845 60.5456 30.304C60.4613 30.356 60.2893 30.2955 60.1768 30.3207C59.9079 30.381 59.6148 30.4071 59.3721 30.5039C58.301 30.9313 57.5401 31.7295 57.1928 32.8691C57.1017 33.1677 57.0784 33.4844 57.0084 33.8018V34.035C56.9271 34.4091 56.9998 35.0569 57.0754 35.3675C57.1515 35.68 57.1753 35.9268 57.2766 36.2003C57.6265 37.1452 58.2925 37.8568 59.2045 38.2491C59.9293 38.5609 61.1119 38.645 61.9035 38.3157C62.545 38.0488 62.9086 37.6944 63.3452 37.233C63.3888 37.2364 63.4022 37.2404 63.429 37.2497C63.5217 37.484 63.4625 38.042 63.4625 38.349C63.4625 39.6922 62.9381 40.3426 61.9202 40.6642C61.7135 40.6975 61.5067 40.7308 61.3 40.7641C61.1938 40.7587 61.0876 40.753 60.9814 40.7475C60.8441 40.7761 60.5332 40.737 60.3779 40.6975C59.8036 40.5513 59.3003 40.2879 59.0033 39.8647C58.8625 39.664 58.7991 39.3875 58.668 39.1818C58.3867 39.1482 57.5094 39.1024 57.3101 39.2151C57.2223 39.6788 57.6965 40.396 57.8969 40.6642C58.3475 41.2673 59.0264 41.6757 59.8583 41.8968C60.0611 41.9507 60.2653 41.9537 60.4618 41.9967H60.8809C61.0812 42.0397 61.6347 42.0254 61.8364 41.9801C62.1201 41.9163 62.4106 41.8831 62.6746 41.7968C63.6218 41.4874 64.3138 40.8313 64.6863 39.948C64.7691 39.7516 64.8166 39.5276 64.8707 39.3151C64.9014 39.1945 64.861 39.0141 64.921 38.9153V30.6538C64.8804 30.568 64.7135 30.5872 64.5857 30.5872ZM63.4793 34.9178C63.4132 35.2179 63.3742 35.5238 63.2614 35.7839C63.022 36.3359 62.5626 36.8314 62.0041 37.0665C61.7586 37.1697 61.5073 37.2032 61.2161 37.2663H60.9647C60.5305 37.2663 60.2475 37.1736 59.9588 37.0498C59.3449 36.7865 58.9359 36.3034 58.6848 35.684C58.5854 35.4386 58.5619 35.1418 58.5004 34.8678V34.1183C58.5015 33.8763 58.5332 33.6116 58.6009 33.4021C58.8437 32.6509 59.2985 32.0539 59.9924 31.7531C60.1389 31.6897 60.3213 31.6419 60.4785 31.6032C60.5659 31.5817 60.6644 31.6097 60.73 31.5699C62.1186 31.5669 62.8882 32.1594 63.2949 33.1189C63.3748 33.3076 63.3733 33.4809 63.429 33.7019C63.4987 33.9786 63.5525 34.5845 63.4793 34.9178Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M91.6368 34.4844C91.6368 33.8866 91.5791 33.4052 91.4356 32.9687C90.926 31.4186 89.7728 30.265 87.6805 30.3037C87.5966 30.3556 87.424 30.2958 87.3117 30.3203C87.1125 30.3638 86.8905 30.373 86.6914 30.4369C86.0845 30.6318 85.6181 30.9145 85.1659 31.2531C85.0011 31.3765 84.8547 31.5709 84.73 31.7361C84.6735 31.8109 84.5833 31.875 84.5288 31.9526C84.2787 32.3086 84.0814 32.7438 83.9421 33.2019C83.903 33.4072 83.8638 33.6128 83.8247 33.8181V34.018C83.7852 34.1969 83.7428 34.8283 83.7912 35.0507C83.8487 35.3149 83.8395 35.6012 83.9085 35.8502C84.195 36.8841 84.6903 37.6897 85.4676 38.2321C85.9585 38.5745 86.5185 38.7404 87.2111 38.8983C87.4952 38.9631 88.1582 38.9418 88.4181 38.8816C88.6028 38.839 88.7596 38.8513 88.9378 38.7984C89.665 38.5825 90.3399 38.2357 90.7483 37.6991C90.8145 37.6119 90.9186 37.5402 90.983 37.4492C91.1493 37.2142 91.2502 36.9702 91.3686 36.683C91.4214 36.5551 91.5268 36.3686 91.4691 36.2333C91.1686 36.174 90.7614 36.2166 90.4298 36.2166C90.327 36.2166 90.131 36.1893 90.061 36.2333C89.9562 36.2719 89.749 36.777 89.6586 36.8996C89.3875 37.2675 88.9423 37.4825 88.4348 37.6158C88.1696 37.6854 87.7499 37.6936 87.4793 37.6324C87.3432 37.6018 87.2337 37.6216 87.1105 37.5825C86.3831 37.3516 85.9157 36.914 85.585 36.2833C85.4738 36.0714 85.3363 35.7699 85.3167 35.4838C85.308 35.3572 85.2535 35.1998 85.3167 35.1173C85.3895 35.0314 85.5779 35.0507 85.7358 35.0507H91.2009C91.3047 35.0507 91.4985 35.0775 91.5697 35.0341C91.5865 35.0286 91.6033 35.0229 91.62 35.0174C91.6485 34.8695 91.6368 34.6591 91.6368 34.4844ZM90.1113 33.9014C90.0988 33.9401 90.0938 33.9386 90.0777 33.9681C89.8001 34.0222 89.4176 34.0014 89.0886 34.0014C88.8999 34.0014 88.6623 34.0187 88.5019 33.9847H87.9487C87.5076 33.9847 87.059 34.0012 86.6411 34.0014C86.2711 34.0015 85.559 34.0703 85.3167 33.9347C85.2574 33.6291 85.3925 33.3183 85.4844 33.1019C85.7343 32.5131 86.1269 32.0383 86.7081 31.7861C86.8837 31.71 87.0847 31.6535 87.2781 31.6029C87.3624 31.5807 87.48 31.6097 87.5464 31.5696C88.7814 31.5591 89.5027 32.0464 89.8766 32.8854C89.9285 33.002 90.0056 33.1531 90.0442 33.2851C90.061 33.3962 90.0777 33.5072 90.0945 33.6183C90.1126 33.6827 90.158 33.8275 90.1113 33.9014Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M53.844 30.5868C54.2668 30.585 54.8342 30.5297 55.2186 30.6035L55.2354 30.6534C55.2904 30.7417 55.2522 30.9954 55.2522 31.1198V38.0655C55.2522 38.1972 55.2941 38.471 55.2354 38.5651C55.2126 38.6384 55.1831 38.6498 55.0845 38.6484C55.0389 38.6722 54.8492 38.6484 54.7493 38.6484C54.449 38.6484 54.0804 38.6851 53.8105 38.6318L53.7937 38.5818C53.7219 38.4867 53.7602 38.203 53.7602 38.0488V31.2197C53.7602 31.0234 53.737 30.7642 53.7937 30.6201C53.8148 30.6093 53.8284 30.602 53.844 30.5868Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M67.2138 30.5871C67.6346 30.5851 68.1503 30.5293 68.5382 30.6038C68.5543 30.6333 68.5593 30.6318 68.5717 30.6704C68.6376 30.7765 68.5885 31.0905 68.5885 31.2367V37.9325C68.5885 38.1486 68.6079 38.4106 68.5717 38.5988C68.5421 38.6148 68.5436 38.6198 68.5047 38.6321C68.447 38.6691 68.2908 38.6488 68.2029 38.6488H67.4653C67.3429 38.6488 67.2192 38.6656 67.1636 38.5988C67.09 38.5012 67.13 38.2067 67.13 38.0491V31.32C67.13 31.0988 67.1096 30.8303 67.1468 30.6371C67.1713 30.6229 67.1949 30.607 67.2138 30.5871Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var iM = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 18, viewBox: "0 0 17 18", width: 17, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M14.535 0.176392C14.636 0.1956 14.6969 0.253531 14.7703 0.29835C14.9126 0.385348 15.0615 0.458218 15.1999 0.542268C15.2667 0.582921 15.3666 0.596336 15.3943 0.67439C15.4033 0.687501 15.4034 0.699493 15.4045 0.725206C15.3485 0.787304 15.3269 0.875622 15.2817 0.948797C15.1579 1.14932 15.0502 1.36397 14.9237 1.56875C14.6676 1.98362 14.4322 2.42491 14.177 2.83916C14.0552 3.03694 13.9713 3.24172 13.8497 3.43879C13.6033 3.8381 13.3935 4.26404 13.1439 4.66854C12.1315 6.30899 11.2505 8.04812 10.2388 9.68918C10.1418 9.84661 10.0798 10.0094 9.98311 10.1669C9.59328 10.8014 9.23966 11.474 8.84769 12.108C8.72289 12.3099 8.62245 12.5213 8.4999 12.7178C8.45776 12.7855 8.42165 12.9309 8.34647 12.9617C8.3344 12.9699 8.32928 12.9696 8.30555 12.9719C8.11007 12.7621 7.8967 12.5612 7.7225 12.3316C7.59535 12.164 7.41409 12.0268 7.28265 11.8539L7.14967 11.732C6.97844 11.507 6.75841 11.3272 6.58708 11.1019L6.35181 10.8681C6.16124 10.617 5.91861 10.4184 5.72784 10.1669L5.5744 10.0246C5.41463 9.81449 5.2127 9.64568 5.05272 9.4351C4.97989 9.33926 4.81142 9.26517 4.797 9.12004L5.1141 8.80498C5.24984 8.70365 5.38537 8.58972 5.5028 8.46959H5.56417C6.41052 9.3727 7.24081 10.2931 8.09074 11.1933H8.16234C8.49223 10.6601 8.79521 10.0922 9.12387 9.55706C9.20622 9.423 9.25603 9.28488 9.33868 9.15053C10.1299 7.86417 10.8277 6.50331 11.6198 5.21736C11.6842 5.11267 11.7194 5.00647 11.7834 4.9023C12.0488 4.47087 12.2955 4.01189 12.5608 3.58107C12.6682 3.40678 12.7404 3.22689 12.8472 3.05259C13.2163 2.45031 13.5511 1.81389 13.9213 1.21304C14.0559 0.994532 14.1683 0.766672 14.2998 0.552431C14.3809 0.420208 14.4319 0.283919 14.535 0.176392Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M8.45168 1.70112C9.50261 1.681 10.4965 1.87715 11.2442 2.17879C11.3274 2.21233 11.3979 2.21569 11.4795 2.24994C11.5469 2.27819 11.6265 2.32281 11.6943 2.35157C11.7888 2.39171 11.8979 2.38806 11.8989 2.52434C11.8486 2.57882 11.8268 2.6526 11.7863 2.71745C11.7032 2.85038 11.6137 2.99104 11.5306 3.12398C11.4772 3.20945 11.4772 3.32633 11.3363 3.32724C11.2769 3.28303 11.1946 3.27683 11.1215 3.24593C10.845 3.12906 10.564 3.04806 10.2418 2.96136C9.9755 2.88971 9.67354 2.85556 9.38252 2.78859C9.23195 2.75393 9.07718 2.79154 8.92221 2.7581C8.67303 2.70434 8.10931 2.72487 7.87885 2.77843L7.55153 2.79875C7.40392 2.83463 7.22031 2.8638 7.08099 2.90038L6.94801 2.91055C6.37079 3.07834 5.83356 3.24969 5.35229 3.50001C4.91438 3.72777 4.52609 3.9722 4.14526 4.25209C4.02507 4.34041 3.92595 4.46806 3.8077 4.55699C3.66941 4.66096 3.53387 4.78526 3.42923 4.92287L3.26557 5.07532C3.15315 5.22278 3.0168 5.3547 2.90755 5.50217C2.67668 5.81388 2.48018 6.15099 2.27335 6.48801C2.21586 6.58161 2.18589 6.67979 2.14037 6.78274C2.0478 6.9921 1.94572 7.22169 1.85396 7.44335C1.71147 7.78758 1.65184 8.18913 1.55732 8.57147C1.51702 8.73469 1.54331 8.8722 1.50617 9.03898C1.47845 9.16358 1.50525 9.31877 1.47549 9.45567C1.45043 9.57112 1.46526 9.73912 1.46526 9.87236C1.46526 10.1887 1.48439 10.5127 1.54709 10.7769V10.8887C1.56233 10.9522 1.58177 11.0314 1.59824 11.0919C1.67782 11.3835 1.69429 11.6626 1.80282 11.9253C1.9315 12.2367 2.04841 12.5506 2.18129 12.8502C2.22098 12.9397 2.2844 13.0325 2.33472 13.1144C2.41451 13.2444 2.46893 13.3737 2.54953 13.5006C2.68773 13.7184 2.84699 13.9242 2.99961 14.1308C3.07295 14.2301 3.18148 14.3082 3.25534 14.4052C3.40611 14.6032 3.58788 14.7942 3.78725 14.9438C3.88831 15.0196 3.97188 15.1321 4.07366 15.2081C4.77711 15.7328 5.45631 16.1166 6.36496 16.448C6.64789 16.5511 6.96847 16.5939 7.26511 16.6716C7.40187 16.7073 7.5504 16.7025 7.67427 16.7325L8.04252 16.7529C8.20966 16.7893 8.43828 16.7732 8.6358 16.7732H8.91198C9.17323 16.7136 9.4619 16.7457 9.72008 16.6817C10.0876 16.5907 10.4559 16.508 10.7839 16.3972C12.7192 15.7429 14.2206 14.3452 15.0085 12.5555C15.1737 12.1802 15.2886 11.7743 15.4074 11.3562C15.4615 11.1656 15.4742 10.9652 15.5199 10.7769L15.5302 10.594C15.5808 10.3692 15.5812 10.1054 15.5813 9.83171C15.5813 9.67713 15.602 9.47996 15.5711 9.34387L15.5608 9.11012C15.5107 8.89385 15.5249 8.66355 15.4688 8.44951C15.3177 7.87346 15.194 7.25614 14.9164 6.80307L14.8244 6.58964C14.6527 6.30873 14.5097 6.02009 14.3231 5.75625C14.2495 5.65208 14.1041 5.55177 14.0981 5.39038C14.1673 5.31405 14.1962 5.20622 14.2515 5.11597C14.3194 5.00539 14.3986 4.88984 14.4663 4.78058C14.5202 4.69348 14.5456 4.52996 14.6812 4.5265C14.7791 4.67956 14.9334 4.80477 15.0392 4.95336C15.2333 5.22614 15.4146 5.50969 15.5915 5.79691C15.658 5.90474 15.6959 6.01897 15.7552 6.13229C16.0038 6.60742 16.1861 7.13276 16.3689 7.68727C16.449 7.93037 16.4664 8.20305 16.5326 8.44951C16.594 8.67788 16.5616 8.93623 16.6144 9.1711V9.44551C16.6492 9.60517 16.6503 9.88517 16.6144 10.0451C16.5816 10.1917 16.6223 10.3663 16.594 10.4923V10.6041C16.542 10.8271 16.5487 11.0712 16.4917 11.2952C16.3478 11.8607 16.2119 12.377 16.0007 12.8604C15.3772 14.2873 14.4966 15.4209 13.29 16.265C12.8585 16.5669 12.3995 16.8767 11.8886 17.0984C11.5772 17.2336 11.2493 17.3545 10.9169 17.4643C10.8146 17.498 10.728 17.501 10.6202 17.5354C10.3128 17.6336 9.9579 17.6701 9.61779 17.7489C9.48655 17.7793 9.3549 17.7636 9.23931 17.7895H9.07565C8.94799 17.8174 8.57289 17.8387 8.44145 17.8098H8.1755C8.024 17.8098 7.87558 17.7983 7.74588 17.7692H7.62313L7.0503 17.6879C6.80706 17.6252 6.5412 17.5932 6.30358 17.5151C5.8844 17.3775 5.48086 17.2361 5.09656 17.0679C4.57212 16.8383 4.10179 16.5129 3.6645 16.1939C2.71299 15.4996 2.03921 14.6626 1.41411 13.6429C1.20974 13.3095 1.04883 12.8794 0.892433 12.5046C0.860314 12.4276 0.857655 12.3589 0.831059 12.281C0.739919 12.0141 0.660644 11.7174 0.585563 11.4273C0.544953 11.2705 0.55508 11.1319 0.51396 10.97C0.502503 10.9249 0.484091 10.8525 0.473043 10.8074L0.452585 10.594C0.440311 10.5587 0.394689 10.5262 0.380982 10.4923C0.338736 10.3879 0.370753 10.1909 0.370753 10.0655V9.07963C0.383335 9.04314 0.42824 8.99517 0.442356 8.95767L0.452585 8.84588C0.486443 8.70888 0.487569 8.5674 0.524189 8.41902C0.610931 8.06758 0.659518 7.71054 0.769685 7.38237C1.03584 6.58974 1.37371 5.85402 1.81305 5.22776C1.94827 5.03497 2.11357 4.85477 2.25289 4.66879C2.4229 4.44174 2.61653 4.2464 2.81549 4.04883L3.00984 3.84556C3.18148 3.71649 3.32847 3.5549 3.50083 3.42887C3.77303 3.22988 4.05075 3.03088 4.33961 2.84957C4.90732 2.49335 5.56208 2.26244 6.24221 2.01618L6.48771 1.96537C6.73208 1.89158 7.01164 1.85601 7.27534 1.79259C7.40484 1.76149 7.5459 1.76861 7.66404 1.74178C7.84131 1.73161 8.01868 1.72145 8.19595 1.71129C8.26551 1.71129 8.4033 1.73121 8.45168 1.70112Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var iH = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 19, viewBox: "0 0 84 19", width: 84, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M14.8801 0.5C14.9831 0.519593 15.0452 0.578682 15.12 0.624399C15.2652 0.713137 15.4171 0.787465 15.5583 0.873196C15.6264 0.914663 15.7283 0.928347 15.7565 1.00796C15.7657 1.02133 15.7658 1.03357 15.7669 1.05979C15.7099 1.12313 15.6877 1.21322 15.6417 1.28786C15.5154 1.49239 15.4055 1.71133 15.2766 1.92022C15.0153 2.34338 14.7752 2.7935 14.5149 3.21604C14.3906 3.41777 14.3051 3.62666 14.181 3.82767C13.9297 4.23497 13.7157 4.66943 13.4611 5.08202C12.4285 6.75529 11.5298 8.52922 10.498 10.2031C10.3989 10.3637 10.3357 10.5298 10.2371 10.6903C9.83949 11.3376 9.4788 12.0237 9.07898 12.6703C8.95169 12.8762 8.84923 13.0919 8.72424 13.2923C8.68125 13.3614 8.64442 13.5097 8.56773 13.5411C8.55542 13.5494 8.5502 13.5491 8.526 13.5515C8.32661 13.3375 8.10897 13.1326 7.93128 12.8984C7.80159 12.7275 7.61671 12.5875 7.48264 12.4112L7.347 12.2868C7.17234 12.0573 6.94791 11.8739 6.77315 11.6441L6.53318 11.4056C6.3388 11.1495 6.09131 10.9469 5.89673 10.6903L5.74022 10.5452C5.57725 10.3309 5.37129 10.1587 5.20811 9.94394C5.13382 9.84619 4.96198 9.77061 4.94727 9.62258L5.27071 9.30122C5.40916 9.19786 5.54741 9.08165 5.66719 8.95912H5.72979C6.59307 9.88029 7.43996 10.8191 8.30689 11.7374H8.37993C8.71641 11.1934 9.02546 10.6141 9.36069 10.0683C9.44468 9.93161 9.49549 9.79072 9.57979 9.65368C10.3868 8.34158 11.0986 6.9535 11.9065 5.64182C11.9722 5.53504 12.0081 5.42671 12.0734 5.32045C12.3441 4.88039 12.5957 4.41224 12.8664 3.9728C12.9759 3.79501 13.0496 3.61152 13.1585 3.43374C13.535 2.81942 13.8765 2.17026 14.2541 1.55739C14.3914 1.33451 14.506 1.10209 14.6401 0.883563C14.7228 0.748694 14.7749 0.609678 14.8801 0.5Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M8.67434 2.05491C9.74629 2.03438 10.76 2.23446 11.5227 2.54214C11.6075 2.57635 11.6795 2.57977 11.7627 2.61471C11.8314 2.64352 11.9126 2.68903 11.9818 2.71837C12.0782 2.75932 12.1895 2.75559 12.1905 2.8946C12.1392 2.95017 12.117 3.02543 12.0757 3.09157C11.9909 3.22716 11.8996 3.37064 11.8149 3.50623C11.7604 3.59341 11.7604 3.71263 11.6166 3.71356C11.5561 3.66847 11.4721 3.66214 11.3975 3.63063C11.1155 3.51141 10.8289 3.42879 10.5002 3.34036C10.2286 3.26728 9.92064 3.23245 9.6238 3.16413C9.47022 3.12878 9.31236 3.16714 9.15429 3.13303C8.90012 3.07819 8.32513 3.09913 8.09006 3.15377L7.75618 3.1745C7.60562 3.21109 7.41834 3.24085 7.27623 3.27817L7.1406 3.28853C6.55183 3.45968 6.00385 3.63446 5.51295 3.88979C5.06629 4.12211 4.67023 4.37142 4.28178 4.65692C4.15919 4.747 4.05809 4.87721 3.93747 4.96792C3.79641 5.07397 3.65817 5.20075 3.55143 5.34111L3.38449 5.49661C3.26983 5.64703 3.13075 5.78159 3.01932 5.93201C2.78383 6.24995 2.5834 6.59381 2.37243 6.93756C2.31379 7.03304 2.28322 7.13318 2.23679 7.23819C2.14237 7.45174 2.03824 7.68593 1.94465 7.91202C1.79931 8.26314 1.73848 8.67272 1.64208 9.06271C1.60097 9.2292 1.62778 9.36946 1.58991 9.53957C1.56163 9.66667 1.58897 9.82496 1.55861 9.9646C1.53305 10.0824 1.54817 10.2537 1.54817 10.3896C1.54817 10.7123 1.56769 11.0428 1.63164 11.3123V11.4263C1.64719 11.4911 1.66701 11.5718 1.68381 11.6336C1.76499 11.931 1.78178 12.2157 1.89248 12.4837C2.02374 12.8013 2.143 13.1214 2.27853 13.427C2.31901 13.5184 2.3837 13.613 2.43503 13.6966C2.51641 13.8292 2.57192 13.961 2.65414 14.0905C2.7951 14.3126 2.95755 14.5226 3.11322 14.7332C3.18803 14.8345 3.29873 14.9142 3.37406 15.0131C3.52785 15.2152 3.71326 15.4099 3.91661 15.5625C4.01969 15.6399 4.10493 15.7546 4.20875 15.8321C4.92627 16.3673 5.61906 16.7587 6.54588 17.0968C6.83447 17.202 7.16146 17.2457 7.46404 17.3249C7.60354 17.3614 7.75503 17.3564 7.88138 17.3871L8.25699 17.4078C8.42748 17.4449 8.66067 17.4285 8.86214 17.4285H9.14385C9.41033 17.3678 9.70476 17.4004 9.96811 17.3352C10.343 17.2423 10.7186 17.1581 11.0532 17.045C13.0272 16.3777 14.5587 14.952 15.3623 13.1264C15.5308 12.7437 15.648 12.3296 15.7692 11.9031C15.8244 11.7088 15.8373 11.5043 15.884 11.3123L15.8944 11.1257C15.9461 10.8965 15.9465 10.6273 15.9466 10.3482C15.9466 10.1905 15.9677 9.98938 15.9361 9.85057L15.9257 9.61214C15.8746 9.39154 15.8891 9.15663 15.8318 8.93831C15.6777 8.35073 15.5516 7.72107 15.2684 7.25893L15.1745 7.04123C14.9994 6.7547 14.8535 6.46029 14.6632 6.19117C14.5881 6.08491 14.4399 5.98259 14.4337 5.81797C14.5043 5.74012 14.5338 5.63013 14.5902 5.53808C14.6594 5.42529 14.7402 5.30742 14.8093 5.19598C14.8643 5.10714 14.8902 4.94034 15.0284 4.93682C15.1284 5.09294 15.2857 5.22065 15.3936 5.37221C15.5916 5.65045 15.7765 5.93968 15.957 6.23264C16.0248 6.34263 16.0634 6.45915 16.1239 6.57473C16.3775 7.05937 16.5635 7.59522 16.75 8.16082C16.8317 8.40879 16.8494 8.68692 16.9169 8.93831C16.9795 9.17125 16.9464 9.43476 17.0004 9.67434V9.95423C17.0358 10.1171 17.037 10.4027 17.0004 10.5659C16.9669 10.7153 17.0084 10.8934 16.9795 11.022V11.136C16.9265 11.3635 16.9333 11.6125 16.8752 11.8409C16.7284 12.4177 16.5898 12.9444 16.3744 13.4374C15.7384 14.8929 14.8402 16.0492 13.6094 16.9102C13.1694 17.2181 12.7011 17.5341 12.18 17.7603C11.8623 17.8981 11.5279 18.0215 11.1888 18.1335C11.0845 18.1679 10.9962 18.1709 10.8863 18.206C10.5727 18.3062 10.2107 18.3434 9.86377 18.4237C9.72991 18.4547 9.59563 18.4387 9.47773 18.4652H9.31079C9.18058 18.4936 8.79798 18.5154 8.66391 18.4859H8.39263C8.23811 18.4859 8.08672 18.4741 7.95442 18.4445H7.82922L7.24493 18.3615C6.99682 18.2976 6.72565 18.2649 6.48328 18.1853C6.05571 18.0449 5.6441 17.9007 5.25211 17.7292C4.71718 17.495 4.23744 17.163 3.7914 16.8376C2.82087 16.1295 2.13361 15.2757 1.49601 14.2356C1.28754 13.8955 1.12342 13.4568 0.963892 13.0746C0.93113 12.996 0.928417 12.9259 0.90129 12.8465C0.808326 12.5742 0.727466 12.2716 0.650883 11.9757C0.609461 11.8158 0.619791 11.6744 0.577847 11.5092C0.566162 11.4632 0.547381 11.3894 0.536113 11.3434L0.515246 11.1257C0.502725 11.0897 0.456191 11.0565 0.44221 11.022C0.39912 10.9155 0.431777 10.7145 0.431777 10.5866V9.58104C0.44461 9.54382 0.490414 9.49489 0.504812 9.45664L0.515246 9.34261C0.549781 9.20287 0.550929 9.05856 0.588281 8.90721C0.676758 8.54873 0.726318 8.18456 0.838688 7.84982C1.11017 7.04133 1.45479 6.2909 1.90292 5.65211C2.04085 5.45546 2.20946 5.27166 2.35156 5.08195C2.52497 4.85036 2.72248 4.65111 2.92541 4.44959L3.12365 4.24226C3.29873 4.1106 3.44866 3.94577 3.62447 3.81723C3.9021 3.61425 4.18538 3.41127 4.48002 3.22633C5.05909 2.86298 5.72695 2.62746 6.42068 2.37627L6.67108 2.32444C6.92034 2.24918 7.20549 2.2129 7.47447 2.14821C7.60656 2.11649 7.75044 2.12374 7.87095 2.09638C8.05176 2.08601 8.23268 2.07564 8.4135 2.06528C8.48445 2.06528 8.62499 2.0856 8.67434 2.05491Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M54.5466 3.28393H55.4066C55.504 3.28393 55.6754 3.2589 55.7445 3.29919C55.7866 3.3236 55.7886 3.36831 55.7906 3.43652C55.6483 3.6268 55.5835 4.06123 55.4834 4.3063C55.2885 4.78346 55.1458 5.31555 54.9459 5.78645C54.8797 5.9424 54.8732 6.10079 54.8076 6.25949C54.6429 6.65821 54.5123 7.11233 54.3469 7.51075L54.224 7.93801C54.0525 8.35153 53.919 8.81999 53.748 9.23505L53.7019 9.43342C53.2616 10.51 52.9258 11.6707 52.5193 12.7599C52.2598 13.4555 52.0741 14.1656 51.7975 14.8352C51.713 15.0398 51.6601 15.2579 51.5825 15.4456C51.5535 15.5158 51.561 15.6317 51.5057 15.6745C51.4305 15.7327 51.2168 15.705 51.091 15.705C50.7252 15.705 50.2751 15.7564 49.9392 15.6897C49.9272 15.6555 49.9235 15.6069 49.9238 15.5524C50.0436 15.371 50.053 15.1215 50.1389 14.9115C50.397 14.2793 50.5678 13.6126 50.8146 12.9583C51.2575 11.7836 51.6501 10.5518 52.0893 9.37238C52.2352 8.98067 52.3358 8.59797 52.4886 8.22793C52.5143 8.13134 52.5397 8.0346 52.5654 7.93801C52.7674 7.44879 52.9192 6.90236 53.1183 6.41208C53.2075 6.19235 53.2344 5.99352 53.3179 5.77119C53.5131 5.25176 53.708 4.68946 53.9015 4.16897C53.9705 3.98341 54.0276 3.80549 54.0858 3.63489C54.125 3.52029 54.129 3.35549 54.2394 3.31445C54.3087 3.27279 54.4779 3.32635 54.5466 3.28393Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M34.0894 4.16878C35.244 4.14803 36.1559 4.3757 36.8538 4.80967C37.021 4.91359 37.1468 5.07671 37.2992 5.19116C37.3724 5.24624 37.4597 5.30224 37.5142 5.37427C37.649 5.55265 37.7456 5.72416 37.8674 5.9236C38.0697 6.25457 38.2649 6.68931 38.2667 7.20538C38.2219 7.23346 38.2222 7.24719 38.1438 7.25116C38.0471 7.30716 37.7745 7.2182 37.6217 7.25116C37.4899 7.27954 37.2729 7.23819 37.1456 7.25116C36.7667 7.28992 36.1931 7.30853 35.8402 7.2359C35.7575 7.08819 35.7152 6.90386 35.6252 6.76286C35.4149 6.43311 35.067 6.2735 34.6269 6.16775C34.2674 6.08138 33.6434 6.19415 33.429 6.32034C33.2788 6.40885 33.1576 6.54297 33.0604 6.68656C32.9311 6.87761 32.8911 7.25894 33.0143 7.49531C33.3384 8.11697 34.4478 8.10171 35.2105 8.30405C35.5686 8.39911 35.9788 8.44809 36.3316 8.56346C37.2095 8.85063 37.9285 9.31192 38.2821 10.1199C38.4072 10.4059 38.4373 10.7394 38.5124 11.0812V11.3406C38.553 11.5396 38.502 11.98 38.451 12.1799C38.3248 12.6749 38.1021 13.0495 37.8367 13.4006C37.6994 13.5822 37.4868 13.7248 37.2992 13.8584C36.8461 14.1812 36.3098 14.3795 35.6712 14.5298C35.4727 14.5765 35.2859 14.5668 35.103 14.6061H34.8573C34.5966 14.6606 34.1463 14.6432 33.9051 14.5909C33.6517 14.5359 33.4235 14.5755 33.1833 14.5146C32.2238 14.2716 31.4524 13.9156 30.941 13.2328C30.7612 12.9928 30.5746 12.7352 30.4496 12.4393C30.3849 12.2863 30.3637 12.1401 30.3113 11.9815C30.257 11.8169 30.1564 11.5196 30.2192 11.3559C30.3741 11.2883 30.6867 11.3254 30.8949 11.3254H32.1543C32.3512 11.3254 32.6215 11.2984 32.7686 11.3559C32.8419 11.4855 32.8638 11.6568 32.9375 11.7984C33.1571 12.2203 33.5611 12.4733 34.074 12.6072C34.2161 12.6442 34.3644 12.6377 34.5347 12.6377C35.2642 12.6377 35.6937 12.3977 35.8862 11.8595C35.9563 11.6637 35.9325 11.3826 35.8555 11.2033C35.7066 10.8563 35.2595 10.7072 34.8726 10.5929L34.3965 10.5166C33.3365 10.2354 32.2854 10.1806 31.4939 9.6316C31.0146 9.2991 30.6474 8.84041 30.4496 8.22775C30.3952 8.05914 30.4136 7.91173 30.3728 7.72419C30.3265 7.51209 30.3207 7.11047 30.3728 6.88493C30.4221 6.671 30.4531 6.45706 30.5263 6.2593C30.785 5.56119 31.3091 5.08007 31.9086 4.71812C32.2518 4.5109 32.6927 4.38547 33.1218 4.2756C33.3408 4.21944 33.5541 4.23028 33.7669 4.18404C33.8658 4.16253 34.0161 4.21441 34.0894 4.16878Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M68.5539 4.16897C70.4005 4.1357 71.5851 4.71052 72.2858 5.81697C72.5108 6.17221 72.7427 6.64814 72.7466 7.20556C72.7242 7.21854 72.7025 7.23318 72.6851 7.25134C72.163 7.25638 71.6408 7.26157 71.1186 7.2666C70.852 7.2666 70.5398 7.28049 70.32 7.23608C70.2552 7.12194 70.2244 6.95745 70.1511 6.83934C69.9204 6.46763 69.5892 6.28101 69.0914 6.16793C68.5632 6.048 67.9838 6.2456 67.6938 6.47312C67.6198 6.53126 67.5764 6.63487 67.5249 6.71727C67.3807 6.94845 67.393 7.36335 67.5403 7.58705C67.8873 8.11456 68.9805 8.11624 69.6904 8.30423C70.0112 8.38923 70.3813 8.42875 70.704 8.53312C71.5663 8.81221 72.2272 9.19797 72.6544 9.90646C72.796 10.1413 72.8693 10.4555 72.9462 10.7457C72.9513 10.8423 72.9565 10.9391 72.9616 11.0356C73.0203 11.3099 73.0126 11.8046 72.9462 12.0733C72.8309 12.5407 72.6643 12.9241 72.4241 13.2635C72.0108 13.8475 71.3089 14.1969 70.5504 14.4385C70.3048 14.5167 70.0689 14.4961 69.7979 14.5605C69.3451 14.6681 68.5774 14.6655 68.1239 14.5605C67.8384 14.4945 67.5851 14.5164 67.3252 14.4385C66.427 14.1687 65.763 13.7341 65.2827 13.0499C65.0504 12.7192 64.9098 12.3803 64.7758 11.9359C64.7267 11.773 64.6605 11.561 64.6991 11.3561C64.9543 11.2928 65.3449 11.3256 65.6512 11.3256H66.6341C66.8409 11.3256 67.0884 11.3164 67.2485 11.3561C67.3342 11.5418 67.3879 11.7653 67.4942 11.9359C67.71 12.2822 68.1008 12.4949 68.5539 12.6073C68.7322 12.6516 69.0403 12.6649 69.2296 12.6226C69.3671 12.5919 69.4712 12.6122 69.5982 12.5768C69.9344 12.4831 70.1568 12.2959 70.3047 12.0122C70.3755 11.8764 70.4546 11.5654 70.3815 11.3408C70.1645 10.6742 69.4936 10.6766 68.7842 10.5016C68.455 10.4204 68.0641 10.3684 67.7399 10.2727L67.4788 10.2422C66.8685 10.079 66.319 9.87258 65.8663 9.55549C65.4141 9.23886 65.1011 8.76338 64.9141 8.18216C64.8663 8.03399 64.8893 7.89101 64.8526 7.72438C64.8044 7.50556 64.8026 7.09158 64.8526 6.86986C64.9022 6.65013 64.9248 6.43772 65.0062 6.24423C65.3101 5.5217 65.8236 5.05935 66.4652 4.67253C66.8366 4.44882 67.3108 4.35788 67.786 4.24527C67.9426 4.20819 68.0987 4.21643 68.2467 4.18423C68.3416 4.16363 68.484 4.21261 68.5539 4.16897Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M20.1301 4.42839H21.9577C22.1226 4.42839 22.4974 4.37819 22.5566 4.48943C22.6359 4.59503 22.5874 5.24034 22.5874 5.43551V7.34292C22.5874 7.60782 22.5362 8.00349 22.6181 8.21269C22.7953 8.31188 23.3457 8.25847 23.6163 8.25847H25.3518C25.6419 8.25847 25.9956 8.29326 26.2579 8.24321C26.366 8.00959 26.304 7.52053 26.304 7.20558V5.42025C26.304 5.10789 26.2755 4.72137 26.3347 4.45891C26.472 4.39864 26.745 4.42839 26.9336 4.42839H28.239C28.4015 4.42839 28.7591 4.38079 28.838 4.47417C28.9171 4.579 28.8687 4.91959 28.8687 5.08454V13.7518C28.8687 13.8743 28.9004 14.2406 28.8534 14.3164C28.7979 14.4058 28.4407 14.3622 28.3005 14.3622H26.8261C26.6747 14.3622 26.3887 14.4034 26.3347 14.3011C26.2903 14.2374 26.304 14.1026 26.304 13.996V11.4171C26.304 11.1094 26.3417 10.7357 26.2886 10.4558C26.2616 10.4393 26.233 10.4174 26.2118 10.3948H23.7392C23.435 10.3948 22.8672 10.3345 22.6334 10.4253C22.5307 10.6089 22.5874 11.0457 22.5874 11.3103V14.057C22.5874 14.1356 22.6052 14.2627 22.572 14.3164C22.5267 14.3898 22.3048 14.3622 22.1881 14.3622H21.0516C20.7759 14.3622 20.2785 14.4139 20.0687 14.3317C19.9997 14.1734 20.038 13.8563 20.038 13.645V5.06928C20.038 4.94782 20.0059 4.54482 20.0533 4.47417C20.0681 4.4522 20.1103 4.44579 20.1301 4.42839Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M48.9703 13.9347C48.8832 13.7242 48.8218 13.5064 48.7399 13.3091C48.4788 12.6795 48.2865 12.0198 48.0334 11.4017C47.8857 11.041 47.8151 10.6946 47.6649 10.3335C47.1146 9.01072 46.7059 7.59282 46.1444 6.27458C45.8895 5.67626 45.7646 5.01782 45.4687 4.45872C45.2624 4.37846 44.8706 4.4282 44.6086 4.4282H42.7503C42.5492 4.62077 42.5126 4.95724 42.3971 5.23694C42.1523 5.83023 41.972 6.46181 41.7214 7.06806C41.082 8.61459 40.6096 10.2603 39.9552 11.7984C39.8912 11.9489 39.8793 12.0905 39.817 12.241C39.6249 12.705 39.4548 13.2111 39.2641 13.6753C39.1862 13.8648 39.1726 14.0785 39.0645 14.2399C39.0683 14.2932 39.0698 14.3042 39.0952 14.3315C39.1865 14.4004 39.4697 14.362 39.6173 14.362H40.9995C41.1557 14.362 41.4701 14.4055 41.5678 14.3315C41.6937 14.2468 41.7106 13.9807 41.7674 13.8279C41.9187 13.4219 42.0313 12.8464 42.2435 12.5004C42.5011 12.4457 42.8737 12.4698 43.1804 12.4698H44.8697C45.0668 12.4698 45.6631 12.4221 45.7758 12.5004C45.9286 12.5538 45.9339 12.8359 45.9908 12.9887C46.153 13.4229 46.2684 13.9074 46.4516 14.3315C46.6445 14.3753 46.9331 14.362 47.1734 14.362H48.3867C48.5452 14.362 48.9746 14.3974 49.0624 14.3315C49.0727 14.3264 49.0828 14.3212 49.0931 14.3162C49.087 14.1534 49.0186 14.0515 48.9703 13.9347ZM44.6394 10.5319H43.4568C43.2496 10.5319 43.0266 10.5476 42.9039 10.4709C42.9074 10.3055 42.9718 10.2225 43.0114 10.1047C43.1053 9.82602 43.1845 9.56829 43.2725 9.31117C43.5168 8.59688 43.6866 7.85147 43.979 7.17487H44.0558C44.1917 7.40361 44.239 7.6914 44.3322 7.96836C44.4942 8.44979 44.6602 8.95792 44.839 9.43325C44.9348 9.68792 44.9861 9.94336 45.0847 10.181C45.1122 10.2475 45.1084 10.3123 45.1462 10.3641C45.1425 10.6042 44.8671 10.5319 44.6394 10.5319Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M57.3596 4.4286H63.2109C63.4121 4.4286 63.6896 4.40052 63.8406 4.45912C63.901 4.59599 63.8713 4.86654 63.8713 5.05423C63.8713 5.4676 63.9285 6.07156 63.856 6.44282C63.641 6.54094 63.1979 6.4886 62.9038 6.4886H60.7998C60.5129 6.4886 60.0766 6.43046 59.8476 6.51912C59.7835 6.62944 59.8015 6.84567 59.8015 7.02268V8.09082C59.8015 8.25471 59.7583 8.52892 59.8783 8.57912C59.9732 8.64901 60.4604 8.60964 60.6308 8.60964H62.6888C62.8932 8.60964 63.4849 8.56386 63.5642 8.67068C63.6287 8.75476 63.5949 9.00608 63.5949 9.14372V10.0898C63.5949 10.2496 63.6096 10.449 63.5642 10.5628C63.3275 10.6666 62.8517 10.6086 62.5352 10.6086H60.769C60.4786 10.6086 60.1257 10.5744 59.8629 10.6239C59.8463 10.6507 59.8242 10.6791 59.8015 10.7002V13.4468C59.8015 13.6331 59.8431 14.2774 59.7401 14.3319C59.6485 14.4007 59.3655 14.3624 59.2179 14.3624H57.8357C57.6961 14.3624 57.3375 14.406 57.2828 14.3166C57.2284 14.2276 57.2675 13.7729 57.2675 13.6299V5.29838C57.2675 5.02554 57.2424 4.68251 57.2982 4.45912C57.3326 4.45011 57.339 4.44767 57.3596 4.4286Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M83.4861 14.0416C83.376 13.72 83.2608 13.4256 83.1483 13.1261C82.8829 12.42 82.6634 11.716 82.3804 11.0356C82.2381 10.6934 82.1697 10.3558 82.0271 10.0132C81.5272 8.81136 81.1464 7.52363 80.6449 6.32044C80.3889 5.70625 80.255 4.98891 79.9231 4.44355C79.6559 4.39289 79.2967 4.42829 79.0016 4.42829H77.2508C77.239 4.43882 77.2166 4.44843 77.2048 4.45881C77.0897 4.50153 77.0066 4.88698 76.959 5.0234C76.8726 5.27136 76.7525 5.54344 76.6519 5.78636C76.5448 6.04486 76.4966 6.2948 76.3908 6.54933C75.7522 8.08426 75.2694 9.71456 74.64 11.2492C74.4877 11.6209 74.4121 11.9819 74.2561 12.3479C74.0556 12.8177 73.9068 13.3136 73.7185 13.7975C73.6875 13.877 73.5239 14.2371 73.5496 14.2858V14.3316C73.7265 14.3758 74.0008 14.3621 74.2253 14.3621H75.4079C75.5791 14.3621 75.9437 14.4137 76.0529 14.3316C76.1879 14.2373 76.1907 13.949 76.2526 13.7822C76.4052 13.371 76.5239 12.8429 76.744 12.4852C77.5737 12.426 78.483 12.4699 79.3395 12.4699C79.5309 12.4699 80.1578 12.4234 80.261 12.5004C80.3941 12.547 80.4443 12.899 80.4913 13.0498C80.6211 13.4657 80.7636 13.937 80.9367 14.3316C81.1872 14.3877 81.5579 14.3621 81.8582 14.3621H83.5168C83.5342 14.3439 83.5559 14.3293 83.5783 14.3163C83.5706 14.1898 83.5175 14.133 83.4861 14.0416ZM79.6006 10.471C79.5467 10.5732 79.2606 10.532 79.1091 10.532H77.8959C77.7606 10.532 77.5171 10.564 77.4351 10.5015H77.4044C77.3556 10.2381 77.5813 9.79635 77.6655 9.57066C77.8713 9.01965 78.0164 8.44316 78.2184 7.9074C78.3131 7.65578 78.3521 7.38371 78.4795 7.17496C78.5109 7.18106 78.5091 7.17877 78.5255 7.19022C78.633 7.23401 78.72 7.70949 78.7713 7.84637C78.9996 8.45521 79.1873 9.12815 79.4163 9.73852C79.4819 9.91339 79.5233 10.0895 79.5852 10.2573C79.6055 10.3124 79.637 10.4156 79.6006 10.471Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(), G(); var iV = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 9, viewBox: "0 0 4 9", width: 4, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M1.33333 0.833293C1.33333 0.465103 1.63181 0.166626 2 0.166626C2.36819 0.166626 2.66667 0.465103 2.66667 0.833293C2.66667 1.20148 2.36819 1.49996 2 1.49996C1.63181 1.49996 1.33333 1.20148 1.33333 0.833293Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M0 3.49996C0 3.13177 0.298477 2.83329 0.666667 2.83329H2C2.36819 2.83329 2.66667 3.13177 2.66667 3.49996V7.49996H3.33333C3.70152 7.49996 4 7.79844 4 8.16663C4 8.53482 3.70152 8.83329 3.33333 8.83329H0.666667C0.298477 8.83329 0 8.53482 0 8.16663C0 7.79844 0.298477 7.49996 0.666667 7.49996H1.33333V4.16663H0.666667C0.298477 4.16663 0 3.86815 0 3.49996Z", fill: "currentColor" })] }) }; G(), G(); var iZ = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 12, viewBox: "0 0 21 12", width: 21, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M0.469669 5.46967C0.176777 5.76256 0.176777 6.23744 0.469669 6.53033L5.24264 11.3033C5.53553 11.5962 6.01041 11.5962 6.3033 11.3033C6.59619 11.0104 6.59619 10.5355 6.3033 10.2426L2.06066 6L6.3033 1.75736C6.59619 1.46446 6.59619 0.989591 6.3033 0.696698C6.01041 0.403804 5.53553 0.403804 5.24264 0.696698L0.469669 5.46967ZM21 5.25L1 5.25L1 6.75L21 6.75L21 5.25Z", fill: "currentColor" })] }) }; G(); var iN = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 24 24", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M13.7687 2.45406C14.9403 1.28249 16.8398 1.28249 18.0114 2.45406L19.4256 3.86827C20.5972 5.03984 20.5971 6.93934 19.4256 8.11091L17.481 10.0555C17.0905 10.446 16.4573 10.446 16.0668 10.0555C15.6763 9.66495 15.6763 9.03179 16.0668 8.64126L18.0114 6.6967C18.4019 6.30617 18.4019 5.67301 18.0114 5.28249L16.5971 3.86827C16.2066 3.47775 15.5735 3.47775 15.1829 3.86827L9.52608 9.52513C9.13556 9.91565 9.13556 10.5488 9.52608 10.9393L10.9403 12.3536C10.976 12.3892 11.0137 12.4217 11.0531 12.4508C11.1943 12.5555 11.3628 12.6512 11.5345 12.7487C11.9446 12.9816 12.3735 13.2252 12.4955 13.6267C12.6351 14.0859 12.396 14.5913 11.918 14.6343C11.0628 14.7113 10.1808 14.4225 9.52608 13.7678L8.11187 12.3536C6.9403 11.182 6.9403 9.28248 8.11187 8.11091L13.7687 2.45406Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M10.2332 21.5459C9.06159 22.7175 7.1621 22.7175 5.99053 21.5459L4.57631 20.1317C3.40474 18.9602 3.40474 17.0607 4.57631 15.8891L6.52088 13.9445C6.9114 13.554 7.54457 13.554 7.93509 13.9445C8.32561 14.3351 8.32561 14.9682 7.93509 15.3587L5.99053 17.3033C5.6 17.6938 5.6 18.327 5.99053 18.7175L7.40474 20.1317C7.79526 20.5223 8.42843 20.5223 8.81895 20.1317L14.4758 14.4749C14.8663 14.0844 14.8663 13.4512 14.4758 13.0607L13.0616 11.6465C13.0259 11.6108 12.9882 11.5783 12.9488 11.5492C12.8076 11.4445 12.6391 11.3489 12.4674 11.2513C12.0573 11.0184 11.6284 10.7748 11.5064 10.3733C11.3668 9.91414 11.6059 9.40875 12.0839 9.36572C12.9391 9.28872 13.8211 9.57756 14.4758 10.2322L15.89 11.6465C17.0616 12.818 17.0616 14.7175 15.89 15.8891L10.2332 21.5459Z", fill: "currentColor" })] }) }; G(), G(); var iR = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 13, viewBox: "0 0 13 13", width: 13, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M6.09245 0.00533208L5.7784 0.0378765C4.25451 0.190021 2.71923 0.975968 1.68106 2.13618C0.53306 3.41924 -0.0502981 5.01147 0.00340016 6.70785C0.0969653 9.63766 2.11065 12.1184 4.96723 12.8246C5.80828 13.0277 6.68128 13.0618 7.5356 12.9249C8.38993 12.788 9.20858 12.4829 9.94408 12.0272C11.3905 11.126 12.4258 9.69346 12.8275 8.03728C12.9675 7.46694 13 7.17649 13 6.502C13 5.82752 12.9675 5.53706 12.8275 4.96672C12.1831 2.3347 10.0157 0.398305 7.31856 0.045199C7.0875 0.0150954 6.24704 -0.0117537 6.09245 0.00533208ZM7.19896 1.2648C8.11287 1.38511 8.97964 1.74152 9.71383 2.2989C9.98151 2.49905 10.5079 3.02545 10.7081 3.29313C11.1645 3.90415 11.5021 4.62257 11.6551 5.31007C11.8292 6.09515 11.8292 6.90886 11.6551 7.69394C11.3183 9.20807 10.2516 10.5522 8.83757 11.2437C8.32778 11.4932 7.78244 11.6623 7.22093 11.7449C6.87596 11.7978 6.13395 11.7978 5.78898 11.7449C4.20407 11.5041 2.86649 10.6392 2.02441 9.30977C1.81728 8.96635 1.6445 8.60335 1.50858 8.22604C1.31478 7.67223 1.21978 7.08869 1.22788 6.502C1.22788 5.65666 1.39142 4.93581 1.75347 4.19135C2.0301 3.62345 2.31161 3.23129 2.77293 2.76998C3.18096 2.34675 3.6626 2.00131 4.1943 1.75052C5.12591 1.29544 6.17142 1.12643 7.19896 1.2648ZM6.26575 3.48351C6.0835 3.54291 5.98018 3.64705 5.92973 3.82116C5.90044 3.92042 5.89719 4.14742 5.90207 5.53869C5.90858 7.1415 5.90858 7.14231 5.95577 7.231C6.01776 7.3446 6.11726 7.43317 6.23728 7.48159C6.34467 7.51902 6.66524 7.51902 6.77263 7.48159C6.89265 7.43317 6.99214 7.3446 7.05414 7.231C7.10133 7.14231 7.10133 7.1415 7.10784 5.53869C7.11435 3.7878 7.11435 3.78618 6.98987 3.63891C6.88898 3.5185 6.78077 3.47863 6.5375 3.47212C6.44676 3.46701 6.35574 3.47082 6.26575 3.48351ZM6.33084 8.56044C6.16806 8.61865 6.03267 8.7352 5.95089 8.88751C5.89215 9.03343 5.88497 9.19502 5.93055 9.34557C5.97454 9.46344 6.0527 9.5655 6.15503 9.6387C6.25735 9.71189 6.37919 9.75289 6.50495 9.75644C6.75148 9.75644 7.00288 9.57745 7.07936 9.34557C7.12494 9.19502 7.11776 9.03343 7.05902 8.88751C6.99167 8.76865 6.89396 8.66982 6.77589 8.60112C6.68151 8.5523 6.42685 8.52871 6.33084 8.56044Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var iS = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 24 24", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M12 0C12.5523 0 13 0.447715 13 1V7.25C13 8.76878 14.2312 10 15.75 10H17C17.5523 10 18 10.4477 18 11C18 11.5523 17.5523 12 17 12H15.75C14.2257 12 12.8692 11.282 12 10.1658C11.1308 11.282 9.77427 12 8.25 12H7C6.44772 12 6 11.5523 6 11C6 10.4477 6.44772 10 7 10H8.25C9.76878 10 11 8.76878 11 7.25V1C11 0.447715 11.4477 0 12 0ZM6.12043 3C4.41756 3 2.92537 4.13973 2.47731 5.7826L0.616632 12.6051C0.207371 14.1057 0 15.6542 0 17.2096V19.6667C0 22.0599 1.9401 24 4.33333 24H4.43576C5.73523 24 6.95886 23.3882 7.73854 22.3486L7.85832 22.1889C8.03716 21.9505 8.27813 21.7658 8.55487 21.6551C10.0433 21.0597 10.9639 19.5575 10.8188 17.961L10.4959 14.4095C10.4459 13.8594 9.95948 13.4541 9.40946 13.5041C8.85945 13.5541 8.45411 14.0405 8.50411 14.5905L8.82698 18.1421C8.89204 18.8578 8.47932 19.5312 7.81209 19.7981C7.19477 20.0451 6.65725 20.457 6.25832 20.9889L6.13854 21.1486C5.73657 21.6846 5.10571 22 4.43576 22H4.33333C3.04467 22 2 20.9553 2 19.6667V17.2096C2 15.832 2.18367 14.4605 2.54616 13.1313L4.40684 6.30884C4.61759 5.53609 5.31946 5 6.12043 5C6.84672 5 7.49984 5.44218 7.76958 6.11652L8.07152 6.87139C8.27664 7.38417 8.85861 7.63359 9.37139 7.42848C9.88417 7.22336 10.1336 6.64139 9.92848 6.12861L9.62653 5.37374C9.05307 3.94008 7.66453 3 6.12043 3ZM17.8796 3C19.5824 3 21.0746 4.13973 21.5227 5.7826L23.3834 12.6051C23.7926 14.1057 24 15.6542 24 17.2096V19.6667C24 22.0599 22.0599 24 19.6667 24H19.5642C18.2648 24 17.0411 23.3882 16.2615 22.3486L16.1417 22.1889C15.9628 21.9505 15.7219 21.7658 15.4451 21.6551C13.9567 21.0597 13.0361 19.5575 13.1812 17.961L13.5041 14.4095C13.5541 13.8594 14.0405 13.4541 14.5905 13.5041C15.1406 13.5541 15.5459 14.0405 15.4959 14.5905L15.173 18.1421C15.108 18.8578 15.5207 19.5312 16.1879 19.7981C16.8052 20.0451 17.3428 20.457 17.7417 20.9889L17.8615 21.1486C18.2634 21.6846 18.8943 22 19.5642 22H19.6667C20.9553 22 22 20.9553 22 19.6667V17.2096C22 15.832 21.8163 14.4605 21.4538 13.1313L19.5932 6.30884C19.3824 5.53609 18.6805 5 17.8796 5C17.1533 5 16.5002 5.44218 16.2304 6.11652L15.9285 6.87139C15.7234 7.38417 15.1414 7.63359 14.6286 7.42848C14.1158 7.22336 13.8664 6.64139 14.0715 6.12861L14.3735 5.37374C14.9469 3.94008 16.3355 3 17.8796 3Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(), G(); var iP = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 22, viewBox: "0 0 36 22", width: 36, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M22.9603 2.31934H13.4662V19.3805H22.9603V2.31934Z", fill: "#FF5F00" }), (0, l.jsx)("path", { d: "M14.069 10.8504C14.0675 9.2073 14.4399 7.58539 15.1579 6.10744C15.8759 4.6295 16.9207 3.33427 18.2133 2.31982C16.6126 1.06167 14.6903 0.27924 12.6659 0.0619689C10.6416 -0.155303 8.59703 0.201351 6.76583 1.09116C4.93462 1.98097 3.39071 3.36804 2.31056 5.09382C1.23041 6.81961 0.657593 8.81448 0.657593 10.8504C0.657593 12.8864 1.23041 14.8812 2.31056 16.607C3.39071 18.3328 4.93462 19.7199 6.76583 20.6097C8.59703 21.4995 10.6416 21.8561 12.6659 21.6389C14.6903 21.4216 16.6126 20.6392 18.2133 19.381C16.9207 18.3666 15.8759 17.0713 15.1579 15.5934C14.4399 14.1155 14.0675 12.4935 14.069 10.8504Z", fill: "#EB001B" }), (0, l.jsx)("path", { d: "M35.7684 10.8504C35.7685 12.8863 35.1957 14.8812 34.1156 16.607C33.0355 18.3328 31.4917 19.7198 29.6605 20.6097C27.8293 21.4995 25.7848 21.8561 23.7605 21.6389C21.7362 21.4216 19.8139 20.6392 18.2133 19.381C19.5047 18.3655 20.5487 17.0701 21.2666 15.5924C21.9844 14.1147 22.3574 12.4933 22.3574 10.8504C22.3574 9.20756 21.9844 7.58615 21.2666 6.10845C20.5487 4.63074 19.5047 3.3353 18.2133 2.31982C19.8139 1.06166 21.7362 0.279236 23.7605 0.061967C25.7848 -0.155302 27.8293 0.201358 29.6605 1.09118C31.4917 1.981 33.0355 3.36807 34.1156 5.09386C35.1957 6.81964 35.7685 8.8145 35.7684 10.8504Z", fill: "#F79E1B" }), (0, l.jsx)("path", { d: "M34.7334 17.5735V17.2242H34.8742V17.153H34.5155V17.2242H34.6564V17.5735H34.7334ZM35.4297 17.5735V17.1523H35.3198L35.1933 17.442L35.0668 17.1523H34.9568V17.5735H35.0345V17.2558L35.1531 17.5297H35.2336L35.3522 17.2551V17.5735H35.4297Z", fill: "#F79E1B" })] }) }; G(); var iI = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 20, viewBox: "0 0 20 20", width: 20, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M12.0833 2.08333C12.0833 3.23393 11.1506 4.16667 10 4.16667C8.84941 4.16667 7.91667 3.23393 7.91667 2.08333C7.91667 0.93274 8.84941 0 10 0C11.1506 0 12.0833 0.93274 12.0833 2.08333Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M13.3333 5.83333C13.6261 5.83333 13.8973 5.98692 14.0479 6.23792L15.0914 7.97707C15.8444 9.23209 17.2007 10 18.6643 10H19.1667C19.6269 10 20 10.3731 20 10.8333C20 11.2936 19.6269 11.6667 19.1667 11.6667H18.6643C16.6153 11.6667 14.7165 10.5916 13.6622 8.83456L12.8615 7.5H8.33334V14.1667C8.33334 14.6269 7.96024 15 7.5 15H2.19951C1.90523 15 1.66667 15.2386 1.66667 15.5328C1.66667 15.7893 1.8493 16.0093 2.10131 16.0566L4.32024 16.4726C4.7726 16.5574 5.07055 16.9929 4.98573 17.4452C4.90091 17.8976 4.46545 18.1955 4.0131 18.1107L1.79417 17.6947C0.753859 17.4996 3.17891e-06 16.5913 3.17891e-06 15.5328C3.17891e-06 14.3181 0.984756 13.3333 2.19951 13.3333H6.66667V8.28637L6.33776 8.83456C5.28354 10.5916 3.38475 11.6667 1.33571 11.6667H0.833333C0.373096 11.6667 0 11.2936 0 10.8333C0 10.3731 0.373096 10 0.833333 10H1.33571C2.79931 10 4.15559 9.23209 4.9086 7.97707L5.95209 6.23792C6.10269 5.98692 6.37395 5.83333 6.66667 5.83333H13.3333Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M10 19.2333L5.9869 19.9857C5.53455 20.0705 5.09909 19.7726 5.01427 19.3202C4.92945 18.8679 5.2274 18.4324 5.67976 18.3476L9.82776 17.5699C9.84025 17.5672 9.85283 17.5649 9.86549 17.5628L17.8987 16.0566C18.1507 16.0093 18.3333 15.7893 18.3333 15.5328C18.3333 15.2386 18.0948 15 17.8005 15H12.5C12.0398 15 11.6667 14.6269 11.6667 14.1667V11.25C11.6667 10.7898 12.0398 10.4167 12.5 10.4167C12.9602 10.4167 13.3333 10.7898 13.3333 11.25V13.3333H17.8005C19.0152 13.3333 20 14.3181 20 15.5328C20 16.5913 19.2461 17.4996 18.2058 17.6947L14.4782 18.3936C14.8395 18.5388 15.0602 18.923 14.9857 19.3202C14.9009 19.7726 14.4654 20.0705 14.0131 19.9857L10 19.2333Z", fill: "currentColor" })] }) }; G(); var iO = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 24 24", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M20.499 6.73098C17.5766 2.02529 11.3804 0.596176 6.61281 3.50629C5.63187 4.10505 2.54065 6.2553 1.99374 11.0853C1.9316 11.634 1.43635 12.0285 0.887577 11.9664C0.338799 11.9042 -0.0556992 11.409 0.00644066 10.8602C0.65352 5.14565 4.35067 2.54395 5.57079 1.79919C11.2568 -1.67156 18.6842 0.0179238 22.198 5.67582C25.7111 11.3325 23.9302 18.7384 18.2326 22.2162C12.5401 25.6909 5.08103 23.936 1.5712 18.2845C0.580705 16.6897 1.46572 14.8855 2.56075 13.9759C3.30977 13.3537 4.27921 12.5973 5.24096 11.9912C5.72167 11.6883 6.21967 11.4106 6.70136 11.2059C7.16872 11.0072 7.69526 10.8446 8.21212 10.8446C8.9857 10.8446 9.60982 11.0002 10.1408 11.258C10.6575 11.5089 11.0428 11.8375 11.336 12.096C11.3507 12.1089 11.3652 12.1217 11.3795 12.1343C11.9472 12.6349 12.1887 12.8479 12.7587 12.8479C12.9717 12.8479 13.2835 12.7776 13.691 12.6014C14.0885 12.4295 14.5201 12.1818 14.9554 11.8902C15.8278 11.3058 16.6378 10.5974 17.1065 10.1328C17.4987 9.74392 18.1318 9.74666 18.5207 10.1389C18.9095 10.5311 18.9068 11.1642 18.5145 11.5531C17.9729 12.0901 17.0653 12.8841 16.0685 13.5518C15.5692 13.8863 15.0284 14.202 14.4849 14.4371C13.9516 14.6677 13.354 14.8479 12.7587 14.8479C11.4158 14.8479 10.6543 14.168 10.1217 13.6925C10.0847 13.6594 10.0487 13.6273 10.0137 13.5965C9.73865 13.3541 9.52403 13.1819 9.26717 13.0571C9.02458 12.9393 8.7015 12.8446 8.21212 12.8446C8.08547 12.8446 7.84732 12.892 7.4837 13.0465C7.13443 13.195 6.73518 13.4136 6.30728 13.6833C5.45181 14.2224 4.55858 14.9163 3.83871 15.5143C3.13749 16.0968 3.02808 16.8395 3.27021 17.2294C6.19664 21.9415 12.4295 23.4152 17.1906 20.5091C21.9465 17.606 23.4222 11.4379 20.499 6.73098Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("defs", { children: (0, l.jsx)("clipPath", { children: (0, l.jsx)("rect", { fill: "currentColor", height: 24, width: 24 }) }) })] }) }; G(); var iA = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 51, viewBox: "0 0 100 51", width: 100, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsxs)("g", { clipPath: "url(#mlb-a)", children: [(0, l.jsx)("path", { d: "M99.3069 5.69418C99.3243 4.20154 98.7481 2.7631 97.705 1.69531C96.6619 0.627512 95.2373 0.017828 93.7447 0.000377892C93.7089 -3.0214e-05 93.6732 -0.000107778 93.6375 0.000145248H69.1548L83.2011 23.4737L84.4975 23.6377L85.3179 24.7125V25.7135L86.204 25.894L87.0245 27.0098V27.978L87.9434 28.1421L88.8706 29.1512V31.3829C89.9743 32.3795 91.2183 33.2088 92.5627 33.8443C93.8016 34.3202 93.941 36.3057 94.6877 37.3641C95.623 38.9066 96.9029 39.522 96.6322 40.3834C96.0086 42.689 93.6457 46.578 91.4468 46.7585H82.7499V50.4834H93.6457C95.1558 50.4769 96.6015 49.8708 97.6648 48.7984C98.728 47.726 99.3217 46.2751 99.3152 44.765L99.3151 44.7401V5.69419", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M35.2039 46.8159H39.4129H39.4211C39.7247 47.3164 40.7174 49.0147 41.5871 50.508H6.04457C4.52417 50.5059 3.06661 49.9011 1.99147 48.826C1.46263 48.2966 1.04503 47.6667 0.763224 46.9734C0.48142 46.2802 0.341108 45.5376 0.350544 44.7893V5.69419C0.343033 4.94374 0.484165 4.19923 0.765799 3.50359C1.04743 2.80795 1.464 2.17495 1.99147 1.64109C3.07329 0.58108 4.53002 -0.00868998 6.04457 0.000159198H60.7942L78.426 22.965L77.6548 25.7791C77.6548 25.7791 74.4878 23.5557 71.2059 23.687H63.1572C61.3357 23.687 62.0331 19.5846 62.0331 19.5846C62.0331 19.5846 63.0505 19.7405 63.0997 19.5026C63.4115 15.7859 63.0997 10.4036 58.9974 7.68791C52.0973 3.03587 40.6436 3.9056 40.3646 15.0721L34.3096 19.3057H41.6774L41.9481 20.4708L39.9544 24.729C39.9544 24.729 39.7247 25.4674 40.1185 25.4674H42.5799C43.3183 26.3453 43.5973 29.2169 43.0148 29.3236C38.7565 30.4804 35.2039 36.2975 35.2039 46.8159ZM12 43C14.2091 43 16 41.2091 16 39C16 36.7909 14.2091 35 12 35C9.79086 35 8 36.7909 8 39C8 41.2091 9.79086 43 12 43Z", fill: "currentColor", fillRule: "evenodd" })] }), (0, l.jsx)("defs", { children: (0, l.jsx)("clipPath", { id: "mlb-a", children: (0, l.jsx)("rect", { fill: "white", height: 51, width: 100 }) }) })] }) }; G(); var iz = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 25 24", width: 25, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M7 23C6.5875 23 6.23442 22.8531 5.94075 22.5592C5.64692 22.2656 5.5 21.9125 5.5 21.5V2.5C5.5 2.0875 5.64692 1.73433 5.94075 1.4405C6.23442 1.14683 6.5875 1 7 1H18C18.4125 1 18.7657 1.14683 19.0595 1.4405C19.3532 1.73433 19.5 2.0875 19.5 2.5V5.4C19.5 5.6125 19.4277 5.79058 19.283 5.93425C19.1385 6.07808 18.9593 6.15 18.7455 6.15C18.5318 6.15 18.3542 6.07808 18.2125 5.93425C18.0708 5.79058 18 5.6125 18 5.4V4.75H7V19.25H18V18.6C18 18.3875 18.0723 18.2093 18.217 18.0655C18.3615 17.9218 18.5407 17.85 18.7545 17.85C18.9682 17.85 19.1458 17.9218 19.2875 18.0655C19.4292 18.2093 19.5 18.3875 19.5 18.6V21.5C19.5 21.9125 19.3532 22.2656 19.0595 22.5592C18.7657 22.8531 18.4125 23 18 23H7ZM7 20.75V21.5H18V20.75H7ZM7 3.25H18V2.5H7V3.25ZM23.5 11.9863C23.5 12.8454 23.3542 13.675 23.0625 14.475C22.7708 15.275 22.35 15.9917 21.8 16.625C21.6667 16.7917 21.5 16.875 21.3 16.875C21.1 16.875 20.9261 16.7968 20.7783 16.6403C20.6428 16.4967 20.5708 16.3247 20.5625 16.124C20.5542 15.9233 20.6167 15.7403 20.75 15.575C21.156 15.057 21.4658 14.4911 21.6795 13.8772C21.8932 13.2634 22 12.6304 22 11.9783C22 11.3261 21.8917 10.7 21.675 10.1C21.4583 9.5 21.1333 8.95833 20.7 8.475C20.55 8.30833 20.4667 8.1125 20.45 7.8875C20.4333 7.6625 20.5008 7.47425 20.6523 7.32275C20.8174 7.15758 21.0125 7.075 21.2375 7.075C21.4625 7.075 21.65 7.16667 21.8 7.35C22.35 7.98333 22.7708 8.69958 23.0625 9.49875C23.3542 10.2978 23.5 11.1269 23.5 11.9863ZM20.5 11.925C20.5 12.5145 20.3825 13.0809 20.1475 13.6243C19.9127 14.1678 19.5885 14.6513 19.175 15.075C19.1152 15.1375 19.0374 15.1906 18.9417 15.2343C18.8461 15.2781 18.7505 15.3 18.655 15.3C18.4517 15.3 18.275 15.2265 18.125 15.0795C17.975 14.9327 17.9 14.7552 17.9 14.547C17.9 14.449 17.9208 14.3542 17.9625 14.2625C18.0042 14.1708 18.0667 14.0833 18.15 14C18.4333 13.7167 18.6458 13.4 18.7875 13.05C18.9292 12.7 19 12.3333 19 11.95C19 11.5667 18.9292 11.1917 18.7875 10.825C18.6458 10.4583 18.4333 10.1333 18.15 9.85C18.0667 9.78333 18.0083 9.70283 17.975 9.6085C17.9417 9.51417 17.925 9.41983 17.925 9.3255C17.925 9.12517 17.9985 8.95417 18.1455 8.8125C18.2923 8.67083 18.4698 8.6 18.678 8.6C18.776 8.6 18.8708 8.61667 18.9625 8.65C19.0542 8.68333 19.1333 8.74167 19.2 8.825C19.6167 9.24167 19.9375 9.71742 20.1625 10.2523C20.3875 10.7873 20.5 11.3448 20.5 11.925Z", fill: "currentColor" })] }) }; G(); var iB = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 24 24", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M12 18C9.8935 18 8.08817 16.8087 7.33027 15.1155C7.07972 14.5558 7.55346 14 8.16673 14H15.8333C16.4465 14 16.9203 14.5558 16.6697 15.1155C15.9118 16.8087 14.1065 18 12 18Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M9 9.5C9 10.3284 8.32843 11 7.5 11C6.67157 11 6 10.3284 6 9.5C6 8.67157 6.67157 8 7.5 8C8.32843 8 9 8.67157 9 9.5Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M16.5 11C17.3284 11 18 10.3284 18 9.5C18 8.67157 17.3284 8 16.5 8C15.6716 8 15 8.67157 15 9.5C15 10.3284 15.6716 11 16.5 11Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0ZM2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var iE = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 20, viewBox: "0 0 20 20", width: 20, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M9.35462 0.470653C9.50015 0.674849 9.50956 0.946258 9.37851 1.16004C8.58337 2.45718 8.12484 3.98276 8.12484 5.61735C8.12484 9.66621 10.9425 13.0585 14.7247 13.9375C15.0609 14.0156 15.2701 14.3515 15.1919 14.6877C15.1138 15.0239 14.7779 15.2332 14.4417 15.155C10.106 14.1474 6.87484 10.2605 6.87484 5.61735C6.87484 4.28976 7.13935 3.023 7.61866 1.86766C4.49425 3.1376 2.2915 6.20413 2.2915 9.78401C2.2915 14.5014 6.11574 18.3257 10.8332 18.3257C13.9163 18.3257 16.6185 16.6926 18.1212 14.2413C18.3016 13.947 18.6864 13.8547 18.9807 14.0351C19.2749 14.2155 19.3673 14.6003 19.1869 14.8946C17.4665 17.7011 14.369 19.5757 10.8332 19.5757C5.42538 19.5757 1.0415 15.1918 1.0415 9.78401C1.0415 5.10448 4.32354 1.19298 8.71075 0.223135C8.9556 0.169011 9.20908 0.266457 9.35462 0.470653Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var iF = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 32, viewBox: "0 0 204 32", width: 204, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsxs)("g", { clipPath: "url(#myfitnesspal-logo-a)", children: [(0, l.jsx)("path", { clipRule: "evenodd", d: "M16.6098 6.84485C15.6054 7.41242 14.7419 8.1989 14.083 9.14589C13.7907 8.22609 13.1885 7.43606 12.3791 6.91038C11.4419 6.36456 10.3678 6.0992 9.28432 6.1458C8.32981 6.14567 7.39066 6.38609 6.55364 6.84485C5.62935 7.37146 4.85291 8.12285 4.29629 9.02939V6.67737H-0.211136V24.1027H4.44193V13.6242C4.436 13.1362 4.53275 12.6524 4.72592 12.2043C4.89566 11.7878 5.14274 11.4074 5.45409 11.0829C5.77731 10.7416 6.16617 10.4691 6.59733 10.2819C7.00592 10.1237 7.44083 10.0446 7.87893 10.0488C8.17139 10.05 8.46166 10.0992 8.73818 10.1945C9.0047 10.2879 9.24114 10.4514 9.42266 10.6677C9.63205 10.9373 9.78329 11.2472 9.86686 11.578C9.98758 12.0784 10.0414 12.5926 10.0271 13.1072V24.1027H14.6801V13.4203C14.6798 12.9829 14.7742 12.5507 14.9568 12.1533C15.1389 11.7587 15.385 11.397 15.685 11.0829C16.0109 10.7413 16.4021 10.4689 16.8355 10.2819C17.2416 10.1238 17.6741 10.0447 18.1099 10.0488C18.3941 10.048 18.6768 10.0922 18.9472 10.1799C19.2116 10.2736 19.4457 10.4371 19.6244 10.6532C19.839 10.9203 19.9931 11.2309 20.0759 11.5634C20.2049 12.0676 20.2661 12.5868 20.2579 13.1072V24.1027H24.9183V12.4518C24.9183 10.2285 24.4692 8.62161 23.5712 7.63128C23.0407 7.11382 22.4055 6.71607 21.7084 6.46485C21.0113 6.21363 20.2684 6.11477 19.5298 6.17493C18.5136 6.17342 17.513 6.4236 16.6171 6.90311", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M39.4382 6.67737L35.6807 18.1243L31.5957 6.67737H26.2144L33.4235 23.3381L32.8918 24.7945C32.7187 25.3998 32.3869 25.9479 31.9307 26.3819C31.4966 26.6988 30.9675 26.8581 30.4306 26.8333C29.769 26.8336 29.1102 26.7454 28.4718 26.5712L27.7072 30.0374C28.2858 30.2307 28.8803 30.3721 29.4839 30.4597C30.0513 30.535 30.6229 30.5739 31.1952 30.5762C31.993 30.5982 32.7879 30.4722 33.5399 30.2048C34.1562 29.9738 34.7116 29.6053 35.1637 29.1271C35.6706 28.5586 36.0902 27.9182 36.409 27.2266C36.7658 26.4984 37.1372 25.6027 37.5376 24.6051L44.5209 6.67737H39.4382Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M51.7662 0.349523C51.0557 0.576409 50.4025 0.953944 49.8511 1.45636C49.2858 1.98343 48.8497 2.63381 48.5767 3.3569C48.2468 4.24374 48.0886 5.18528 48.1107 6.13126V6.69924H45.3874V10.3401H48.1107V24.1027H52.7638V10.3183H56.798V6.67739H52.7638V6.00747C52.7241 5.66309 52.7697 5.31422 52.8966 4.99165C53.0237 4.66908 53.2282 4.38273 53.4919 4.1579C53.9663 3.81527 54.538 3.63403 55.1231 3.64089C55.806 3.64612 56.4858 3.73415 57.1474 3.90303L57.781 0.50244C57.1696 0.306779 56.5403 0.172614 55.9023 0.101942C55.3219 0.0367989 54.7386 0.00276854 54.1547 -3.13019e-06C53.3452 -0.00780296 52.5395 0.11011 51.7662 0.349523Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M59.5432 4.47099H64.3273V0.269409H59.5432V4.47099Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M59.6087 24.1026H64.2619V6.67737H59.6087V24.1026Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M68.944 2.03888V6.67738H66.2206V10.3183H68.944V18.4593C68.944 20.6195 69.4052 22.1561 70.3276 23.0687C71.2499 23.9813 72.6626 24.4377 74.5655 24.4377C75.1476 24.4366 75.729 24.3977 76.3059 24.3212C76.9426 24.2355 77.5711 24.0967 78.1846 23.906L77.5219 20.4618C77.2128 20.5535 76.896 20.6169 76.5754 20.6511C76.2477 20.6511 75.9345 20.7021 75.6214 20.7021C75.0929 20.7211 74.5755 20.5477 74.165 20.2142C73.9454 19.9633 73.7813 19.6689 73.6834 19.3501C73.5855 19.0314 73.5562 18.6956 73.5971 18.3646V10.3547H77.5875V6.71378H73.5971V2.03888H68.944Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M86.9082 6.8448C85.9103 7.35927 85.0682 8.13106 84.4687 9.08031V6.67732H79.954V24.1026H84.6071V13.6242C84.6002 13.133 84.7074 12.6469 84.9202 12.2042C85.1147 11.7891 85.3781 11.4099 85.6994 11.0828C86.0585 10.7608 86.4697 10.5023 86.9154 10.3182C87.4068 10.1263 87.9317 10.0347 88.4592 10.0488C89.1446 10.0173 89.8147 10.2581 90.3233 10.7187C90.7821 11.1629 91.0515 12.0003 91.0515 13.2237V24.1026H95.7045V12.5828C95.7045 10.3595 95.2191 8.73079 94.2482 7.69677C93.2772 6.66275 91.8209 6.14575 89.8791 6.14575C88.865 6.15981 87.8678 6.40908 86.9664 6.87393", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M103.511 11.9712C103.673 11.5273 103.92 11.1192 104.239 10.7697C104.57 10.4153 104.972 10.1349 105.418 9.94688C105.937 9.73943 106.491 9.63792 107.05 9.64833C107.551 9.60639 108.055 9.67387 108.528 9.84612C109.001 10.0184 109.43 10.2913 109.788 10.6459C110.423 11.4399 110.742 12.4413 110.683 13.4567H103.205C103.224 12.9575 103.327 12.465 103.511 12.0003V11.9712ZM103.642 6.78659C102.602 7.18138 101.665 7.80335 100.896 8.60704C100.11 9.44496 99.5046 10.4367 99.1197 11.5197C98.6781 12.7777 98.4636 14.1042 98.4862 15.4374C98.4862 18.3792 99.2144 20.6487 100.671 22.2458C102.127 23.8429 104.292 24.6464 107.166 24.6561C109.559 24.6561 111.382 24.1488 112.635 23.1342C113.953 21.9997 114.791 20.4067 114.979 18.6778H110.458C110.123 20.2361 109.038 21.0152 107.202 21.0152C106.646 21.0562 106.088 20.9707 105.57 20.7651C105.052 20.5596 104.586 20.2393 104.21 19.8283C103.492 18.8835 103.117 17.7229 103.147 16.5369H115.177V14.6582C115.177 12.0513 114.506 9.98086 113.166 8.44683C111.826 6.91281 109.826 6.14579 107.166 6.14579C105.966 6.13132 104.774 6.3387 103.649 6.75746", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M121.868 6.55359C121.022 6.77998 120.22 7.14673 119.494 7.63857C118.865 8.07492 118.342 8.64736 117.965 9.31339C117.594 10.0124 117.406 10.794 117.419 11.5853C117.363 12.2793 117.472 12.9765 117.737 13.6205C118.001 14.2645 118.414 14.8371 118.941 15.2917C120.343 16.2432 121.959 16.8336 123.645 17.0103L126.041 17.4107C126.675 17.46 127.276 17.7157 127.751 18.1389C128.043 18.4564 128.202 18.8732 128.196 19.304C128.213 19.5752 128.154 19.8458 128.026 20.0851C127.897 20.3245 127.703 20.5231 127.468 20.6584C126.722 20.9887 125.907 21.1312 125.093 21.0735C124.271 21.0961 123.453 20.9371 122.699 20.6075C122.34 20.4053 122.039 20.1155 121.824 19.7652C121.609 19.4149 121.486 19.0157 121.468 18.6049H117.019C117.045 19.6283 117.326 20.629 117.834 21.5177C118.29 22.2729 118.915 22.9112 119.662 23.3818C120.436 23.8615 121.293 24.1947 122.189 24.3648C123.167 24.5604 124.162 24.658 125.159 24.6561C127.751 24.6561 129.667 24.1536 130.912 23.1998C131.511 22.7319 131.991 22.1294 132.314 21.4411C132.637 20.7529 132.793 19.9982 132.769 19.2384C132.782 18.5003 132.687 17.7642 132.485 17.0539C132.3 16.4371 131.955 15.8798 131.487 15.4373C130.949 14.9224 130.313 14.5212 129.616 14.2577C128.638 13.8981 127.625 13.6395 126.594 13.4859L124.41 13.1217C123.702 13.0399 123.019 12.817 122.4 12.4664C122.225 12.3181 122.087 12.1307 121.999 11.9194C121.91 11.7081 121.873 11.4788 121.89 11.2504C121.893 11.0523 121.943 10.8577 122.035 10.6824C122.155 10.4653 122.327 10.2823 122.538 10.1508C122.833 9.96726 123.158 9.83665 123.499 9.76486C124.005 9.65294 124.524 9.60161 125.043 9.61194C125.881 9.55191 126.716 9.75562 127.431 10.1945C127.974 10.6456 128.346 11.2707 128.48 11.964L132.63 11.4323C132.506 10.7178 132.287 10.0226 131.983 9.36435C131.678 8.7118 131.225 8.14041 130.657 7.69682C129.974 7.16963 129.196 6.78124 128.364 6.55359C127.238 6.25241 126.076 6.11266 124.912 6.13853C123.885 6.12638 122.861 6.25376 121.868 6.51718", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M139.177 6.55362C138.331 6.78001 137.529 7.14676 136.803 7.6386C136.164 8.08042 135.636 8.66348 135.26 9.34253C134.889 10.0415 134.7 10.8232 134.714 11.6144C134.663 12.3055 134.778 12.9986 135.045 13.6375C135.314 14.2763 135.729 14.843 136.257 15.2918C137.66 16.2433 139.276 16.8336 140.961 17.0103L143.349 17.4108C143.984 17.46 144.585 17.7157 145.06 18.1389C145.354 18.4557 145.515 18.8723 145.511 19.304C145.529 19.5753 145.47 19.8458 145.341 20.0851C145.213 20.3245 145.02 20.5231 144.784 20.6585C144.036 20.9888 143.218 21.1312 142.402 21.0735C141.582 21.096 140.766 20.937 140.014 20.6075C139.655 20.4064 139.354 20.1169 139.138 19.7664C138.923 19.4159 138.801 19.016 138.784 18.6049H134.327C134.361 19.6273 134.641 20.6265 135.142 21.5177C135.601 22.2713 136.226 22.9091 136.971 23.3818C137.746 23.8603 138.603 24.1934 139.498 24.3648C140.478 24.5604 141.475 24.658 142.476 24.6561C145.068 24.6561 146.982 24.1537 148.221 23.1998C148.821 22.7327 149.303 22.1305 149.627 21.4421C149.951 20.7539 150.108 19.9988 150.085 19.2385C150.098 18.5003 150.002 17.7642 149.801 17.054C149.613 16.4384 149.269 15.8817 148.803 15.4373C148.251 14.9303 147.602 14.5391 146.896 14.2868C145.915 13.9284 144.899 13.6699 143.867 13.515L141.682 13.151C140.975 13.0702 140.291 12.8473 139.671 12.4956C139.497 12.348 139.358 12.1609 139.267 11.9496C139.178 11.7381 139.139 11.5086 139.155 11.2795C139.162 11.0809 139.214 10.8864 139.308 10.7115C139.425 10.4953 139.596 10.3125 139.803 10.1799C140.1 9.99522 140.429 9.86456 140.771 9.79401C141.278 9.6821 141.796 9.63077 142.316 9.64109C143.158 9.57305 144.001 9.77174 144.725 10.2091C145.266 10.6609 145.634 11.2861 145.766 11.9786L149.924 11.4469C149.799 10.7324 149.582 10.0372 149.277 9.37895C148.972 8.72458 148.515 8.15275 147.945 7.71142C147.273 7.18002 146.503 6.78653 145.679 6.55362C144.551 6.25204 143.388 6.11229 142.221 6.13855C141.194 6.12739 140.17 6.25475 139.177 6.5172", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M159.916 20.6802C159.412 20.5269 158.951 20.2604 158.569 19.9011C158.127 19.4356 157.813 18.8636 157.658 18.2409C157.444 17.3519 157.349 16.4386 157.374 15.5247V14.9932C157.354 14.1569 157.459 13.3223 157.687 12.5173C157.877 11.9125 158.215 11.3645 158.67 10.9227C159.037 10.6125 159.453 10.3664 159.901 10.1945C160.369 10.0348 160.862 9.95603 161.357 9.96145C161.857 9.95817 162.352 10.0547 162.814 10.2454C163.282 10.4496 163.69 10.7735 163.994 11.1847C164.358 11.6906 164.623 12.2615 164.772 12.8669C164.979 13.7076 165.074 14.5718 165.056 15.4373C165.072 16.282 164.972 17.1249 164.757 17.9423C164.595 18.5518 164.318 19.125 163.942 19.6317C163.623 20.0447 163.204 20.3703 162.726 20.5783C162.267 20.7788 161.771 20.8804 161.269 20.8768C160.802 20.8783 160.337 20.8171 159.886 20.6948L159.916 20.6802ZM157.286 8.97841V6.67736H152.772V30.5835H157.425V22.3041C158.041 23.1369 158.875 23.7823 159.836 24.1682C160.657 24.4768 161.527 24.6371 162.405 24.6415C163.495 24.6577 164.576 24.4287 165.566 23.9716C166.49 23.53 167.301 22.8852 167.94 22.0857C168.619 21.218 169.127 20.2298 169.44 19.1729C169.793 17.9472 169.965 16.6764 169.95 15.401C169.95 12.527 169.353 10.2673 168.158 8.62161C166.957 6.97592 165.158 6.15308 162.74 6.15308C161.666 6.12213 160.602 6.36528 159.648 6.85959C158.693 7.35391 157.881 8.08309 157.286 8.97841Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M177.115 20.5346C176.917 20.3675 176.761 20.157 176.657 19.9197C176.554 19.6824 176.506 19.4243 176.517 19.1657C176.512 18.8143 176.566 18.4647 176.678 18.1316C176.807 17.7968 177.036 17.5096 177.333 17.3088C177.753 17.0316 178.219 16.8342 178.709 16.7262C179.484 16.5486 180.274 16.4486 181.069 16.4276L183.13 16.3258V17.2287C183.152 17.8479 183.014 18.4625 182.73 19.0127C182.476 19.4775 182.126 19.8824 181.702 20.1997C180.846 20.7811 179.824 21.0721 178.789 21.0298C178.195 21.0668 177.606 20.8913 177.13 20.5346H177.115ZM175.2 7.36186C174.538 7.8078 173.981 8.39243 173.567 9.07519C173.153 9.75795 172.893 10.5225 172.804 11.3159L177.063 11.7164C177.326 10.3183 178.382 9.61193 180.217 9.61193C180.957 9.59719 181.683 9.80801 182.3 10.2163C182.613 10.4806 182.858 10.8183 183.01 11.1993C183.163 11.5803 183.218 11.993 183.173 12.4009V13.2674L180.953 13.362C179.855 13.4109 178.761 13.5227 177.676 13.697C176.666 13.8551 175.685 14.1593 174.763 14.5999C173.923 14.9995 173.201 15.609 172.666 16.3694C172.109 17.2359 171.831 18.2528 171.872 19.2822C171.85 20.0911 172.01 20.8947 172.338 21.6342C172.613 22.2797 173.038 22.8511 173.575 23.3017C174.115 23.7357 174.737 24.0553 175.404 24.2411C176.115 24.4395 176.85 24.54 177.588 24.5396C178.735 24.5885 179.874 24.3375 180.894 23.8114C181.764 23.3085 182.547 22.6665 183.21 21.9108V24.0954H187.579V13.1072C187.591 12.1232 187.465 11.1425 187.2 10.1945C186.965 9.38062 186.544 8.63267 185.969 8.00994C185.345 7.37353 184.576 6.89867 183.727 6.62641C182.629 6.28132 181.484 6.11895 180.334 6.1458C178.525 6.05438 176.727 6.47593 175.149 7.36186", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M191.074 24.1027H195.727V0.269409H191.074V24.1027Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M199.281 2.63605V0.728217H199.82V0.24762H198.159V0.728217H198.705V2.63605H199.281ZM200.628 2.63605V1.04862L201.312 2.63605H201.589L202.267 1.04862V2.63605H202.813V0.24762H202.128L201.451 1.84961L200.781 0.24762H200.052V2.63605H200.628Z", fill: "currentColor" })] }), (0, l.jsx)("defs", { children: (0, l.jsx)("clipPath", { id: "myfitnesspal-logo-a", children: (0, l.jsx)("rect", { fill: "white", height: 32, width: 203.733 }) }) })] }) }; G(), G(); var iT = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 45, viewBox: "0 0 270 45", width: 270, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsxs)("g", { clipPath: "url(#nascar-logo-a)", children: [(0, l.jsx)("path", { d: "M150.536 -0.000338881L142.388 6.21169L138.453 20.2397L143.014 26.695H156.215L153.531 36.3911H142.626L143.908 31.7824H135.246L133.407 38.5448L138.093 44.9411H153.411L161.592 38.6304L165.484 24.4738L160.881 18.074H147.698L150.36 8.49918H161.207L159.913 13.1576H168.606L170.573 6.21169L166.048 -0.000338881H150.536Z", fill: "black" }), (0, l.jsx)("path", { d: "M183.629 -0.000338881L175.449 6.21169L166.467 38.5878L171.186 44.9411H186.504L194.695 38.5878L197.218 29.4438H188.559L186.635 36.3911H175.753L183.518 8.4493H194.371L192.42 15.4954H201.067L203.676 6.21169L199.207 -0.000338881H183.629Z", fill: "black" }), (0, l.jsx)("path", { d: "M243.493 -0.000338881L231.006 44.9411H239.661L243.389 31.48H250.434L252.048 44.9411H260.51L258.656 29.6249L264.75 24.6878L269.883 6.21169L265.336 -0.000338881H243.493ZM249.765 8.4493H260.613L256.578 22.9784H245.742L249.765 8.4493Z", fill: "black" }), (0, l.jsx)("path", { d: "M97.4026 -0.000338881L90.3828 25.372L86.2128 -0.000338881H77.6348L65.1492 44.9411H73.8133L80.952 19.47L85.1862 44.9411H93.633L106.077 -0.000338881H97.4026Z", fill: "black" }), (0, l.jsx)("path", { d: "M117.388 -0.000338881L109.31 6.16885L98.5315 44.9411H107.184L110.911 31.4877H121.818L118.091 44.9411H126.716L137.494 6.21169L132.956 -0.000338881H117.388ZM117.288 8.4493H128.195L124.178 22.9654H113.272L117.288 8.4493Z", fill: "black" }), (0, l.jsx)("path", { d: "M216.67 -0.000338881L208.551 6.21169L197.817 44.9411H206.467L210.193 31.4877H221.1L217.373 44.9411H226.044L236.78 6.16885L232.237 -0.000338881H216.67ZM216.57 8.4493H227.477L223.46 22.9654H212.554L216.57 8.4493Z", fill: "black" }), (0, l.jsx)("path", { d: "M55.6473 0.00671431L43.1594 44.9482H60.4352L72.8797 0.00671431H55.6473Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M30.8732 0.0200999L18.3727 44.9998H26.7101L39.1643 0.0200999H30.8732Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M42.572 0.0200999L30.0716 44.9998H38.4089L50.8629 0.0200999H42.572Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M12.5005 0.0201609L0 44.9998H5.17897L17.6334 0.0201609H12.5005Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M21.0089 0.0200999L8.50815 44.9998H13.6875L26.1415 0.0200999H21.0089Z", fill: "currentColor" })] }), (0, l.jsx)("defs", { children: (0, l.jsx)("clipPath", { id: "nascar-logo-a", children: (0, l.jsx)("rect", { fill: "white", height: 45, width: 269.883 }) }) })] }) }; G(); var iD = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 51, viewBox: "0 0 113 51", width: 113, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M0.91748 24.8619V0.941895H39.3839V24.6131V25.1131H39.3883C39.3439 26.7876 38.8603 32.4442 34.3969 39.3826L34.3944 39.3866C31.7868 43.5262 28.3248 46.2644 25.4552 47.9794C24.0214 48.8364 22.7391 49.4356 21.792 49.8248C21.3185 50.0194 20.9297 50.1612 20.6486 50.2562C20.508 50.3037 20.3952 50.3393 20.3131 50.3637C20.275 50.3751 20.2444 50.3838 20.2212 50.39H20.0951C20.0905 50.3887 20.0857 50.3872 20.0806 50.3857C20.0624 50.3802 20.041 50.3736 20.0165 50.3659C19.9374 50.3411 19.8279 50.3053 19.6909 50.2576C19.4169 50.1623 19.0344 50.0204 18.5667 49.8257C17.6311 49.4363 16.3568 48.8369 14.9283 47.9799C12.0693 46.2647 8.60711 43.5262 5.99626 39.3864L5.99364 39.3823C1.15661 31.8748 0.91748 25.8937 0.91748 24.8619Z", stroke: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M45.5502 29.8518H46.5647L48.9321 34.076V29.8518H49.6914V35.0906H48.6769L46.3159 30.7834V35.0906H45.5502V29.8518Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M53.2393 33.6549C53.2393 34.159 52.8182 34.6695 52.1418 34.6695C51.8036 34.6695 51.3824 34.4143 51.3824 33.9931C51.3824 33.3167 52.397 33.3167 52.7352 33.3167H53.2393V33.6549ZM51.1272 32.1362C51.4654 31.881 51.8865 31.7981 52.2247 31.7981C52.9841 31.7981 53.2393 32.1362 53.2393 32.7297H52.48C51.7206 32.7297 50.7061 33.0679 50.7061 33.9995C50.7061 34.8418 51.2101 35.18 52.0588 35.18C52.7352 35.18 53.0734 34.8418 53.2393 34.5866V35.0907H53.9157V32.8063C53.9157 31.7087 53.4945 31.1982 52.397 31.1982C51.8929 31.1982 51.4654 31.3705 51.1272 31.5364V32.1299V32.1362Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M57.1318 31.8809H56.1172V33.993C56.1172 34.4141 56.3724 34.6694 56.7106 34.6694C56.9659 34.6694 57.1318 34.5864 57.2147 34.5035V35.0969C57.0424 35.1798 56.7936 35.1798 56.6213 35.1798C55.8619 35.1798 55.4408 34.8417 55.4408 34.0823V31.8873H54.5985V31.2938H55.4408V30.3622L56.1172 30.1963V31.2938H57.1318V31.8873V31.8809Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M58.1463 35.0907H58.8227V31.2876H58.1463V35.0907ZM58.0634 30.4453H58.9056V29.603H58.0634V30.4453Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M60.5966 33.2337C60.5966 32.4744 61.1007 31.798 61.8664 31.798C62.5428 31.798 63.0469 32.4744 63.0469 33.2337C63.0469 33.9101 62.6258 34.6695 61.8664 34.6695C61.0241 34.6695 60.5966 33.9101 60.5966 33.2337ZM59.8373 33.2337C59.8373 34.3313 60.6796 35.1799 61.8664 35.1799C62.964 35.1799 63.8126 34.3377 63.8126 33.2337C63.8126 32.0533 62.9703 31.2046 61.8664 31.2046C60.686 31.2046 59.8373 32.0469 59.8373 33.2337Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M64.7379 31.2875H65.4143V31.881C65.6695 31.4598 66.1736 31.2046 66.6841 31.2046C67.6987 31.2046 68.1198 31.798 68.1198 32.8126V35.097H67.4435V33.1508C67.4435 32.2192 67.1882 31.798 66.6012 31.798C65.7589 31.798 65.4207 32.3915 65.4207 33.3167V35.0906H64.7443V31.2875H64.7379Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M71.5783 33.6549C71.5783 34.159 71.2401 34.6695 70.5637 34.6695C70.2255 34.6695 69.8044 34.4143 69.8044 33.9931C69.8044 33.3167 70.736 33.3167 71.1572 33.3167H71.5783V33.6549ZM69.5491 32.1362C69.8044 31.881 70.2255 31.7981 70.6467 31.7981C71.3231 31.7981 71.5783 32.1362 71.5783 32.7297H70.819C70.1426 32.7297 69.045 33.0679 69.045 33.9995C69.045 34.8418 69.6385 35.18 70.4808 35.18C71.1572 35.18 71.4953 34.8418 71.6612 34.5866V35.0907H72.3376V32.8063C72.3376 31.7087 71.8335 31.1982 70.7296 31.1982C70.3085 31.1982 69.8873 31.3705 69.4598 31.5364L69.5428 32.1299L69.5491 32.1362Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M73.6074 29.5137H74.2838V35.0907H73.6074V29.5137Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M81.6347 32.9785C81.6347 34.4142 80.8754 35.1736 79.6056 35.1736C78.2528 35.1736 77.5764 34.4142 77.5764 32.9785V29.8518H78.3358V32.8126C78.3358 33.8272 78.591 34.5865 79.6056 34.5865C80.5372 34.5865 80.8754 33.8272 80.8754 32.8126V29.8518H81.6347V32.9785Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M82.9045 31.2875H83.5809V31.881C83.8362 31.4598 84.3403 31.2046 84.8507 31.2046C85.8653 31.2046 86.2865 31.798 86.2865 32.8126V35.097H85.6101V33.1508C85.6101 32.2192 85.3548 31.798 84.7678 31.798C84.0085 31.798 83.5873 32.3915 83.5873 33.3167V35.0906H82.9109V31.2875H82.9045Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M87.5499 31.2876H88.3093V35.0907H87.5499V31.2876ZM87.5499 29.5967H88.3093V30.439H87.5499V29.5967Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M91.27 35.0907H90.4277L89.075 31.2876H89.8343L90.8489 34.4143H90.9318L91.9464 31.2876H92.7057L91.27 35.0907Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M93.8926 32.8126C93.8926 32.3085 94.2308 31.798 94.9072 31.798C95.5007 31.798 95.8388 32.2192 95.8388 32.8126H93.8926ZM96.26 34.2483C96.0941 34.4206 95.5836 34.6695 95.1625 34.6695C94.4861 34.6695 93.8926 34.076 93.8926 33.3997H96.5982C96.5982 32.1298 96.177 31.2046 94.9072 31.2046C93.8097 31.2046 93.1333 31.9639 93.1333 33.1508C93.1333 34.4206 93.7267 35.1799 95.0795 35.1799C95.7559 35.1799 96.0111 35.097 96.26 34.9247V34.2483Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M97.5234 31.2875H98.1998V31.881C98.3721 31.4598 98.7933 31.2046 99.2144 31.2046H99.7185V31.881C99.5526 31.798 99.3803 31.798 99.2974 31.798C98.621 31.798 98.2828 32.3915 98.2828 33.406V35.097H97.5234V31.2939V31.2875Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M100.146 34.3313C100.484 34.5865 100.822 34.6695 101.078 34.6695C101.416 34.6695 101.754 34.5036 101.754 34.076C101.754 33.3997 100.146 33.4826 100.146 32.3851C100.146 31.5428 100.739 31.2046 101.499 31.2046C101.837 31.2046 102.092 31.2875 102.341 31.3769L102.258 31.9703C102.175 31.8874 101.754 31.8044 101.582 31.8044C101.161 31.8044 100.905 31.8874 100.905 32.2255C100.905 32.9849 102.513 32.819 102.513 33.9995C102.513 34.8418 101.92 35.1799 101.161 35.1799C100.822 35.1799 100.484 35.1799 100.146 35.0077V34.3313Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M103.439 31.2876H104.198V35.0907H103.439V31.2876ZM103.439 29.5967H104.198V30.439H103.439V29.5967Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M107.497 31.8809H106.482V33.993C106.482 34.4141 106.738 34.6694 107.076 34.6694C107.331 34.6694 107.497 34.5864 107.58 34.5035V35.0969C107.414 35.1798 107.242 35.1798 106.986 35.1798C106.227 35.1798 105.806 34.8417 105.806 34.0823V31.8873H104.964V31.2938H105.806V30.3622L106.482 30.1963V31.2938H107.497V31.8873V31.8809Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M108.084 36.1882H108.422C109.099 36.1882 109.264 35.3459 109.264 35.2566C109.264 35.1672 109.182 35.0013 109.182 34.8354L107.829 31.2876H108.588L109.686 34.4972L110.7 31.2876H111.46L110.024 35.1736C109.769 35.933 109.52 36.7816 108.588 36.7816C108.333 36.7816 108.167 36.7816 108.084 36.6987V36.1946V36.1882Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M45.9777 42.1034C45.9777 41.344 46.3989 40.6677 47.1582 40.6677C47.9175 40.6677 48.428 41.344 48.428 42.1034C48.428 42.7798 48.0069 43.5391 47.1582 43.5391C46.3989 43.5391 45.9777 42.7798 45.9777 42.1034ZM45.2184 42.1034C45.2184 43.2009 46.0607 44.1325 47.1646 44.1325C48.3451 44.1325 49.1108 43.2009 49.1108 42.1034C49.1108 40.9229 48.3515 40.0742 47.1646 40.0742C46.0671 40.0742 45.2184 40.9165 45.2184 42.1034Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M50.5401 40.7569H49.6085V40.1635H50.5401V39.8253C50.5401 38.8937 50.7954 38.3066 51.81 38.3066H52.3141V38.9001C52.2311 38.9001 52.0588 38.8171 51.9759 38.8171C51.2995 38.8171 51.2995 39.2383 51.2995 39.7487V40.1699H52.3141V40.7633H51.2995V43.973H50.5401V40.7633V40.7569Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M57.3806 39.57C56.9594 39.3977 56.7872 39.3148 56.366 39.3148C55.9449 39.3148 55.4344 39.4807 55.4344 39.9912C55.4344 41.0057 57.7188 40.8335 57.7188 42.5244C57.7188 43.6219 56.8765 44.1324 55.7726 44.1324C55.4344 44.1324 55.0132 43.9665 54.675 43.8772L54.758 43.2008C55.0132 43.2838 55.5173 43.456 55.8555 43.456C56.2767 43.456 56.8701 43.2008 56.8701 42.6137C56.8701 41.4333 54.675 41.7715 54.675 40.0805C54.675 39.1489 55.3514 38.6448 56.366 38.6448C56.7042 38.6448 57.1254 38.7277 57.4635 38.9L57.3806 39.5764V39.57Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M58.7334 40.1634H59.4927V43.9665H58.7334V40.1634ZM58.7334 38.5554H59.4927V39.3148H58.7334V38.5554Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M60.7625 40.1635H61.4388V40.7569C61.6941 40.3358 62.1982 40.0806 62.7087 40.0806C63.7232 40.0806 64.1444 40.674 64.1444 41.7715V43.9666H63.468V42.0204C63.468 41.0888 63.2128 40.6676 62.6257 40.6676C61.8664 40.6676 61.4452 41.261 61.4452 42.1863V43.9602H60.7688V40.1571L60.7625 40.1635Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M66.9329 43.4561C66.2565 43.4561 65.8354 42.7798 65.8354 42.1034C65.8354 41.427 66.1736 40.6677 66.9329 40.6677C67.6923 40.6677 68.0304 41.344 68.0304 42.1034C68.0304 42.8627 67.6093 43.4561 66.9329 43.4561ZM68.7068 40.1572H68.1134V40.7506H68.0304C67.8582 40.3295 67.5263 40.0742 66.85 40.0742C65.6695 40.0742 65.076 41.1717 65.076 42.1034C65.076 43.118 65.6695 43.9602 66.767 43.9602C67.1882 43.9602 67.6986 43.7943 68.0368 43.3668V43.788C68.0368 44.6302 67.6157 45.0578 66.8563 45.0578C66.3522 45.0578 66.0141 44.9748 65.5036 44.7196L65.4206 45.396C66.0141 45.6512 66.3523 45.6512 66.7734 45.6512C68.1262 45.6512 68.7196 44.9748 68.7196 43.8773V40.1572H68.7068Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M72.2547 42.5309C72.2547 43.1243 71.8335 43.5454 71.1572 43.5454C70.819 43.5454 70.3978 43.2902 70.3978 42.8691C70.3978 42.1927 71.4124 42.1927 71.7506 42.1927H72.2547V42.5309ZM70.1426 41.0122C70.4808 40.8463 70.9019 40.674 71.2401 40.674C71.9995 40.674 72.2547 41.0122 72.2547 41.6886C71.9165 41.6056 71.7506 41.6056 71.4954 41.6056C70.736 41.6056 69.7214 41.9438 69.7214 42.8754C69.7214 43.7177 70.2255 44.1453 71.0742 44.1453C71.7506 44.1453 72.0888 43.7241 72.2547 43.5518H72.3376V43.973H72.9311V41.6886C72.9311 40.591 72.5099 40.0806 71.4124 40.0806C70.9083 40.0806 70.4808 40.2465 70.1426 40.4188V41.0122Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M76.9894 42.1034C77.0723 42.6968 76.7341 43.5391 75.9748 43.5391C75.1325 43.5391 74.7943 42.6968 74.7943 42.1034C74.7943 41.344 75.2155 40.6677 75.9748 40.6677C76.7341 40.6677 77.0723 41.344 76.9894 42.1034ZM74.1179 45.5683H74.7943V43.4561H74.8773C75.0495 43.7943 75.4707 44.1325 76.1471 44.1325C77.3276 44.1325 77.7551 43.035 77.7551 42.0204C77.7551 41.0058 77.251 40.0742 76.1471 40.0742C75.4707 40.0742 75.0495 40.4124 74.7943 40.7506V40.1572H74.1179V45.5683Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M79.1844 42.1034C79.1844 41.344 79.6885 40.6677 80.4542 40.6677C81.2199 40.6677 81.6347 41.344 81.6347 42.1034C81.6347 42.7798 81.2135 43.5391 80.4542 43.5391C79.6119 43.5391 79.1844 42.7798 79.1844 42.1034ZM78.425 42.1034C78.425 43.2009 79.2673 44.1325 80.4542 44.1325C81.5517 44.1325 82.4004 43.2009 82.4004 42.1034C82.4004 40.9229 81.5581 40.0742 80.4542 40.0742C79.2737 40.0742 78.425 40.9165 78.425 42.1034Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M83.3257 40.1635H84.0021V40.757C84.168 40.3358 84.5955 40.0806 85.0167 40.0806C85.1826 40.0806 85.2719 40.0806 85.4378 40.1635V40.757C85.3548 40.757 85.1826 40.674 85.0996 40.674C84.4232 40.674 84.0021 41.2674 84.0021 42.282V43.973H83.3257V40.1699V40.1635Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M86.7076 41.6822C86.7906 41.2611 87.0458 40.6677 87.8052 40.6677C88.3986 40.6677 88.7368 41.1717 88.7368 41.6822H86.7076ZM89.1579 43.118C88.992 43.2839 88.4816 43.5391 87.9775 43.5391C87.3011 43.5391 86.7076 43.035 86.7076 42.2693H89.4961C89.4961 40.9995 89.075 40.0742 87.8052 40.0742C86.7076 40.0742 86.0312 40.9165 86.0312 42.0204C86.0312 43.2902 86.6247 44.1325 87.9775 44.1325C88.5709 44.1325 88.9091 43.9666 89.1579 43.8773V43.118Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M94.1415 19.3743C95.5772 20.7271 98.4487 21.9076 101.914 21.9969C104.957 22.0799 107.408 21.1546 107.573 18.615C107.912 13.2039 93.8862 15.3224 94.4733 6.10825C94.7285 1.54584 99.2909 0.0207894 104.192 0.110123C106.897 0.110123 109.513 0.786508 111.038 1.54585V4.75548C109.264 3.575 106.731 2.80928 104.702 2.72633C101.575 2.72633 99.0421 3.23043 99.0421 5.51482C98.9591 10.3325 113.068 9.14561 112.563 18.2768C112.225 23.4326 107.242 25.0343 102.003 24.9513C98.9591 24.8684 96.0047 24.2749 94.2308 23.3433L94.1479 19.3743H94.1415Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M80.9583 24.9512C74.4497 24.9512 70.736 22.0798 70.736 16.0753V0.780029H75.5536V16.0753C75.5536 19.7954 77.4105 21.9904 80.9647 21.9904C84.5189 21.9904 86.2864 19.7954 86.2864 16.0753V0.780029H91.187V16.0753C91.187 22.0734 87.4669 24.9512 80.9647 24.9512H80.9583Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M62.7916 0.780062V17.9322L51.6376 2.0435C51.1335 1.28416 50.2019 0.773682 49.2703 0.773682H45.5502V24.1792H48.8428V7.02705L59.9138 22.9157C60.5072 23.6751 61.3495 24.1855 62.3641 24.1855H65.9949V0.780062H62.7852H62.7916Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M36.2531 22.0733C36.7636 22.3285 37.1018 22.6667 37.2677 23.3431L37.2358 23.3048C37.3188 23.5601 37.3188 23.8089 37.3188 23.9812C37.3188 24.4917 37.1528 24.9958 36.8147 25.334C35.8001 26.6868 33.0945 27.0249 31.6588 27.1079C31.8311 27.6184 31.997 28.3777 31.997 29.4752V31.0833C31.997 32.0978 32.08 33.0295 32.5011 33.5336C32.7985 33.9095 33.0317 34.019 33.1965 34.0964C33.2191 34.107 33.2404 34.117 33.2604 34.127C33.3063 34.1712 33.3459 34.2036 33.3808 34.2322C33.4769 34.311 33.5378 34.3609 33.5986 34.5481C33.6869 34.5939 33.7969 34.6162 33.9056 34.6383C34.009 34.6592 34.1111 34.68 34.1921 34.7204C34.4473 34.8863 34.8684 35.1416 34.8684 35.1416C34.8684 35.1416 34.2814 35.3139 34.0262 35.4798C33.688 35.7286 33.3498 35.9839 33.3498 35.9839C33.6816 36.0668 33.8539 36.405 33.8539 36.405C33.8539 36.405 33.0052 36.9091 32.5841 37.1643C32.5011 37.2473 32.4118 37.3366 32.2459 37.4196C31.9906 37.9301 31.7418 38.5235 31.5695 39.0276C31.4515 39.1981 31.2167 39.7698 31.0538 40.1664C30.9789 40.3487 30.9192 40.494 30.8931 40.5463C30.6379 40.8845 30.3826 41.0567 29.8785 41.1397L29.2021 41.312C28.1876 41.6502 27.4282 41.8161 27.09 41.4779C27.0007 41.4779 26.9177 41.3949 26.9177 41.312C26.6689 41.4013 26.4136 41.5672 26.4136 41.5672C26.4136 41.5672 26.4136 41.4013 26.6689 41.0631C26.5911 40.9016 26.5077 40.8186 26.4292 40.7404C26.424 40.7353 26.4188 40.7301 26.4136 40.7249H26.3307C26.1648 40.7249 25.8266 40.9802 25.8266 40.9802C25.8266 40.9802 25.8266 40.7313 25.9925 40.4761C26.0277 40.4433 26.0491 40.4106 26.0671 40.383C26.0947 40.3406 26.1146 40.3102 26.1648 40.3102C26.0818 40.2208 26.0818 40.1379 26.0818 40.0549H25.9989C25.6671 40.0549 25.4948 40.2208 25.4948 40.2208C25.4948 40.2208 25.4118 40.0549 25.6671 39.7167C25.833 39.6274 25.9989 39.5445 26.1712 39.4615L26.3371 39.2956C26.5923 39.0404 27.0134 38.9574 27.6069 38.9574H29.0426C29.0538 38.9347 29.0657 38.9104 29.0783 38.8847C29.2536 38.5283 29.5639 37.8974 29.8019 37.2664C30.01 36.5798 30.2181 35.9483 30.3328 35.6C30.3588 35.5211 30.38 35.4567 30.3954 35.4096C30.0572 34.982 28.6215 33.4634 28.6215 33.4634C28.2962 33.1422 28.0772 32.8547 27.9165 32.6438C27.825 32.5237 27.7524 32.4284 27.6898 32.3658C27.441 32.8763 27.0135 33.8909 27.2687 34.312C27.441 34.5673 27.5239 34.7396 27.5239 34.9055C27.6211 34.9055 27.7205 34.9339 27.8028 34.9575C27.861 34.9742 27.9107 34.9884 27.9451 34.9884C28.2833 35.1543 28.6215 35.4096 28.6215 35.4096C28.6215 35.4096 28.1174 35.5819 27.7792 35.7478C27.441 35.9201 27.1028 36.3412 27.1028 36.3412C27.441 36.3412 27.6069 36.6794 27.6069 36.6794C27.6069 36.6794 26.7646 37.1005 26.4264 37.3558L26.0053 37.7769C25.9528 37.9384 25.8645 38.0667 25.7857 38.1812C25.74 38.2477 25.6975 38.3094 25.6671 38.3704C25.6201 38.4609 25.5749 38.5744 25.5306 38.6857C25.4905 38.7863 25.4512 38.8851 25.4118 38.9638L25.1566 39.3849C24.9843 39.7231 24.6461 39.8954 24.142 39.9784L23.4656 40.2336C22.451 40.4888 21.6917 40.6611 21.3535 40.4059C21.2937 40.3504 21.2368 40.292 21.1808 40.2345C21.1531 40.2062 21.1257 40.1781 21.0983 40.1506C20.9324 40.1506 20.5942 40.4059 20.5942 40.4059C20.5942 40.4059 20.5942 40.24 20.7601 39.9018C20.843 39.9018 20.843 39.8188 20.843 39.8188C20.8023 39.775 20.7816 39.7328 20.7613 39.6913C20.7401 39.6481 20.7194 39.6059 20.6771 39.5636C20.4219 39.5636 20.0837 39.8188 20.0837 39.8188C20.0837 39.8188 20.0837 39.6529 20.2496 39.3147C20.2813 39.2831 20.3009 39.2514 20.3176 39.2243C20.3447 39.1805 20.3642 39.1488 20.4155 39.1488C20.3326 39.0659 20.3326 38.8936 20.3326 38.8936H20.2496C19.9944 38.8936 19.6562 39.0659 19.6562 39.0659C19.6562 39.0659 19.6562 38.9 19.9114 38.5618C20.0007 38.3895 20.2496 38.3065 20.5048 38.3065C20.5048 38.2236 20.5878 38.2236 20.5878 38.2236C20.843 37.8854 21.2642 37.8024 21.8576 37.8024C22.0973 37.8612 22.5903 37.8367 22.9775 37.8174C23.1366 37.8095 23.2778 37.8024 23.3763 37.8024C23.5486 37.3749 24.0527 36.1944 24.0527 36.1944L24.2186 35.8562C24.2592 35.6904 24.3613 35.4633 24.4547 35.2552C24.5519 35.0389 24.6397 34.8433 24.6397 34.7587C24.6397 34.6758 24.5568 34.6758 24.5568 34.6758C24.2371 34.356 23.8848 33.9062 23.5423 33.4688C23.338 33.2078 23.1371 32.9513 22.9488 32.7296C22.9256 32.6832 22.896 32.6234 22.8615 32.554C22.7726 32.3747 22.6518 32.131 22.5276 31.8873C22.3585 31.9287 22.2102 31.9718 22.0618 32.0149C21.9134 32.058 21.7651 32.101 21.596 32.1425C21.9342 32.3914 22.0171 32.6466 22.0171 32.9848C21.4237 32.8189 20.8303 32.8189 19.988 33.323C19.8221 33.4953 19.7391 33.5782 19.5668 33.5782C19.905 33.8335 20.1603 34.2546 20.1603 34.2546C20.1603 34.2546 19.5668 34.3376 19.0627 34.5928C18.6352 34.7651 18.1311 35.2692 18.1311 35.2692C18.5523 35.3521 18.8075 35.7733 18.8075 35.7733C18.8075 35.7733 17.7929 36.2774 17.2888 36.6156C17.0658 36.725 16.8066 36.9454 16.559 37.1561C16.4312 37.2648 16.3064 37.371 16.1913 37.4579C15.7701 38.1343 15.4319 38.6384 15.4319 38.6384C15.1023 39.136 15.0151 39.3911 14.8513 39.8706L14.8385 39.9082L14.7556 40.0741C14.7556 40.2737 14.7022 40.3707 14.6383 40.4868C14.6225 40.5155 14.6061 40.5453 14.5897 40.5782C14.4174 40.9164 14.0792 41.0887 13.5751 41.1716L12.8987 41.3439C11.7182 41.6821 10.8695 41.8544 10.4484 41.5991C10.4428 41.5932 10.4373 41.5872 10.4318 41.5813C10.3547 41.4987 10.2825 41.4213 10.2825 41.3439C10.0336 41.4332 9.77839 41.5991 9.77839 41.5991C9.77839 41.5991 9.77839 41.4332 9.94429 41.095C9.94429 41.0397 9.97194 41.0121 10.0272 41.0121C9.90679 40.9541 9.83 40.8524 9.76635 40.7681C9.73897 40.7319 9.71401 40.6988 9.68905 40.6739C9.52315 40.6739 9.18496 40.8462 9.18496 40.8462C9.18496 40.8462 9.18496 40.6803 9.4402 40.3421L9.52315 40.2591C9.4402 40.1698 9.4402 40.0868 9.4402 40.0039V39.9209H9.35724C9.102 39.9209 8.76381 40.1762 8.76381 40.1762C8.76381 40.1762 8.76381 39.9273 9.01905 39.6721C9.19134 39.4998 9.44658 39.4168 9.61248 39.4168C9.69544 39.4168 9.69544 39.3339 9.69544 39.3339C9.95068 39.0786 10.4548 38.9127 11.0482 38.9957C11.1599 38.9957 11.3682 38.9798 11.6025 38.9619C11.9034 38.939 12.2471 38.9127 12.4839 38.9127C12.6498 38.6575 12.9051 38.0641 13.2433 36.9665C13.3907 36.3806 13.5381 35.7096 13.6683 35.1169C13.7635 34.6832 13.8496 34.2915 13.9197 34.0058C13.5815 33.6676 12.988 32.8189 12.9051 32.653C12.6225 32.0186 12.6339 31.6782 12.6453 31.3377C12.6476 31.2707 12.6498 31.2036 12.6498 31.1343H12.4839C12.4214 31.2247 12.326 31.3158 12.226 31.4115C12.0504 31.5794 11.8604 31.7612 11.8075 31.9766C11.5587 31.6384 11.3864 31.3895 11.3034 31.1343C10.7164 31.3895 9.52953 31.8107 9.10838 31.5555C9.02543 31.6416 8.94088 31.7676 8.85634 31.8936C8.77179 32.0197 8.68724 32.1457 8.60429 32.2318C8.17676 32.57 7.67266 32.8253 7.67266 32.8253C7.67266 32.8253 7.75561 32.1489 7.83857 31.7277C7.83857 31.0514 7.67266 30.4579 7.67266 30.4579C7.41742 30.7961 6.91332 30.8791 6.91332 30.8791C6.91332 30.8791 6.99628 29.9474 6.91332 29.1051C6.87185 28.8946 6.82877 28.6409 6.7857 28.3873C6.74263 28.1336 6.69956 27.88 6.65808 27.6694C6.57513 27.5865 6.49218 27.4142 6.49218 27.3312C6.19042 26.8824 5.94887 26.4625 5.78465 26.1771C5.67106 25.9796 5.59447 25.8465 5.56055 25.8126C5.54969 25.7958 5.53809 25.7781 5.52582 25.7593C5.35071 25.4909 5.03974 25.0144 4.80121 24.4598C4.71826 24.3705 4.04188 23.8664 4.04188 23.8664C3.79302 23.6111 3.62073 23.2729 3.62073 22.9347C3.62073 22.7688 3.62073 22.6859 3.70368 22.5136H3.78664C3.70368 22.5136 3.70368 22.4306 3.70368 22.4306C3.53778 22.2583 3.19958 22.1754 3.19958 22.1754C3.19958 22.1754 3.28254 22.0095 3.70368 22.0095V21.9265C3.70368 21.5883 3.79302 21.4224 3.95892 21.1672C3.79302 21.0779 3.53778 20.912 3.53778 20.912C3.53778 20.912 3.71006 20.829 4.13121 20.912H4.21416C4.21416 20.8665 4.23568 20.8441 4.25679 20.8222C4.27714 20.8011 4.29712 20.7804 4.29712 20.7397H4.38007C4.38007 20.7397 4.4694 20.6567 4.55236 20.6567C4.55236 20.5738 4.55236 20.4908 4.4694 20.4908C4.38645 20.242 4.04826 19.9867 4.04826 19.9867C4.04826 19.9867 4.3035 19.8974 4.64169 20.0697C4.7706 20.0697 4.90336 20.2199 5.03399 20.3677C5.07148 20.4102 5.10879 20.4524 5.14579 20.4908H5.56693C5.87432 20.5662 6.03938 21.0633 6.25856 21.7234C6.28052 21.7896 6.30302 21.8574 6.32627 21.9265V22.1818L6.49218 22.6029C6.52922 22.7155 6.57072 22.8452 6.61376 22.9798C6.76348 23.4478 6.93184 23.9742 6.99627 24.0386C7.33447 24.4598 7.92152 24.9703 8.51495 25.4744C8.432 24.9639 8.51495 24.6257 8.9361 24.2045C8.42562 24.3705 7.74923 23.8664 7.58333 23.5282C7.58333 23.5282 8.51495 23.2729 8.51495 22.7688C8.51495 22.7483 8.47905 22.7379 8.42115 22.7212C8.2449 22.6703 7.86478 22.5605 7.67266 21.9265C8.08373 21.6923 8.12739 21.5805 8.20023 21.3939C8.23255 21.3111 8.27061 21.2137 8.34905 21.0842C8.65517 20.7781 8.96129 20.5452 9.32893 20.5653C9.37328 20.5801 9.40993 20.5801 9.44658 20.5801C9.40664 20.5723 9.36745 20.5674 9.32893 20.5653C9.27289 20.5465 9.20456 20.504 9.10838 20.4079C8.9533 20.3698 8.83445 20.2607 8.7266 20.1616C8.59925 20.0447 8.48724 19.9418 8.34905 19.9867C8.85953 19.1444 10.2952 18.9721 10.9716 19.2274C10.9162 19.1421 10.8508 19.0668 10.7883 18.9949C10.6637 18.8513 10.5505 18.721 10.5505 18.551C10.9302 18.6371 11.3322 18.5733 11.7342 18.5095C12.1362 18.4457 12.5382 18.3819 12.9178 18.468C13.5942 18.6403 13.9324 18.8892 14.1877 19.4826C14.4429 18.8892 14.7811 18.6339 15.4575 18.468C15.8892 18.3804 16.2978 18.4463 16.695 18.5104C17.0787 18.5723 17.4518 18.6325 17.8248 18.551C17.8248 18.6976 17.7406 18.8148 17.6531 18.9364C17.5884 19.0264 17.5219 19.1188 17.4866 19.2274C18.0737 18.9721 19.5158 19.1444 20.0199 19.9867C19.8817 19.9418 19.7697 20.0447 19.6423 20.1616C19.5345 20.2607 19.4156 20.3698 19.2605 20.4079C19.153 20.5154 19.1126 20.5235 19.057 20.5346C19.0236 20.5412 18.9847 20.549 18.9224 20.5801C19.3435 20.4908 19.7646 20.7461 20.0199 21.0842C20.0983 21.2137 20.1364 21.3111 20.1687 21.3939C20.2415 21.5805 20.2852 21.6923 20.6963 21.9265C20.5089 22.5608 20.1261 22.6704 19.9484 22.7213C19.8902 22.738 19.854 22.7483 19.854 22.7688C19.854 23.2729 20.7856 23.5282 20.7856 23.5282C20.6133 23.8664 19.9369 24.3768 19.4328 24.2045C19.6881 24.4598 19.854 24.7086 19.854 24.9639C20.5304 25.2127 21.3727 25.385 22.3872 25.468C24.3561 25.7156 25.526 25.6389 26.7538 25.5583C26.7914 25.5559 26.829 25.5534 26.8667 25.5509C27.4601 25.468 28.1365 25.385 28.8129 25.385C29.5013 25.4411 30.0893 25.5272 30.4745 25.5837C30.7035 25.6172 30.8608 25.6403 30.925 25.6403C30.9632 25.6376 31.0032 25.6348 31.0448 25.632C32.2947 25.5455 35.0078 25.3579 35.7426 24.5427C35.8256 24.3768 35.9086 24.2045 35.9086 24.0386C35.9086 23.9557 35.9086 23.8664 35.8256 23.7834C35.8256 23.5282 35.6533 23.3559 35.4874 23.19C34.6451 22.7624 32.6989 23.4388 32.0225 23.6941C31.975 23.7085 31.9285 23.7226 31.8829 23.7365C31.1197 23.9683 30.5887 24.1296 29.234 24.3705C27.9706 24.5364 24.2505 24.8746 22.8977 23.777C22.4766 23.4388 22.2213 22.9347 22.1384 22.3413C22.0554 21.582 22.3107 20.9885 22.7318 20.5674C23.2359 19.9803 24.0846 19.7251 25.5203 19.7251C25.9443 19.7251 26.4987 19.7674 27.2113 19.8219C27.496 19.8436 27.8059 19.8673 28.1429 19.891C28.4811 19.5528 29.4127 18.8764 30.5102 18.9594C31.4103 18.9594 31.7135 19.0597 32.0015 19.155C32.173 19.2117 32.339 19.2666 32.6223 19.2976C33.2987 19.2976 34.0581 19.0423 34.0581 19.0423C34.0581 19.0423 33.9751 19.2976 33.8028 19.4635C33.6369 19.6358 33.3817 19.7187 33.3817 19.7187C33.3817 19.7187 34.141 19.6358 34.7344 19.7187C35.4108 19.8017 36.0043 20.4781 36.0043 20.4781C36.0043 20.4781 35.3279 20.3951 34.7344 20.4781C34.515 20.5394 34.3305 20.6243 34.1508 20.707C33.8447 20.8478 33.5527 20.9822 33.1264 20.9822C32.6223 20.9822 32.2841 20.8099 32.2841 20.8099C32.2841 20.8099 32.2841 21.0651 32.4501 21.231C32.7053 21.4033 33.0435 21.4862 33.0435 21.4862C33.0435 21.4862 31.2696 22.0733 29.6616 21.6522C28.5576 21.4799 28.2195 21.1417 28.0535 20.9758L25.5203 20.8928C24.5951 20.8928 23.9187 21.0587 23.6634 21.314C23.5805 21.4862 23.4082 21.9074 23.4082 22.2456C23.4233 22.2759 23.4387 22.3091 23.4547 22.3438C23.5263 22.4989 23.6108 22.6819 23.7464 22.7497C24.761 23.592 27.9706 23.2538 28.9852 23.0879C30.255 22.8326 30.5932 22.7497 31.7737 22.4115C33.2094 21.8181 34.9004 21.3969 36.2531 22.0733ZM36.0936 22.4181C36.5148 22.5904 36.7636 22.8392 36.9359 23.4326L36.9551 23.4071C37.121 24.0835 37.038 24.6769 36.6169 25.181C35.6023 26.4508 32.8138 26.7061 31.461 26.789H31.2887L31.3717 27.0443C31.3869 27.1214 31.4079 27.2129 31.432 27.3181C31.5396 27.7874 31.7099 28.5303 31.7099 29.4946V30.4262C31.7099 31.696 31.7099 33.0488 32.3033 33.8081C32.7245 34.2293 32.9733 34.4016 33.1456 34.4845C33.3115 34.5675 33.3115 34.5739 33.3115 34.7398C33.3115 34.9057 33.2222 35.0716 33.0563 35.2439L32.801 35.665C32.3799 36.4243 31.7035 37.7771 31.2824 38.8746C31.1101 39.2958 30.6889 40.2274 30.606 40.3104C30.4401 40.5592 30.2678 40.7315 29.8466 40.8145L29.0873 40.9804C28.6662 41.1463 27.9068 41.3186 27.5686 41.3186C27.5686 41.2292 27.6516 41.1463 27.7345 41.0633C27.7345 40.8145 27.6516 40.6422 27.6516 40.6422C27.6516 40.6422 27.2304 40.6422 26.9752 40.8145L26.8922 40.7315C26.9816 40.7315 27.0645 40.6422 27.0645 40.4763C27.1539 40.221 26.9816 40.0551 26.9816 40.0551C26.9816 40.0551 26.8157 40.0551 26.5604 40.1381L26.4775 40.0551C26.5604 40.0551 26.6498 39.9722 26.7327 39.8892C26.7864 39.7818 26.7706 39.7065 26.7527 39.6217C26.743 39.5755 26.7327 39.5265 26.7327 39.4681C26.905 39.3851 27.2432 39.3022 27.6643 39.3022H29.3553V39.2192C29.3942 39.14 29.4471 39.0376 29.5085 38.9186L29.5086 38.9186C29.7095 38.5297 30.0022 37.9632 30.1976 37.4453C30.5358 36.3478 30.791 35.3332 30.791 35.3332V35.2502L28.9342 33.2211C28.1748 32.3724 27.9196 31.9513 27.9196 31.9513V31.8683C27.9196 31.8683 27.5814 31.5301 27.3261 31.026L27.1602 30.8601L27.1171 30.7889C26.8769 30.392 26.6418 30.0034 26.4009 29.7626C26.0627 29.4244 25.4693 29.0032 25.4693 29.0032L25.214 29.2585C25.214 29.2585 25.5522 29.7626 25.6352 30.0178C25.214 30.1008 18.029 32.2129 18.029 32.2129L18.112 32.3788C18.1949 32.634 18.2779 33.0552 18.2779 33.3104C18.2255 33.524 17.2951 35.0534 16.4462 36.4488L16.4461 36.4488L16.4461 36.4489L16.4457 36.4494C15.9506 37.2633 15.4833 38.0314 15.2342 38.4663C14.896 38.9767 14.7237 39.3149 14.5578 39.7361L14.4748 39.9913C14.4748 40.1572 14.3919 40.3295 14.3919 40.3295C14.226 40.6613 13.9707 40.7507 13.5496 40.8336L12.8732 40.9995C12.2798 41.1654 11.2652 41.4207 10.844 41.3377C10.8947 41.3377 10.9144 41.3044 10.941 41.2596C10.9579 41.231 10.9776 41.1977 11.01 41.1654C11.0993 40.8336 10.927 40.6613 10.927 40.6613C10.927 40.6613 10.5888 40.6613 10.3336 40.8336C10.3336 40.7881 10.3121 40.7658 10.2909 40.7439C10.2706 40.7228 10.2506 40.702 10.2506 40.6613C10.3019 40.6613 10.3215 40.6296 10.3485 40.5858C10.3653 40.5588 10.3848 40.5271 10.4165 40.4954C10.4995 40.2466 10.4165 39.9913 10.4165 39.9913C10.4165 39.9913 10.1677 39.9913 9.91242 40.0743H9.82947C9.8575 40.0482 9.88491 40.0304 9.91188 40.0128C9.97087 39.9743 10.0278 39.9372 10.0847 39.819C10.1677 39.7361 10.1677 39.5638 10.0847 39.4808C10.3399 39.3149 10.6781 39.3149 11.0163 39.3149H11.0164C11.3546 39.3149 12.2862 39.3149 12.7073 39.232H12.7902V39.149C12.9562 38.9831 13.2943 38.3067 13.6325 37.0369C13.7835 36.437 13.9344 35.779 14.0669 35.2016L14.0669 35.2014C14.1584 34.8024 14.2411 34.4419 14.3089 34.1655C14.6471 33.9166 15.4065 32.902 15.4894 32.6468C15.8055 32.0105 15.7904 31.6403 15.7777 31.3283C15.7701 31.1428 15.7634 30.9779 15.8276 30.7899C15.8276 31.0526 16.0112 31.2251 16.1988 31.4015C16.3713 31.5636 16.5472 31.7289 16.5869 31.9704C17.4316 30.765 17.4138 30.1183 17.3961 29.4762C17.3891 29.2209 17.382 28.9664 17.4292 28.6778C17.5951 29.016 18.0163 29.1883 18.6097 29.2712C18.5204 28.6778 18.6097 28.3396 18.7756 27.9185C18.844 27.7448 18.9711 27.5277 19.1025 27.303C19.2899 26.9829 19.4862 26.6473 19.535 26.3998C19.6595 26.0953 19.7374 25.8341 19.8023 25.6163C19.8272 25.5329 19.8502 25.4559 19.8731 25.3852C20.5495 25.5511 21.3918 25.7234 22.3235 25.8064C24.4356 26.0552 25.7054 25.9723 26.8859 25.8893C27.5622 25.8064 28.1556 25.8064 28.832 25.8064H28.8321C30.0189 25.8064 30.8612 25.9723 30.8612 25.9723H30.9442C31.0445 25.9661 31.1514 25.9599 31.2637 25.9534C32.7649 25.8665 35.2334 25.7236 36.0171 24.7025C36.2723 24.4472 36.3553 24.109 36.2723 23.6049C36.1 23.2667 35.9341 23.0115 35.6789 22.9285C34.7472 22.4181 32.7181 23.0944 31.9587 23.3497H31.8758C31.0271 23.6049 30.606 23.6879 29.1703 23.9431C27.7345 24.1984 24.3526 24.4536 23.1721 23.522C22.751 23.1838 22.5787 22.7626 22.4957 22.3415C22.4957 21.6651 22.6616 21.161 22.9998 20.8228C23.421 20.3187 24.1803 20.0635 25.5331 20.0635C25.9571 20.0635 26.5114 20.1058 27.224 20.1603L27.224 20.1603C27.5087 20.182 27.8187 20.2057 28.1557 20.2294L28.328 20.3953L28.1557 20.5676H25.5331C24.4356 20.5676 23.7592 20.7335 23.421 21.0717C23.2551 21.3205 23.0828 21.831 23.0828 22.2522C23.0828 22.501 23.338 22.9222 23.5039 23.0944C24.5795 24.0074 27.6037 23.6213 28.9975 23.4433L29.0809 23.4326C30.0578 23.3001 30.4834 23.1713 31.1652 22.965C31.3697 22.9031 31.5971 22.8343 31.8694 22.7563C33.3051 22.2522 34.9131 21.7417 36.0936 22.4181ZM17.158 22.1637L17.1579 22.1637L17.1578 22.1638L17.1577 22.1639C17.1237 22.1953 17.0939 22.2227 17.0718 22.2457H17.0655L17.5696 23.1773L16.0509 24.9512V26.0487L15.4574 26.4699C15.3841 26.8481 15.3057 27.0865 15.2311 27.3132L15.2022 27.4015C15.2022 27.4798 14.7465 27.5532 14.2945 27.626C14.2307 27.6362 14.167 27.6465 14.1047 27.6567H14.0217L13.8847 27.6326C13.4285 27.5524 12.9996 27.4769 12.9242 27.4015C12.8931 27.3059 12.8737 27.2103 12.8525 27.1061L12.8525 27.106C12.8171 26.9318 12.7767 26.7333 12.669 26.4699L12.0755 26.0487V24.9512L10.6398 23.1773L11.1439 22.2457C10.895 22.0797 10.3846 21.6522 10.6398 21.1481C10.9635 20.5802 11.5969 20.7896 11.8745 20.8813L11.9096 20.8929C11.9096 20.8099 13.4347 20.1335 13.5176 20.1335C13.4347 20.1335 14.1111 20.8929 14.1111 20.8929L14.7045 20.1335C14.7045 20.1335 16.3125 20.8099 16.3125 20.8929C16.4784 20.8099 17.2377 20.5547 17.493 21.1481C17.786 21.5849 17.3797 21.9594 17.158 22.1637ZM13.3517 22.3286H11.9989L13.2688 23.0879L13.3517 22.3286ZM15.2086 24.9448C15.2086 24.9448 15.0427 23.1709 15.0427 23.0879V23.0816C15.132 23.0816 16.3125 22.3222 16.3125 22.3222H14.7045V24.7725H12.9306C12.9306 24.7725 13.8622 25.4489 13.9452 25.4489V26.1253C13.9112 26.1253 13.8633 26.1531 13.8067 26.186C13.7252 26.2334 13.6257 26.2912 13.524 26.2912C13.1858 26.4571 12.9306 26.3742 12.9306 26.3742H12.8476V26.6294H12.9306C12.9306 26.6294 13.2688 26.7123 13.607 26.6294C13.75 26.5817 13.8404 26.5045 13.9071 26.4474C13.9564 26.4053 13.9928 26.3742 14.0281 26.3742H14.194C14.194 26.3742 14.3599 26.5464 14.6152 26.6294C14.8099 26.6927 15.053 26.6594 15.1941 26.6401L15.1941 26.6401L15.1942 26.64L15.1943 26.64L15.1943 26.64C15.238 26.634 15.2719 26.6294 15.2915 26.6294L15.3745 26.3742H15.2915C15.2915 26.3742 14.9533 26.4571 14.6152 26.2912C14.4429 26.2912 14.277 26.1253 14.277 26.1253V25.4489L15.2086 24.9448ZM27.2177 34.9248C27.2177 35.0907 27.1347 35.18 26.9624 35.3459L26.9433 35.3523C26.6944 35.6076 26.4392 36.1117 26.101 36.788C26.0304 36.9274 25.9604 37.0736 25.8905 37.2194L25.8905 37.2194L25.8905 37.2194L25.8905 37.2194L25.8905 37.2194C25.7077 37.6008 25.5263 37.9791 25.3417 38.2238C25.3021 38.306 25.261 38.4071 25.2199 38.5084L25.2199 38.5085C25.1749 38.6194 25.1298 38.7305 25.0864 38.8172L24.9205 39.2383C24.7546 39.4936 24.4994 39.5765 24.1612 39.6595L23.4018 39.9147C23.2585 39.9398 23.0891 39.9775 22.9119 40.0168C22.4582 40.1176 21.9541 40.2296 21.7109 40.17C21.7704 40.1104 21.8279 40.0253 21.8832 39.9147C21.8832 39.7488 21.7109 39.4936 21.7109 39.4936C21.7109 39.4936 21.462 39.4936 21.2068 39.6595C21.2068 39.5765 21.1238 39.5765 21.1238 39.5765C21.2068 39.4936 21.2897 39.4042 21.2897 39.2383C21.3791 39.0724 21.2068 38.9001 21.2068 38.9001C21.2068 38.9001 21.0409 38.9001 20.7856 38.9831V38.9001C20.7856 38.9001 20.875 38.8172 20.9579 38.7342V38.396C21.1302 38.2301 21.4684 38.1472 21.8896 38.2301C22.1812 38.2301 22.8403 38.1903 23.2454 38.1659C23.4252 38.155 23.555 38.1472 23.5805 38.1472H23.6635L24.4228 36.3733L24.5058 36.0351L24.5553 35.9336C24.7874 35.4588 25.0099 35.0036 25.0099 34.7653C25.0099 34.593 24.9269 34.51 24.844 34.4271C24.3542 33.9311 23.7801 33.1219 23.3616 32.5321L23.3253 32.4809C23.2767 32.4323 23.1975 32.2962 23.1069 32.1405L23.1069 32.1405L23.1069 32.1405L23.1068 32.1404C23.0427 32.0303 22.9729 31.9102 22.9041 31.8045C23.4146 31.7215 23.9187 31.7215 24.5121 31.8874C24.5121 31.6322 24.4292 31.3833 24.174 31.2111C25.1056 30.9558 26.0372 30.9558 26.4583 30.9558C26.4583 31.0388 26.5413 31.0388 26.5413 31.0388C26.7136 31.377 27.0518 31.6322 27.2177 31.7151L27.3006 31.7981C27.3562 31.8579 27.4146 31.9149 27.472 31.9709C27.5003 31.9985 27.5285 32.0259 27.5559 32.0533C27.3006 32.3915 26.8795 33.2338 26.8795 33.9102C26.8795 34.1654 26.8795 34.3377 27.0518 34.5036C27.0938 34.6329 27.1358 34.7179 27.167 34.7812C27.1975 34.8429 27.2177 34.8838 27.2177 34.9248ZM11.0737 28.6714C10.8185 29.0096 10.3973 29.1755 9.80391 29.2648C9.88686 28.6714 9.80391 28.3332 9.63162 27.912C9.5632 27.7384 9.43618 27.5213 9.30472 27.2966C9.11739 26.9764 8.92103 26.6408 8.87228 26.3934C8.8416 26.332 8.82226 26.2811 8.80556 26.2371C8.77711 26.1622 8.75629 26.1074 8.69999 26.0552C7.94066 25.4617 7.09198 24.7853 6.67084 24.1983C6.58789 24.1153 6.4156 23.6049 6.16674 22.6796L6.00083 22.2585V22.0032C5.74559 21.3269 5.57969 20.9057 5.49674 20.8228H5.32445C5.32445 20.8228 5.2415 21.078 4.9033 20.995H4.64806L4.56511 21.078C4.73102 21.2439 4.9033 21.4991 4.9033 21.4991C4.9033 21.4991 4.82035 21.7544 4.56511 21.8373C4.30987 21.8373 4.14397 21.665 4.14397 21.665V21.4991C4.06101 21.665 4.06101 21.9203 4.06101 22.0926C4.31625 22.2649 4.56511 22.5137 4.56511 22.5137C4.56511 22.5137 4.56511 22.769 4.30987 22.8519C4.22692 22.9349 4.05463 22.9349 3.97168 22.8519C3.97168 23.1071 4.05463 23.356 4.30987 23.6112L5.06921 24.2047L5.15216 24.2876C5.4074 24.8811 5.65626 25.3852 5.82855 25.5574C5.9115 25.6404 6.16674 26.0615 6.76017 27.1655C7.09205 27.7065 7.46604 28.3341 7.82531 28.9371L7.82534 28.9371L7.82539 28.9372L7.82539 28.9372C8.4746 30.0268 9.07572 31.0356 9.29343 31.3067C9.37638 31.3897 10.308 31.2238 11.1503 30.8026C10.9972 30.2973 11.0278 29.9114 11.0589 29.5195C11.0796 29.2582 11.1005 28.9943 11.0673 28.6905L11.0737 28.6714Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M38.9587 1.29053V16.6687V16.6751L1.43848 16.7581V1.29053H38.9587ZM34.058 6.95048V7.12277C35.4108 7.8821 36.3424 9.31783 36.3424 10.9258C36.3424 13.2868 34.4026 15.233 32.0353 15.233C31.1866 15.233 30.4273 14.9778 29.7509 14.5566C29.0745 14.9778 28.3088 15.233 27.4665 15.233C25.1055 15.233 23.1593 13.2932 23.1593 10.9258C23.1593 9.23487 24.0909 7.79915 25.4437 7.12277V6.95048C25.4437 4.58951 27.3899 2.64331 29.7509 2.64331C32.1118 2.64331 34.058 4.58313 34.058 6.95048ZM29.7509 12.1957C29.9168 11.9404 30.0891 11.6022 30.0891 11.264H29.4127C29.4956 11.6022 29.585 11.9404 29.7509 12.1957ZM33.6369 8.81373C33.2157 9.6624 32.6223 10.3388 31.78 10.7599H31.7736V10.9258C31.7736 11.7681 31.5184 12.6168 31.0143 13.3761C31.3525 13.4655 31.6907 13.5484 32.0289 13.5484C33.471 13.5484 34.6515 12.3616 34.6515 10.9258C34.6515 10.0835 34.3133 9.31783 33.6369 8.81373ZM27.1347 6.61867H27.4729C28.3215 6.61867 29.0809 6.87391 29.7572 7.29505C30.4336 6.87391 31.2823 6.61867 32.0416 6.61867H32.3798C32.2076 5.34885 31.11 4.33427 29.7572 4.33427C28.4045 4.33427 27.3006 5.34885 27.1347 6.61867ZM31.4068 9.02107C31.6457 8.78252 31.8798 8.54888 32.0353 8.30963V8.30325C31.6971 8.30325 31.3589 8.30325 31.0207 8.47553C31.1485 8.60822 31.2308 8.79009 31.2998 8.94248C31.3204 8.98797 31.3398 9.03083 31.3589 9.06897L31.4068 9.02107ZM27.7217 10.7599C26.9624 10.3324 26.286 9.65602 25.8648 8.81373H25.8585C25.265 9.31783 24.8439 10.0835 24.8439 10.9258C24.8439 12.3679 26.0308 13.5484 27.4665 13.5484C27.8047 13.5484 28.1429 13.4591 28.4811 13.2932C28.0599 12.6168 27.7217 11.7681 27.7217 10.9258V10.7599ZM27.4729 8.30963C27.6451 8.56487 27.894 8.90306 28.1492 9.06897V9.07535C28.1928 8.98481 28.2611 8.87137 28.3281 8.76003L28.3281 8.75998L28.3281 8.75996L28.3282 8.75991C28.3886 8.65941 28.4481 8.56061 28.4874 8.48192C28.2322 8.30963 27.811 8.30963 27.4729 8.30963ZM18.847 3.63791L18.847 3.63792C18.9448 3.65033 19.0038 3.65783 19.018 3.65783H19.0308L19.1967 3.74078V13.9631L18.9414 13.8802C18.9257 13.8802 18.8734 13.8696 18.7872 13.8523C18.385 13.7714 17.2453 13.542 15.6425 13.542C14.1238 13.542 12.6051 13.9631 12.0117 14.2184H11.8394C11.2523 13.9631 9.72727 13.542 8.2086 13.542C6.26878 13.542 4.91601 13.8802 4.91601 13.8802L4.66077 13.9631V3.74078L4.82667 3.65783C4.84087 3.65783 4.89952 3.65036 4.99676 3.63797L4.99678 3.63796L4.99679 3.63796C5.46787 3.57795 6.8443 3.40259 8.45746 3.40259C9.97613 3.40259 11.3289 3.82373 11.9223 4.07897C12.5158 3.82373 13.8685 3.40259 15.3872 3.40259C16.9946 3.40259 18.3742 3.57785 18.847 3.63791Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M6.59423 5.25939C6.42832 5.25939 6.33899 5.43168 6.33899 5.59758C6.42194 5.76987 6.59423 5.85282 6.84309 5.85282C6.84309 5.85282 7.77471 5.59758 8.617 5.59758C9.37634 5.59758 10.225 6.01873 10.225 6.01873C10.4803 6.01873 10.6462 5.93577 10.7291 5.76349C10.8121 5.68053 10.7291 5.42529 10.4739 5.42529C10.4739 5.42529 9.54225 5.00415 8.617 5.00415C7.69176 5.00415 6.6708 5.17006 6.58785 5.25939H6.59423Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M6.59423 6.7845C6.42832 6.7845 6.33899 6.95041 6.33899 7.12269C6.42194 7.2886 6.59423 7.37794 6.84309 7.37794C6.84309 7.37794 7.77471 7.21203 8.617 7.21203C9.37634 7.21203 10.225 7.55022 10.225 7.55022C10.4803 7.55022 10.6462 7.46727 10.7291 7.37794C10.8121 7.21203 10.7291 7.03974 10.4739 6.95679C10.4739 6.95679 9.54225 6.53564 8.617 6.53564C7.69176 6.53564 6.6708 6.79088 6.58785 6.79088L6.59423 6.7845Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M6.59423 8.3033C6.42832 8.3033 6.33899 8.47559 6.33899 8.64149C6.42194 8.81378 6.59423 8.89673 6.84309 8.89673C6.84309 8.89673 7.77471 8.72444 8.617 8.72444C9.37634 8.72444 10.225 9.06264 10.225 9.06264C10.4803 9.14559 10.6462 9.06264 10.7291 8.89673C10.8121 8.72445 10.7291 8.55854 10.4739 8.47559C10.4739 8.47559 9.54225 8.05444 8.617 8.05444C7.69176 8.05444 6.6708 8.30968 6.58785 8.30968L6.59423 8.3033Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M6.59423 9.82194C6.42832 9.9049 6.33899 10.0772 6.33899 10.2431C6.42194 10.409 6.59423 10.4983 6.84309 10.409C6.84309 10.409 7.77471 10.2431 8.617 10.2431C9.37634 10.2431 10.225 10.5813 10.225 10.5813C10.4803 10.6642 10.6462 10.5813 10.7291 10.409C10.8121 10.2431 10.7291 10.0708 10.4739 9.98785C10.4739 9.98785 9.54225 9.64966 8.617 9.64966C7.69176 9.64966 6.6708 9.81557 6.58785 9.81557L6.59423 9.82194Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M17.2441 5.25939C17.4994 5.25939 17.5823 5.43168 17.4994 5.59758C17.4994 5.76987 17.2441 5.85282 17.0782 5.85282C17.0782 5.85282 16.0637 5.59758 15.2214 5.59758C14.462 5.59758 13.6134 6.01873 13.6134 6.01873C13.4411 6.01873 13.2752 5.93577 13.1922 5.76349C13.1093 5.68053 13.1922 5.42529 13.3581 5.42529C13.4411 5.42529 14.3727 5.00415 15.215 5.00415C16.2296 5.00415 17.2441 5.17006 17.2441 5.25939Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M17.2441 6.7845C17.4994 6.7845 17.5823 6.95041 17.4994 7.12269C17.4994 7.2886 17.2441 7.37794 17.0782 7.37794C17.0782 7.37794 16.0637 7.21203 15.2214 7.21203C14.462 7.21203 13.6134 7.55022 13.6134 7.55022C13.4411 7.55022 13.2752 7.46727 13.1922 7.37794C13.1093 7.21203 13.1922 7.03974 13.3581 6.95679C13.4411 6.95679 14.3727 6.53564 15.215 6.53564C16.2296 6.53564 17.2441 6.79088 17.2441 6.79088V6.7845Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M17.2441 8.3033C17.4994 8.3033 17.5823 8.47559 17.4994 8.64149C17.4994 8.81378 17.2441 8.89673 17.0782 8.89673C17.0782 8.89673 16.0637 8.72444 15.2214 8.72444C14.462 8.72444 13.6134 9.06264 13.6134 9.06264C13.4411 9.14559 13.2752 9.06264 13.1922 8.89673C13.1093 8.72445 13.1922 8.55854 13.3581 8.47559C13.4411 8.47559 14.3727 8.05444 15.215 8.05444C16.2296 8.05444 17.2441 8.30968 17.2441 8.30968V8.3033Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M17.2441 9.82194C17.4994 9.9049 17.5823 10.0772 17.4994 10.2431C17.4994 10.409 17.2441 10.4983 17.0782 10.409C17.0782 10.409 16.0637 10.2431 15.2214 10.2431C14.462 10.2431 13.6134 10.5813 13.6134 10.5813C13.4411 10.6642 13.2752 10.5813 13.1922 10.409C13.1093 10.2431 13.1922 10.0708 13.3581 9.98785C13.4411 9.98785 14.3727 9.64966 15.215 9.64966C16.2296 9.64966 17.2441 9.81557 17.2441 9.81557V9.82194Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var iW = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 48, viewBox: "0 0 98 48", width: 98, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M30.2405 28.6285C30.3668 28.1972 30.6066 28.0123 31.1362 28.0123H34.3555C34.7979 28.0123 35.1131 28.4436 34.9614 28.8996L28.3338 47.5194C28.2203 47.8275 27.9932 48 27.6525 48H24.6985C24.1553 48 23.8519 47.5564 24.029 47.1005L26.2128 41.9865H25.2027C24.8366 41.9865 24.5968 41.8016 24.4832 41.4566L20.0648 29.0228C19.8504 28.419 20.1911 28 20.747 28H23.8773C24.3196 28 24.6095 28.0986 24.7612 28.5792L27.539 38.1787L30.2405 28.6285Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M18.3505 28.5446C18.2395 28.5812 15.7114 29.4237 15.7114 29.4237C15.4034 29.5214 15.107 29.3871 14.9597 29.1307C13.9357 27.2625 12.2957 26.0537 9.91491 26.0537C6.61021 26.0537 4.14328 28.7521 4.14328 32C4.14328 35.2479 6.65906 37.9097 9.91491 37.9097C12.3943 37.9097 14.0838 36.6642 15.0334 34.9182C15.2801 34.4542 15.5516 34.3444 16.0566 34.5397L18.5972 35.5043C18.7578 35.5653 18.8935 35.6874 18.9548 35.8584C19.0169 36.0171 19.0169 36.2002 18.9432 36.3468C17.2652 39.8388 13.8744 42 9.91491 42C4.43965 42 0 37.519 0 32C0 26.4811 4.45207 22 9.91491 22C13.689 22 17.0557 24.0879 18.7702 27.4701C19.0169 27.9829 18.8198 28.3858 18.3505 28.5446Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M73.332 5C72.0739 5 70.5846 5.84256 69.6731 6.67234L69.2623 7.05532V6.05958C69.2623 5.47234 68.9028 5.33192 68.4278 5.33192H65.719C65.2825 5.33192 65 5.6383 65 6.05958V19.2596C65 19.7192 65.2825 20 65.7061 20H68.5434C68.967 20 69.2495 19.6554 69.2495 19.2852V13.5532C69.2495 10.9235 70.5846 9.46808 73.2165 9.46808C73.7429 9.46808 73.9996 9.18727 73.9996 8.79146V5.70213C74.0124 5.22979 73.73 5 73.332 5Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M26.2502 6C22.26 6 19 9.13592 19 13C19 16.8523 22.2469 20 26.2502 20C27.7498 20 29.145 19.5536 30.2795 18.6963L30.6838 18.3909V19.1661C30.6838 19.4832 30.9707 19.7416 31.3227 19.7416H34.2437C34.6609 19.7416 35 19.4362 35 19.0603V6.96308C35 6.54027 34.7652 6.24664 34.2306 6.24664H31.5183C30.9315 6.24664 30.6838 6.48155 30.6838 6.95134V7.62081C29.7449 6.79866 28.2323 6 26.2502 6ZM27.163 16.4882C24.9854 16.4882 23.4727 15.0553 23.4727 13C23.4727 10.9798 25.0244 9.51174 27.163 9.51174C29.3407 9.51174 30.9967 11.0151 30.9967 13C30.9837 14.9496 29.3016 16.4882 27.163 16.4882Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M80.7971 6C77.0562 6 74 9.13592 74 13C74 16.8523 77.044 20 80.7971 20C82.203 20 83.511 19.5536 84.5745 18.6963L84.9536 18.3909V19.1308C84.9536 19.4715 85.2835 19.7533 85.6019 19.7533H88.3887C88.7308 19.7533 89 19.4832 89 19.1661V6.83389C89 6.51678 88.7308 6.25839 88.401 6.25839H85.5896C85.2105 6.25839 84.9536 6.49328 84.9536 6.88087V7.64429C84.0731 6.79865 82.6553 6 80.7971 6ZM81.6529 16.4882C79.6113 16.4882 78.1932 15.0553 78.1932 13C78.1932 10.9798 79.6479 9.51174 81.6529 9.51174C83.6944 9.51174 85.2474 11.0151 85.2474 13C85.2351 14.9496 83.6578 16.4882 81.6529 16.4882Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M58.8161 18.319V19.2555C58.8161 19.5558 59.0881 19.8079 59.412 19.8079H62.2229C62.7021 19.8079 63 19.5918 63 19.0995V6.67238C63 6.25214 62.6892 6 62.2099 6H59.671C59.0881 6 58.8161 6.25214 58.8161 6.84048V13.1081C58.8161 15.7135 57.3523 16.6741 55.6166 16.6741C53.557 16.6741 52.4689 15.4494 52.4689 13.1201L52.43 6.72041C52.43 6.30017 52.1969 6.012 51.6399 6.012H48.816C48.2461 6.012 48 6.26415 48 6.75643V12.9039C48 17.2744 50.5518 20 54.8783 20C56.8212 20 58.1814 19.2315 58.7772 18.319C58.7902 18.283 58.8161 18.295 58.8161 18.319Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M5.08594 7.8964C5.08594 7.87112 5.1107 7.85849 5.13547 7.88376L12.973 19.6588C13.1216 19.8736 13.3321 20 13.6169 20H17.2695C17.7523 20 18 19.6967 18 19.2672V0.694883C18 0.290588 17.7399 0 17.3066 0H14.6074C14.1988 0 13.914 0.303221 13.914 0.795955V13.8092C13.914 13.8345 13.8769 13.8471 13.8645 13.8218L5.42024 0.341122C5.28404 0.12634 5.06117 0 4.81354 0H1.79242C1.22287 0 1 0.265318 1 0.795955V19.2166C1 19.6463 1.2724 19.9874 1.71813 19.9874H4.3678C4.82592 19.9874 5.1107 19.6841 5.1107 19.2166V7.8964H5.08594Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M42.274 42C38.3212 42 35.0628 38.9098 35.0013 35.112C34.9638 33.2249 35.7572 31.3732 37.1444 30.0286C38.495 28.7195 40.2664 28 42.1376 28C45.1607 28 47.6381 29.4271 48.9522 31.9039C49.0137 32.0101 49.0137 32.1399 48.9646 32.2578C48.9147 32.3757 48.8158 32.4583 48.6918 32.5055L45.8177 33.4254C45.7553 33.449 45.6938 33.449 45.6439 33.449C45.4576 33.449 45.2721 33.3546 45.1732 33.2014C44.4796 32.2224 43.5373 31.727 42.3605 31.727C40.4652 31.727 38.9782 33.1542 38.9782 34.9823C38.9782 36.7987 40.4893 38.2612 42.3605 38.2612C43.5373 38.2612 44.5162 37.754 45.1732 36.7869C45.2846 36.6217 45.4335 36.5391 45.6314 36.5391C45.7553 36.5391 45.8917 36.5627 46.053 36.6217L48.4191 37.3883C48.642 37.4473 48.8033 37.5888 48.8898 37.7658C48.9646 37.9191 48.9522 38.096 48.8648 38.2494C47.5151 40.6082 45.0492 42 42.274 42Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M97.2569 20C97.7348 20 98 19.7107 98 19.3128V16.6484C98 16.2024 97.7606 15.9613 97.1377 15.9493H96.2763C95.7592 15.9493 95.4673 15.684 95.4673 15.1897V1.69923C95.4673 1.30139 95.2155 1 94.6984 1H91.8481C91.2643 1 91 1.22906 91 1.69923V15.684C91 18.7462 92.2325 20 95.2288 20H97.2569Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M70.7819 38.5706C71.1499 38.8407 71.1371 39.2517 70.7563 39.6511C69.3099 41.1897 67.711 42 64.5132 42C60.3758 42 57 38.8642 57 35.0003C57 31.148 60.363 27.9535 64.5132 28.0005C69.0816 28.0592 72 31.195 72 35.1647C72 35.6344 71.7334 35.8694 71.2265 35.8694H61.226C61.3401 37.4079 62.6477 38.5706 64.5132 38.5706C66.2646 38.5706 67.165 37.8189 67.7621 37.2317C68.0918 36.8911 68.4725 36.8911 68.815 37.1377L70.7819 38.5706ZM64.6529 31.0658C62.939 31.0658 61.7209 31.9819 61.467 33.2738H67.6982C67.4188 32.0406 66.2893 31.0658 64.6529 31.0658Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M56.2578 42C56.7348 42 57 41.7107 57 41.3128V38.6484C57 38.2024 56.7615 37.9613 56.1386 37.9493H55.2771C54.7601 37.9493 54.4682 37.684 54.4682 37.1897V23.6992C54.4682 23.3014 54.2164 23 53.6993 23H50.849C50.2652 23 50 23.2291 50 23.6992V37.684C50 40.7462 51.2334 42 54.2297 42H56.2578Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M47.6946 18.5571C47.1884 18.9837 46.1228 20 43.1259 20C40.9149 20 38.1178 18.532 38.1444 14.5295V9.17191C38.1444 9.10916 38.0911 9.05897 38.0245 9.05897H36.8258C36.333 9.05897 36 8.79552 36 8.30611L36.0133 6.13551C36.0133 5.7591 36.2397 5.43288 36.8391 5.43288H38.0379C38.1045 5.43288 38.1577 5.38269 38.1577 5.31995V0.752828C38.1577 0.263488 38.4374 0 38.957 0H41.8873C42.3534 0 42.5798 0.213298 42.5798 0.652445V5.31995C42.5798 5.38269 42.6331 5.43288 42.6997 5.43288H46.2827C46.8022 5.43288 47.0952 5.70891 47.0952 6.2108L47.0819 8.26855C47.0819 8.77043 46.7888 9.04642 46.2694 9.04642H42.6997C42.6331 9.04642 42.5798 9.09662 42.5798 9.15936V14.2409C42.5798 15.4078 43.2858 16.123 44.4313 16.123C44.8708 16.123 45.2038 16.0351 45.4835 15.8344C45.8165 15.596 46.2561 15.6211 46.5358 15.9348C46.9354 16.399 47.881 17.5785 47.881 17.5785C48.0942 17.9047 48.0143 18.281 47.6946 18.5571Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M72.2876 38.5558C71.8996 38.8262 71.964 39.2258 72.1327 39.4492C72.6764 40.1897 74.5169 42 78.4042 42C82.7968 42 85 39.9076 85 37.7918C85 35.2292 83.2899 34.0067 78.8191 33.0193C77.0177 32.6196 76.5775 32.3023 76.5775 31.9261C76.5775 31.5264 77.0046 31.1503 78.0675 31.1503C79.4801 31.1503 80.5039 31.4912 82.1235 32.3376C82.4862 32.5256 82.862 32.5491 83.1734 32.173L84.4555 30.6566C84.7669 30.2569 84.5721 29.9043 84.2093 29.6692C82.5636 28.623 80.7501 28 78.4172 28C74.7239 28 72.3659 29.9278 72.3659 32.3023C72.3659 34.5121 73.9594 35.864 77.5361 36.6163C79.635 37.0629 80.6205 37.251 80.6205 37.827C80.6205 38.309 80.0499 38.7674 78.5077 38.7674C76.9663 38.7674 75.6573 37.9446 75.0614 37.3686C74.7761 37.0864 74.3612 37.0629 73.9985 37.3216C73.9855 37.3216 72.4172 38.4618 72.2876 38.5558Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M91.0004 22C88.2406 22 86 24.241 86 27C86 29.759 88.2406 32 91.0004 32C93.7594 32 96 29.759 96 27C96 24.241 93.7594 22 91.0004 22ZM91.0004 30.0964C89.2894 30.0964 87.8913 28.7108 87.8913 26.9879C87.8913 25.2771 89.2773 23.8795 91.0004 23.8795C92.7106 23.8795 94.1087 25.2651 94.1087 26.9879C94.1087 28.7108 92.7106 30.0964 91.0004 30.0964Z", fill: "currentColor" })] }) }; G(), G(); var iG = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 81, viewBox: "0 0 99 81", width: 99, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M84.325 25.2263L74.3695 18.5778L72.6378 13.7145L75.7198 14.8092L76.9671 17.8493L81.6549 19.3521L78.9162 13.3102L70.0707 10.1671L68.4458 11.4221L71.3867 20.9809L80.8539 27.6713L83.2799 33.7209L79.3434 31.9434L77.9931 28.1786L73.1641 26.7558L75.7465 35.2657C76.5437 35.5594 77.3333 35.8607 78.119 36.1773C80.2703 37.047 82.3758 38.012 84.4318 39.0648C85.8584 39.7933 87.2582 40.5677 88.639 41.3839L90.6988 39.2708L84.325 25.2263Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M17.173 29.731L20.4915 26.7673L21.2849 27.6903L18.0084 37.1118C19.8011 36.3223 21.6244 35.6013 23.4744 34.9453L25.8469 27.1754L23.7986 23.7921L28.044 19.7603L30.5233 11.4983L27.4756 10.129L24.7369 17.9179L20.3466 21.698L24.3478 11.6013L20.0452 13.3178L8.19399 39.3165L10.0478 41.178C11.1463 40.5371 12.2639 39.923 13.393 39.3318L17.173 29.731Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M47.2036 11.1894L43.5685 11.3801L41.8596 30.883C43.4044 30.7342 44.9607 30.635 46.5284 30.5855L47.2036 11.1894Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M57.9868 26.8359L53.7643 26.5842L53.0853 14.6414L56.6594 14.8169L56.2398 11.525L51.4337 11.1818L49.2824 13.3292L49.2786 28.2663L51.5367 30.5778C53.8673 30.6503 56.1749 30.8219 58.4521 31.1004L57.9868 26.8359Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M34.0745 18.8868L35.5964 26.3019L34.6123 31.9205C36.0847 31.6382 37.5723 31.3941 39.0751 31.1958H39.0828L41.4324 11.6395L38.0567 12.1315L36.9467 18.5359L35.6918 12.5092L31.7248 13.5047L26.2054 34.0375C27.796 33.5416 29.4095 33.0953 31.0383 32.6986L34.0745 18.8868Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M63.407 25.7565L64.5933 24.1544L66.3288 25.5848L67.927 32.855C69.6015 33.2746 71.257 33.7514 72.8933 34.2816L69.9143 23.6166L66.8437 21.1067L68.5945 18.7762L67.1413 13.3636L63.4299 12.532L64.887 17.9828L62.5793 21.0686L60.8742 12.101L57.4413 11.6662C57.4413 11.6662 59.1616 24.8143 59.9741 31.2949C61.5303 31.5162 63.0675 31.7832 64.5971 32.0959L63.407 25.7565Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M42.3936 34.5867C42.3936 34.5867 43.824 33.7476 46.6848 33.431L46.5932 31.1767C45.0255 31.2301 43.4655 31.3293 41.9206 31.4742C42.0541 32.3591 42.2563 33.6713 42.3936 34.5867Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M51.4871 33.2975C52.6505 33.4348 53.894 33.8124 54.9887 34.1214C55.9766 34.3579 57.0408 34.7813 57.9143 35.1703L58.3949 31.7031C56.0948 31.4208 53.9207 31.2492 51.5672 31.1729C51.5329 31.848 51.5329 32.7978 51.4871 33.2975Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M36.4318 38.794C37.763 37.8022 38.564 36.7838 39.9639 35.9332C39.6969 34.6745 39.3421 33.0419 39.0866 31.7946C37.5608 31.9968 36.0503 32.2485 34.5513 32.5384C35.1273 34.4075 35.8596 36.9097 36.4318 38.794Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M59.0739 35.8722C60.3708 36.6236 61.3854 37.4742 62.5449 38.6033L62.7738 38.7787L64.6047 32.7215C63.0294 32.3935 61.496 32.1112 59.8901 31.8862L59.0739 35.8722Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M64.845 41.1322L69.2086 42.1583L72.8781 34.8995C71.1883 34.3464 69.5558 33.8925 67.8202 33.4577L64.845 41.1322Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M29.7566 42.1583C30.8971 41.7387 32.4839 41.1627 33.9677 40.7698L31.1374 33.2822C29.4248 33.698 27.9334 34.1328 26.2665 34.6592C27.3192 37.1652 28.5017 39.7514 29.7566 42.1583Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M23.1768 44.855C23.4286 44.6376 25.9041 43.5696 27.6015 42.8525C26.3123 40.5219 24.7636 37.951 23.4744 35.5785C21.6282 36.2383 19.9461 36.9211 18.1609 37.7145L23.1768 44.855Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M17.0014 48.1316C17.7909 47.6586 18.6263 47.1742 19.5456 46.6401L13.7592 39.8124C12.6606 40.3846 11.5735 40.9796 10.5017 41.6052L17.0014 48.1316Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M71.5163 43.0546C74.9912 44.4011 79.8469 47.1246 81.7808 48.4214C82.6734 47.5708 87.5062 42.4939 88.1699 41.7997C84.1495 39.4424 79.9308 37.4361 75.5367 35.8226L71.5163 43.0546Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M50.8196 33.183L49.1603 33.1258L49.1298 29.094L50.8577 30.8868L50.8196 33.183Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M50.7395 33.8467C49.2404 34.3693 47.7986 35.1322 46.3682 35.7921C45.3917 35.2085 44.8348 35.0597 44.1749 34.6363C46.2271 33.8887 48.4394 33.7781 50.7395 33.8467Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M64.7229 42.1354C60.1228 37.5009 53.2226 37.8366 47.3676 36.1964C47.3676 36.1964 50.8119 34.5562 52.5894 34.1023C57.3765 34.9186 62.0071 37.7794 64.7229 42.1354Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M38.8653 42.8334C34.4445 49.6115 33.8494 57.965 37.3663 65.2848C32.8196 61.4666 30.1075 54.0705 32.152 46.8881C33.8227 44.5499 35.974 42.4863 38.8653 42.8334Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M43.5952 47.6586C45.9753 54.738 46.5055 62.5804 52.6695 69.7094C47.8634 70.6859 43.0993 69.2441 39.3002 66.8372C34.5971 59.9714 35.0395 49.7298 39.7426 43.0775C42.0389 43.7374 43.2862 46.7355 43.5952 47.6586Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M40.2919 42.3299C41.0052 41.3229 41.8138 40.3693 42.7217 39.4806C52.7229 42.3032 62.2589 52.6745 63.8914 62.8626C63.4146 63.6332 62.2741 64.705 61.5074 65.4717C59.0205 67.7069 56.2817 68.8627 53.6536 69.492C48.9849 64.6478 47.4477 58.3579 45.796 52.1595C44.5297 47.403 43.6524 43.8099 40.2957 42.3566L40.2919 42.3299Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M63.6587 42.2841C58.8298 38.0235 52.1012 38.5689 46.4559 36.5816C45.365 37.2492 44.297 38.0387 43.3892 38.855C53.3905 41.9904 62.4648 51.7705 64.6276 61.8747C66.1953 59.609 67.1413 56.9771 67.5265 54.1888C67.763 49.9052 67.721 46.007 63.6587 42.2841Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M41.8939 39.1678C40.9289 40.0947 40.208 41.0101 39.4527 42.0743L39.4299 42.0667C36.7827 41.4755 34.6924 42.8448 33.0179 44.5499C33.8189 42.5282 35.4972 40.129 37.2709 38.5651C38.9111 38.6338 40.1012 38.6071 41.8939 39.1678Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M42.6034 38.546C43.5494 37.7031 44.4648 36.9669 45.6053 36.2841L43.0421 35.0139C41.3332 35.712 39.5062 36.6198 38.2512 37.7679C40.1889 37.9968 41.0205 38.115 42.6034 38.546Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M42.8132 72.2422L49.3549 80.7368L55.8393 72.3833C64.4064 69.7476 70.5017 61.8938 70.9251 52.9338L74.6517 48.1316C77.7566 49.3636 82.2881 52.6668 82.2881 52.6668L94.6467 39.9421L89.5965 28.8614L98.8654 16.9033H84.2029L81.346 10.6706L69.51 6.46338L67.4006 8.05779L66.119 3.4157L65.1502 3.09529C61.2061 1.79841 56.8653 1.0279 52.2423 0.806669C52.2423 0.806669 51.3879 0.760896 51.1858 0.760896C51.1772 0.760896 51.0974 0.759614 50.9746 0.75764C50.4986 0.749988 49.3762 0.731945 49.2519 0.73801C43.7897 0.768525 38.4534 1.60006 33.8227 3.14106L32.8653 3.45766L31.4731 8.32098L25.618 5.6471L24.817 7.82511L17.5926 10.7393L14.77 16.8919H0.18L9.34593 28.8041L4.21942 40.0451L16.3873 52.2587C16.3873 52.2587 20.2474 49.623 24.1075 47.9599L28.166 53.2276C28.7 61.9777 34.4941 69.4958 42.8132 72.2422ZM11.5427 28.5457L4.02488 18.7876H15.9842L18.9581 12.2536L18.981 12.204L19.0306 12.1811L25.7897 9.47292L25.9155 9.42333L25.9689 9.54539L26.0948 9.84672L26.6441 8.35149L26.6937 8.21418L26.8272 8.27521L31.5532 10.4532L31.599 10.4761L31.6218 10.5219L32.2855 11.9446C32.2855 11.9446 35.8978 11.033 39.571 10.5333C43.2442 10.0336 48.8552 9.71704 48.8552 9.71704L48.8514 11.7387L50.831 9.76662L50.873 9.72466L50.934 9.72848L51.201 9.74755L51.4566 9.76662C54.1037 9.97641 55.763 10.1137 56.3809 10.1748C62.4725 10.7851 66.6225 11.8264 66.6225 11.8264L67.0764 10.7126L67.0917 10.6783L67.1222 10.6554L69.777 8.62994L69.8342 8.58417L69.9029 8.60705L79.9118 12.1697L79.9652 12.1887L79.9881 12.2383L82.9756 18.7876H95.0014L87.3951 28.5954L92.3619 39.5607L82.002 50.2295L81.51 49.9129C79.0759 48.3532 76.5199 46.9125 74.1077 45.7286L69.0572 52.2408C68.9109 61.0883 62.879 68.5021 54.7095 70.7411L49.3625 77.6357L43.9617 70.6255C36.0871 68.2825 30.2954 61.1046 30.0258 52.5368L24.6985 45.622C23.4168 46.1848 22.9762 46.3979 22.3604 46.6957L22.3603 46.6958L22.3491 46.7012L22.1851 46.7813C21.3726 47.1703 19.6752 48.1697 18.4394 48.8982C18.3133 48.9725 18.191 49.0448 18.0736 49.1141C17.7328 49.3155 17.4333 49.4925 17.2035 49.623L16.7267 49.8938L6.49278 39.6408L11.5427 28.5457ZM45.9829 9.24024L46.7725 8.45448L47.1006 2.6986C46.9734 2.70572 46.8622 2.71026 46.7551 2.71463C46.5185 2.72429 46.3021 2.73311 45.9791 2.76725L45.5786 7.80985L44.7967 7.88232L45.2544 2.81684L44.152 2.92364L43.5303 8.02727L42.7331 8.115L43.3358 3.02282L42.2182 3.17539L41.3676 8.94272L42.016 9.56065L43.4883 9.42333L44.1253 8.88169L44.6288 9.32034L45.9829 9.24024ZM50.3885 2.62231L50.4 6.25359L51.1133 6.24977L51.0713 2.64138C51.0713 2.64138 51.8189 2.66427 52.1546 2.69478L52.2995 6.76472L51.6129 7.44749L51.3879 7.45893L51.4184 9.2021L50.2093 9.16777L50.194 7.4246L49.9499 7.40553L49.2175 6.65791L49.2633 2.61087C49.6562 2.60324 50.3885 2.62231 50.3885 2.62231ZM41.215 4.48754L41.4057 3.29364L38.8005 3.82384C38.5411 5.31907 37.496 10.1557 37.496 10.1557C38.4267 9.99549 39.4031 9.85436 40.3758 9.73611C40.4483 9.3356 40.5856 8.43541 40.5856 8.43541L39.1972 8.63757L39.4527 7.30254L40.8068 7.10801C40.8735 6.75267 40.9037 6.56099 40.9476 6.28298C40.964 6.179 40.9823 6.06295 41.0052 5.92174C40.4178 5.99803 40.1164 6.04761 39.6206 6.13534L39.8647 4.7431L41.215 4.48754ZM36.325 10.3693L34.9175 10.6439L35.5621 8.0082L35.1272 7.06224L34.0211 10.8575L32.6479 11.1703C32.934 10.1423 33.2229 9.11437 33.5119 8.08639L33.5119 8.08625L33.5119 8.0861L33.512 8.08596C33.8009 7.05813 34.0898 6.0303 34.3758 5.00247C34.8488 4.84609 35.1997 4.73547 35.6155 4.61341C35.7681 4.96052 36.1381 5.65855 36.1381 5.65855L36.4699 4.36929C36.4699 4.36929 37.3396 4.14043 37.7782 4.04125L36.325 10.3693ZM56.4349 6.588C56.3095 5.65877 56.1816 4.71122 56.0986 3.73992L55.3777 2.95416L53.7223 2.79395C53.6291 2.89358 53.5257 2.9844 53.4236 3.07413C53.2834 3.19739 53.1455 3.31858 53.0395 3.45766C53.0751 4.02218 53.1082 4.58756 53.1412 5.15293C53.2074 6.28368 53.2735 7.41443 53.3599 8.5384L54.077 9.32034L56.0643 9.45384L56.6784 8.51551C56.6093 7.88075 56.5227 7.23887 56.4349 6.588ZM54.5958 7.95861L54.2449 4.01837L54.9238 4.09466L55.2938 8.01201L54.5958 7.95861ZM62.522 4.33115C62.77 5.27711 63.2544 7.22625 63.2544 7.22625L63.7274 7.32161L63.9563 7.00884L63.3688 4.5829C63.3688 4.5829 63.9524 4.74691 64.578 4.93382L65.2035 7.28347L64.9098 7.70686L65.4553 8.30572L66.2792 11.1665L64.9213 10.8613L64.3873 8.85499L63.5405 8.66427L64.002 10.6592L62.625 10.3884C62.1444 8.23706 61.2747 4.00311 61.2747 4.00311C61.2747 4.00311 61.969 4.15187 62.522 4.33115ZM60.8246 6.91729L60.3707 4.56001L59.5507 3.62167L57.0255 3.17539L57.9028 9.64838L59.2226 9.81239L58.9403 7.90902L59.7376 7.99676L60.0999 9.9459L61.4235 10.1748L61.023 7.83274L60.5615 7.27965L60.8246 6.91729ZM58.6962 6.2841L58.4597 4.64392L59.1273 4.76217L59.4439 6.36802L58.6962 6.2841Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M15.2109 20.4901L7.35864 20.4812L12.3397 26.7943L15.2109 20.4901Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M32.3806 42.6187C29.0301 43.6303 27.5356 44.374 26.307 44.9143C26.6467 45.3638 28.9664 48.3766 30.1227 49.8692C30.5176 46.1257 31.9379 43.3393 32.3806 42.6187Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M52.1556 71.2477C49.7809 71.5809 46.5614 71.2008 46.5614 71.2008L49.3632 74.8521L52.1556 71.2477Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M72.5412 44.9784L68.9284 49.6699C68.3181 46.0081 67.5501 44.4219 66.9508 43.0693C69.2024 43.5401 70.3068 43.9682 72.5412 44.9784Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M91.5251 20.4916H83.6952L82.688 22.4122L85.4236 24.2449L86.6007 26.8419L91.5251 20.4916Z", fill: "currentColor" })] }) }; G(); var iU = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 31, viewBox: "0 0 142 31", width: 142, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M141.976 30.5814H136.697V5.86514L128.717 19.3171C127.81 20.8764 126.113 21.8539 124.274 21.8306C122.434 21.8306 120.714 20.8764 119.807 19.3171L111.827 5.74877V30.5814H106.548V5.49277C106.548 2.72325 108.865 0.489013 111.708 0.489013C113.547 0.489013 115.244 1.44322 116.151 3.00253L124.274 16.9199L132.396 3.00253C133.806 0.60538 136.959 -0.232458 139.42 1.14067C141.021 2.02505 142 3.67745 142 5.49277L141.976 30.5814ZM22.7907 30.5814C20.9512 30.5814 19.255 29.6039 18.3711 28.0446L5.27961 5.74877V30.5814H0V5.49277C0 2.72325 2.2934 0.489013 5.11238 0.46574C6.97577 0.46574 8.67194 1.41994 9.60363 3.00253L22.6952 25.2983V0.46574H27.9748V25.5776C27.9987 27.8584 26.4219 29.8599 24.1524 30.4184C23.6985 30.5348 23.2446 30.5814 22.7907 30.5814ZM49.2365 31.0003C40.4452 31.0003 33.326 24.0648 33.326 15.5003C33.326 6.93571 40.4452 0.000274658 49.2365 0.000274658C58.0279 0.000274658 65.147 6.93571 65.147 15.5003C65.1709 24.0416 58.0996 30.977 49.3321 31.0003H49.2365ZM49.2365 5.1204C43.4075 5.1204 38.8207 9.68196 38.8207 15.5003C38.7729 18.2698 39.8718 20.9462 41.8546 22.9244C45.9159 26.8809 52.5094 26.8809 56.5707 22.9244C58.5535 20.9462 59.6285 18.2698 59.6046 15.5003C59.6285 9.68196 55.0656 5.1204 49.2365 5.1204ZM85.3099 31.0003C76.5185 31.0003 69.3994 24.0648 69.3994 15.5003C69.3994 6.93571 76.5185 0.000274658 85.3099 0.000274658C94.1013 0.000274658 101.22 6.93571 101.22 15.5003C101.244 24.0416 94.1729 30.977 85.4054 31.0003H85.3099ZM85.3099 5.1204C79.4808 5.1204 74.894 9.68196 74.894 15.5003C74.8701 18.2698 75.9452 20.9462 77.928 22.9244C81.9892 26.8809 88.5828 26.8809 92.644 22.9244C94.6268 20.9462 95.7019 18.2698 95.678 15.5003C95.678 9.68196 91.1151 5.1204 85.3099 5.1204Z", fill: "currentColor" })] }) }; G(); var i$ = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 28, viewBox: "0 0 134 28", width: 134, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("mask", { height: 27, id: "oura_ring_4_logo_mask_0", maskUnits: "userSpaceOnUse", style: { maskType: "luminance" }, width: 134, x: 0, y: 0, children: (0, l.jsx)("path", { d: "M133.811 0H0.173828V26.8656H133.811V0Z", fill: "white" }) }), (0, l.jsxs)("g", { mask: "url(#oura_ring_4_logo_mask_0)", children: [(0, l.jsx)("path", { d: "M2.40741 19.4794C0.586181 17.5765 0.173828 15.2584 0.173828 12.3867C0.173828 9.51508 0.586181 7.197 2.40741 5.2941C3.7132 3.91016 5.46569 3.18359 7.49309 3.18359C9.5205 3.18359 11.273 3.91016 12.5788 5.2941C14.4 7.197 14.8124 9.51508 14.8124 12.3867C14.8124 15.2584 14.4 17.5765 12.5788 19.4794C11.273 20.8633 9.5205 21.5554 7.49309 21.5554C5.46569 21.5554 3.7132 20.8633 2.40741 19.4794ZM11.1012 17.9225C12.4413 16.4347 12.5444 14.3588 12.5444 12.3521C12.5444 10.3454 12.407 8.30414 11.1012 6.78181C10.2078 5.81306 9.03942 5.2595 7.52747 5.2595C6.0155 5.2595 4.8128 5.81306 3.95374 6.78181C2.61359 8.26955 2.5105 10.3454 2.5105 12.3521C2.5105 14.3588 2.64795 16.4001 3.95374 17.9225C4.84716 18.8912 6.04986 19.4102 7.52747 19.4102C9.00506 19.4102 10.2421 18.8912 11.1012 17.9225Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M16.8398 16.9188V8.61523H18.936V16.6074C18.936 18.4757 19.795 19.6175 21.6162 19.6175C23.4375 19.6175 24.8463 17.8876 24.8463 15.3965V8.61523H26.9426V21.209H25.1213L24.9838 19.1677C24.4684 20.7246 22.7847 21.5549 21.3069 21.5549C18.5924 21.5549 16.8398 19.7905 16.8398 16.9188Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M29.2446 8.61552H31.1345L31.3062 10.7952C31.9593 9.16908 33.4711 8.51172 35.0518 8.51172C36.6326 8.51172 35.7047 8.51172 36.0485 8.5809V10.6914C35.7735 10.6222 35.4642 10.553 35.0518 10.553C32.3029 10.553 31.375 12.6289 31.375 15.0508V21.1402H29.2789V8.61552H29.2446Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M36.9414 17.6455C36.9414 16.0194 37.9723 13.8743 41.4086 13.6667L45.223 13.4245V12.5596C45.223 10.7605 44.2951 9.9301 42.5083 9.9301C40.7215 9.9301 39.6561 10.7951 39.6561 12.2136H37.5945C37.6287 9.65332 39.7936 8.2002 42.5083 8.2002C45.223 8.2002 47.3191 9.75712 47.3191 12.5596V18.6489C47.3191 19.3062 47.5939 19.5138 48.0064 19.5138C48.4187 19.5138 48.35 19.5138 48.556 19.4446V21.0016C48.1094 21.2437 47.6971 21.313 47.1816 21.313C46.0821 21.313 45.3605 20.448 45.3605 19.41C44.6044 20.621 43.0924 21.4859 41.3056 21.4859C38.4534 21.4859 37.0102 19.5484 37.0102 17.6109L36.9414 17.6455ZM45.1885 15.881V15.1198L41.5804 15.3274C40.3434 15.3966 39.072 16.0886 39.072 17.6109C39.072 19.1332 39.7593 19.7906 41.5461 19.7906C43.3329 19.7906 45.1885 18.0607 45.1885 15.881Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M120.649 0C113.364 0 107.488 5.91629 107.488 13.2511C107.488 20.5859 113.364 26.5022 120.649 26.5022C127.934 26.5022 133.81 20.5514 133.81 13.2511C133.81 5.9509 127.934 0 120.649 0ZM126.663 18.1641H124.223V21.8662H122.092V18.1641H113.708V15.8114L120.581 4.60158H122.917L115.701 16.2266H122.092V11.1406H124.223V16.2266H126.663V18.1295V18.1641Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M63.0752 3.49121C66.6351 3.49121 68.91 5.43216 68.91 8.64288C68.91 10.8849 67.6248 12.7013 65.1783 13.4209L68.9375 21.1364H66.4669L62.955 13.7946H58.4054V21.1364H56.2061V3.49121H63.0787H63.0752ZM66.6351 8.64288C66.6351 6.40093 65.1508 5.53251 63.0752 5.53251H58.4019V11.7291H63.0752C65.1508 11.7291 66.6351 10.8814 66.6351 8.64288Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M73.2631 3.16943V5.65704H70.8164V3.16943H73.2631ZM73.1118 8.57021V21.1398H70.9607V8.57021H73.1118Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M75.7344 8.57016H77.5624L77.7342 10.5111C78.3768 9.01647 80.1809 8.2207 81.5897 8.2207C84.4316 8.2207 85.9917 9.93678 85.9917 12.85V21.1398H83.8885V13.151C83.8885 11.3103 83.0467 10.1375 81.1945 10.1375C79.0916 10.1375 77.8305 11.9781 77.8305 14.3204V21.1398H75.7275V8.57016H75.7344Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M87.627 23.2052C87.627 21.887 88.4929 20.9632 89.5067 20.5169C88.7402 20.1675 88.2214 19.472 88.2214 18.4998C88.2214 17.3788 89.0873 16.4828 89.9774 16.0849C89.0392 15.3894 88.4206 14.0194 88.4206 12.7738C88.4206 9.98521 90.5237 8.21724 93.3654 8.21724C94.551 8.21724 95.5166 8.49055 96.2829 8.96455C96.7022 7.84357 97.6677 7.17236 98.8532 7.17236C99.0766 7.17236 99.2965 7.19658 99.4718 7.2208V8.96455C99.324 8.94033 99.1763 8.94033 99.0011 8.94033C98.1865 8.94033 97.5921 9.38664 97.4684 10.0855C97.9873 10.7567 98.2827 11.5802 98.2827 12.6977C98.2827 15.386 96.2073 17.2024 93.3621 17.2024C92.5476 17.2024 91.8055 17.0779 91.1628 16.8045C90.6439 16.9533 90.1251 17.4999 90.1251 18.0743C90.1251 18.9219 90.8434 19.1434 91.6335 19.1434H94.3517C95.8363 19.1434 97.5407 19.4167 98.5303 20.4373C99.1247 21.0359 99.5199 21.8558 99.5199 22.9007C99.5199 25.814 96.6025 26.8588 93.3654 26.8588C90.1286 26.8588 87.6303 25.8624 87.6303 23.1984L87.627 23.2052ZM97.4649 22.9075C97.4649 21.0393 95.6093 20.9424 94.1044 20.9424H91.2109C90.2729 21.1916 89.5787 21.9388 89.5787 22.9075C89.5787 24.8245 91.6302 25.0735 93.4858 25.0735C95.3413 25.0735 97.4649 24.6999 97.4649 22.9075ZM96.2519 12.7012C96.2519 11.1096 95.1902 9.93677 93.3586 9.93677C91.5272 9.93677 90.4653 11.1062 90.4653 12.7012C90.4653 14.2961 91.5272 15.514 93.3586 15.514C95.1902 15.514 96.2519 14.2927 96.2519 12.7012Z", fill: "currentColor" })] })] }) }; G(); var iq = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 80, viewBox: "0 0 80 80", width: 80, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsxs)("g", { clipPath: "url(#oura-ring-4-outline-a)", children: [(0, l.jsx)("path", { d: "M39.9999 71.6902C22.4506 71.6902 8.16895 57.4649 8.16895 40.0001C8.16895 22.5353 22.4506 8.30994 39.9999 8.30994C57.5492 8.30994 71.8309 22.5353 71.8309 40.0001C71.8309 57.4649 57.5492 71.6902 39.9999 71.6902ZM39.9999 8.59163C22.5915 8.59163 8.45064 22.6761 8.45064 40.0001C8.45064 57.324 22.5915 71.4085 39.9999 71.4085C57.4084 71.4085 71.5492 57.324 71.5492 40.0001C71.5492 22.6761 57.4084 8.59163 39.9999 8.59163Z", fill: "currentColor", stroke: "black", strokeWidth: .75 }), (0, l.jsx)("path", { d: "M40 76C20.1438 76 4 59.8563 4 40C4 20.1438 20.1438 4 40 4C59.8563 4 76 20.1438 76 40C76 59.8563 59.8563 76 40 76ZM40 4.28125C20.3125 4.28125 4.28125 20.3125 4.28125 40C4.28125 59.6875 20.3125 75.7188 40 75.7188C59.6875 75.7188 75.7188 59.6875 75.7188 40C75.7188 20.3125 59.6875 4.28125 40 4.28125Z", fill: "currentColor" }), (0, l.jsx)("circle", { cx: 40.2142, cy: 40, r: 39.2858, stroke: "currentColor" })] }), (0, l.jsx)("defs", { children: (0, l.jsx)("clipPath", { id: "oura-ring-4-outline-a", children: (0, l.jsx)("rect", { fill: "white", height: 80, width: 80 }) }) })] }) }; G(); var iK = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 80, viewBox: "0 0 80 80", width: 80, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsxs)("g", { clipPath: "url(#oura-ring-gen-3-outline-a)", children: [(0, l.jsx)("path", { d: "M40.0001 73.5209C21.972 73.5209 7.3241 58.7885 7.3241 40.704C7.3241 22.6195 21.972 7.88708 40.0001 7.88708C58.0283 7.88708 72.6762 22.6195 72.6762 40.704C72.6762 58.7885 58.0283 73.5209 40.0001 73.5209ZM40.0001 8.16878C22.141 8.16878 7.60579 22.7885 7.60579 40.704C7.60579 58.6195 22.141 73.2392 40.0001 73.2392C57.8593 73.2392 72.3945 58.6477 72.3945 40.704C72.3945 22.7603 57.8593 8.16878 40.0001 8.16878Z", fill: "#151619" }), (0, l.jsx)("path", { d: "M39.9987 72.3948C22.4494 72.3948 8.16772 58.1695 8.16772 40.7047C8.16772 23.2399 22.4494 9.01453 39.9987 9.01453C57.548 9.01453 71.8297 23.2399 71.8297 40.7047C71.8297 58.1695 57.548 72.3948 39.9987 72.3948ZM39.9987 9.29622C22.5903 9.29622 8.44941 23.3807 8.44941 40.7047C8.44941 58.0286 22.5903 72.1131 39.9987 72.1131C57.4072 72.1131 71.548 58.0286 71.548 40.7047C71.548 23.3807 57.4072 9.29622 39.9987 9.29622Z", fill: "#151619" }), (0, l.jsx)("path", { d: "M45.4089 71.8029L45.4371 71.9437L45.6906 71.8874L45.5216 71.6902L45.4089 71.8029ZM34.592 71.8029L34.4793 71.7183L34.3103 71.9155L34.5638 71.9719L34.592 71.8029ZM45.3807 71.662C43.6343 71.9719 41.8314 72.1127 40.0004 72.1127V72.3944C41.8596 72.3944 43.6624 72.2254 45.4089 71.9437L45.3807 71.662ZM40.0004 72.1127C38.1695 72.1127 36.3666 71.9437 34.6202 71.662L34.5638 71.9437C36.3385 72.2536 38.1413 72.3944 39.9723 72.3944V72.1127H40.0004ZM34.7047 71.8874C36.0004 70.4226 37.8878 69.493 40.0004 69.493V69.2113C37.8033 69.2113 35.8314 70.1691 34.5075 71.6902L34.7047 71.8874ZM40.0004 69.5212C42.1131 69.5212 44.0004 70.4507 45.2962 71.9155L45.5216 71.7183C44.1695 70.1972 42.2258 69.2395 40.0286 69.2395V69.5212H40.0004Z", fill: "#151619" }), (0, l.jsx)("path", { d: "M15.802 61.0992L15.6893 61.1837L15.8584 61.3809L15.9429 61.1555L15.802 61.0992ZM10.2809 51.6625L10.3091 51.5217L10.0555 51.4935L10.14 51.7189L10.2809 51.6625ZM15.9147 61.0147C13.5767 58.2541 11.6893 55.071 10.3936 51.6344L10.14 51.7189C11.4358 55.2118 13.3231 58.3949 15.7175 61.1837L15.9147 61.0147ZM10.2527 51.8034C13.5767 52.3668 16.0837 55.2682 16.0837 58.733H16.3654C16.3654 55.1273 13.7457 52.1414 10.3091 51.5217L10.2527 51.8034ZM16.0837 58.733C16.0837 59.5499 15.9429 60.3386 15.6893 61.0428L15.9429 61.1273C16.1964 60.3668 16.3654 59.5499 16.3654 58.7048H16.0837V58.733Z", fill: "#151619" }), (0, l.jsx)("path", { d: "M64.1143 61.1836L64.2269 61.2682L64.0579 61.4372L63.9734 61.2118L64.1143 61.1836ZM69.7481 51.6625L69.7199 51.5217L69.9452 51.4935L69.8607 51.7189L69.7481 51.6625ZM64.0016 61.0991C66.3959 58.3104 68.3114 55.0992 69.6072 51.6062L69.8607 51.6907C68.5368 55.2118 66.6213 58.4513 64.2269 61.2682L64.0016 61.0991ZM69.7481 51.8034C66.3959 52.3386 63.8044 55.24 63.8044 58.733H63.5227C63.5227 55.0992 66.1988 52.0569 69.6917 51.5217L69.7481 51.8034ZM63.8326 58.733C63.8326 59.578 63.9734 60.3949 64.2551 61.1273L64.0016 61.2118C63.7199 60.4231 63.5509 59.578 63.5509 58.7048H63.8326V58.733Z", fill: "#151619" }), (0, l.jsx)("path", { d: "M40 76C20.1438 76 4 59.8563 4 40C4 20.1438 20.1438 4 40 4C59.8563 4 76 20.1438 76 40C76 59.8563 59.8563 76 40 76ZM40 4.28125C20.3125 4.28125 4.28125 20.3125 4.28125 40C4.28125 59.6875 20.3125 75.7188 40 75.7188C59.6875 75.7188 75.7188 59.6875 75.7188 40C75.7188 20.3125 59.6875 4.28125 40 4.28125Z", fill: "#151619" }), (0, l.jsx)("circle", { cx: 40.2142, cy: 40, r: 39.2858, stroke: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M45.4067 71.8042C43.6603 72.1141 41.8575 72.2549 39.9983 72.2549C38.1391 72.2549 36.3645 72.0859 34.5898 71.8042C35.9138 70.3113 37.8293 69.3535 39.9983 69.3535C42.1673 69.3535 44.0828 70.3113 45.4067 71.8042Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M15.8032 61.0997C13.437 58.3391 11.5497 55.1279 10.2539 51.6631C13.6342 52.2546 16.1976 55.1842 16.1976 58.7335C16.2257 59.5786 16.0849 60.3673 15.8032 61.0997Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M64.11 61.1842C66.5044 58.3955 68.4199 55.156 69.7438 51.6631C66.3072 52.1983 63.6875 55.156 63.6875 58.7335C63.6875 59.6068 63.8283 60.4237 64.11 61.1842Z", fill: "currentColor", fillRule: "evenodd" })] }), (0, l.jsx)("defs", { children: (0, l.jsx)("clipPath", { id: "oura-ring-gen-3-outline-a", children: (0, l.jsx)("rect", { fill: "white", height: 80, width: 80 }) }) })] }) }; G(); var iX = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 24 24", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, "data-cy": "icon-oura-symbol", children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M7.5 3H16.5V1H7.5V3ZM5 14C5 10.134 8.13401 7 12 7C15.866 7 19 10.134 19 14C19 17.866 15.866 21 12 21C8.13401 21 5 17.866 5 14ZM12 5C7.02944 5 3 9.02944 3 14C3 18.9706 7.02944 23 12 23C16.9706 23 21 18.9706 21 14C21 9.02944 16.9706 5 12 5Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var iJ = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, viewBox: "0 0 993 311", xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M63.443 27.388H190.38V0H63.443zM643.464 174.105H554.68V83.082h88.783c31.634 0 52.89 18.292 52.89 45.513 0 27.221-21.256 45.51-52.89 45.51m29.409 21.29c30.456-8.686 50.136-34.907 50.136-66.8 0-41.397-31.967-69.212-79.547-69.212H528.035v244.66h26.646V198.174h90.3l57.501 105.867h28.83l-59.946-108.218zM389.668 308.653c65.348 0 110.987-45.903 110.987-111.63V59.384h-27.387v135.793c0 50.688-34.377 86.09-83.6 86.09-40.798 0-84.709-26.94-84.709-86.09V59.384h-27.382v137.64c0 65.726 46.093 111.628 112.093 111.628m478.192-217.35 57.757 126.333H809.735zm-12.848-31.916L743.16 304.044h28.606l27.662-62.713h136.493l27.67 62.713h28.603L880.342 59.383zm-728.077-4.611C56.944 54.775 0 111.719 0 181.712c0 69.996 56.944 126.94 126.937 126.94 69.996 0 126.94-56.944 126.94-126.94 0-69.993-56.944-126.937-126.94-126.937m0 226.49c-54.893 0-99.553-44.66-99.553-99.553 0-54.892 44.661-99.55 99.554-99.55 54.894 0 99.556 44.658 99.556 99.55 0 54.893-44.662 99.553-99.556 99.553", fill: "currentColor" })] }) }; G(), G(); var iY = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 26, viewBox: "0 0 29 26", width: 29, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M3.60838 17.5913H1.4046C1.25379 17.5913 1.12553 17.7009 1.10201 17.8497L0.210686 23.5009C0.19297 23.6125 0.279328 23.713 0.392438 23.713H1.44455C1.59536 23.713 1.72362 23.6034 1.74713 23.4542L1.98753 21.93C2.01072 21.7808 2.1393 21.6713 2.28979 21.6713H2.98743C4.43915 21.6713 5.27692 20.9688 5.49583 19.5767C5.59441 18.9677 5.50001 18.4892 5.21474 18.1539C4.90158 17.7861 4.34595 17.5913 3.60838 17.5913ZM3.86264 19.6553C3.74215 20.4461 3.13793 20.4461 2.55371 20.4461H2.22115L2.45445 18.9692C2.46831 18.88 2.54564 18.8143 2.63588 18.8143H2.78829C3.18626 18.8143 3.56171 18.8143 3.75572 19.0411C3.87129 19.1765 3.90678 19.3775 3.86264 19.6553ZM10.196 19.63H9.1407C9.05078 19.63 8.97309 19.6957 8.95922 19.7851L8.91254 20.0802L8.83873 19.9733C8.61027 19.6416 8.10087 19.5308 7.59236 19.5308C6.42607 19.5308 5.43007 20.4141 5.23606 21.6531C5.13526 22.2711 5.27856 22.8621 5.62915 23.2742C5.95081 23.6532 6.411 23.8111 6.95843 23.8111C7.89806 23.8111 8.41924 23.2068 8.41924 23.2068L8.37212 23.5002C8.35438 23.6123 8.44072 23.7128 8.55316 23.7128H9.50382C9.65503 23.7128 9.78253 23.6032 9.80639 23.4541L10.3768 19.842C10.3948 19.7309 10.3088 19.63 10.196 19.63ZM8.72495 21.684C8.6231 22.2869 8.14456 22.6916 7.53435 22.6916C7.2279 22.6916 6.98289 22.5933 6.82572 22.4071C6.66973 22.2222 6.61038 21.9588 6.66004 21.6657C6.75518 21.0678 7.24177 20.65 7.84274 20.65C8.14232 20.65 8.38599 20.7494 8.54645 20.9373C8.7072 21.1272 8.77103 21.392 8.72495 21.684ZM14.7561 19.6298H15.8166C15.9652 19.6298 16.0518 19.7964 15.9674 19.9182L12.4402 25.0096C12.3831 25.0921 12.289 25.1411 12.1885 25.1411H11.1293C10.9801 25.1411 10.8931 24.9732 10.9794 24.8511L12.0777 23.3008L10.9096 19.8727C10.8692 19.7536 10.9572 19.6298 11.0839 19.6298H12.126C12.2614 19.6298 12.3809 19.7187 12.4199 19.8483L13.0398 21.9187L14.5026 19.7642C14.5598 19.6801 14.655 19.6298 14.7561 19.6298Z", fill: "#253B80", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M26.2544 23.501L27.1589 17.7465C27.1727 17.6571 27.2501 17.5914 27.3401 17.5911H28.3583C28.4707 17.5911 28.5571 17.6919 28.5393 17.8034L27.6474 23.4543C27.6241 23.6034 27.4959 23.713 27.3448 23.713H26.4355C26.323 23.713 26.2367 23.6125 26.2544 23.501ZM19.3278 17.5914H17.1236C16.9732 17.5914 16.8449 17.701 16.8214 17.8498L15.9301 23.501C15.9123 23.6125 15.9987 23.713 16.1112 23.713H17.2422C17.3473 23.713 17.4372 23.6364 17.4536 23.532L17.7066 21.9301C17.7298 21.7808 17.8584 21.6714 18.0088 21.6714H18.7061C20.1581 21.6714 20.9958 20.9689 21.2148 19.5768C21.3137 18.9678 21.2187 18.4892 20.9336 18.154C20.6206 17.7861 20.0654 17.5914 19.3278 17.5914ZM19.5821 19.6554C19.4619 20.4462 18.8576 20.4462 18.2731 20.4462H17.9408L18.1745 18.9693C18.1884 18.8801 18.265 18.8143 18.3555 18.8143H18.5079C18.9057 18.8143 19.2814 18.8143 19.4753 19.0411C19.591 19.1765 19.6262 19.3776 19.5821 19.6554ZM25.9149 19.63H24.8603C24.7696 19.63 24.6927 19.6958 24.6791 19.7851L24.6324 20.0802L24.5583 19.9733C24.3299 19.6417 23.8208 19.5309 23.3122 19.5309C22.146 19.5309 21.1503 20.4141 20.9562 21.6532C20.8557 22.2711 20.9985 22.8621 21.349 23.2743C21.6713 23.6532 22.1309 23.8111 22.6783 23.8111C23.6179 23.8111 24.139 23.2069 24.139 23.2069L24.092 23.5002C24.0743 23.6124 24.1606 23.7129 24.2738 23.7129H25.224C25.3745 23.7129 25.5027 23.6033 25.5263 23.4541L26.097 19.8421C26.1144 19.731 26.0281 19.63 25.9149 19.63ZM24.4439 21.684C24.3427 22.287 23.8636 22.6917 23.2532 22.6917C22.9473 22.6917 22.7019 22.5934 22.5446 22.4071C22.3886 22.2222 22.33 21.9589 22.379 21.6657C22.4746 21.0679 22.9606 20.65 23.5616 20.65C23.8613 20.65 24.1048 20.7495 24.2654 20.9374C24.4268 21.1272 24.4906 21.3921 24.4439 21.684Z", fill: "#179BD7", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M11.7642 15.5696L12.0351 13.8487L11.4316 13.8347H8.5498L10.5525 1.1359C10.5586 1.09756 10.5789 1.06182 10.6084 1.03644C10.638 1.01106 10.6759 0.99707 10.7152 0.99707H15.5744C17.1876 0.99707 18.3008 1.33276 18.8821 1.99533C19.1545 2.30616 19.3281 2.63097 19.4121 2.98842C19.5001 3.36349 19.5017 3.81159 19.4157 4.35813L19.4094 4.39802V4.7482L19.682 4.90259C19.9115 5.02432 20.0937 5.16368 20.2336 5.32324C20.4668 5.58899 20.6176 5.92675 20.6813 6.32719C20.747 6.73904 20.7253 7.22911 20.6176 7.78393C20.4932 8.42217 20.2922 8.97802 20.0208 9.43286C19.771 9.85196 19.4529 10.1995 19.0754 10.469C18.7148 10.7249 18.2864 10.9192 17.802 11.0435C17.3326 11.1657 16.7975 11.2274 16.2106 11.2274H15.8324C15.562 11.2274 15.2993 11.3248 15.0932 11.4994C14.8865 11.6776 14.7496 11.921 14.7077 12.1873L14.6792 12.3422L14.2005 15.3753L14.1788 15.4867C14.1731 15.522 14.1632 15.5396 14.1488 15.5515C14.1358 15.5623 14.1172 15.5696 14.099 15.5696H11.7642Z", fill: "#253B80" }), (0, l.jsx)("path", { d: "M19.94 4.43848C19.9255 4.5312 19.9089 4.626 19.8903 4.72339C19.2494 8.01348 17.0571 9.15007 14.257 9.15007H12.8314C12.489 9.15007 12.2005 9.39872 12.1471 9.73648L11.4171 14.3658L11.2104 15.6779C11.1757 15.8996 11.3467 16.0996 11.5704 16.0996H14.0991C14.3985 16.0996 14.6528 15.882 14.6999 15.5868L14.7248 15.4582L15.201 12.437L15.2315 12.2713C15.2781 11.975 15.5329 11.7574 15.8324 11.7574H16.2105C18.6603 11.7574 20.5782 10.7628 21.1388 7.88449C21.3729 6.68211 21.2516 5.67815 20.632 4.97205C20.4446 4.75914 20.212 4.58248 19.94 4.43848Z", fill: "#179BD7" }), (0, l.jsx)("path", { d: "M19.2694 4.17141C19.1716 4.14292 19.0705 4.11701 18.9668 4.09371C18.8628 4.07092 18.756 4.05071 18.6462 4.0331C18.2618 3.97093 17.8407 3.94141 17.3894 3.94141H13.5808C13.487 3.94141 13.398 3.96264 13.3182 4.00098C13.1425 4.08541 13.0121 4.25172 12.9804 4.4553L12.1701 9.58703L12.1469 9.73673C12.2002 9.39897 12.4888 9.15031 12.8312 9.15031H14.2568C17.0569 9.15031 19.2493 8.01321 19.8901 4.72365C19.9092 4.62625 19.9253 4.53146 19.9397 4.43873C19.7776 4.35273 19.602 4.27917 19.4129 4.21648C19.3663 4.20094 19.3182 4.18592 19.2694 4.17141Z", fill: "#222D65" }), (0, l.jsx)("path", { d: "M12.9804 4.4552C13.012 4.2516 13.1426 4.08532 13.3182 4.00139C13.3985 3.96305 13.4871 3.94181 13.5808 3.94181H17.3895C17.8408 3.94181 18.2619 3.97134 18.6462 4.03351C18.7561 4.05112 18.8628 4.07133 18.9669 4.09411C19.0706 4.11744 19.1715 4.14334 19.2695 4.17182C19.3181 4.18633 19.3663 4.20135 19.4134 4.21638C19.6025 4.27906 19.7782 4.35314 19.9403 4.43862C20.131 3.22277 19.9388 2.39494 19.2814 1.64533C18.5567 0.820099 17.2486 0.466797 15.5748 0.466797H10.7155C10.3736 0.466797 10.082 0.715445 10.0291 1.05373L8.00519 13.883C7.96523 14.1368 8.16103 14.3659 8.41692 14.3659H11.417L12.1702 9.58692L12.9804 4.4552Z", fill: "#253B80" })] }) }; G(), G(); var iQ = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 24 24", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M20.6432 11.152C21.2699 11.5437 21.2699 12.4563 20.6432 12.848L7.53 21.0437C6.86395 21.46 6 20.9812 6 20.1957L6 3.80424C6 3.01881 6.86395 2.53996 7.53 2.95624L20.6432 11.152Z", fill: "currentColor" })] }) }; G(); var i1 = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 9, viewBox: "0 0 13 9", width: 13, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M3.89374 4.16051C4.97735 4.16051 5.67646 4.99943 5.67646 6.08305C5.67646 7.27152 4.80257 8.25027 3.2995 8.25027C1.79642 8.25027 0.607943 7.02684 0.607943 5.13925C0.607943 3.18176 1.86633 1.25922 4.97735 0.315425V1.22426C3.01986 1.74859 1.93624 2.97203 1.93624 4.0906C1.93624 4.51006 2.11102 4.75475 2.35571 4.75475C2.74021 4.75475 2.94995 4.16051 3.89374 4.16051ZM10.6051 4.16051C11.6888 4.16051 12.3879 4.99943 12.3879 6.08305C12.3879 7.27152 11.514 8.25027 10.0109 8.25027C8.50783 8.25027 7.31935 7.02684 7.31935 5.13925C7.31935 3.18176 8.57774 1.25922 11.6888 0.315425V1.22426C9.73127 1.74859 8.64766 2.97203 8.64766 4.0906C8.64766 4.51006 8.82243 4.75475 9.06712 4.75475C9.48658 4.75475 9.66136 4.16051 10.6051 4.16051Z", fill: "currentColor" })] }) }; G(); var i2 = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 20, viewBox: "0 0 20 20", width: 20, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M14.7917 7.08333H10.4167V18.9583C10.4167 19.3035 10.1368 19.5833 9.79167 19.5833C9.44649 19.5833 9.16667 19.3035 9.16667 18.9583V14.5833H4.79167C2.1453 14.5833 0 12.438 0 9.79167V8.33333C0 7.87309 0.373096 7.5 0.833333 7.5H5.625C7.0281 7.5 8.29034 8.10307 9.16667 9.06413V4.79167C9.16667 2.1453 11.312 0 13.9583 0H18.75C19.2102 0 19.5833 0.373096 19.5833 0.833333V2.29167C19.5833 4.93803 17.438 7.08333 14.7917 7.08333Z", fill: "currentColor" })] }) }; G(); var i3 = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 25 24", width: 25, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M13.4263 6.00781C13.4263 3.6606 15.3291 1.75781 17.6763 1.75781H22.9263V3.00781C22.9263 5.35502 21.0235 7.25781 18.6763 7.25781H16.6763C16.2621 7.25781 15.9263 7.5936 15.9263 8.00781C15.9263 8.42203 16.2621 8.75781 16.6763 8.75781H18.6763C21.8519 8.75781 24.4263 6.18345 24.4263 3.00781V1.00781C24.4263 0.593599 24.0905 0.257812 23.6763 0.257812H17.6763C14.5006 0.257812 11.9263 2.83217 11.9263 6.00781V11.1348C10.8747 9.98149 9.35999 9.25781 7.67627 9.25781H1.67627C1.26206 9.25781 0.92627 9.5936 0.92627 10.0078V12.0078C0.92627 15.1834 3.50063 17.7578 6.67627 17.7578H11.9263V23.0078C11.9263 23.422 12.2621 23.7578 12.6763 23.7578C13.0905 23.7578 13.4263 23.422 13.4263 23.0078V6.00781ZM11.9263 16.2578H6.67627C4.32906 16.2578 2.42627 14.355 2.42627 12.0078V10.7578H7.67627C10.0235 10.7578 11.9263 12.6606 11.9263 15.0078V16.2578Z", fill: "currentColor" })] }) }; G(); var i4 = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 24 24", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M4.5 8C5.60457 8 6.5 7.10457 6.5 6C6.5 4.89543 5.60457 4 4.5 4C3.39543 4 2.5 4.89543 2.5 6C2.5 7.10457 3.39543 8 4.5 8Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M0.2 8.4C0.531371 7.95817 1.15817 7.86863 1.6 8.2L9.33334 14H23C23.5523 14 24 14.4477 24 15C24 15.5523 23.5523 16 23 16H22V19C22 19.5523 21.5523 20 21 20C20.4477 20 20 19.5523 20 19V16H4V19C4 19.5523 3.55228 20 3 20C2.44772 20 2 19.5523 2 19V16H1C0.447715 16 -3.37604e-09 15.5523 -3.37604e-09 15C-3.37604e-09 14.4477 0.447715 14 1 14H6L0.4 9.8C-0.041828 9.46863 -0.131371 8.84183 0.2 8.4Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M6.73178 7.85981C7.08534 7.43553 7.71591 7.37821 8.14018 7.73177L10.862 9.99999H11.5858L15.2929 6.29289C15.6834 5.90237 16.3166 5.90237 16.7071 6.29289L20.4142 9.99999H22C22.5523 9.99999 23 10.4477 23 11C23 11.5523 22.5523 12 22 12H10.5C10.2661 12 10.0395 11.918 9.85982 11.7682L6.85982 9.26822C6.43554 8.91465 6.37821 8.28409 6.73178 7.85981ZM17.5858 9.99999L16 8.41421L14.4142 9.99999H17.5858Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(), G(); var i5 = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 12, viewBox: "0 0 21 12", width: 21, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M20.5303 6.53033C20.8232 6.23744 20.8232 5.76256 20.5303 5.46967L15.7574 0.696699C15.4645 0.403806 14.9896 0.403806 14.6967 0.696699C14.4038 0.989593 14.4038 1.46447 14.6967 1.75736L18.9393 6L14.6967 10.2426C14.4038 10.5355 14.4038 11.0104 14.6967 11.3033C14.9896 11.5962 15.4645 11.5962 15.7574 11.3033L20.5303 6.53033ZM0 6.75H20V5.25H0V6.75Z", fill: "currentColor" })] }) }; G(); var i6 = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 24 24", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9ZM7 12C7 9.23858 9.23858 7 12 7C14.7614 7 17 9.23858 17 12C17 14.7614 14.7614 17 12 17C9.23858 17 7 14.7614 7 12Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C12.5523 22 13 22.4477 13 23C13 23.5523 12.5523 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12C24 12.5523 23.5523 13 23 13C22.4477 13 22 12.5523 22 12C22 6.47715 17.5228 2 12 2Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M12 22C17.5228 22 22 17.5228 22 12H24C24 18.6274 18.6274 24 12 24V22Z", fill: "currentColor", fillRule: "evenodd", opacity: .2 })] }) }; G(); var i7 = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 24 24", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M12 20.5C16.6944 20.5 20.5 16.6944 20.5 12C20.5 7.30558 16.6944 3.5 12 3.5C7.30558 3.5 3.5 7.30558 3.5 12C3.5 16.6944 7.30558 20.5 12 20.5ZM12 21.5C17.2467 21.5 21.5 17.2467 21.5 12C21.5 6.75329 17.2467 2.5 12 2.5C6.75329 2.5 2.5 6.75329 2.5 12C2.5 17.2467 6.75329 21.5 12 21.5Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M12 23C18.0751 23 23 18.0751 23 12C23 5.92487 18.0751 1 12 1C5.92487 1 1 5.92487 1 12C1 18.0751 5.92487 23 12 23ZM12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var i8 = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 21, viewBox: "0 0 322 21", width: 322, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M0.113052 0.650635V3.72294H6.36807V18.7391L9.63156 20.5517V3.72294H15.9133V0.650635H0.113052Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M32.3159 0.650635V8.61817H23.2606V0.650635H19.9963V19.9315H23.2606V11.692H32.3159V19.9315H35.6061V0.650635H32.3159Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M42.0456 0.650635V19.9315H53.9569V16.8858H45.3099V11.7727H53.1403V8.80936H45.3099V3.69552H53.9569V0.650635H42.0456Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M165.763 0.650635V3.72294H172.017V18.7391L175.281 20.5517V3.72294H181.563V0.650635H165.763Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M132.12 19.9314H144.222V16.8317H135.383V1.81329L132.12 0.000732422V19.9314Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M152.545 12.3983V19.9309H149.281V0.65005H156.433C157.292 0.638253 158.146 0.790669 158.949 1.09911C159.669 1.37857 160.33 1.79391 160.894 2.32255C161.441 2.84517 161.868 3.48095 162.144 4.1855C162.438 4.92985 162.586 5.72388 162.58 6.52418C162.589 7.32928 162.441 8.12839 162.144 8.87695C161.863 9.57908 161.437 10.2139 160.894 10.7399C160.335 11.2748 159.673 11.6909 158.949 11.9633C158.144 12.2624 157.291 12.4099 156.433 12.3983H152.545ZM155.944 9.51571C156.826 9.56715 157.694 9.28548 158.378 8.72652C158.676 8.45094 158.909 8.11325 159.062 7.7374C159.215 7.36154 159.283 6.95671 159.261 6.5516C159.281 6.14261 159.212 5.73423 159.06 5.3542C158.907 4.97418 158.675 4.63143 158.378 4.34926C157.702 3.77392 156.83 3.48143 155.944 3.53265H152.545V9.51571H155.944Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M78.2664 8.94415L75.4928 8.37356C74.8424 8.27093 74.2445 7.9553 73.7928 7.47617C73.4193 7.03675 73.2209 6.47505 73.2356 5.89852C73.236 5.53532 73.32 5.17707 73.4809 4.85145C73.6453 4.51409 73.8765 4.2136 74.1604 3.96815C74.4697 3.70277 74.8245 3.49541 75.2075 3.35606C75.6384 3.19825 76.0943 3.11992 76.5532 3.12486C77.1209 3.10913 77.6857 3.2108 78.2123 3.42349C78.6293 3.59928 79.0116 3.84823 79.3409 4.15859C79.629 4.43235 79.86 4.76054 80.0204 5.12415L80.0219 5.12637H83.2595C83.1363 4.55399 82.9387 4.00019 82.6719 3.47907C82.3636 2.8751 81.9436 2.33501 81.4343 1.88734C80.8454 1.37538 80.1685 0.974418 79.4365 0.703915C78.5027 0.374113 77.5165 0.217658 76.5265 0.242255C75.6574 0.235821 74.7947 0.392413 73.9833 0.703915C73.2199 0.997924 72.5154 1.42634 71.9032 1.96885C71.3118 2.49432 70.8312 3.13244 70.4893 3.84588C70.1445 4.56229 69.9679 5.348 69.9728 6.14306C69.9481 6.79675 70.0545 7.44877 70.2857 8.06068C70.517 8.67259 70.8684 9.23201 71.3193 9.70593C72.2868 10.6683 73.5243 11.3134 74.8673 11.5555L77.5869 12.1261C78.3078 12.25 78.9753 12.5862 79.504 13.0917C79.7188 13.3078 79.8883 13.5647 80.0027 13.8471C80.1171 14.1296 80.174 14.432 80.1701 14.7368C80.1759 15.1001 80.0994 15.4601 79.9464 15.7898C79.7935 16.1194 79.568 16.4102 79.2868 16.6405C78.5313 17.2004 77.6 17.4707 76.6621 17.4023C76.0394 17.4143 75.4205 17.3035 74.8407 17.0762C74.3429 16.8758 73.8864 16.5851 73.4942 16.2188C73.1283 15.8736 72.8368 15.4573 72.6376 14.9954C72.5589 14.8061 72.4921 14.612 72.4375 14.4144H69.2118C69.2947 15.1392 69.4968 15.8452 69.8098 16.5041C70.1475 17.228 70.6229 17.8791 71.2096 18.4212C71.8664 19.0236 72.6326 19.4946 73.4668 19.8084C74.4893 20.1838 75.5732 20.3638 76.6621 20.3389C77.6585 20.3579 78.6497 20.1918 79.5855 19.8491C80.3748 19.5559 81.0998 19.1125 81.7204 18.5434C82.2876 18.0181 82.7371 17.3787 83.0394 16.6672C83.3344 15.9799 83.4872 15.2401 83.4885 14.4922C83.5092 13.1876 83.0328 11.9239 82.1561 10.9575C81.1149 9.87864 79.7485 9.17131 78.2664 8.94415Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M117.744 20.3391C112.945 20.3391 109.844 17.195 109.844 12.3279V0.325439H113.171V12.2456C113.171 15.1127 115.008 17.0393 117.744 17.0393C120.48 17.0393 122.319 15.1127 122.319 12.2456V0.325439H125.644V12.3279C125.644 17.195 122.543 20.3391 117.744 20.3391Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M102.117 13.9736C102.021 14.1662 101.925 14.3589 101.808 14.5464C101.488 15.0588 101.089 15.5176 100.626 15.9062C100.132 16.3179 99.5706 16.6402 98.9662 16.8585C98.2681 17.1048 97.5316 17.2245 96.7913 17.2119C95.9772 17.2122 95.1701 17.0601 94.4119 16.7636C93.6455 16.4668 92.9471 16.0182 92.3585 15.4446C91.7376 14.8309 91.2515 14.0944 90.9313 13.2823C90.561 12.3339 90.3804 11.322 90.4 10.3041C90.379 9.25855 90.5641 8.21914 90.9446 7.2451C91.2682 6.42347 91.759 5.67805 92.3859 5.05611C92.9688 4.48546 93.663 4.04099 94.4252 3.75041C95.8704 3.20876 97.456 3.17064 98.9255 3.64222C99.5185 3.84148 100.071 4.14514 100.557 4.53887C101.016 4.91527 101.403 5.3714 101.7 5.88532C101.804 6.07337 101.898 6.26653 101.983 6.46406H105.429C105.206 5.6311 104.861 4.83574 104.405 4.10388C103.929 3.33756 103.322 2.66105 102.611 2.10533C101.842 1.51097 100.978 1.05121 100.055 0.745544C98.9928 0.397679 97.8806 0.227914 96.7632 0.243126C95.5203 0.241473 94.2885 0.476619 93.1336 0.935988C91.98 1.38821 90.9266 2.06273 90.0331 2.9212C89.111 3.81905 88.3763 4.89104 87.8716 6.07502C87.3084 7.41261 87.0305 8.85298 87.0557 10.3041C87.0307 11.7524 87.2986 13.1909 87.8434 14.5331C88.332 15.7197 89.0589 16.7933 89.9791 17.6877C90.8703 18.5451 91.9243 19.2153 93.0788 19.6588C94.263 20.1151 95.5222 20.3458 96.7913 20.3391C97.9207 20.3564 99.0441 20.1725 100.109 19.7959C101.036 19.4611 101.904 18.9789 102.678 18.3679C103.395 17.7987 104.008 17.1083 104.487 16.3279C104.94 15.5962 105.285 14.8034 105.512 13.9736L102.117 13.9736Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M212.093 10.2772C212.069 8.82622 212.346 7.386 212.909 6.04814C213.415 4.86118 214.155 3.78834 215.085 2.89359C215.986 2.03544 217.049 1.36537 218.212 0.92245C220.576 0.0154334 223.191 0.0154334 225.555 0.92245C226.717 1.36608 227.78 2.03607 228.682 2.89359C229.613 3.79049 230.357 4.86258 230.871 6.04814C231.443 7.38358 231.725 8.82481 231.7 10.2772C231.724 11.7338 231.442 13.1792 230.871 14.5196C230.359 15.7106 229.615 16.7876 228.682 17.6875C227.781 18.5452 226.718 19.2153 225.555 19.6586C223.191 20.5656 220.576 20.5656 218.212 19.6586C217.049 19.216 215.986 18.5459 215.085 17.6875C214.153 16.7897 213.412 15.712 212.909 14.5196C212.347 13.1768 212.07 11.7324 212.093 10.2772ZM215.438 10.2772C215.416 11.3196 215.606 12.3556 215.995 13.3228C216.33 14.1382 216.825 14.8782 217.45 15.4992C218.037 16.0718 218.736 16.516 219.504 16.8034C220.264 17.092 221.07 17.2397 221.883 17.2392C222.701 17.2388 223.511 17.0912 224.277 16.8034C225.049 16.518 225.753 16.0737 226.343 15.4992C226.969 14.8786 227.464 14.1385 227.798 13.3228C228.188 12.3558 228.378 11.3197 228.356 10.2772C228.378 9.2347 228.188 8.19861 227.798 7.23157C227.464 6.41589 226.969 5.67576 226.343 5.05517C225.752 4.48121 225.049 4.03698 224.277 3.75096C223.511 3.46317 222.701 3.31557 221.883 3.31523C221.07 3.31473 220.264 3.46239 219.504 3.75096C218.736 4.03898 218.037 4.48307 217.45 5.05517C216.825 5.67615 216.33 6.41618 215.995 7.23157C215.605 8.19872 215.416 9.2348 215.438 10.2772Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M259.255 19.9307H262.573V1.8133L259.255 0V19.9307Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M269.915 0.650635V19.9307H281.826V16.8858H273.178V11.7727H281.01V8.80862H273.178V3.69552H281.826V0.650635H269.915Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M286.043 0.649902V3.72295H292.298V18.7384L295.561 20.5517V3.72295H301.843V0.649902H286.043Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M318.216 0.650635L313.566 8.7271L308.943 0.650635H305.081L311.826 11.7727V19.9307H315.089V11.7727L321.887 0.650635H318.216Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M203.304 8.94415L200.53 8.37356C199.88 8.27093 199.282 7.9553 198.83 7.47617C198.457 7.03675 198.258 6.47505 198.273 5.89852C198.273 5.53532 198.357 5.17707 198.518 4.85145C198.683 4.51409 198.914 4.2136 199.198 3.96815C199.507 3.70277 199.862 3.49541 200.245 3.35606C200.676 3.19825 201.132 3.11992 201.59 3.12486C202.158 3.10919 202.723 3.21086 203.25 3.42349C203.667 3.59928 204.049 3.84823 204.378 4.15859C204.666 4.43235 204.897 4.76054 205.058 5.12415L205.059 5.12637H208.297C208.174 4.55399 207.976 4.00019 207.709 3.47907C207.401 2.8751 206.981 2.33501 206.472 1.88734C205.883 1.37554 205.206 0.9746 204.474 0.703915C203.54 0.374113 202.554 0.217658 201.564 0.242255C200.695 0.235821 199.832 0.392413 199.021 0.703915C198.257 0.997924 197.553 1.42634 196.941 1.96885C196.349 2.49432 195.869 3.13244 195.527 3.84588C195.182 4.56229 195.005 5.348 195.01 6.14306C194.985 6.79675 195.092 7.44877 195.323 8.06068C195.554 8.67259 195.906 9.23201 196.357 9.70593C197.324 10.6683 198.562 11.3134 199.905 11.5555L202.624 12.1261C203.345 12.25 204.013 12.5862 204.541 13.0917C204.756 13.3078 204.926 13.5647 205.04 13.8471C205.154 14.1296 205.211 14.432 205.207 14.7368C205.213 15.1002 205.137 15.4602 204.984 15.7899C204.831 16.1195 204.605 16.4103 204.324 16.6405C203.569 17.2004 202.637 17.4707 201.699 17.4023C201.077 17.4143 200.458 17.3035 199.878 17.0762C199.38 16.8758 198.924 16.5851 198.532 16.2188C198.166 15.8736 197.874 15.4573 197.675 14.9954C197.596 14.8061 197.529 14.612 197.475 14.4144H194.249C194.332 15.1391 194.534 15.8451 194.846 16.5041C195.185 17.2279 195.66 17.879 196.247 18.4212C196.904 19.0236 197.67 19.4946 198.504 19.8084C199.527 20.1838 200.611 20.3638 201.699 20.3389C202.696 20.3579 203.687 20.1918 204.623 19.8491C205.412 19.5557 206.137 19.1123 206.758 18.5434C207.314 18.0249 207.758 17.3979 208.062 16.701C208.366 16.0042 208.524 15.2525 208.526 14.4922C208.546 13.1876 208.07 11.9239 207.193 10.9575C206.152 9.87864 204.786 9.17131 203.304 8.94415Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M250.469 13.9734C250.373 14.1661 250.277 14.3587 250.16 14.5462C249.839 15.0585 249.44 15.5173 248.977 15.906C248.484 16.3177 247.922 16.6399 247.318 16.8582C246.62 17.1045 245.883 17.2242 245.143 17.2117C244.329 17.2119 243.522 17.0599 242.764 16.7634C241.997 16.4666 241.299 16.0179 240.71 15.4443C240.089 14.8307 239.603 14.0942 239.283 13.282C238.913 12.3336 238.732 11.3218 238.752 10.3038C238.731 9.25831 238.916 8.21889 239.296 7.24486C239.62 6.42323 240.111 5.67781 240.738 5.05586C241.321 4.48521 242.015 4.04075 242.777 3.75017C244.222 3.20851 245.808 3.17039 247.277 3.64198C247.87 3.84124 248.423 4.1449 248.909 4.53862C249.368 4.91503 249.755 5.37116 250.052 5.88507C250.156 6.07313 250.25 6.26629 250.335 6.46382H253.781C253.558 5.63086 253.213 4.8355 252.757 4.10364C252.281 3.33717 251.674 2.66062 250.963 2.10509C250.194 1.51073 249.329 1.05097 248.407 0.745299C247.345 0.397435 246.232 0.22767 245.115 0.242882C243.872 0.241229 242.64 0.476375 241.485 0.935744C240.332 1.38796 239.278 2.06248 238.385 2.92096C237.463 3.8188 236.728 4.8908 236.223 6.07478C235.66 7.41236 235.382 8.85274 235.408 10.3038C235.382 11.7522 235.65 13.1907 236.195 14.5329C236.684 15.7194 237.411 16.7931 238.331 17.6874C239.222 18.5448 240.276 19.2151 241.431 19.6586C242.615 20.1148 243.874 20.3456 245.143 20.3388C246.272 20.3562 247.396 20.1722 248.461 19.7957C249.388 19.4608 250.256 18.9787 251.03 18.3677C251.747 17.7985 252.36 17.1081 252.839 16.3276C253.291 15.5959 253.637 14.8031 253.864 13.9734H250.469Z", fill: "currentColor" })] }) }; G(); var i9 = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 39, viewBox: "0 0 146 39", width: 146, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M146 23.6247C143.156 24.3112 137.656 25.1593 133.992 25.1593C126.428 25.1593 124.739 20.8529 124.364 18.9915C121.41 18.3234 116.546 18.6758 114.203 19.2081C116.513 19.7148 117.878 21.4953 118.29 24.7848C118.566 24.6894 119.721 24.3075 120.92 24.3075C123.488 24.3075 125.663 27.2629 125.663 30.534C125.663 35.3764 122.94 38.967 120.302 38.967C118.507 38.967 117.948 38.0932 117.341 38.0932C116.734 38.0932 116.244 38.9927 114.523 38.9927C111.841 38.9927 108.887 35.0277 108.887 30.5157C108.887 28.4341 110.005 24.2745 114.434 24.2745C115.564 24.2745 116.138 24.5682 116.274 24.6526C116.197 22.3728 114.56 20.3279 111.605 20.3279C109.093 20.3279 102.996 22.7436 98.5891 26.4699L97.2794 24.6416C101.433 21.5357 110.343 17.0898 120.67 17.0898C122.098 17.0898 123.396 17.1963 124.482 17.3762C124.982 16.0472 126.542 13.4736 131.148 13.4736C138.366 13.4736 143.697 19.601 146.007 23.6247H146ZM131.648 0C118.264 2.91132 113.121 9.94917 113.121 15.1587C127.101 13.4736 125.394 4.72127 131.648 0ZM91.485 5.14346H85.0358V24.9317C85.0358 33.148 78.0567 33.2728 77.1554 33.2728C76.2541 33.2728 69.275 33.1443 69.275 24.928V5.14346H62.8221V24.4544C62.8221 34.8001 69.6356 38.9963 77.1554 38.9963C84.6752 38.9963 91.4887 34.8001 91.4887 24.4544V5.14346H91.485ZM57.5686 21.8331C57.5686 23.0997 57.414 38.5227 39.4128 38.5227H28.902V5.14346H39.4128C57.4177 5.14346 57.5686 20.5665 57.5686 21.8331ZM51.1193 21.8331C51.1193 17.802 48.8052 10.8633 40.1302 10.8633H35.3512V32.7992H40.1302C48.8052 32.7992 51.1193 25.8642 51.1193 21.8294V21.8331ZM0 33.9887C3.43616 37.135 7.5934 38.9963 12.0854 38.9963C18.1042 38.9963 23.4093 34.8955 23.4093 28.9848C23.4093 17.736 7.97601 19.399 7.97601 14.0096C7.97601 11.4397 10.7021 10.3897 13.1376 10.3897C15.3376 10.3897 17.5818 11.3406 18.9173 12.5851L22.2651 7.81615C19.1123 5.48122 15.9557 4.66987 12.5637 4.66987C7.02316 4.66987 1.53045 8.10251 1.53045 14.061C1.53045 24.7077 16.9637 22.4499 16.9637 29.0839C16.9637 31.5106 14.955 33.2765 12.0891 33.2765C9.03555 33.2765 6.11813 31.7015 4.20506 29.6089L0 33.9887Z", fill: "currentColor" })] }) }; G(), G(); var i0 = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 120, viewBox: "0 0 100 120", width: 100, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M74.152 66.2118H67.3762V68.2067H70.8861L67.7073 75.0835H70.1342L74.152 66.2567V66.2118Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M78.0238 75.0835H80.0187V73.4646H81.0288V71.5876H80.0187V69.9967H78.0238V71.5876H76.6519L79.0648 66.2118H76.7248L73.487 73.4085V73.4646H78.0238V75.0835Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M18.5962 67.5277V69.7218L20.6612 68.7257V75.0835H22.917V66.2118H21.3542L18.5962 67.5277Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M27.3668 72.4405C27.4398 72.4405 27.5268 72.4264 27.5829 72.4124L26.065 75.0863H28.5368L30.3998 71.8653C31.0199 70.8104 31.2527 70.1174 31.2527 69.3654C31.2527 67.4716 29.8078 66.0715 27.8719 66.0715C25.9359 66.0715 24.491 67.4744 24.491 69.3654C24.491 70.9983 25.6329 72.3114 27.3668 72.4433V72.4405ZM27.8719 68.0776C28.5929 68.0776 29.1429 68.6275 29.1429 69.3626C29.1429 70.0977 28.5929 70.6617 27.8719 70.6617C27.1508 70.6617 26.5869 70.0837 26.5869 69.3626C26.5869 68.6416 27.1227 68.0776 27.8719 68.0776Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M49.5992 0L0 23.8878L3.99813 58.7543C7.36498 88.1496 17.502 95.3042 34.9366 108.494C38.9011 111.51 43.3902 114.947 49.5992 120C55.8083 114.95 60.2974 111.51 64.2619 108.494C81.6965 95.3042 91.8335 88.1496 95.2004 58.7543L99.1985 23.8878L49.5992 0ZM52.231 83.4866V54.0912C54.195 54.0547 56.2656 53.9509 58.7206 53.8106C57.5282 59.9832 55.6343 68.8239 54.6523 73.3131C54.2651 75.1031 53.213 79.5922 52.231 83.4866ZM56.5097 109.375C56.3694 107.341 56.1927 103.797 56.1927 98.9909C56.1927 87.9757 59.3855 70.6841 62.6823 53.4936C72.4685 52.5116 75.942 50.3007 76.3965 49.95C72.188 48.4068 60.6116 47.6689 49.5964 47.6689C38.5812 47.6689 27.0049 48.3367 22.7964 49.95C23.2537 50.267 26.5504 52.4414 35.8794 53.4234C37.2121 62.6851 39.914 80.7145 42.2623 98.8141C42.2623 98.8141 42.4391 94.6392 42.4391 89.0278C42.4391 79.2415 41.4206 62.859 40.7192 53.8106C43.0704 53.9509 45.068 54.0575 46.9619 54.0912V112.742C43.4884 109.97 40.2983 107.551 37.3495 105.34C20.1618 92.361 11.0404 85.8377 7.9205 58.2661L4.30676 26.239L49.1784 4.63222L47.6689 24.4517C43.3201 24.6285 39.566 25.2934 37.5319 25.9949V26.065C37.5319 26.065 39.7428 26.8366 39.7428 28.3797C39.7428 30.8712 32.3049 32.448 24.8333 35.3603V35.4304C24.8333 35.4304 34.83 33.5001 49.5992 33.5001C64.3685 33.5001 74.3652 35.4304 74.3652 35.4304V35.3603C66.8936 32.448 59.4557 30.8712 59.4557 28.3797C59.4557 26.8366 61.6666 26.065 61.6666 26.065V25.9949C59.6325 25.2934 55.8784 24.6257 51.5296 24.4517L50.0201 4.63222L94.8861 26.239L91.2724 58.2661C88.1496 85.8377 79.0311 92.361 61.8433 105.34C60.1599 106.603 58.3699 107.972 56.5125 109.375H56.5097Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M83.7306 42.7618C83.7306 41.1485 70.541 38.3063 49.5993 38.3063C28.6575 38.3063 15.4679 41.1485 15.4679 42.7618C15.4679 44.5518 24.3086 45.1831 24.8333 45.2168C25.6413 44.4087 32.4816 42.8656 49.5993 42.8656C66.7169 42.8656 73.5572 44.4452 74.3652 45.2168C74.8927 45.1803 83.7306 44.549 83.7306 42.7618Z", fill: "currentColor" })] }) }; G(); var le = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 24 24", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("circle", { cx: 12, cy: 12, fill: "currentColor", opacity: .15, r: 8 }), (0, l.jsx)("circle", { cx: 12, cy: 12, fill: "currentColor", opacity: .3, r: 6 }), (0, l.jsx)("circle", { cx: 12, cy: 12, fill: "currentColor", r: 4 })] }) }; G(), G(), G(); var lr = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, viewBox: "0 0 34 43", x: "0px", xmlSpace: "preserve", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", y: "0px", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M14.7,24.6L14.7,24.6c0.2,0.2,0.5,0.3,0.7,0.3c0.3,0,0.5-0.1,0.7-0.3c0,0,0,0,0,0l6.8-6.8v0 c0.4-0.4,0.4-1,0-1.4c-0.4-0.4-1-0.4-1.4,0l-6.1,6.1l-2.7-2.7h0c-0.4-0.4-1-0.4-1.4,0c-0.4,0.4-0.4,1,0,1.4l0,0L14.7,24.6z", stroke: "currentColor", strokeWidth: .3451 }), (0, l.jsx)("path", { d: "M33.6,3.9c0-0.2,0-0.3-0.1-0.5l0,0C33.3,3,33,2.7,32.6,2.7c-0.4-0.1-0.8,0-1.1,0.3c-1.6,1.4-3.7,2.2-5.9,2.2 c-3,0-5.8-1.5-7.4-3.9l0-0.1c-0.2-0.3-0.6-0.5-1-0.5c0,0,0,0,0,0s0,0,0,0c-0.4,0-0.8,0.2-1,0.5l0,0.1c-1.7,2.5-4.4,3.9-7.4,3.9 C6.4,5.2,4.3,4.4,2.7,3C2.4,2.7,2,2.6,1.6,2.7C1.2,2.7,0.9,3,0.7,3.4l0,0C0.7,3.6,0.6,3.7,0.7,3.9l0,18.3c0,4.5,2.6,9.1,7.7,13.8 c3.9,3.6,8,5.8,8.2,5.9c0.2,0.1,0.4,0.1,0.6,0.1c0,0,0,0,0,0s0,0,0,0c0.2,0,0.4,0,0.6-0.1c0.2-0.1,4.2-2.4,8.2-5.9 c5.1-4.6,7.7-9.3,7.7-13.8L33.6,3.9z M31.2,22.2c0,3.6-2.1,7.4-6.2,11.3c-2.5,2.4-5.2,4.3-6.9,5.4v0c-0.4,0.2-0.7,0.5-1,0.6 c-0.3-0.2-0.6-0.4-1-0.6v0c-1.7-1.1-4.4-2.9-6.9-5.4C5.1,29.6,3,25.8,3,22.2V6.1c1.7,1,3.6,1.5,5.6,1.5c2.8,0,5.4-1,7.5-2.8v0 c0,0,0,0,0,0c0.3-0.3,0.6-0.5,0.8-0.8c0,0,0.1-0.1,0.1-0.1c0,0,0.1,0.1,0.1,0.1c0.3,0.3,0.5,0.6,0.8,0.8c0,0,0,0,0,0v0 c2.1,1.8,4.7,2.8,7.5,2.8c2,0,3.9-0.5,5.6-1.5V22.2z" })] }) }; G(), G(); var lt = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 22, viewBox: "0 0 21 22", width: 21, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M6.41347 20C5.95753 20 5.56885 19.8319 5.24742 19.4956C4.926 19.1593 4.76528 18.755 4.76528 18.2828C4.76528 17.8106 4.92762 17.408 5.25229 17.0751C5.57698 16.7422 5.96728 16.5757 6.4232 16.5757C6.87914 16.5757 7.26782 16.7439 7.58925 17.0801C7.91067 17.4164 8.07139 17.8207 8.07139 18.2929C8.07139 18.7651 7.90905 19.1677 7.58438 19.5006C7.25969 19.8335 6.86939 20 6.41347 20ZM15.5971 20C15.1411 20 14.7525 19.8319 14.431 19.4956C14.1096 19.1593 13.9489 18.755 13.9489 18.2828C13.9489 17.8106 14.1112 17.408 14.4359 17.0751C14.7606 16.7422 15.1509 16.5757 15.6068 16.5757C16.0628 16.5757 16.4514 16.7439 16.7729 17.0801C17.0943 17.4164 17.255 17.8207 17.255 18.2929C17.255 18.7651 17.0927 19.1677 16.768 19.5006C16.4433 19.8335 16.053 20 15.5971 20ZM5.22446 4.30538L7.74996 9.72716H14.3622L17.232 4.30538H5.22446ZM4.53569 2.8786H18.0603C18.4118 2.8786 18.6792 3.04506 18.8626 3.37797C19.046 3.71089 19.0458 4.0438 18.8621 4.37672L15.7627 10.1552C15.5943 10.4564 15.3757 10.6982 15.107 10.8805C14.8382 11.0628 14.544 11.1539 14.2244 11.1539H7.26782L5.98211 13.627H17.255V15.0538H6.18874C5.54589 15.0538 5.08288 14.8319 4.79972 14.388C4.51656 13.9441 4.52039 13.4447 4.8112 12.8899L6.28058 10.0839L2.79081 2.42678H1V1H3.68621L4.53569 2.8786Z", fill: "currentColor" })] }) }; G(), G(); var li = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 40, viewBox: "0 0 205 40", width: 205, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("g", { clipPath: "url(#strava-a)", children: (0, l.jsx)("path", { clipRule: "evenodd", d: "M108.844 38.0852L108.843 38.0835H119.624L126.248 24.7669L132.87 38.0835H145.971L126.246 -0.000259399L107.523 36.1552L100.333 25.6583C104.772 23.5176 107.539 19.8103 107.539 14.4848V14.38C107.539 10.6212 106.391 7.90585 104.197 5.71259C101.639 3.15427 97.5141 1.53574 91.04 1.53574H73.1827V38.0852H85.4008V27.6423H88.0114L94.9036 38.0852H108.844ZM184.188 -0.000259399L164.466 38.0835H177.567L184.189 24.7669L190.813 38.0835H203.913L184.188 -0.000259399ZM155.229 39.5821L174.952 1.49827H161.851L155.228 14.8149L148.605 1.49827H135.504L155.229 39.5821ZM90.6745 18.9227C93.5979 18.9227 95.3735 17.6174 95.3735 15.3724V15.2675C95.3735 12.9181 93.5457 11.7694 90.7267 11.7694H85.4008V18.9227H90.6745ZM47.0539 11.8739H36.2985V1.53574H70.0278V11.8739H59.2724V38.0852H47.0539V11.8739ZM6.52712 24.8229L-3.05176e-05 32.6027C4.64712 36.676 11.3305 38.764 18.7444 38.764C28.5608 38.764 34.8787 34.0646 34.8787 26.3888V26.2848C34.8787 18.9227 28.613 16.2073 19.2669 14.4848C15.4029 13.753 14.4109 13.1273 14.4109 12.1349V12.0305C14.4109 11.1429 15.2467 10.5164 17.0737 10.5164C20.4673 10.5164 24.5928 11.6128 28.0383 14.1189L33.9911 5.86964C29.7616 2.52774 24.5406 0.856583 17.4918 0.856583C7.41386 0.856583 1.98397 6.23511 1.98397 13.1791V13.284C1.98397 21.0111 9.18986 23.3614 17.3869 25.0313C21.3031 25.8149 22.4513 26.3888 22.4513 27.4334V27.5383C22.4513 28.5298 21.512 29.1037 19.3187 29.1037C15.0374 29.1037 10.4951 27.8515 6.52712 24.8229Z", fill: "currentColor", fillRule: "evenodd" }) }), (0, l.jsx)("defs", { children: (0, l.jsx)("clipPath", { id: "strava-a", children: (0, l.jsx)("rect", { fill: "white", height: 40, width: 204.211 }) }) })] }) }; G(); var ll = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 24 24", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M6.68674 6.27278C6.60863 6.19467 6.482 6.19467 6.4039 6.27277L1.65646 11.0202C1.34404 11.3326 0.837506 11.3326 0.525086 11.0202C0.212667 10.7078 0.212667 10.2013 0.525086 9.88884L5.27253 5.1414C5.97547 4.43846 7.11517 4.43846 7.81811 5.1414L11.8584 9.18174C11.9365 9.25984 12.0632 9.25984 12.1413 9.18174L16.1816 5.1414C16.8846 4.43846 18.0243 4.43846 18.7272 5.14141L23.4746 9.88884C23.7871 10.2013 23.7871 10.7078 23.4746 11.0202C23.1622 11.3326 22.6557 11.3326 22.3433 11.0202L17.5958 6.27278C17.5177 6.19467 17.3911 6.19467 17.313 6.27277L13.2727 10.3131C12.5697 11.0161 11.43 11.0161 10.7271 10.3131L6.68674 6.27278ZM6.68674 14.7228C6.60863 14.6447 6.482 14.6447 6.4039 14.7228L1.65646 19.4702C1.34404 19.7826 0.837505 19.7826 0.525086 19.4702C0.212667 19.1578 0.212667 18.6513 0.525086 18.3388L5.27253 13.5914C5.97547 12.8885 7.11517 12.8885 7.81811 13.5914L11.8584 17.6317C11.9365 17.7098 12.0632 17.7098 12.1413 17.6317L16.1816 13.5914C16.8846 12.8885 18.0243 12.8885 18.7272 13.5914L23.4746 18.3388C23.7871 18.6513 23.7871 19.1578 23.4746 19.4702C23.1622 19.7826 22.6557 19.7826 22.3433 19.4702L17.5958 14.7228C17.5177 14.6447 17.3911 14.6447 17.313 14.7228L13.2727 18.7631C12.5697 19.4661 11.43 19.4661 10.7271 18.7631L6.68674 14.7228Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(), G(); var ln = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 24 24", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M17 14C17 12.674 16.4732 11.4022 15.5355 10.4645C14.5978 9.52686 13.3261 9.00008 12 9.00008C10.6739 9.00008 9.40215 9.52686 8.46448 10.4645C7.5268 11.4022 7.00002 12.674 7.00002 14H17Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M2.00005 17C2.00005 16.4477 2.44776 16 3.00004 16H20.9999C21.5522 16 21.9999 16.4477 21.9999 17C21.9999 17.5523 21.5522 18 20.9999 18H3.00004C2.44776 18 2.00005 17.5523 2.00005 17ZM4.00004 21C4.00004 20.4477 4.44775 20 5.00003 20H19C19.5522 20 19.9999 20.4477 19.9999 21C19.9999 21.5523 19.5522 22 19 22H5.00003C4.44775 22 4.00004 21.5523 4.00004 21Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M12 2C12.5523 2 13 2.44771 13 2.99999V5.99998C13 6.55226 12.5523 6.99997 12 6.99997C11.4477 6.99997 11 6.55226 11 5.99998V2.99999C11 2.44771 11.4477 2 12 2Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M20.8284 5.2931C21.2189 5.68362 21.2189 6.31678 20.8284 6.7073L18.7071 8.82861C18.3166 9.21913 17.6834 9.21913 17.2929 8.82861C16.9024 8.43809 16.9024 7.80493 17.2929 7.41441L19.4142 5.2931C19.8047 4.90258 20.4379 4.90258 20.8284 5.2931Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M3.29286 5.29305C3.68338 4.90253 4.31654 4.90253 4.70707 5.29305L6.82837 7.41436C7.21889 7.80488 7.21889 8.43804 6.82837 8.82856C6.43785 9.21908 5.80469 9.21909 5.41417 8.82856L3.29286 6.70726C2.90234 6.31673 2.90234 5.68357 3.29286 5.29305Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M0 13C0 12.4477 0.447713 12 0.999994 12H3.99998C4.55226 12 4.99997 12.4477 4.99997 13C4.99997 13.5523 4.55226 14 3.99998 14H0.999994C0.447713 14 0 13.5523 0 13Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M18.9999 13C18.9999 12.4477 19.4476 12 19.9999 12H22.9999C23.5522 12 23.9999 12.4477 23.9999 13C23.9999 13.5523 23.5522 14 22.9999 14H19.9999C19.4476 14 18.9999 13.5523 18.9999 13Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(), G(); var lo = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 25, viewBox: "0 0 120 25", width: 120, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M57.7834 10.4776L55.4626 9.72295C53.6745 9.15586 53.0788 8.8002 53.0788 7.81565C53.0788 6.83109 54.0347 6.13713 55.5136 6.13713C57.28 6.13713 57.676 6.80398 57.9549 7.54674C58.2782 8.41853 58.7762 8.79044 59.6214 8.79044C60.3647 8.79044 60.9039 8.2754 60.9039 7.56517C60.9039 6.7541 60.4504 5.96256 59.6605 5.39329C58.7198 4.7156 57.3342 4.35669 55.6525 4.35669C53.8785 4.35669 52.4973 4.75789 51.5446 5.54726C50.6875 6.25966 50.2339 7.25614 50.2339 8.43045C50.2339 10.3432 51.3352 11.5294 53.8047 12.2765L56.4879 13.0865C57.9418 13.5224 58.5625 14.1676 58.5625 15.2454C58.5625 16.6485 57.2279 17.2871 55.9877 17.2871C54.2875 17.2871 53.5172 16.8523 53.0419 15.6238C52.6752 14.7075 52.1446 14.2988 51.32 14.2988C50.4954 14.2988 49.9258 14.8713 49.9258 15.6921C49.9258 16.977 51.1551 19.1521 55.7631 19.1521C59.9643 19.1521 61.4605 16.8024 61.4605 14.6034C61.4605 12.5888 60.3256 11.3169 57.7802 10.4787L57.7834 10.4776Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M104.841 14.1047C104.584 14.1047 104.445 14.2055 104.165 14.598C103.114 16.1074 102.055 16.9813 99.7548 16.9813C96.9348 16.9813 95.112 14.9298 95.112 11.755C95.112 8.58009 96.9066 6.3052 99.4748 6.3052C101.284 6.3052 101.838 7.10434 102.168 7.96745C102.399 8.56816 102.771 9.18188 103.778 9.18188C104.672 9.18188 105.228 8.61587 105.228 7.70505C105.228 7.14988 104.865 6.29436 103.849 5.55702C103.092 5.00945 101.721 4.35669 99.4738 4.35669C97.2267 4.35669 95.3442 5.11788 93.963 6.55785C92.6708 7.90565 91.959 9.75115 91.959 11.7539C91.959 16.0402 95.1196 19.1521 99.4738 19.1521C101.866 19.1521 103.342 18.1101 104.158 17.2362C105.059 16.27 105.479 15.1608 105.479 14.7151C105.479 14.3725 105.198 14.1036 104.84 14.1036L104.841 14.1047Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M120 10.9156C120 9.11885 119.365 7.46636 118.213 6.26386C117.034 5.03316 115.377 4.35547 113.548 4.35547C111.386 4.35547 109.523 5.11557 108.159 6.55446C106.879 7.90551 106.174 9.74234 106.174 11.7255C106.174 13.7088 106.888 15.5835 108.184 16.9368C109.574 18.3854 111.497 19.152 113.744 19.152C116.152 19.152 117.633 18.11 118.452 17.236C119.356 16.271 119.778 15.1606 119.778 14.7139C119.778 14.3713 119.497 14.1034 119.138 14.1034C118.88 14.1034 118.742 14.2043 118.462 14.5968C117.41 16.1062 116.346 16.9801 114.024 16.9801C111.213 16.9801 109.421 15.0544 109.328 11.9457H119.249C119.943 11.9457 120 11.4371 120 10.9156ZM109.518 9.94185C110.027 7.64527 111.489 6.33217 113.548 6.33217C115.432 6.33217 116.696 7.67889 116.949 9.94185H109.518Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M75.3651 6.56869C73.9774 5.12221 72.0634 4.35669 69.8294 4.35669C68.1693 4.35669 66.6351 4.94005 65.574 5.96473V5.04523C65.574 4.83053 65.3993 4.65488 65.1834 4.65488H61.9522C61.7363 4.65488 61.5605 4.83053 61.5605 5.04523V6.17834C61.5605 6.39411 61.7363 6.56977 61.9522 6.56977H62.7573C62.8528 6.56977 62.9309 6.64784 62.9309 6.74326V22.0603C62.9309 22.4853 62.9114 22.5298 62.6412 22.7271L61.886 23.2573C61.6962 23.3918 61.5605 23.5067 61.5605 23.7637C61.5605 23.9199 61.6332 24.1801 62.1172 24.1801H66.9802C67.3849 24.1801 67.591 24.0402 67.591 23.7637C67.591 23.5122 67.4381 23.3983 67.2004 23.2519L66.2814 22.7239C65.9505 22.5189 65.9418 22.4745 65.9418 22.0603V18.0125C66.9216 18.7488 68.292 19.1521 69.8294 19.1521C72.0634 19.1521 73.9774 18.3877 75.3651 16.9412C76.6585 15.5913 77.3713 13.749 77.3713 11.756C77.3713 9.76307 76.6585 7.91866 75.3651 6.56869ZM69.5506 17.2036C67.9176 17.2036 66.57 16.4836 65.9418 15.2757V8.23528C66.57 7.02627 67.9176 6.3052 69.5506 6.3052C72.1698 6.3052 74.2215 8.69936 74.2215 11.756C74.2215 14.8127 72.1698 17.2036 69.5506 17.2036Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M49.4721 17.8922L48.6616 17.3349C48.3285 17.1029 47.837 16.5705 47.594 16.2658L44.1002 11.9632L44.0839 11.9437C43.8159 11.6271 43.561 11.3246 43.2669 11.1196L43.3418 11.0448L46.8898 7.16297C47.4095 6.61539 47.9477 6.34757 48.3394 6.15348L49.4602 5.62216C49.6652 5.52024 49.8551 5.38687 49.8551 5.10603C49.8551 4.95097 49.7835 4.69182 49.3007 4.69182H44.0188C43.5349 4.69182 43.4622 4.95206 43.4622 5.10603C43.4622 5.36084 43.5914 5.47253 43.791 5.61566L44.6037 6.14806C44.6731 6.19143 44.71 6.22938 44.7133 6.26191C44.7176 6.29986 44.6883 6.37793 44.5255 6.54166L41.1446 10.2001C40.8636 10.5048 40.6965 10.584 40.3309 10.584H39.7124L39.7255 0.390353C39.7255 0.174574 39.5508 0 39.3349 0H35.7359C35.52 0 35.3453 0.174574 35.3453 0.390353V1.52346C35.3453 1.73924 35.52 1.91381 35.7359 1.91381H36.5388C36.6343 1.91381 36.7124 1.99188 36.7124 2.0873C36.7124 2.46681 36.7004 3.91871 36.6994 4.14099V4.20063V16.6973C36.6994 17.1235 36.6809 17.1668 36.4107 17.362L35.6556 17.8933C35.4592 18.0332 35.3301 18.1438 35.3301 18.4008C35.3301 18.5558 35.4028 18.8172 35.8867 18.8172H40.5251C41.009 18.8172 41.0817 18.5569 41.0817 18.4008C41.0817 18.1438 40.9526 18.0332 40.7562 17.8933L40.0032 17.3631C39.7309 17.1658 39.7124 17.1224 39.7124 16.6973V12.5889H40.3309C40.7432 12.5889 40.9255 12.6192 41.1967 12.9402L44.5494 16.9868C44.6232 17.0812 44.6547 17.1452 44.6482 17.1864C44.6362 17.2568 44.5049 17.3523 44.404 17.4184L43.7324 17.8933C43.536 18.0343 43.408 18.146 43.408 18.4008C43.408 18.5558 43.4807 18.8172 43.9646 18.8172H49.2464C49.7303 18.8172 49.803 18.5569 49.803 18.4008C49.803 18.146 49.6739 18.0343 49.4764 17.8922H49.4721Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M33.6525 17.8933L32.8995 17.3631C32.6272 17.1658 32.6087 17.1224 32.6087 16.6973L32.6217 0.390353C32.6217 0.174574 32.447 0 32.2311 0H28.6321C28.4162 0 28.2415 0.174574 28.2415 0.390353V1.52346C28.2415 1.73924 28.4162 1.91381 28.6321 1.91381H29.4361C29.5316 1.91381 29.6108 1.99188 29.6108 2.0873C29.6108 2.4679 29.5989 3.91871 29.5978 4.14099V16.6973C29.5978 17.1224 29.5783 17.1658 29.3081 17.362L28.5529 17.8933C28.3565 18.0343 28.2285 18.146 28.2285 18.4008C28.2285 18.5558 28.3012 18.8172 28.7851 18.8172H33.4235C33.9075 18.8172 33.9802 18.5569 33.9802 18.4008C33.9802 18.1438 33.851 18.0332 33.6547 17.8933H33.6525Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M26.975 17.425C26.3186 17.425 25.9583 17.4131 25.9583 16.0848V9.84678C25.9583 6.12433 24.1789 4.3916 20.3597 4.3916C16.5404 4.3916 14.8728 5.89988 14.8728 7.39623C14.8728 8.30814 15.4836 8.89692 16.4298 8.89692C17.2837 8.89692 17.7817 8.47296 18.1484 7.43201C18.4099 6.69793 18.6909 6.2512 20.3868 6.2512C22.0827 6.2512 22.9539 7.15443 22.9539 9.09535V9.69606L20.9586 9.96172C16.3842 10.5733 14.0645 12.2962 14.0645 15.0829C14.0645 17.5508 15.8677 19.1458 18.6595 19.1458C20.8913 19.1458 22.4342 18.0691 23.1981 16.9859C23.4737 18.2914 24.2885 19.0071 25.5146 19.0071C26.7406 19.0071 27.3927 18.3435 27.4068 17.8555C27.4133 17.618 27.2137 17.425 26.975 17.425ZM22.9539 13.078C22.9539 14.9485 21.5087 16.9512 19.356 16.9512C17.9195 16.9512 17.096 16.138 17.096 14.7208C17.096 13.1561 18.3589 12.2529 21.0715 11.8755L22.9539 11.6142V13.078Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M91.3051 17.4249C90.6486 17.4249 90.2873 17.4141 90.2873 16.0847V9.84666C90.2873 6.12421 88.509 4.39148 84.6887 4.39148C80.8683 4.39148 79.2018 5.89976 79.2018 7.39611C79.2018 8.30802 79.8137 8.8968 80.7599 8.8968C81.6127 8.8968 82.1107 8.47283 82.4785 7.43189C82.7389 6.69781 83.0199 6.25108 84.7169 6.25108C86.4138 6.25108 87.284 7.15431 87.284 9.09523V9.69594L85.2876 9.96159C80.7132 10.5731 78.3945 12.2961 78.3945 15.0828C78.3945 17.5507 80.1978 19.1457 82.9895 19.1457C85.2214 19.1457 86.7643 18.069 87.5281 16.9858C87.8037 18.2913 88.6175 19.0069 89.8446 19.0069C91.0718 19.0069 91.7228 18.3433 91.7369 17.8554C91.7434 17.6179 91.5438 17.4249 91.3051 17.4249ZM87.284 13.0779C87.284 14.9483 85.8377 16.9511 83.6861 16.9511C82.2496 16.9511 81.426 16.1378 81.426 14.7206C81.426 13.156 82.689 12.2527 85.4004 11.8754L87.284 11.6141V13.0779Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M15.7034 0.390353V3.66281C15.7034 3.95666 15.5384 4.154 15.2932 4.154C15.0144 4.154 14.9048 4.00003 14.7887 3.79835L14.4079 3.1727C13.9587 2.44404 13.5615 1.96694 12.1749 1.96694H9.41029V16.6247C9.41029 17.04 9.42874 17.0823 9.69348 17.2753L10.5951 17.902C10.7883 18.0408 10.9152 18.1492 10.9152 18.4019C10.9152 18.5884 10.8154 18.8107 10.3412 18.8107H5.36104C4.88689 18.8107 4.78815 18.5884 4.78815 18.4019C4.78815 18.1492 4.91401 18.0408 5.10714 17.9031L6.01096 17.2731C6.27353 17.0823 6.29306 17.04 6.29306 16.6247V1.96694H3.52845C2.14181 1.96694 1.74361 2.44404 1.29442 3.1727L0.912494 3.8016C0.798568 4.00003 0.687897 4.154 0.409049 4.154C0.163837 4.154 0 3.95666 0 3.66281V0.390353C0 0.174574 0.174687 0 0.390604 0H15.3128C15.5287 0 15.7034 0.174574 15.7034 0.390353Z", fill: "currentColor" })] }) }; G(); var la = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 24 24", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M21 1C21 0.447715 20.5523 0 20 0C19.4477 0 19 0.447715 19 1V3.58579L18.3287 4.25708C16.6053 2.84697 14.4005 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 10.833 21.7997 9.71063 21.4307 8.66675C21.2467 8.14604 20.6754 7.87311 20.1546 8.05716C19.6339 8.24121 19.361 8.81253 19.545 9.33325C19.8394 10.166 20 11.0632 20 12C20 16.4183 16.4183 20 12 20C7.58172 20 4 16.4183 4 12C4 7.58172 7.58172 4 12 4C13.8495 4 15.5507 4.62654 16.9057 5.6801L14.7573 7.82849C13.9669 7.30526 13.0183 7 12 7C9.23858 7 7 9.23858 7 12C7 14.7614 9.23858 17 12 17C14.3312 17 16.2874 15.4056 16.8424 13.2493C16.9801 12.7144 16.6581 12.1692 16.1232 12.0316C15.5884 11.8939 15.0432 12.2159 14.9055 12.7507C14.5725 14.0449 13.3965 15 12 15C10.3431 15 9 13.6569 9 12C9 10.3431 10.3431 9 12 9C12.4637 9 12.9021 9.10474 13.2936 9.29218L11.2929 11.2929C10.9024 11.6834 10.9024 12.3166 11.2929 12.7071C11.6834 13.0976 12.3166 13.0976 12.7071 12.7071L20.4142 5H23C23.5523 5 24 4.55228 24 4C24 3.44772 23.5523 3 23 3H21V1Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var ls = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 25 24", width: 25, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M12.1544 2C9.50922 2.02116 6.98022 3.08951 5.12101 4.97117C3.2618 6.85282 2.22387 9.39447 2.23446 12.0397C2.24504 14.6849 3.30326 17.2182 5.17746 19.0849C7.05166 20.9516 9.58914 21.9997 12.2344 21.9997C14.8796 21.9997 17.4171 20.9516 19.2913 19.0849C21.1655 17.2182 22.2237 14.6849 22.2343 12.0397C22.2449 9.39447 21.2069 6.85282 19.3477 4.97117C17.4885 3.08951 14.9595 2.02116 12.3144 2H12.1544ZM12.3144 10C12.8375 10.0209 13.3315 10.2461 13.6904 10.6273C14.0493 11.0084 14.2444 11.515 14.234 12.0384C14.2235 12.5618 14.0082 13.0602 13.6344 13.4267C13.2605 13.7931 12.7579 13.9984 12.2344 13.9984C11.7109 13.9984 11.2082 13.7931 10.8344 13.4267C10.4605 13.0602 10.2452 12.5618 10.2348 12.0384C10.2243 11.515 10.4195 11.0084 10.7784 10.6273C11.1373 10.2461 11.6313 10.0209 12.1544 10H12.3144Z", stroke: "#E50024", strokeWidth: 4 })] }) }; G(); var lC = function ({ title: e, titleId: r, secondaryFill: t = "white", ...i }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 40, viewBox: "0 0 142 40", width: 142, xmlns: "http://www.w3.org/2000/svg", ...i, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M5.833 21.212H8.166V29.454L13.416 34.909H24.966V32.969H47.014L53.664 40H112.694L116.31 32.97H140.576V18.06C141.509 17.333 142.092 16.364 142.209 15.152C142.209 13.939 141.859 13.091 141.276 12.364L135.326 6.061C134.626 5.212 133.459 4.727 132.526 4.727C130.776 4.727 129.61 5.939 129.143 7.03H112.694L105.928 0H0V15.151L5.833 21.212Z", fill: "black" }), (0, l.jsx)("path", { d: "M105.578 0.727051L112.344 7.75705H129.726C129.726 7.75705 130.31 5.57605 132.643 5.45505C133.459     5.45505 134.393 5.81805 134.859 6.54505L140.926 12.8491C141.509 13.4551 141.626 14.3031 141.626     15.1521C141.509 16.3641 140.926 17.2121 139.992 17.6971V32.2431H115.96L112.344     39.273H54.014L47.247 32.2431H24.2649V34.182H13.765L8.86695 29.0901V20.3631H6.06695L0.699951     14.7881V0.728051L105.578 0.727051Z", fill: t }), (0, l.jsx)("path", { d: "M14.116 26.6669H17.149V9.21188H89.129V6.18188H4.08301V9.21188H14.116V26.6669Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M22.3991 20.3639H27.6491V17.5759H22.3991V16.2429H30.6821V13.2129H19.4821V24.7269H30.7981V21.6969H22.3981L22.3991 20.3639Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M59.03 24.7269V13.2119H56.114V17.5759H50.047V13.2119H47.131V24.7269H50.047V20.3639H56.114V24.7269H59.03Z", fill: "currentColor", stroke: "currentColor" }), (0, l.jsx)("path", { d: "M70.346 24.7269H74.313V13.2119H71.396V21.3329L65.213 13.2129H61.13V24.7269H64.046V16.6069L70.346 24.7269Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M85.862 13.2119C86.795 13.2119 87.729 13.6969 88.312 14.3029C87.612 13.6969 86.795 13.2129 85.862 13.2129H79.796C78.979 13.2129 78.162 13.5759 77.579 14.0609C78.162 13.5759 78.979 13.2119 79.796 13.2119H85.862Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M86.212 17.0909V20.7269C86.212 20.8479 86.212 20.9699 86.095 21.0909C86.095 20.9699 86.212 20.8489 86.212 20.7269V17.0909Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M85.862 24.7269H79.796C78.746 24.7269 77.929 24.2419 77.229 23.5149C77.5394 23.8956 77.931 24.2021 78.3752 24.4118C78.8193 24.6215 79.3048 24.7292 79.796 24.7269H85.862C86.795 24.7269 87.729 24.2419 88.312 23.6369C87.612 24.3639 86.795 24.7269 85.862 24.7269Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M42.114 20.3639V20.7269C42.114 21.2119 41.764 21.5759 41.298 21.5759H36.165C35.698 21.5759 35.348 21.2119 35.348 20.7269V17.0909C35.348 16.6059 35.698 16.2429 36.165 16.2429H41.298C41.765 16.2429 42.114 16.6059 42.114 17.0909V17.4549H45.031V16.6059C45.031 14.6659 43.514 13.2119 41.765 13.2119H35.815C33.948 13.2119 32.432 14.7879 32.432 16.6059V21.2119C32.432 23.1519 33.948 24.6059 35.698 24.6059H41.765C43.631 24.6059 45.031 23.0299 45.031 21.2119V20.2419L42.114 20.3639Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M94.962 24.7269H105.111V16.2419H99.278V19.3939H102.194V21.6969H95.312C94.845 21.6969 94.378 21.2119 94.378 20.6069V13.3329C94.378 12.7269 94.728 12.2429 95.312 12.2429H104.644V9.21289H95.078C93.095 9.21289 91.462 11.1519 91.462 13.4549V20.4849C91.345 22.7879 92.862 24.7269 94.962 24.7269Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M122.493 24.7269V17.6969L125.877 24.7269H128.443L131.71 17.6969V24.7269H134.626V13.2119H130.543L127.16 20.3639L123.777 13.2119H119.577V24.7269H122.493Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M56.114 28.7269V31.7569H108.494L117.944 13.2119H114.677L111.877 18.4239L109.194 13.2119H105.811L110.244 21.5759L106.511 28.7269H56.114Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M132.526 11.152C133.809 11.152 134.859 10.061 134.859 8.72698C134.859 7.39398 133.809 6.30298 132.526 6.30298C131.243 6.30298 130.193 7.39398 130.193 8.72698C130.193 10.061 131.243 11.152 132.526 11.152ZM132.526 6.66698C133.576 6.66698 134.509 7.63698 134.509 8.72698C134.509 9.81798 133.576 10.788 132.526 10.788C131.476 10.788 130.543 9.81798 130.543 8.72798C130.543 7.51498 131.476 6.66698 132.526 6.66698Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M132.059 9.09104H132.759C132.993 9.09104 133.109 9.21204 133.109 9.45504V9.93904H133.576V9.45504C133.576 9.09104 133.459 8.97004 133.226 8.84904C133.576 8.72704 133.693 8.48504 133.693 8.12104C133.693 7.51504 133.459 7.39404 132.993 7.39404H131.826V9.81804H132.293V9.09104H132.059ZM132.059 7.87904H132.643C132.993 7.87904 132.993 8.00004 132.993 8.24304C132.993 8.60604 132.876 8.72704 132.526 8.72704H131.943V7.88004L132.059 7.87904Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M132.059 9.09104H132.759C132.993 9.09104 133.109 9.21204 133.109 9.45504V9.93904H133.576V9.45504C133.576 9.09104 133.459 8.97004 133.226 8.84904C133.576 8.72704 133.693 8.48504 133.693 8.12104C133.693 7.51504 133.459 7.39404 132.993 7.39404H131.826V9.81804H132.293V9.09104H132.059ZM132.059 7.87904H132.643C132.993 7.87904 132.993 8.00004 132.993 8.24304C132.993 8.60604 132.876 8.72704 132.526 8.72704H131.943V7.88004L132.059 7.87904Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M89.1279 16.7271C89.1279 15.8791 88.7779 15.0301 88.1949 14.4241C88.7779 14.9091 89.1279 15.7581 89.1279 16.7271Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M76.5301 16.6061C76.5301 15.6361 76.9961 14.6661 77.6961 14.0601C76.8791 14.6671 76.5301 15.6361 76.5301 16.6061Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M79.679 16.4851C79.5322 16.6533 79.4497 16.8679 79.446 17.0911C79.446 16.8491 79.562 16.7271 79.679 16.4851Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M89.129 16.727C89.129 15.879 88.779 15.03 88.195 14.424C87.612 13.697 86.679 13.334 85.745 13.334H79.679C78.862 13.334 78.046 13.697 77.463 14.182C77.1021 14.5016 76.8119 14.8931 76.6109 15.3313C76.41 15.7696 76.3027 16.2449 76.296 16.727V21.333C76.296 22.182 76.646 22.909 77.112 23.515C77.4224 23.8957 77.814 24.2022 78.2582 24.4119C78.7023 24.6216 79.1878 24.7293 79.679 24.727H85.745C86.679 24.727 87.612 24.242 88.195 23.637C88.7883 23.0159 89.1223 22.1919 89.129 21.333V16.727ZM86.212 20.848C86.212 20.97 86.212 21.091 86.095 21.212C85.979 21.576 85.629 21.697 85.279 21.697H80.146C79.679 21.697 79.329 21.333 79.329 20.849V17.09C79.329 16.848 79.446 16.605 79.562 16.484C79.7197 16.3333 79.928 16.247 80.146 16.242H85.279C85.745 16.242 86.095 16.605 86.095 17.09L86.212 20.848Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M89.129 16.727C89.129 15.879 88.779 15.03 88.195 14.424C87.612 13.697 86.679 13.334 85.745 13.334H79.679C78.862 13.334 78.046 13.697 77.463 14.182C77.1021 14.5016 76.8119 14.8931 76.6109 15.3313C76.41 15.7696 76.3027 16.2449 76.296 16.727V21.333C76.296 22.182 76.646 22.909 77.112 23.515C77.4224 23.8957 77.814 24.2022 78.2582 24.4119C78.7023 24.6216 79.1878 24.7293 79.679 24.727H85.745C86.679 24.727 87.612 24.242 88.195 23.637C88.7883 23.0159 89.1223 22.1919 89.129 21.333V16.727ZM86.212 20.848C86.212 20.97 86.212 21.091 86.095 21.212C85.979 21.576 85.629 21.697 85.279 21.697H80.146C79.679 21.697 79.329 21.333 79.329 20.849V17.09C79.329 16.848 79.446 16.605 79.562 16.484C79.7197 16.3333 79.928 16.247 80.146 16.242H85.279C85.745 16.242 86.095 16.605 86.095 17.09L86.212 20.848Z", fill: "currentColor" })] }) }; G(); var lu = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 21, viewBox: "0 0 20 21", width: 20, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M12.0827 14.6667C12.0827 15.8173 11.1499 16.75 9.99935 16.75C8.84876 16.75 7.91602 15.8173 7.91602 14.6667C7.91602 13.7338 8.52912 12.9442 9.37435 12.6787V6.125C9.37435 5.77982 9.65417 5.5 9.99935 5.5C10.3445 5.5 10.6243 5.77982 10.6243 6.125V12.6787C11.4696 12.9442 12.0827 13.7338 12.0827 14.6667Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M5.83268 4.66667C5.83268 2.36548 7.69816 0.5 9.99935 0.5C12.3005 0.5 14.166 2.36548 14.166 4.66667V10.5842C15.1961 11.6355 15.8327 13.0772 15.8327 14.6667C15.8327 17.8883 13.221 20.5 9.99935 20.5C6.77769 20.5 4.16602 17.8883 4.16602 14.6667C4.16602 13.0772 4.80262 11.6355 5.83268 10.5842V4.66667ZM9.99935 2.16667C8.61864 2.16667 7.49935 3.28595 7.49935 4.66667V10.9398C7.49935 11.1769 7.3984 11.4027 7.22178 11.5608C6.36802 12.3249 5.83268 13.4327 5.83268 14.6667C5.83268 16.9679 7.69816 18.8333 9.99935 18.8333C12.3005 18.8333 14.166 16.9679 14.166 14.6667C14.166 13.4327 13.6307 12.3249 12.7769 11.5608C12.6003 11.4027 12.4993 11.1769 12.4993 10.9398V4.66667C12.4993 3.28596 11.3801 2.16667 9.99935 2.16667Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M15.8327 3.83333C15.8327 3.3731 16.2058 3 16.666 3H19.166C19.6263 3 19.9993 3.3731 19.9993 3.83333C19.9993 4.29357 19.6263 4.66667 19.166 4.66667H16.666C16.2058 4.66667 15.8327 4.29357 15.8327 3.83333Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M16.666 6.33333C16.2058 6.33333 15.8327 6.70643 15.8327 7.16667C15.8327 7.6269 16.2058 8 16.666 8H18.3327C18.7929 8 19.166 7.6269 19.166 7.16667C19.166 6.70643 18.7929 6.33333 18.3327 6.33333H16.666Z", fill: "currentColor" })] }) }; G(); var ld = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 6, viewBox: "0 0 20 6", width: 20, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M20 3L15 0.11325L15 5.88675L20 3ZM-4.37114e-08 3.5L15.5 3.5L15.5 2.5L4.37114e-08 2.5L-4.37114e-08 3.5Z", fill: "currentColor" })] }) }; G(); var lc = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 32, viewBox: "0 0 303 32", width: 303, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("g", { clipPath: "url(#thrive-global-a)", children: (0, l.jsxs)("g", { clipPath: "url(#thrive-global-b)", children: [(0, l.jsx)("path", { clipRule: "evenodd", d: "M14.9567 31.994C19.4023 31.379 28.7111 21.571 28.7111 14.055C28.7111 12.741 28.5293 11.47 28.189 10.263L21.618 16.779C21.6612 16.887 21.6843 17.005 21.6843 17.128C21.6843 17.653 21.2556 18.078 20.7265 18.078C20.602 18.078 20.4835 18.054 20.3741 18.012L15.4828 22.862C15.4888 22.905 15.4918 22.949 15.4918 22.994C15.4918 23.368 15.273 23.692 14.9557 23.847V31.994H14.9567ZM14.1535 32C9.63668 31.449 0.599976 21.598 0.599976 14.055C0.599976 12.801 0.759606 11.585 1.05979 10.428L10.474 19.762C10.4439 19.854 10.4278 19.953 10.4278 20.055C10.4278 20.58 10.8565 21.005 11.3856 21.005C11.489 21.005 11.5884 20.989 11.6808 20.959L13.5863 22.849C13.5793 22.896 13.5752 22.944 13.5752 22.993C13.5752 23.383 13.8132 23.719 14.1525 23.865V32H14.1535ZM1.31681 9.554L11.0212 19.176C11.1336 19.13 11.2561 19.105 11.3856 19.105C11.9147 19.105 12.3434 19.53 12.3434 20.055C12.3434 20.183 12.3183 20.305 12.2721 20.416L14.0461 22.175C14.0802 22.155 14.1164 22.137 14.1535 22.121V12.834C13.8001 12.694 13.5512 12.352 13.5512 11.952C13.5512 11.864 13.5632 11.778 13.5863 11.697L10.4248 8.562C10.3385 8.588 10.2461 8.601 10.1507 8.601C9.62162 8.601 9.19293 8.176 9.19293 7.651C9.19293 7.557 9.20699 7.466 9.23309 7.38L5.30055 3.482C3.48337 5.096 2.09789 7.183 1.31681 9.554ZM5.91799 2.965L9.7662 6.781C9.88366 6.73 10.0142 6.701 10.1507 6.701C10.6798 6.701 11.1085 7.126 11.1085 7.651C11.1085 7.787 11.0804 7.915 11.0282 8.032L14.1094 11.088C14.1234 11.081 14.1385 11.075 14.1525 11.069V0.005C11.0202 0.087 8.17892 1.179 5.91699 2.965H5.91799ZM14.4979 0H14.5732C14.5601 0 14.5481 0 14.535 0C14.522 0 14.5099 0 14.4969 0H14.4979ZM14.9567 0.006V11.111C14.9708 11.118 14.9838 11.126 14.9969 11.133L23.2394 2.961C20.9403 1.185 18.075 0.096 14.9567 0.006ZM23.8629 3.471L15.4557 11.806C15.4627 11.853 15.4667 11.902 15.4667 11.951C15.4667 12.316 15.2599 12.632 14.9557 12.792V22.14C14.9818 22.153 15.0059 22.166 15.03 22.181L19.8179 17.434C19.7848 17.338 19.7667 17.235 19.7667 17.128C19.7667 16.603 20.1954 16.178 20.7245 16.178C20.8319 16.178 20.9363 16.196 21.0327 16.228L27.9149 9.405C27.0967 7.091 25.6851 5.053 23.8619 3.472L23.8629 3.471Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M19.4515 0.869019C19.4756 0.878019 19.4987 0.887019 19.5228 0.895019C19.5981 0.923019 19.6734 0.952019 19.7487 0.981019C19.7898 0.997019 19.83 1.01302 19.8701 1.02902C19.9475 1.06002 20.0238 1.09202 20.1001 1.12402C20.1513 1.14502 20.2015 1.16702 20.2517 1.18902C20.3239 1.22102 20.3962 1.25302 20.4685 1.28602C20.5177 1.30802 20.5659 1.33102 20.6141 1.35402C20.6663 1.37902 20.7195 1.40402 20.7717 1.43002C20.8219 1.45402 20.8721 1.47902 20.9223 1.50402C21.0066 1.54602 21.09 1.58902 21.1733 1.63302C21.2305 1.66302 21.2867 1.69402 21.344 1.72502C21.3821 1.74602 21.4203 1.76602 21.4574 1.78702C21.5167 1.82002 21.5769 1.85402 21.6361 1.88802C21.6632 1.90302 21.6893 1.91902 21.7164 1.93502C21.8409 2.00802 21.9644 2.08202 22.0859 2.15802C22.101 2.16702 22.116 2.17602 22.1311 2.18602C22.1983 2.22802 22.2656 2.27102 22.3319 2.31502C22.3489 2.32602 22.366 2.33702 22.3831 2.34802C22.5989 2.49002 22.8098 2.63802 23.0166 2.79102L23.0286 2.80002C23.0999 2.85302 23.1712 2.90702 23.2415 2.96102L14.9989 11.134C14.9858 11.126 14.9718 11.119 14.9587 11.112V4.63902C16.4506 3.31802 17.9486 2.06202 19.4535 0.869019H19.4515ZM11.0212 19.176C11.1336 19.13 11.2561 19.105 11.3856 19.105C11.9147 19.105 12.3434 19.53 12.3434 20.055C12.3434 20.183 12.3183 20.305 12.2721 20.416L14.0461 22.175C14.0803 22.155 14.1164 22.137 14.1536 22.121V12.834C13.8002 12.694 13.5512 12.352 13.5512 11.952C13.5512 11.864 13.5632 11.778 13.5863 11.697L10.5804 8.71602C8.92389 10.336 7.27337 12.038 5.62486 13.825L11.0222 19.176H11.0212ZM13.9538 23.746C13.7249 23.572 13.5763 23.3 13.5763 22.993C13.5763 22.944 13.5803 22.896 13.5873 22.849L11.6818 20.959C11.5884 20.989 11.489 21.005 11.3866 21.005C10.8575 21.005 10.4288 20.58 10.4288 20.055C10.4288 19.953 10.4449 19.854 10.475 19.762L5.08372 14.416C3.88297 15.733 2.68323 17.094 1.4845 18.502C3.30469 23.454 7.60468 28.445 11.1658 30.723C12.0482 28.378 12.9829 26.038 13.9558 23.747L13.9538 23.746ZM14.1536 11.069V5.35702C13.1516 6.26102 12.1527 7.19402 11.1547 8.15702L14.1104 11.087C14.1244 11.08 14.1395 11.074 14.1536 11.069ZM23.8629 3.47102L15.4557 11.806C15.4627 11.853 15.4667 11.902 15.4667 11.951C15.4667 12.316 15.2599 12.632 14.9557 12.792V21.433C17.9445 14.689 21.2546 8.52402 24.5908 4.15102C24.3559 3.91602 24.1129 3.68902 23.8619 3.47102H23.8629Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M14.9567 21.433C17.9455 14.689 21.2556 8.524 24.5918 4.151C24.9823 4.541 25.3508 4.953 25.6931 5.387C23.9643 8.511 22.0457 12.126 20.352 16.254C20.0086 16.399 19.7677 16.736 19.7677 17.129C19.7677 17.236 19.7858 17.339 19.8189 17.435L15.031 22.182C15.0069 22.167 14.9818 22.154 14.9567 22.141V21.434V21.433ZM14.1535 31.975V23.865C14.0812 23.834 14.015 23.793 13.9537 23.746C12.9809 26.037 12.0472 28.377 11.1637 30.722C12.262 31.425 13.2901 31.869 14.1535 31.975ZM16.1474 31.636C16.7608 27.068 17.8822 22.908 19.2406 19.136L15.4838 22.861C15.4898 22.904 15.4928 22.948 15.4928 22.993C15.4928 23.367 15.2739 23.691 14.9567 23.846V31.968C15.3231 31.917 15.7227 31.805 16.1474 31.636Z", fill: "currentColor" })] }) }), (0, l.jsx)("path", { d: "M151.127 15.3H150.943V16.972H159.923V15.3H151.127ZM276.491 5.38801H274.859L264.875 27.408H266.707L275.663 7.51201L281.163 19.572H273.919L273.063 21.244H281.919L284.735 27.408H286.567L276.491 5.38801ZM205.699 25.764V5.38801H204.027V27.408H215.331V25.768H205.699V25.764ZM79.4349 5.38801V15.548H68.8149V17.188H79.4349V27.408H81.1069V5.38801H79.4349ZM48.3149 10.684V27.408H49.9869V10.684H48.3149ZM41.0069 5.38801V7.03201H57.2949V5.38801H41.0069ZM292.951 25.768V5.38801H291.279V27.408H302.583V25.768H292.951ZM63.4829 5.38801V27.408H65.1549V5.38801H63.4829ZM139.115 5.38801L130.015 24.464L120.915 5.38801H119.143L129.655 27.408H130.379L140.887 5.38801H139.115V5.38801ZM147.287 25.764V7.03201H159.951V5.38801H145.615V27.408H160.355V25.768H147.287V25.764ZM195.415 8.68801C193.343 6.50801 190.503 5.31201 187.423 5.31201C181.311 5.31201 176.339 10.284 176.339 16.4C176.339 22.516 181.311 27.488 187.423 27.488C193.535 27.488 198.511 22.516 198.511 16.4V15.3H187.239V16.88H196.899C196.643 21.972 192.543 25.908 187.423 25.908C182.303 25.908 177.935 21.736 177.935 16.4C177.935 11.064 182.103 6.89201 187.423 6.89201C190.047 6.89201 192.483 7.92001 194.247 9.73601L195.411 8.68801H195.415ZM112.431 5.38801V27.408H114.103V5.38801H112.431ZM98.1509 20.384H98.5949C102.859 20.384 106.335 17.024 106.335 12.884C106.335 8.74401 102.859 5.38801 98.5989 5.38801H89.0469V27.408H90.6749V6.98401H98.5989C101.975 6.98401 104.711 9.64001 104.711 12.888C104.711 16.136 101.975 18.792 98.5989 18.792H93.5469L104.587 27.408H107.287L98.1509 20.388V20.384ZM228.471 25.792C223.151 25.792 218.779 21.564 218.779 16.376C218.779 11.188 223.147 6.99201 228.471 6.99201C233.795 6.99201 238.163 11.188 238.163 16.376C238.163 21.564 233.791 25.792 228.471 25.792ZM228.471 5.36001C222.183 5.36001 217.075 10.268 217.075 16.384C217.075 22.5 222.179 27.44 228.471 27.44C234.763 27.44 239.867 22.5 239.867 16.384C239.867 10.268 234.763 5.36001 228.471 5.36001ZM257.195 15.888C258.167 15.572 258.963 15.06 259.547 14.36C260.291 13.468 260.683 12.304 260.683 10.936C260.683 9.19601 260.035 7.80401 258.827 6.84401C257.627 5.89201 255.891 5.39201 253.743 5.39201H244.699V27.408H253.803C256.275 27.408 258.259 26.868 259.635 25.844C261.019 24.812 261.763 23.3 261.763 21.404C261.763 19.844 261.271 18.528 260.335 17.548C259.563 16.74 258.499 16.176 257.195 15.888V15.888ZM258.455 24.572C257.379 25.34 255.783 25.752 253.715 25.736H246.375V7.03201H253.715C255.423 7.03201 256.751 7.41601 257.643 8.10401C258.531 8.78801 259.011 9.79201 259.011 11.088C259.011 12.384 258.527 13.436 257.643 14.128C256.751 14.824 255.427 15.208 253.715 15.208H250.031V16.848H253.715C255.783 16.848 257.383 17.264 258.459 18.016C259.527 18.76 260.095 19.848 260.095 21.248C260.095 22.648 259.523 23.812 258.459 24.572H258.455Z", fill: "currentColor" }), (0, l.jsxs)("defs", { children: [(0, l.jsx)("clipPath", { id: "thrive-global-a", children: (0, l.jsx)("rect", { fill: "white", height: 32, transform: "translate(0.599976)", width: 28.1111 }) }), (0, l.jsx)("clipPath", { id: "thrive-global-b", children: (0, l.jsx)("rect", { fill: "white", height: 32, transform: "translate(0.599976)", width: 28.1111 }) })] })] }) }; G(); var lh = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 24 24", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M7.26673 22.7851H3.93548C1.87712 22.7851 0 21.1854 0 18.9627V12.888C0 10.6652 1.87712 9.0656 3.93548 9.0656H6.51603C7.08917 9.0656 7.65447 8.90731 8.1209 8.57425C8.20584 8.51359 8.2925 8.45045 8.37986 8.38522C8.75967 8.10163 9.12163 7.80161 9.40775 7.51454C9.54937 7.37244 9.65705 7.24879 9.73377 7.14673C9.81316 7.04113 9.83664 6.98893 9.83664 6.98893C10.0377 6.51573 10.1764 5.77424 10.2521 5.0259C10.2875 4.67619 10.3053 4.36649 10.3141 4.14571C10.3185 4.03593 10.3206 3.94975 10.3216 3.89347C10.3222 3.86537 10.3224 3.84486 10.3225 3.83272L10.3226 3.82191C10.3226 3.09254 10.4306 2.09357 11.0737 1.25732C11.8059 0.305102 12.8733 0 13.8433 0C15.9017 0 17.7788 1.59962 17.7788 3.8224C17.7788 3.92516 17.7743 4.24082 17.7681 4.6659L17.7681 4.66732L17.768 4.67141C17.7598 5.24129 17.7488 6.00615 17.742 6.71822C17.7403 6.89627 17.7389 7.07223 17.7378 7.2432H20.3871C22.2673 7.2432 24 8.70683 24 10.7619C24 11.6321 23.6893 12.3962 23.1883 12.9881C23.2962 13.3367 23.3548 13.7101 23.3548 14.1029C23.3548 14.9956 23.0521 15.7877 22.5565 16.4161C22.6557 16.7371 22.7097 17.0813 22.7097 17.444C22.7097 18.2814 22.4219 19.0207 21.9537 19.6027C22.0258 19.8804 22.0645 20.1743 22.0645 20.4813C22.0645 22.5364 20.3318 24 18.4516 24H11.0948C9.78449 24 8.96968 23.6285 8.31904 23.2703C8.25784 23.2366 8.20105 23.205 8.14768 23.1754C7.79646 22.98 7.59397 22.8674 7.26673 22.7851ZM6.8866 11.0656H6.58333V20.7851H7.48387C8.24055 20.9342 8.69898 21.1912 9.12592 21.4304C9.65857 21.729 10.1422 22 11.0948 22H18.4516C19.2095 22 19.8452 21.5079 20.0181 20.8445C20.0484 20.7281 20.0645 20.6065 20.0645 20.4813C20.0645 19.8586 19.6664 19.3234 19.0968 19.089C18.8992 19.0078 18.681 18.9627 18.4516 18.9627H19.0968C19.8872 18.9627 20.5449 18.4273 20.683 17.7206L20.6838 17.7162C20.7008 17.6279 20.7097 17.5369 20.7097 17.444C20.7097 16.7093 20.1556 16.0964 19.4194 15.9557C19.3151 15.9358 19.2072 15.9253 19.0968 15.9253H19.4194C20.2915 15.9253 21.0288 15.3822 21.2708 14.6356C21.3208 14.4815 21.3496 14.3187 21.3542 14.1502C21.3546 14.1345 21.3548 14.1187 21.3548 14.1029C21.3548 13.4284 20.9656 12.8394 20.3871 12.5243C20.1024 12.3693 19.7719 12.2805 19.4194 12.2805H20.3871C21.1279 12.2805 21.7521 11.8103 21.9412 11.1695C21.9795 11.0398 22 10.9031 22 10.7619C22 9.92313 21.2779 9.2432 20.3871 9.2432H16.9669C16.1783 9.2432 15.7368 8.8481 15.7354 8.05949C15.7336 7.0198 15.7553 5.53389 15.7687 4.61623C15.7745 4.21397 15.7788 3.92072 15.7788 3.8224C15.7788 2.81592 14.9123 2 13.8433 2C12.7131 2 12.3226 2.66314 12.3226 3.8224C12.3226 3.8224 12.3226 6.25227 11.6774 7.77093C11.2598 8.754 9.82489 9.84489 8.86472 10.4921C8.28197 10.8849 7.58936 11.0656 6.8866 11.0656ZM3.25 20.3336C3.94036 20.3336 4.5 19.774 4.5 19.0836C4.5 18.3933 3.94036 17.8336 3.25 17.8336C2.55964 17.8336 2 18.3933 2 19.0836C2 19.774 2.55964 20.3336 3.25 20.3336Z", fill: "currentColor" })] }) }; G(), G(); var lf = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 24 24", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M12 7C6.47715 7 2 11.4772 2 17C2 17.5523 1.55228 18 1 18C0.447715 18 0 17.5523 0 17C0 10.3726 5.37258 5 12 5C18.6274 5 24 10.3726 24 17C24 17.5523 23.5523 18 23 18C22.4477 18 22 17.5523 22 17C22 11.4772 17.5228 7 12 7ZM8 16C8 15.4477 8.44771 15 9 15H15C15.5523 15 16 15.4477 16 16C16 16.5523 15.5523 17 15 17H9C8.44771 17 8 16.5523 8 16ZM9 11C8.44771 11 8 11.4477 8 12C8 12.5523 8.44771 13 9 13H15C15.5523 13 16 12.5523 16 12C16 11.4477 15.5523 11 15 11H9Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var l_ = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 21, viewBox: "0 0 21 21", width: 21, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M2 1C2 0.447715 1.55228 0 1 0C0.447715 0 0 0.447715 0 1V20C0 20.5523 0.447715 21 1 21H20C20.5523 21 21 20.5523 21 20C21 19.4477 20.5523 19 20 19H2V1Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M12 4C11.4477 4 11 4.44772 11 5C11 5.55228 11.4477 6 12 6H14.5858L11 9.58579L9.70711 8.29289C9.31658 7.90237 8.68342 7.90237 8.29289 8.29289L4.29289 12.2929C3.90237 12.6834 3.90237 13.3166 4.29289 13.7071C4.68342 14.0976 5.31658 14.0976 5.70711 13.7071L9 10.4142L10.2929 11.7071C10.6834 12.0976 11.3166 12.0976 11.7071 11.7071L16 7.41421V10C16 10.5523 16.4477 11 17 11C17.5523 11 18 10.5523 18 10V5C18 4.44772 17.5523 4 17 4H12Z", fill: "currentColor" })] }) }; G(); var lp = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "currentColor", viewBox: "0 0 6 10", xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M3 10L5.88675 5L0.113249 5L3 10ZM2.5 2.18557e-08L2.5 5.5L3.5 5.5L3.5 -2.18557e-08L2.5 2.18557e-08Z", fill: "current" })] }) }; G(), G(); var lm = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 32, viewBox: "0 0 97 32", width: 97, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M0.416794 22.5152C0.298183 21.4972 0.3553 20.0139 0.3553 19.2703L1.89737 1.7628H7.56488L6.02262 19.4251C5.69312 23.2587 7.17809 25.9724 10.9739 25.9724C14.8269 25.9724 16.8742 23.2278 17.1993 19.8282L18.8336 1.76241H24.5275L22.9547 19.5846C22.3048 26.4681 17.7971 31.5942 10.4996 31.5942C4.80566 31.5942 1.128 27.8935 0.416794 22.5152ZM26.8382 16.5876C27.5809 8.19001 33.2177 1.20922 42.9131 1.20922C45.492 1.20922 47.9524 1.79799 50.3906 3.40487L49.7359 10.3505C47.5129 7.35357 44.8417 6.89315 42.3814 6.89315C36.3317 6.89315 33.0104 11.1252 32.5359 16.4683C32.0877 21.714 34.7589 25.9457 40.633 25.9457C43.1856 25.9457 45.8831 25.202 48.7302 22.3334L48.1063 29.4647C45.3473 30.9787 42.7682 31.656 40.1892 31.656C30.5458 31.656 26.1317 24.4586 26.8382 16.5876ZM54.9557 1.76206H60.6186L58.5405 25.5384H66.6683C67.2614 25.5384 69.1901 25.5119 69.7217 25.5119C69.6954 25.7908 69.1901 30.9746 69.1901 30.9746H52.3723L54.9557 1.76206ZM85.9773 0.438526H85.5644L70.025 30.9787H76.0747L78.2362 26.344H89.2108L90.5771 30.9787H96.5651L85.987 0.437744M84.5373 12.6647C84.7174 12.2619 84.8624 11.7395 84.9502 11.4606H85.0425C85.0688 11.8325 85.1304 12.2662 85.249 12.6957C85.5433 14.0237 87.7708 21.4072 87.7708 21.4072H80.5877C80.5877 21.4072 84.4451 12.8817 84.5373 12.6647Z", fill: "currentColor" })] }) }; G(); var lx = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 40, viewBox: "0 0 82 40", width: 82, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M81.5267 17.4046V12.5191H62.9008V30.5343C62.799 28.3969 61.9847 26.7684 60.5598 25.6488C59.542 24.8346 58.0153 24.2239 55.9796 23.715L51.3995 22.5954C49.5674 22.1883 48.4478 21.7812 47.9389 21.4758C47.43 21.2723 47.0229 20.8651 46.9211 20.3562C46.7175 20.0509 46.7176 19.7455 46.7176 19.3384C46.7176 18.5242 47.0229 17.8117 47.6336 17.3028C47.8371 17.201 47.8371 17.0992 48.0407 16.9974C48.9567 16.4885 50.0763 16.0814 51.5013 16.0814C52.8244 16.0814 53.8422 16.285 54.7583 16.6921C56.0814 17.3028 56.7939 18.5242 56.8957 20.0509H62.0865C61.9847 17.3028 60.9669 15.1654 59.0331 13.6387C57.0992 12.1119 54.6565 11.3995 51.8066 11.3995C48.4478 11.3995 45.9033 12.2137 44.0712 13.7404C43.0534 14.6565 42.2392 15.7761 41.8321 17.0992C41.7303 17.3028 41.6285 17.6081 41.6285 18.0153C41.0178 21.0687 38.9822 23.1043 35.7252 23.1043C30.5343 23.1043 28.4987 18.6259 28.4987 14.2493C28.4987 9.56742 30.4326 5.08904 35.7252 5.08904C38.6768 5.08904 41.1196 7.02289 41.5267 9.77098H47.1247C46.4122 3.66411 41.5267 0.305328 35.7252 0.305328C27.888 0.305328 23.1043 5.90329 22.6972 13.2315V1.0178H16.7939V17.5063C16.7939 21.4758 15.4707 23.3079 11.2977 23.3079C6.51399 23.3079 5.80152 20.458 5.80152 17.5063V1.0178H0.101776V17.5063C0.101776 24.7328 4.2748 28.1934 11.3995 28.1934C18.5242 28.1934 22.6972 24.7328 22.6972 17.5063V15.4707C23.1043 22.5954 27.888 28.1934 35.7252 28.1934C38.9822 28.1934 41.6285 27.1756 43.7659 25.3435C43.9695 25.4453 43.9695 25.5471 44.173 25.6488C45.1908 26.3613 47.2265 27.0738 49.9745 27.6845L52.8244 28.2952C54.4529 28.7023 55.6743 29.1094 56.4885 29.5165C57.3028 30.0254 57.7099 30.7379 57.7099 31.5522C57.7099 33.0789 56.8957 34.0967 55.369 34.6056C54.5547 34.9109 53.4351 35.0127 52.112 35.0127C49.8728 35.0127 48.346 34.5038 47.43 33.3842C46.9211 32.7735 46.514 31.8575 46.4122 30.7379H41.2214C41.2214 33.486 42.2392 35.6234 44.2748 37.2519C46.2086 38.8804 49.0585 39.5929 52.4173 39.5929C55.7761 39.5929 58.4224 38.7786 60.3562 37.2519C62.0865 35.827 63.0025 33.9949 63.1043 31.7557V39.1857H69.0076V27.9898H80.1018V23.5114H68.8041V17.4046H81.5267Z", fill: "currentColor" })] }) }; G(); var lg = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 65, viewBox: "0 0 183 65", width: 183, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M0.0756836 51.5126C0.0756836 58.8963 5.98859 64.9064 13.2528 64.9064H182.924V13.4874C182.924 6.09939 177.015 0.0935669 169.747 0.0935669H13.2528C5.98859 0.0935669 0.0756836 6.09939 0.0756836 13.4874V51.5126ZM64.8511 42.3179H71.3278V34.4487C71.3278 33.6919 71.3278 32.6246 72.5069 32.6246C73.6 32.6246 73.6 33.6919 73.6 34.4487V42.3179H80.1197V34.4487C80.1197 33.6919 80.1197 32.6246 81.2128 32.6246C82.3919 32.6246 82.3919 33.6919 82.3919 34.4487V42.3179H88.8686V34.1381C88.8686 31.4698 88.8686 28.3554 84.1434 28.3554C82.5253 28.3554 80.2918 29.1121 79.8572 30.7131H79.8141C79.2848 29.064 77.4042 28.3554 75.6139 28.3554C73.5569 28.3554 71.8055 29.1121 71.018 31.0237H70.9749V28.666H64.8511V42.3179ZM98.276 31.5136C96.7439 31.5136 96.4384 33.1146 96.5245 34.1819H99.894C99.894 33.1583 99.718 31.5136 98.276 31.5136ZM105.493 36.2727V37.0732H96.5245C96.6536 38.7617 98.1856 39.1641 100.114 39.1641C101.861 39.1641 103.479 38.8492 104.486 38.3155V41.828C102.782 42.3617 100.725 42.6329 98.4481 42.6329C93.0258 42.6329 90.1382 39.9602 90.1382 35.2448C90.1382 30.665 93.0258 28.3554 98.4481 28.3554C103.655 28.3554 105.493 31.6448 105.493 36.2727ZM123.145 42.318V22.7083H116.673V30.4463H116.63C115.619 28.9766 114.31 28.3554 112.559 28.3554C108.535 28.3554 106.874 31.6011 106.874 35.293C106.874 39.2079 108.449 42.6329 112.778 42.6329C114.878 42.6329 116.191 41.8762 117.065 39.829H117.112V42.318H123.145ZM116.849 35.4242C116.849 36.7146 116.63 38.2281 115.274 38.2281C113.828 38.2281 113.609 36.7146 113.609 35.293C113.609 33.8713 113.828 32.4453 115.184 32.4453C116.63 32.4453 116.849 33.8713 116.849 35.4242ZM147.851 22.7083H154.285L163.954 35.7872H157.521L162.336 42.3267H154.285L149.469 35.7872H152.662L147.851 29.2478H152.662L147.851 22.7083ZM147.851 22.7083L143.036 29.2478H147.851L142.993 35.7872H146.229L141.413 42.3267H133.362L138.177 35.7872H131.744L141.413 22.7083H147.851ZM25.9566 24.0424H19.0884V35.1573C19.0884 40.542 23.026 42.6329 28.0137 42.6329C33.436 42.6329 37.0251 40.6732 37.0251 34.7593V24.0424H30.2859V34.8949C30.2859 36.6708 29.8943 37.9175 28.0998 37.9175C26.4343 37.9175 25.9566 36.6271 25.9566 34.8949V24.0424ZM45.2056 42.3179H38.729L38.7289 28.666H44.857V31.0237H44.9001C45.6876 29.1121 47.4348 28.3554 49.2724 28.3554C52.728 28.3554 53.9975 30.1751 53.9975 32.8477V42.3179H47.5209V34.4487C47.5209 33.6919 47.5209 32.6246 46.3848 32.6246C45.2056 32.6246 45.2056 33.6919 45.2056 34.4487V42.3179ZM56.2314 42.318H62.7081V28.666H56.2314V42.318ZM62.7081 22.7083H56.2314V27.2444H62.7081V22.7083ZM128.52 45.5942H127.449V19.432H128.52V45.5942Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var lv = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 25, viewBox: "0 0 24 25", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M13.3107 8.66874C13.634 8.22101 13.5332 7.59593 13.0855 7.27257C12.6378 6.94921 12.0127 7.05003 11.6893 7.49776L8.43932 11.9978C8.21946 12.3022 8.18868 12.7041 8.35964 13.0385C8.5306 13.3729 8.87447 13.5832 9.25 13.5832H12.7942L10.6893 16.4978C10.366 16.9455 10.4668 17.5706 10.9145 17.8939C11.3622 18.2173 11.9873 18.1165 12.3107 17.6687L15.5607 13.1687C15.7806 12.8643 15.8113 12.4624 15.6404 12.128C15.4694 11.7936 15.1255 11.5832 14.75 11.5832H11.2058L13.3107 8.66874Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M0 12.5833C0 19.2107 5.37258 24.5833 12 24.5833C18.6274 24.5833 24 19.2107 24 12.5833C24 5.95583 18.6274 0.583252 12 0.583252C5.37258 0.583252 0 5.95583 0 12.5833ZM12 2.58325C17.5228 2.58325 22 7.0604 22 12.5833C22 18.1061 17.5228 22.5833 12 22.5833C6.47715 22.5833 2 18.1061 2 12.5833C2 7.0604 6.47715 2.58325 12 2.58325Z", fill: "currentColor" })] }) }; G(); var lL = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 29, viewBox: "0 0 147 29", width: 147, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M20.2621 23.5831L12.2737 12.6426V20.6001H15.4692V28.4578H0.690918V20.6001H3.68642V8.36515H0.690918V0.506887H12.2993L20.3013 11.547L28.3205 0.506887H39.928V8.36515H36.9321V20.6001H39.928V28.4578H25.1505V20.6001H28.3451V12.6426L20.2621 23.5831Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M99.2662 0.891113C97.7156 0.891113 96.3805 1.83079 96.3805 3.50842C96.3805 5.24906 97.7786 5.82058 98.5229 6.08716C98.8818 6.22682 99.2664 6.34088 99.627 6.47969C100.062 6.65937 101.049 7.06446 101.049 8.0804C101.049 9.04698 100.204 9.45227 99.2407 9.45227C97.8824 9.45227 97.0474 8.66452 96.5468 7.2049L96.0853 7.25413L96.2168 9.02121L96.9708 9.56809C97.3288 9.79631 98.0859 10.2787 99.3171 10.2787C101.227 10.2787 102.51 8.99705 102.51 7.44716C102.51 6.36734 101.92 5.57966 101.202 5.15986C100.831 4.94441 100.409 4.8031 99.8953 4.6396C98.8821 4.30833 97.8172 3.9507 97.8172 2.88451C97.8172 2.1734 98.3809 1.71627 99.3425 1.71627C100.061 1.71627 100.677 1.97595 101.112 2.53461C101.471 3.00639 101.588 3.27835 101.741 3.86254L102.188 3.77472L101.894 1.10686L101.344 1.49939C100.576 1.01654 99.8698 0.891113 99.2662 0.891113ZM134.536 0.953652C131.628 0.940026 129.973 3.15109 129.973 5.60277C129.973 8.4624 132.03 10.3424 134.658 10.3424C137.056 10.3424 139.184 8.71672 139.184 5.61606C139.184 2.89697 137.274 0.96646 134.536 0.953652ZM116.779 1.06808V1.56307C117.65 1.61416 117.663 1.63923 118.316 2.60493L120.724 6.30266V7.87674C120.712 8.85606 120.712 9.08449 120.507 9.28717C120.327 9.46515 120.058 9.49128 119.353 9.56793V10.0509H123.811V9.56793C122.467 9.49128 122.454 9.36487 122.454 7.73838V5.8689L123.862 3.53235C124.9 1.85561 125.168 1.58944 126.078 1.56307V1.06809H122.543V1.56307C123.171 1.6014 123.542 1.61433 123.542 2.04608C123.542 2.25046 123.415 2.51701 123.183 2.96157L121.903 5.1943L120.519 2.94822C120.289 2.56671 120.123 2.28707 120.123 2.04608C120.123 1.61433 120.545 1.58947 121.493 1.56307V1.06809L116.779 1.06808ZM87.5893 1.0774V1.56174C88.332 1.62391 88.5762 1.71364 88.6398 2.20842C88.6784 2.50051 88.6907 2.88053 88.6907 3.95948V7.20485C88.6907 7.57359 88.6902 7.9911 88.6773 8.35981C88.6645 9.3238 88.563 9.47791 87.5893 9.55203V10.051H91.3658V9.55203C90.2771 9.52903 90.2759 9.25163 90.263 7.19422L90.2644 6.02864C91.123 6.04226 91.3019 5.9719 91.8394 7.10109L92.3398 8.15624C93.0575 9.66696 93.7621 10.252 95.4656 10.252C95.6708 10.252 95.8614 10.2403 96.0545 10.2267V9.92198C95.3238 9.82234 95.0176 9.57911 94.4407 8.52483L92.8389 5.76249C94.0813 5.38012 94.6191 4.25572 94.6191 3.39133C94.6191 2.14719 93.9154 1.0934 91.6865 1.0934L87.5893 1.0774ZM79.6381 1.07873V1.56173C80.2915 1.62645 80.5728 1.66387 80.663 2.082C80.7266 2.36132 80.7395 3.35202 80.7395 3.70799V6.86152C80.7395 7.10252 80.7269 8.18291 80.714 8.39839C80.6883 9.37772 80.5731 9.46526 79.6381 9.55471V10.051H86.5309C86.5309 9.40382 86.6455 8.33532 86.7227 7.72647H86.2867C85.9785 9.32745 85.0696 9.2487 83.7619 9.2487C82.5582 9.2487 82.3157 8.93159 82.3157 8.34656V5.8384H83.2897C84.4041 5.8384 84.7238 5.93308 84.7238 6.93879H85.1598V3.97683H84.7238C84.6345 4.77732 84.4677 5.03866 83.3018 5.03866H82.3157V1.87845H83.4305C84.9665 1.87845 85.5175 1.99357 85.7218 3.21306H86.1323L86.08 1.07878L79.6381 1.07873ZM107.796 1.07873L107.719 3.59493H108.194C108.271 1.99395 108.948 2.03148 109.973 2.03148H111.101V8.63926C111.101 9.352 110.871 9.65769 110.038 9.67049V10.051H113.779L113.778 9.67049C112.945 9.65772 112.715 9.35205 112.715 8.63926V2.03148H113.842C114.867 2.03148 115.546 1.99396 115.622 3.59493H116.097L116.019 1.07873H107.796ZM44.5271 1.08139V1.56307C45.2062 1.60139 45.4877 1.71678 45.5641 2.27629C45.5899 2.50452 45.5902 2.93441 45.603 3.90098V5.9328C45.603 7.3822 45.6161 8.73003 46.9607 9.63189C47.8064 10.1914 48.8307 10.2653 49.3313 10.2653C49.958 10.2653 52.3293 10.1399 52.9441 7.72644C53.0978 7.07838 53.1343 6.40321 53.1601 5.71854C53.173 5.33788 53.276 2.84732 53.2889 2.6302C53.3404 1.74285 53.5199 1.55114 54.3648 1.56306V1.08138H50.9183V1.56306C51.7262 1.62778 52.148 1.65195 52.1995 2.4652C52.2124 2.75815 52.2129 3.82515 52.2129 4.15638C52.2129 5.19791 52.2004 6.77266 51.9446 7.61063C51.6372 8.66489 50.9262 9.3324 49.6331 9.3324C49.2356 9.3324 48.4485 9.24644 47.9857 8.57796C47.4053 7.73578 47.3847 6.7978 47.3847 5.70518V3.59618C47.3976 1.69032 47.3964 1.65245 48.6001 1.56299V1.08132L44.5271 1.08139ZM55.0486 1.08139V1.56307C55.6514 1.61416 55.8561 1.70406 56.3567 2.16051C56.3438 3.08874 56.3048 8.41082 56.1769 9.00795C56.0747 9.51635 55.7922 9.52982 55.0486 9.56813V10.0511H58.7379V9.56813C57.3547 9.42933 57.2528 9.37823 57.2528 7.92886V3.27708L60.8254 7.64947C61.2349 8.1451 61.6461 8.65401 62.0556 9.16237L62.8618 10.1657H63.4011L63.5299 3.24125C63.5428 1.77992 63.6314 1.57616 64.6179 1.56335V1.08167H61.0561V1.56335C62.4917 1.61444 62.5297 1.69098 62.5426 3.1148V7.12926L60.0192 4.02764C58.6875 2.38918 58.5204 2.14788 57.764 1.08169L55.0486 1.08139ZM65.5922 1.08139V1.56307C66.6551 1.71636 66.6552 1.76559 66.6681 3.63481V7.26734V8.41167C66.6552 9.35264 66.4748 9.45299 65.5922 9.56799V10.051H69.3472V9.56799C68.644 9.51689 68.3871 9.39001 68.3236 8.84414C68.2978 8.57674 68.2847 7.57255 68.2847 7.25406V3.63481C68.2847 1.71622 68.2843 1.66608 69.3472 1.56307V1.08139H65.5922ZM70.2084 1.08139V1.56307C71.1177 1.70443 71.1942 1.90722 71.8089 3.60954L74.2814 10.2293H74.7684L77.5226 3.70934C78.2653 1.93205 78.3813 1.69081 79.2519 1.56307V1.08139H76.0872V1.56307C76.6504 1.57584 77.2919 1.60075 77.2919 2.24965C77.2919 2.47788 77.1382 2.88424 77.0222 3.20105L75.179 7.91537L73.6026 3.35535C73.3597 2.60514 73.2941 2.38897 73.2941 2.1352C73.2941 1.61403 73.769 1.58944 74.4988 1.56304V1.08136L70.2084 1.08139ZM103.102 1.08139V1.56307C104.166 1.71636 104.167 1.76559 104.181 3.63481V7.26734V8.41167C104.167 9.35264 103.987 9.45299 103.102 9.56799V10.051H106.857V9.56799C106.154 9.51689 105.897 9.39001 105.834 8.84414C105.808 8.57674 105.795 7.57255 105.795 7.25406V3.63481C105.795 1.71622 105.794 1.66608 106.857 1.56307V1.08139H103.102ZM139.626 1.14526V1.62694C140.279 1.68996 140.56 1.72907 140.65 2.1472C140.715 2.42738 140.727 3.4177 140.727 3.77455L140.726 6.92679C140.726 7.16779 140.713 8.24688 140.699 8.4623C140.675 9.43911 140.559 9.52917 139.625 9.61862V10.1136H143.37V9.61862C142.435 9.52921 142.32 9.43909 142.294 8.4623L142.3 5.90223H143.301C144.311 5.90223 144.849 5.99814 144.913 7.00132H145.351V4.04073H144.913C144.862 5.00731 144.594 5.10255 143.492 5.10255H142.3L142.301 1.99692C142.622 1.95774 142.802 1.94502 143.379 1.94502C145.146 1.94502 145.716 1.93704 145.953 3.34217H146.402L146.26 1.14535L139.626 1.14526ZM134.548 1.77863C135.302 1.75564 135.876 2.21065 136.168 2.51978C136.832 3.22319 137.158 4.21533 137.194 5.3726C137.23 6.54016 137.098 7.43351 136.459 8.40773C135.9 9.24909 135.179 9.50164 134.668 9.51615C134.157 9.51615 133.431 9.2875 132.846 8.4623C132.177 7.50852 132.018 6.62123 132.018 5.45115C132.018 4.2947 132.311 3.28941 132.955 2.56638C133.237 2.24959 133.794 1.77863 134.548 1.77863ZM90.8218 1.87183C92.4867 1.87183 93.0152 2.77219 92.9603 3.81454C92.9225 4.53246 92.1443 5.3335 91.1157 5.33009C90.8598 5.33009 90.5135 5.29033 90.2705 5.24094V1.92377C90.4499 1.88545 90.5909 1.87183 90.8218 1.87183ZM126.525 13.7995C125.847 14.3011 125.401 14.5312 123.812 15.0489L124.024 15.3763L120.324 25.4475C119.801 26.8679 119.335 27.158 117.901 27.2159V27.9464H123.541V27.2159C122.708 27.1775 121.68 27.1203 121.68 26.1581C121.68 25.8719 121.758 25.6013 121.855 25.3118L122.279 24.1395H127.103L127.514 25.5247C127.591 25.7742 127.669 26.0633 127.669 26.3323C127.669 27.0817 126.952 27.158 126.022 27.2159V27.9464H132.016H132.416H137.597V27.2159C135.503 27.0038 135.348 26.9272 135.348 24.7369V17.698L140.755 24.3125C141.376 25.0636 141.994 25.8308 142.614 26.5998L143.836 28.1194H144.651L144.844 17.6448C144.863 15.4358 144.999 15.1257 146.491 15.1087V14.3769H141.104V15.1087C143.274 15.1853 143.332 15.2999 143.352 17.4519V23.5248L139.534 18.8344C137.519 16.3554 137.266 15.9915 136.124 14.3769H132.016V15.1087C132.927 15.1853 133.236 15.3193 133.992 16.0108C133.972 17.4134 133.914 25.4655 133.721 26.3709C133.58 27.0662 133.19 27.1451 132.291 27.1972C130.956 27.0303 130.694 26.6074 130.169 25.0243L127.146 15.7978C126.836 14.8373 126.797 14.7226 126.525 13.7995ZM111.691 14.0297C107.975 14.0297 105.01 16.8546 105.01 21.1973C105.01 24.7519 107.26 28.2907 111.969 28.2907C114.655 28.2907 116.172 27.3476 117.236 26.6953V25.6761C117.271 23.1009 117.271 22.7549 118.509 22.6782V21.9477H112.998V22.6782C114.516 22.8332 114.751 22.8704 114.813 24.5983C114.834 25.1961 114.778 25.5223 114.534 25.8877C114.464 25.9643 113.678 27.0214 112.161 27.0214C109.492 27.0214 107.942 24.3507 107.942 21.2373C107.942 17.3344 109.93 15.336 112.319 15.336C113.696 15.336 114.569 15.9027 115.022 16.3446C116.051 17.364 116.471 18.2957 116.749 19.103L117.307 19.0072L117.202 14.7586L116.489 15.5662C115.372 14.8935 114.028 14.0297 111.691 14.0297ZM76.5815 14.0497C71.9615 14.0497 69.697 17.6644 69.697 21.3345C69.697 25.2944 72.3676 28.3107 76.4906 28.3107C80.265 28.3107 81.7193 25.9076 82.3264 24.9283L81.5121 24.3162C80.7943 25.3347 79.8964 26.6595 77.5035 26.6595C74.3362 26.6595 72.7343 23.8532 72.7343 20.8727C72.7343 17.3547 74.6866 15.3586 77.1534 15.3586C78.5889 15.3586 79.6015 16.2411 80.0256 16.6839C80.9091 17.6445 81.2586 18.2776 81.4973 19.067L82.105 18.9499L82.0312 14.837L81.0922 15.6833C80.3014 15.0701 79.0114 14.0497 76.5815 14.0497ZM45.067 14.377V15.1088C46.2871 15.1258 46.5589 15.2233 46.5589 16.5671C46.5589 17.0483 46.5598 17.7019 46.5401 18.1439L46.3469 23.8323C46.3263 24.5817 46.2688 25.7165 46.2302 26.081C46.1521 27.0041 45.7253 27.1581 44.6203 27.216V27.9465H49.3694V27.216C47.9159 27.101 47.7609 26.8507 47.7609 25.5248L47.8629 17.5451L52.2565 28.1191H53.4585L58.2438 17.682V24.507C58.2241 27.0251 58.2247 27.1011 56.4998 27.2161V27.9467H62.4871V27.2161C61.4018 27.1199 61.0149 26.9279 60.9376 25.9281C60.8792 25.2358 60.8598 24.0836 60.8598 23.1605V17.5679C60.8409 15.4534 60.8592 15.2802 62.4871 15.1848V14.3772H58.3215L53.6328 24.6787L49.3679 14.3772L45.067 14.377ZM63.8283 14.377V15.1088C65.4365 15.3387 65.4359 15.415 65.4556 18.2397V23.7378V25.4649C65.4359 26.8888 65.166 27.0432 63.8283 27.216V27.9465H69.5085V27.216C68.4429 27.1393 68.0546 26.9456 67.9576 26.1196C67.919 25.7168 67.8999 24.1976 67.8999 23.7165V18.2397C67.8999 15.3383 67.9003 15.2621 69.5085 15.1088V14.377H63.8283ZM83.337 14.377V15.1088C84.4024 15.2033 84.7891 15.3189 84.8664 16.1254C84.9247 16.5486 84.9254 17.433 84.9254 18.3169V24.0066C84.9254 24.486 84.9255 24.9665 84.9066 25.4476C84.9066 26.7531 84.8868 27.0814 83.337 27.216V27.9465H89.1928V27.216C87.4293 27.0244 87.3908 27.0246 87.371 24.1982V21.71C88.5533 21.6512 89.4751 21.6142 90.6565 21.6142C91.7804 21.6142 92.6823 21.6717 93.7676 21.71V24.1982C93.7676 25.1792 93.7673 25.6978 93.7287 26.081C93.6111 27.0246 93.2434 27.0602 91.8679 27.216V27.9465H97.8003V27.216C96.7923 27.1198 96.3854 26.9862 96.2883 26.2726C96.2299 25.8715 96.2105 24.1602 96.2105 23.622V17.8938C96.2105 15.3194 96.2101 15.3004 97.8002 15.1088V14.377H91.8679V15.1088C93.7285 15.2808 93.7478 15.3762 93.7675 17.8551V20.1345C92.6041 20.1915 91.6835 20.2303 90.5209 20.2303C89.3781 20.2303 88.5532 20.1915 87.371 20.1345V18.2596C87.371 17.4515 87.3907 16.452 87.4877 16.0109C87.6234 15.2615 88.0492 15.2237 89.1928 15.1087V14.3769L83.337 14.377ZM98.9325 14.377V15.1088C100.542 15.3387 100.543 15.415 100.562 18.2397V23.7378V25.4649C100.543 26.8888 100.271 27.0432 98.9325 27.216V27.9465H104.619V27.216C103.555 27.1393 103.168 26.9456 103.071 26.1196C103.032 25.7168 103.011 24.1976 103.011 23.7165V18.2397C103.011 15.3383 103.011 15.2621 104.619 15.1088V14.377H98.9325ZM124.796 17.0542L126.716 22.6787H122.785L124.796 17.0542Z", fill: "currentColor" })] }) }; G(); var lb = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 81, viewBox: "0 0 142 81", width: 142, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M81.3207 19.7571H78.0656V34.4088H81.3207V19.7571Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M63.6502 19.7571H60.5031V34.4088H63.6502V19.7571Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M68.0928 19.7571H64.738V34.4088H68.0928V19.7571Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M72.5353 19.7571H69.1805V34.4088H72.5353V19.7571Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M76.9778 19.7571H73.6231V34.4088H76.9778V19.7571Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M79.9173 18.728H61.8317L71.1153 13.3229L79.9173 18.728Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M59.7474 18.728H52V13.2679H69.1307L59.7474 18.728Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M73.0335 13.2679H89.7241V18.728H81.9269L73.0335 13.2679Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M87.3326 12.231H54.3915C57.6134 6.72381 63.7831 3 70.8579 3C77.941 3 84.1025 6.72381 87.3326 12.231Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M54.541 30.2372L54.2586 31.0543L54.9977 30.5436L55.7367 31.0543L55.4544 30.2372L56.1934 29.7266H55.28L54.9894 28.9095L54.707 29.7266H53.7936L54.541 30.2372ZM52 25.5785L52.739 26.0892L52.4567 26.9062L53.1957 26.3956L53.9348 26.9062L53.6525 26.0892L54.3915 25.5785H53.4781L53.1957 24.7615L52.9134 25.5785H52ZM59.4236 34.4088H58.4271L58.1448 33.5997L58.8838 33.089H57.9704L57.6881 32.272L57.4058 33.089H56.4923L57.2314 33.5997L56.9491 34.4167H52V25.5785V22.3968L52.6892 21.9176L53.4283 22.4282L53.1459 21.6112L53.885 21.1005H52.9715L52.6892 20.2835L52.5647 20.6606L52.3903 21.1084H52V19.7729H59.4236V34.4088ZM58.4188 34.4088H56.9574L57.6881 33.906L58.4188 34.4088ZM52 22.2868V21.4384L52.2159 21.5876L52.0581 22.0433L52 22.2868Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M59.4236 35.4459H52V39.3346H59.4236V35.4459Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M89.7158 35.4459H82.4002V39.3346H89.7158V35.4459Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M75.9481 38.1955L76.6872 37.6849H75.7738L75.4914 36.8678L75.2091 37.6849H74.2957L75.0347 38.1955L74.7524 39.0125L75.4914 38.5019L76.2305 39.0125L75.9481 38.1955ZM70.4344 38.7376L70.2268 39.3346H60.5031V35.4459H61.6988L61.4912 36.0508H60.5778L61.3169 36.5614L61.0345 37.3785L61.7736 36.8678L62.5126 37.3785L62.2303 36.5614L62.9693 36.0508H62.0559L61.8483 35.4459H79.9173L79.7097 36.0508H78.7963L79.5354 36.5614L79.253 37.3785L79.9921 36.8678L80.7311 37.3785L80.4488 36.5614L81.1878 36.0508H80.2744L80.0668 35.4459H81.3207V39.3346H71.5554L71.3478 38.7376L72.0869 38.2269H71.1735L70.8911 37.4099L70.6088 38.2269H69.6954L70.4344 38.7376ZM65.693 38.1955L65.4106 39.0125L66.1497 38.5019L66.8887 39.0125L66.6064 38.1955L67.3454 37.6849H66.432L66.1497 36.8678L65.8673 37.6849H64.9539L65.693 38.1955ZM71.3063 39.3346H70.4676L70.8828 39.0518L71.3063 39.3346Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M87.233 30.2372L87.972 29.7266H87.0586L86.7763 28.9095L86.4939 29.7266H85.5805L86.3195 30.2372L86.0372 31.0543L86.7763 30.5436L87.5153 31.0543L87.233 30.2372ZM84.8166 34.4088L84.5342 33.5918L85.2733 33.0811H84.3599L84.0775 32.2641L83.8035 33.089H82.8901L83.6291 33.5996L83.3468 34.4167L84.0858 33.9139L84.8166 34.4088ZM89.7241 34.4088H84.8249H83.3634H82.4168V19.7571H89.7324V21.0927H89.3753L89.093 20.2756L88.8107 21.0927H87.8973L88.6363 21.6033L88.354 22.4204L89.093 21.9097L89.7324 22.3497V25.5707H88.8771L88.5948 24.7536L88.3125 25.5707H87.399L88.1381 26.0813L87.8557 26.8984L88.5948 26.3877L89.3338 26.8984L89.0515 26.0813L89.7407 25.61V34.4088H89.7241ZM89.7241 21.4776V22.1533L89.5331 21.6112L89.7241 21.4776Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M17.8884 59.7487C20.264 59.7487 21.9269 59.1177 23.0256 58.1081C24.5549 56.7941 25.1562 55.0792 25.3195 52.8372C25.4012 51.7757 25.4531 46.9948 25.4531 46.6088C25.4531 46.2302 25.4531 42.3476 25.5051 42.0729C25.5868 41.7462 25.6684 40.9816 26.678 40.9816H27.799C27.9326 40.9816 27.9623 40.8702 27.9623 40.7069V40.1204C27.9623 40.0388 27.9326 39.9274 27.6877 39.9274C27.4427 39.9274 26.5667 40.0091 24.6811 40.0091C22.8548 40.0091 21.6002 39.9274 21.3255 39.9274C21.1622 39.9274 21.1325 39.9794 21.1325 40.1204V40.7737C21.1325 40.9074 21.1622 40.989 21.3255 40.989H22.5282C23.2409 40.989 23.6714 41.479 23.7605 42.1917C23.8422 42.8746 23.8941 44.4559 23.8941 46.5345V52.377C23.8941 54.3962 23.5378 56.0369 22.4762 57.1801C21.5186 58.16 19.9373 58.6797 18.3783 58.6797C16.7971 58.6797 15.0451 58.1897 14.0355 56.7124C13.4045 55.7845 13.1892 54.5002 13.1595 53.2455C13.1298 52.3696 13.0258 48.9027 13.0258 47.4551V45.6585C13.0258 44.2629 13.0555 42.355 13.0778 42.11C13.1298 41.5087 13.5975 40.989 14.3918 40.989H15.7578C15.9508 40.989 15.9731 40.9371 15.9731 40.796V40.0908C15.9731 39.9794 15.9434 39.9274 15.7281 39.9274C15.4311 39.9274 14.1171 40.0091 11.9865 40.0091C9.85592 40.0091 8.51966 39.9274 8.24498 39.9274C8.02969 39.9274 8 39.9794 8 40.1427V40.744C8 40.9371 8.02969 40.989 8.19302 40.989H9.47732C10.3236 40.989 10.5166 41.427 10.5166 42.3847V48.8804C10.5166 52.4586 10.628 54.2849 10.9546 55.5172C11.3926 57.2395 12.3503 58.4421 14.2062 59.1771C15.1045 59.5631 16.463 59.7487 17.8884 59.7487Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M40.3079 50.3355C40.3079 49.118 40.2485 47.2472 40.397 45.8887C40.4564 45.473 40.6049 45.2651 41.3472 45.2651H41.6442C41.763 45.2651 41.8224 45.176 41.8224 45.0572V44.4336C41.8224 44.2555 41.763 44.1961 41.6145 44.1961C41.4066 44.1961 40.3673 44.2852 39.7437 44.2852C38.7935 44.2852 37.5166 44.1961 37.3088 44.1961C37.1603 44.1961 37.1009 44.2555 37.1009 44.3445V45.0572C37.1009 45.2057 37.1603 45.2651 37.3088 45.2651H37.8136C38.3184 45.2651 38.7638 45.4433 38.9123 45.7996C39.0608 46.1559 39.1498 47.8782 39.1498 48.5909C39.2092 49.5411 39.2389 50.4617 39.2389 52.1543V54.1141H39.1201C38.7638 53.7281 36.0022 50.2538 35.4677 49.6376C34.8441 48.8953 31.4292 44.597 31.3475 44.4782C31.2287 44.3 31.0506 44.2406 30.6348 44.2406C30.2785 44.2406 29.6549 44.3 29.1798 44.3C28.8532 44.3 28.378 44.2703 27.992 44.2406C27.606 44.2406 27.2793 44.2109 27.2199 44.2109C27.1012 44.2109 27.0418 44.3 27.0418 44.3891V45.1018C27.0418 45.2205 27.1012 45.2799 27.2199 45.2799H27.4872C28.3187 45.2799 29.061 45.7847 29.061 46.8538V49.9717C29.061 53.3272 29.0016 55.4281 28.9719 55.7845C28.8829 56.4675 28.4077 56.6753 28.1108 56.6753H27.4278C27.3387 56.6753 27.309 56.705 27.309 56.7644V57.5365C27.309 57.6849 27.3387 57.7443 27.3981 57.7443C27.6357 57.7443 28.9719 57.6552 29.3877 57.6552C30.2488 57.6552 31.4366 57.7443 31.6445 57.7443C31.7929 57.7443 31.7929 57.6849 31.7929 57.5662V56.8535C31.7929 56.7347 31.7929 56.6753 31.6445 56.6753H31.0209C30.7239 56.6753 30.3973 56.3487 30.3082 55.6657C30.2488 55.3984 30.13 52.429 30.13 50.6547V46.5717H30.1894C30.6645 47.1062 33.0698 50.3132 33.7825 51.1372C34.1091 51.5233 35.386 53.0377 36.752 54.6709C37.9695 56.126 38.9791 57.3435 39.187 57.5513C39.3057 57.6404 39.6027 57.8483 39.8699 57.8483C40.2263 57.8483 40.3154 57.5513 40.3154 57.2841V50.3355H40.3079Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M47.353 50.0385C47.353 49.8307 47.3827 46.297 47.3827 46C47.4124 45.3764 47.6797 45.2577 48.4814 45.2577H48.9863C49.1347 45.2577 49.1644 45.1686 49.1644 45.0498V44.3445C49.1644 44.2555 49.105 44.1961 48.9863 44.1961C48.7487 44.1961 47.2343 44.2852 46.3731 44.2852C44.9775 44.3149 43.1364 44.1961 42.9582 44.1961C42.8394 44.1961 42.78 44.2555 42.78 44.3742V45.0572C42.78 45.176 42.8097 45.2651 42.9582 45.2651H43.4927C44.7399 45.2651 45.0072 45.562 45.0072 45.8887C45.0072 46.3044 45.0665 49.2739 45.0665 49.749V51.0556C45.0665 52.0652 45.0368 55.829 45.0072 56.0963C44.9478 56.6308 44.4726 56.6605 43.7303 56.6605H43.077C42.9582 56.6605 42.8988 56.7496 42.8988 56.8386V57.4919C42.8988 57.6404 42.9582 57.7295 43.077 57.7295C43.2552 57.7295 44.9775 57.6404 45.9871 57.6404C47.3233 57.6404 48.8675 57.7295 49.105 57.7295C49.2535 57.7295 49.2832 57.6404 49.2832 57.5216V56.8089C49.2832 56.7199 49.2535 56.6605 49.105 56.6605H48.6596C47.7985 56.6605 47.4421 56.2447 47.3827 55.5618C47.353 55.1163 47.353 51.7014 47.353 51.5233V50.0385Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M77.4264 50.87C77.3967 52.6813 77.4264 54.4333 77.3967 55.881C77.3967 56.5342 77.0404 56.653 76.3277 56.653H75.9714C75.8526 56.653 75.7932 56.7124 75.7932 56.8015V57.4845C75.7932 57.633 75.8526 57.722 75.9714 57.722C76.1792 57.722 77.6937 57.633 78.4361 57.633C79.416 57.633 81.0195 57.722 81.2274 57.722C81.4055 57.722 81.4649 57.6626 81.4649 57.5142V56.8015C81.4649 56.7124 81.4055 56.653 81.2868 56.653H80.5147C79.9208 56.653 79.7426 56.3264 79.6832 55.9107V52.7036V51.9909C79.8911 51.9316 80.1584 51.9316 80.4553 51.9316C81.7025 51.9316 82.1479 52.5848 83.2169 54.4259C83.4842 54.8713 84.7907 57.2766 85.3549 57.6923C85.8598 57.6626 86.5724 57.633 87.2554 57.633C87.5524 57.633 87.9087 57.6626 88.176 57.6626C88.4729 57.6923 88.7105 57.722 88.7699 57.722C88.8886 57.722 88.948 57.633 88.948 57.5142V56.9203C88.948 56.7421 88.9183 56.653 88.7995 56.653C88.265 56.653 87.879 56.6233 87.4633 56.3264C86.8991 55.9107 86.2161 55.0198 85.8004 54.4259C84.5829 52.7036 83.989 51.7831 83.306 51.6346V51.5826C85.6519 50.7512 86.81 49.5634 86.81 47.5144C86.81 46.8315 86.424 45.9703 85.7707 45.3467C85.0283 44.6934 83.692 44.1886 81.9103 44.1886C81.5243 44.1886 78.9409 44.2777 78.5845 44.2777C78.05 44.2777 76.2089 44.1886 76.0605 44.1886C75.9417 44.1886 75.8823 44.248 75.8823 44.3371V45.0498C75.8823 45.1686 75.912 45.2576 76.0011 45.2576H76.298C77.1295 45.2576 77.3967 45.5843 77.4264 46.1782V49.0289V50.87ZM79.6832 45.7996C79.6832 45.2651 80.1287 45.1463 80.5741 45.1463C81.7619 45.1463 82.5933 45.4135 83.3951 45.9184C83.9296 46.2747 84.375 47.0764 84.375 47.9673C84.375 48.7394 83.8702 51.0556 80.5741 51.0556C80.188 51.0556 79.8911 51.0259 79.6832 50.9962V45.7996Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M93.9665 57.9893C96.6687 57.9893 98.0866 56.0889 98.0866 53.8692C98.0866 52.3844 97.7303 51.6421 97.1364 51.0185C96.394 50.2464 95.2953 49.9198 93.9293 49.415C93.3651 49.2071 92.2961 48.7617 91.8507 48.1975C91.5241 47.8114 91.3756 47.1878 91.3756 46.7424C91.3756 46.2079 91.8507 44.931 93.4839 44.931C94.3451 44.931 94.9983 45.228 95.4438 45.7328C96.0674 46.4455 96.3049 47.4848 96.4831 47.8411C96.5128 47.9302 96.5722 47.9896 96.6613 47.9599L97.1958 47.8411C97.2848 47.8114 97.3145 47.752 97.3145 47.663C97.2848 47.2472 97.0176 45.3171 97.0176 44.3371C97.0176 44.1887 96.9879 44.0699 96.7503 44.0699C96.5128 44.0699 96.4237 44.0699 96.3643 44.159L96.2455 44.3668C96.1861 44.5153 96.0377 44.4856 95.7407 44.3074C95.3844 44.1293 94.7608 43.9214 93.6324 43.9214C92.5634 43.9214 91.6131 44.1887 90.8411 44.8123C90.1878 45.3765 89.5642 46.297 89.5642 47.3066C89.5642 48.7617 89.9205 49.7119 90.6035 50.3652C91.4944 51.1669 92.9197 51.7015 93.5136 51.9093C95.0874 52.5032 96.2455 53.2456 96.2455 54.9382C96.2455 56.2151 94.8202 56.9574 93.8699 56.9574C92.7712 56.9574 91.7913 56.3635 91.3459 55.4727C90.8114 54.4928 90.8114 53.8692 90.8114 53.4534C90.8114 53.3347 90.6926 53.2753 90.5738 53.2456L90.0393 53.1862C89.9205 53.1862 89.8611 53.2753 89.8314 53.3941C89.8018 53.8692 89.5939 56.2448 89.5048 57.0762C89.4751 57.2247 89.5642 57.3435 89.7424 57.4029C89.9799 57.4622 90.1284 57.4029 90.1878 57.2544L90.2769 57.0168C90.3363 56.7793 90.5144 56.809 90.7223 56.9574C91.4127 57.4845 92.452 57.9893 93.9665 57.9893Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M103.112 50.0385C103.112 49.8307 103.142 46.297 103.142 46C103.172 45.3764 103.439 45.2577 104.241 45.2577H104.746C104.894 45.2577 104.924 45.1686 104.924 45.0498V44.3445C104.924 44.2555 104.864 44.1961 104.746 44.1961C104.508 44.1961 102.994 44.2852 102.133 44.2852C100.737 44.3149 98.8958 44.1961 98.7176 44.1961C98.5988 44.1961 98.5395 44.2555 98.5395 44.3742V45.0572C98.5395 45.176 98.5691 45.2651 98.7176 45.2651H99.2521C100.499 45.2651 100.767 45.562 100.767 45.8887C100.767 46.3044 100.826 49.2739 100.826 49.749V51.0556C100.826 52.0652 100.796 55.829 100.767 56.0963C100.707 56.6308 100.232 56.6605 99.4897 56.6605H98.8364C98.7176 56.6605 98.6582 56.7496 98.6582 56.8386V57.4919C98.6582 57.6404 98.7176 57.7295 98.8364 57.7295C99.0146 57.7295 100.737 57.6404 101.746 57.6404C103.083 57.6404 104.627 57.7295 104.864 57.7295C105.013 57.7295 105.043 57.6404 105.043 57.5216V56.8089C105.043 56.7199 105.013 56.6605 104.864 56.6605H104.419C103.558 56.6605 103.202 56.2447 103.142 55.5618C103.112 55.1163 103.112 51.7014 103.112 51.5233V50.0385Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M23.5675 67.1427C26.292 67.1427 27.9252 63.4086 27.9252 61.3448C27.9252 60.0679 27.1754 59.1474 25.9134 59.1474C23.419 59.1474 21.6299 62.3544 21.6299 64.7226C21.6373 66.148 22.5356 67.1427 23.5675 67.1427ZM23.2854 66.2445C22.8325 66.2445 22.4242 65.8881 22.4242 65.2868C22.4242 64.4034 22.8771 63.2601 23.5155 62.2431C24.4509 60.7212 25.4457 60.0085 26.24 60.0085C26.8562 60.0085 27.1977 60.4762 27.1754 61.0627C27.1754 62.3025 25.2378 66.2445 23.2854 66.2445Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M54.4946 67.6179C54.4946 67.41 54.5243 63.8763 54.5243 63.5794C54.554 62.9558 54.8213 62.837 55.623 62.837H56.1278C56.2763 62.837 56.306 62.7479 56.306 62.6291V61.9164C56.306 61.8274 56.2466 61.768 56.1278 61.768C55.8903 61.768 54.3758 61.8571 53.5147 61.8571C52.119 61.8868 50.278 61.768 50.0998 61.768C49.981 61.768 49.9216 61.8274 49.9216 61.9461V62.6291C49.9216 62.7479 49.9513 62.837 50.0998 62.837H50.6343C51.8815 62.837 52.1487 63.1339 52.1487 63.4606C52.1487 63.8763 52.2081 66.8458 52.2081 67.3209V68.6275C52.2081 69.6371 52.1784 73.4009 52.1487 73.6682C52.0894 74.2027 51.6142 74.2324 50.8719 74.2324H50.2186C50.0998 74.2324 50.0404 74.3215 50.0404 74.4105V75.0638C50.0404 75.2123 50.0998 75.3014 50.2186 75.3014C50.3967 75.3014 52.119 75.2123 53.1287 75.2123C54.4649 75.2123 56.0091 75.3014 56.2466 75.3014C56.3951 75.3014 56.4248 75.2123 56.4248 75.0935V74.3808C56.4248 74.2918 56.3951 74.2324 56.2466 74.2324H55.8012C54.9401 74.2324 54.5837 73.8166 54.5243 73.1337C54.4946 72.6882 54.4946 69.2733 54.4946 69.1026V67.6179Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M58.8078 68.4493C58.7781 70.2607 58.8078 72.0127 58.7781 73.4603C58.7781 74.1136 58.4218 74.2324 57.7091 74.2324H57.3527C57.234 74.2324 57.1746 74.2918 57.1746 74.3808V75.0638C57.1746 75.2123 57.234 75.3014 57.3527 75.3014C57.5606 75.3014 59.075 75.2123 59.8174 75.2123C60.7973 75.2123 62.4009 75.3014 62.6087 75.3014C62.7869 75.3014 62.8463 75.242 62.8463 75.0935V74.3808C62.8463 74.2918 62.7869 74.2324 62.6681 74.2324H61.8961C61.3022 74.2324 61.124 73.9057 61.0646 73.49V70.2904V69.5777C61.2725 69.5183 61.5397 69.5183 61.8367 69.5183C63.0838 69.5183 63.5293 70.1716 64.5983 72.0127C64.8655 72.4581 66.1721 74.8634 66.7363 75.2791C67.2411 75.2494 67.9538 75.2197 68.6368 75.2197C68.9337 75.2197 69.2901 75.2494 69.5573 75.2494C69.8543 75.2791 70.0918 75.3088 70.1512 75.3088C70.27 75.3088 70.3294 75.2197 70.3294 75.1009V74.507C70.3294 74.3289 70.2997 74.2398 70.1809 74.2398C69.6464 74.2398 69.2604 74.2101 68.8446 73.9131C68.2804 73.4974 67.5975 72.6066 67.1817 72.0127C65.9642 70.2904 65.3703 69.3698 64.6874 69.2214V69.162C67.0333 68.3305 68.1914 67.1427 68.1914 65.1012C68.1914 64.4182 67.8053 63.5571 67.152 62.9335C66.4097 62.2802 65.0734 61.7754 63.2917 61.7754C62.9057 61.7754 60.3222 61.8645 59.9659 61.8645C59.4314 61.8645 57.5903 61.7754 57.4418 61.7754C57.3231 61.7754 57.2637 61.8348 57.2637 61.9239V62.6365C57.2637 62.7553 57.2934 62.8444 57.3824 62.8444H57.6794C58.5108 62.8444 58.7781 63.171 58.8078 63.7649V66.6156V68.4493ZM61.2353 63.3789C61.2353 62.8444 61.6808 62.7256 62.1262 62.7256C63.314 62.7256 64.1454 62.9929 64.9472 63.4977C65.4817 63.854 65.9271 64.6558 65.9271 65.5466C65.9271 66.3187 65.4223 68.6349 62.1262 68.6349C61.7402 68.6349 61.4432 68.6052 61.2353 68.5755V63.3789Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M81.4278 71.1812C81.4278 70.6764 81.992 70.5576 82.289 70.5576H82.7938C82.8829 70.5576 82.9423 70.4686 82.9423 70.3795V69.6668C82.9423 69.5777 82.8829 69.5183 82.7641 69.5183C82.6453 69.5183 81.309 69.5777 80.2103 69.5777C78.6068 69.5777 77.1518 69.5183 76.9736 69.5183C76.8548 69.5183 76.8251 69.5777 76.8251 69.6668V70.3795C76.8251 70.4686 76.8548 70.5279 76.9736 70.5279H77.6863C78.4583 70.5279 79.1413 70.7358 79.1413 71.4188V72.5175C79.1413 73.1114 79.0819 73.4974 78.6959 73.7944C78.2208 74.1804 77.2705 74.4477 76.2312 74.4477C75.3998 74.4477 74.212 74.0022 73.3805 73.1114C72.2224 71.8939 71.5691 70.2013 71.5691 67.9222C71.5691 66.586 72.2224 65.0121 73.1133 64.0322C74.212 62.8444 75.3701 62.5178 76.2906 62.5178C77.6566 62.5178 78.488 63.1117 79.2898 63.9431C80.0025 64.6558 80.5073 65.5763 80.7151 66.0515C80.8042 66.289 80.8636 66.3187 80.9527 66.289L81.5169 66.1108C81.606 66.0811 81.6357 66.0218 81.6357 65.8733C81.5763 65.3388 81.1903 62.5772 81.1903 62.4287C81.1903 62.2208 81.1309 62.102 80.8636 62.102C80.6261 62.102 80.537 62.1911 80.4776 62.3099L80.3291 62.5772C80.2697 62.6662 80.1509 62.6662 79.9134 62.4584C79.3492 62.0427 77.9535 61.5081 76.5282 61.5081C74.4198 61.5081 72.6085 62.1317 71.2202 63.3195C69.7949 64.5667 69.0228 66.3781 69.0228 68.1821C69.0228 70.4983 69.6167 72.1018 70.8045 73.4009C72.2002 74.945 74.5757 75.5686 76.1124 75.5686C78.0129 75.5686 79.6164 75.1529 81.1828 74.3808C81.3907 74.2918 81.5095 74.2027 81.5095 74.0542C81.5095 73.9057 81.4204 73.7276 81.4204 73.4603V71.1812H81.4278Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M86.8694 67.6179C86.8694 67.41 86.8991 63.8763 86.8991 63.5794C86.9288 62.9558 87.196 62.837 87.9978 62.837H88.5026C88.6511 62.837 88.6808 62.7479 88.6808 62.6291V61.9164C88.6808 61.8274 88.6214 61.768 88.5026 61.768C88.2651 61.768 86.7506 61.8571 85.8895 61.8571C84.4938 61.8868 82.6527 61.768 82.4746 61.768C82.3558 61.768 82.2964 61.8274 82.2964 61.9461V62.6291C82.2964 62.7479 82.3261 62.837 82.4746 62.837H83.0091C84.2563 62.837 84.5235 63.1339 84.5235 63.4606C84.5235 63.8763 84.5829 66.8458 84.5829 67.3209V68.6275C84.5829 69.6371 84.5532 73.4009 84.5235 73.6682C84.4641 74.2027 83.989 74.2324 83.2466 74.2324H82.5933C82.4746 74.2324 82.4152 74.3215 82.4152 74.4105V75.0638C82.4152 75.2123 82.4746 75.3014 82.5933 75.3014C82.7715 75.3014 84.4938 75.2123 85.5034 75.2123C86.8397 75.2123 88.3838 75.3014 88.6214 75.3014C88.7699 75.3014 88.7996 75.2123 88.7996 75.0935V74.3808C88.7996 74.2918 88.7699 74.2324 88.6214 74.2324H88.176C87.3148 74.2324 86.9585 73.8166 86.8991 73.1337C86.8694 72.6882 86.8694 69.2733 86.8694 69.1026V67.6179Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M102.905 67.9148C102.905 66.6973 102.845 64.8265 102.994 63.468C103.053 63.0523 103.202 62.8444 103.944 62.8444H104.241C104.36 62.8444 104.419 62.7553 104.419 62.6365V62.0129C104.419 61.8348 104.36 61.7754 104.211 61.7754C104.003 61.7754 102.964 61.8645 102.34 61.8645C101.39 61.8645 100.113 61.7754 99.9054 61.7754C99.7569 61.7754 99.6975 61.8348 99.6975 61.9239V62.6365C99.6975 62.785 99.7569 62.8444 99.9054 62.8444H100.41C100.915 62.8444 101.36 63.0226 101.509 63.3789C101.657 63.7352 101.746 65.4575 101.746 66.1702C101.806 67.1205 101.836 68.041 101.836 69.7336V71.6935H101.717C101.36 71.3074 98.5988 67.8331 98.0643 67.217C97.4407 66.4746 94.0258 62.1763 93.9442 62.0575C93.8254 61.8793 93.6472 61.8199 93.2315 61.8199C92.8752 61.8199 92.2516 61.8793 91.7765 61.8793C91.4498 61.8793 90.9747 61.8496 90.5887 61.8199C90.2026 61.8199 89.876 61.7902 89.8166 61.7902C89.6978 61.7902 89.6384 61.8793 89.6384 61.9684V62.6811C89.6384 62.7999 89.6978 62.8593 89.8166 62.8593H90.0838C90.9153 62.8593 91.6577 63.3641 91.6577 64.4331V67.551C91.6577 70.9065 91.5983 73.0075 91.5686 73.3638C91.4795 74.0468 91.0044 74.2546 90.7074 74.2546H90.0245C89.9354 74.2546 89.9057 74.2843 89.9057 74.3437V75.1158C89.9057 75.2643 89.9354 75.3236 89.9948 75.3236C90.2323 75.3236 91.5686 75.2346 91.9843 75.2346C92.8455 75.2346 94.0333 75.3236 94.2411 75.3236C94.3896 75.3236 94.3896 75.2643 94.3896 75.1455V74.4328C94.3896 74.314 94.3896 74.2546 94.2411 74.2546H93.6175C93.3206 74.2546 92.9939 73.928 92.9049 73.245C92.8455 72.9778 92.7267 70.0083 92.7267 68.234V64.1658H92.7861C93.2612 64.7003 95.6665 67.9074 96.3792 68.7314C96.7058 69.1174 97.9827 70.6319 99.3486 72.2651C100.566 73.7201 101.576 74.9376 101.784 75.1455C101.902 75.2346 102.199 75.4424 102.467 75.4424C102.823 75.4424 102.912 75.1455 102.912 74.8782V67.9148H102.905Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M30.0187 60.157H28.3484C28.2519 60.157 28.2073 60.068 28.2444 59.9343L28.3187 59.6151C28.3558 59.4815 28.4894 59.1845 28.6379 59.1845H30.2711C30.8353 57.5662 31.3772 56.2596 32.372 55.146C32.8991 54.5447 33.931 53.8692 35.1485 53.8692C36.2398 53.8692 36.8411 54.5299 36.8411 54.9753C36.8411 55.5544 36.4625 55.8365 36.0913 55.8365C35.49 55.8365 35.3192 55.495 35.2673 55.0867C35.245 54.9011 35.0594 54.5447 34.4952 54.5447C32.7506 54.5447 32.372 57.0242 31.7559 59.1252C31.7559 59.1252 34.3616 59.192 36.4922 59.192C38.7861 59.192 40.011 59.1103 40.2634 59.1103C40.5084 59.1103 40.5381 59.192 40.5381 59.3033V59.9343C40.5381 60.068 40.5084 60.1793 40.3228 60.1793H39.0088C38.2442 60.1793 37.8656 60.4243 37.8656 60.892C37.8656 61.1073 37.8953 61.4413 37.9769 61.82C38.1402 62.7999 39.1499 66.0515 39.6398 67.5807C39.9665 68.6201 41.5477 73.3118 42.1787 74.9822C42.8097 73.6979 44.9329 68.0707 45.1556 67.4471C45.4303 66.7122 46.4696 63.5719 46.8779 62.3693C47.0932 61.6863 47.2565 61.1964 47.2565 60.8103C47.2565 60.4837 47.0635 60.1793 46.3805 60.1793H45.6679C45.5565 60.1793 45.5342 60.0977 45.5342 59.9343V59.3033C45.5342 59.1697 45.5639 59.1103 45.6976 59.1103C45.9425 59.1103 47.1972 59.192 48.9195 59.192C50.9164 59.192 51.592 59.1103 51.8444 59.1103C52.0077 59.1103 52.0374 59.1623 52.0374 59.3033V59.9863C52.0374 60.0977 52.0077 60.1793 51.8444 60.1793H51.1094C50.2112 60.1793 49.6915 60.6173 49.1719 61.2409C48.4592 62.1169 46.2766 67.7144 45.8163 68.8576C45.4897 69.7559 41.9634 78.4416 41.8298 78.7163C41.7185 78.9316 41.5848 79.0726 41.4512 79.0726C41.2359 79.0726 41.1246 78.798 40.9835 78.4416C40.1075 75.9324 37.8953 69.7039 37.5463 68.724L37.2717 67.796C36.6184 65.8584 35.3341 61.8942 34.9777 61.0776C34.7031 60.4466 34.4284 60.1793 33.8568 60.1793L31.3179 60.157C30.8279 61.6789 29.9667 64.8934 29.0239 67.2912C27.8807 70.2236 26.5444 72.3022 24.54 72.3022C23.7902 72.3022 23.1889 71.7974 23.1889 71.1961C23.1889 70.7655 23.5081 70.3869 23.9981 70.3869C24.54 70.3869 24.8221 70.914 24.8815 71.2332C24.9186 71.4188 25.0523 71.5524 25.2007 71.5524C26.099 71.5524 27.116 69.9786 28.1331 66.5043L30.0187 60.157Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M106.386 44.1515C106.423 44.1218 106.409 44.1218 106.505 44.1367C106.965 44.1886 108.651 44.3445 111.91 44.3445H113.097C114.07 44.3445 115.109 44.3074 116.245 44.2555C116.817 44.2406 120.298 44.2851 121.011 44.2851C121.664 44.2851 123.684 44.1961 123.891 44.1961C124.01 44.1961 124.099 44.2555 124.099 44.4039V45.0572C124.099 45.176 124.07 45.2651 123.891 45.2651H123.446C122.911 45.2651 122.882 45.5917 123.001 45.7699C123.179 46.0371 125.643 49.9791 126.118 50.6918C126.564 49.9494 129.029 46.3638 129.147 46.1262C129.385 45.6511 129.415 45.2651 128.761 45.2651H128.286C128.138 45.2651 128.078 45.176 128.078 45.0572V44.4039C128.078 44.2851 128.138 44.1961 128.286 44.1961C128.464 44.1961 129.949 44.2851 130.84 44.2851C131.374 44.2851 132.414 44.1961 132.592 44.1961C132.74 44.1961 132.8 44.2555 132.8 44.4336V45.0572C132.8 45.2057 132.74 45.2651 132.622 45.2651H132.325C131.85 45.2651 131.523 45.3542 131.256 45.5026C130.81 45.7402 127.366 50.573 126.69 51.6123V54.1067C126.72 54.8491 126.69 55.6508 126.75 56.0072C126.809 56.6308 127.284 56.6605 127.819 56.6605H128.182C128.331 56.6605 128.39 56.7198 128.39 56.8089V57.5216C128.39 57.6404 128.331 57.7295 128.153 57.7295C127.974 57.7295 126.312 57.6404 125.332 57.6404C124.678 57.6404 122.956 57.7295 122.778 57.7295C122.629 57.7295 122.57 57.6701 122.57 57.4919V56.8386C122.57 56.7495 122.629 56.6605 122.748 56.6605H123.194C124.144 56.6605 124.322 56.4823 124.352 56.0666C124.381 55.7993 124.381 54.7303 124.381 52.9783V51.9093C124.114 51.3748 120.491 46.0668 120.024 45.6214C119.771 45.369 119.348 45.2873 119.081 45.2725C119.259 46.0743 119.497 47.1284 119.593 47.6407C119.623 47.7594 119.563 47.8188 119.445 47.8782L118.94 48.0267C118.762 48.0861 118.673 48.0564 118.613 47.9079C118.257 47.1655 117.752 46.1856 117.128 45.6214C116.386 45.3542 114.218 45.3245 113.684 45.3245V50.3058C113.684 53.4237 113.684 55.6434 113.713 55.881C113.773 56.3561 113.921 56.653 114.396 56.653H115.525C115.673 56.653 115.733 56.7421 115.733 56.9203V57.5439C115.733 57.633 115.673 57.722 115.525 57.722C115.317 57.722 113.476 57.633 112.496 57.633C111.665 57.633 109.734 57.722 109.497 57.722C109.319 57.722 109.259 57.633 109.259 57.4548V56.8609C109.259 56.7124 109.319 56.653 109.437 56.653H110.625C111.071 56.653 111.279 56.4155 111.308 56.1779C111.397 55.0495 111.397 53.4757 111.397 51.7014V45.3245C110.833 45.3245 109.17 45.2948 108.071 45.5917C107.329 46.1559 106.706 47.1062 106.319 47.8782C106.26 47.997 106.171 48.0861 106.052 48.0267L105.518 47.8188C105.369 47.7594 105.369 47.6407 105.399 47.5219C105.57 46.98 106.089 45.1537 106.327 44.2555C106.342 44.2035 106.349 44.1738 106.386 44.1515Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M116.104 69.1323H120.142C120.024 68.7165 118.628 64.2697 118.569 64.0322C118.509 63.854 118.48 63.7352 118.39 63.7352C118.301 63.7352 118.242 63.8243 118.153 64.0619C118.064 64.2994 116.252 68.8353 116.104 69.1323ZM109.95 67.6178V69.1026C109.95 69.2807 109.95 72.6956 109.979 73.1336C110.039 73.8166 110.395 74.2324 111.256 74.2324H111.598C112.103 74.2324 112.578 73.9354 112.815 73.6088C113.023 73.3712 114.538 69.8078 115.25 68.3305C115.458 67.9148 117.21 63.8837 117.388 63.3789C117.448 63.2007 117.626 62.8741 117.418 62.785C117.359 62.7256 117.269 62.5771 117.299 62.4881C117.269 62.4287 117.329 62.3396 117.596 62.2802C118.16 62.1911 118.992 61.6566 119.259 61.419C119.318 61.3003 119.437 61.2112 119.615 61.2112C119.794 61.2112 119.853 61.33 119.912 61.5378C120.328 62.7256 121.842 66.9646 122.228 68.1523C122.674 69.6371 123.951 73.1336 124.159 73.4306C124.545 73.9651 125.049 74.2324 125.554 74.2324H126.118C126.237 74.2324 126.267 74.3214 126.267 74.4105V75.0341C126.267 75.1232 126.237 75.3014 126.059 75.3014C125.703 75.3014 124.129 75.2123 123.446 75.2123C122.882 75.2123 121.13 75.3014 120.744 75.3014C120.536 75.3014 120.506 75.1529 120.506 75.0341V74.4105C120.506 74.3214 120.536 74.2324 120.655 74.2324H121.13C121.486 74.2324 121.605 73.9651 121.605 73.7275C121.486 73.1336 120.684 70.7581 120.447 70.0751H115.673C115.555 70.4314 114.604 72.8961 114.486 73.2524C114.307 73.8463 114.396 74.2324 115.02 74.2324H115.762C115.941 74.2324 115.97 74.3214 115.97 74.4402V75.0935C115.97 75.2123 115.941 75.3014 115.792 75.3014C115.555 75.3014 113.981 75.2123 113.506 75.2123C113.134 75.2123 109.497 75.2123 108.591 75.2123C107.582 75.2123 105.859 75.3014 105.681 75.3014C105.562 75.3014 105.503 75.2123 105.503 75.0638V74.4105C105.503 74.3214 105.562 74.2324 105.681 74.2324H106.334C107.077 74.2324 107.552 74.2027 107.611 73.6682C107.641 73.4009 107.671 69.6297 107.671 68.6275V67.3209C107.671 66.8458 107.611 63.8763 107.611 63.4606C107.611 63.1339 107.344 62.837 106.097 62.837H105.562C105.414 62.837 105.384 62.7479 105.384 62.6291V61.9461C105.384 61.8273 105.443 61.768 105.562 61.768C105.74 61.768 107.582 61.8867 108.977 61.857C109.838 61.857 111.353 61.768 111.59 61.768C111.709 61.768 111.768 61.8273 111.768 61.9164V62.6291C111.768 62.7479 111.739 62.837 111.59 62.837H111.086C110.284 62.837 110.016 62.9558 109.987 63.5793C109.979 63.8837 109.95 67.41 109.95 67.6178Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M55.7864 44.4039V45.0869C55.7864 45.2057 55.6973 45.2651 55.5785 45.2651H54.8955C54.5095 45.2651 54.0641 45.3245 54.0641 45.7105C54.0641 46.3935 54.5689 47.5516 55.3706 50.0385C55.6082 50.7809 56.7069 54.2181 56.8851 54.6932H56.9742C57.1523 54.0696 58.6074 50.3948 58.7558 49.9494C59.8843 46.6533 60.2703 45.859 60.2703 45.562C60.2703 45.4135 60.1515 45.2651 59.6467 45.2651H59.32C59.2013 45.2651 59.1419 45.2057 59.1419 45.0572V44.3742C59.1419 44.2851 59.2013 44.1961 59.32 44.1961C59.4982 44.1961 61.0423 44.2851 61.7253 44.2851C62.2227 44.2851 65.8306 44.2851 66.2612 44.2851L72.9054 44.2554C73.2024 44.2554 73.5884 44.1961 73.7072 44.1961C73.7666 44.1961 73.826 44.2554 73.8854 44.6118C73.9447 44.879 74.7762 47.4328 74.8356 47.6407C74.8653 47.7594 74.8653 47.8188 74.8059 47.8485L74.3308 48.0564C74.2714 48.0861 74.1526 48.0861 74.0635 47.9376C74.0041 47.8485 72.5788 46.1856 72.074 45.7105C71.7176 45.3838 71.2425 45.2651 70.9456 45.2651L67.7979 45.2057V50.2464C67.9761 50.2464 69.7281 50.1573 69.9656 50.0979C70.7377 49.89 71.0347 49.4743 71.0347 48.5538C71.0347 48.435 71.0643 48.4053 71.1831 48.4053L71.8364 48.435C71.9552 48.435 72.0443 48.4944 72.0146 48.6132C71.9552 48.8804 71.9552 50.4542 71.9552 50.7215C71.9552 51.3748 72.0443 52.2953 72.074 52.6813C72.074 52.8001 72.0146 52.8298 71.9255 52.8298L71.3019 52.8892C71.2128 52.8892 71.1534 52.8892 71.1237 52.7704C70.9753 52.0281 70.7971 51.5529 70.025 51.3748C69.1342 51.1669 68.0949 51.1669 67.7979 51.1669V52.1765C67.7979 53.2159 67.8573 54.9381 67.8573 55.3242C67.8573 56.7198 68.7185 56.8089 69.9953 56.8089C71.3019 56.8089 72.1334 56.7792 73.143 55.9775C73.3805 55.7993 74.4199 54.463 74.7168 53.9879C74.8653 53.7801 75.0138 53.7504 75.1028 53.8097L75.578 54.077C75.6373 54.1067 75.6967 54.1958 75.667 54.2849L74.598 57.4325C74.5386 57.581 74.3902 57.7295 74.2714 57.7295C74.0635 57.7295 72.4897 57.6404 66.2612 57.6404C65.7267 57.6404 64.0935 57.7295 63.7372 57.7295C63.5887 57.7295 63.559 57.6404 63.559 57.5216V56.8386C63.559 56.7198 63.6184 56.6604 63.7668 56.6604H64.0341C65.4298 56.6604 65.5188 56.5417 65.5188 56.1259V51.6494V49.8009C65.5188 48.2271 65.4891 46.297 65.4595 46C65.3704 45.3764 65.1922 45.2576 64.0044 45.2576H63.7743H63.7075H63.2992C62.7349 45.2576 62.3192 45.4358 62.052 45.7031C61.4878 46.2673 59.8842 50.1499 59.5873 50.9219C59.32 51.5455 56.8851 57.3583 56.6475 57.7443C56.5584 57.8928 56.41 57.9819 56.1724 57.9819C55.9348 57.9819 55.7864 57.774 55.6973 57.5364C55.044 55.7845 53.4702 51.4861 53.2326 50.8328L53.0247 50.1796C52.5199 48.8136 51.6291 46.1114 51.4212 45.8218C51.1837 45.4952 50.9461 45.2576 50.5601 45.2576H50.2631C50.1444 45.2576 50.1147 45.1686 50.1147 45.0795V44.3371C50.1147 44.248 50.174 44.1886 50.2928 44.1886C50.4413 44.1886 52.0745 44.2777 52.8466 44.2777C53.5593 44.2777 55.3706 44.1886 55.5488 44.1886C55.727 44.1961 55.7864 44.2554 55.7864 44.4039Z", fill: "currentColor" })] }) }; G(); var ly = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, viewBox: "-204.699 -23.628 1254.914 293.795", xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M 77.215 -9.154 C 76.915 -8.454 76.815 51.546 76.915 124.146 L 77.215 256.146 L 86.215 256.146 L 86.438 -9.336 C 86.438 -9.336 77.515 -10.054 77.215 -9.154 Z M 745.963 55.793 C 745.963 55.793 746.526 153.96 745.036 154.141 C 744.236 155.441 741.28 153.528 740.249 152.139 C 738.47 149.742 702.375 56.591 702.375 56.591 L 681.17 56.423 L 681.456 183.619 L 697.243 183.737 C 697.243 183.737 697.315 175.946 697.715 134.946 C 698.115 96.246 697.761 87.987 699.049 87.193 C 699.536 86.893 739.862 183.412 739.862 183.412 L 760.575 183.867 L 761.367 56.032 L 745.963 55.793 Z M 155.143 54.988 L 155.106 184.555 C 155.106 184.555 156.256 184.671 162.315 184.646 C 169.786 184.615 170.733 184.453 170.733 184.453 L 171.23 129.809 C 171.23 129.809 180.824 129.657 188.824 129.457 C 204.824 129.057 207.615 127.246 215.515 120.846 C 223.815 114.246 227.715 104.746 227.715 91.146 C 227.715 74.046 221.715 63.646 208.215 57.146 C 204.715 55.446 201.317 55.111 180.115 54.846 C 156.092 54.545 155.143 54.988 155.143 54.988 Z M 199.623 70.178 C 208.223 74.078 211.215 80.546 210.515 93.046 C 209.915 104.246 206.716 109.606 199.016 113.606 C 196.416 114.906 193.315 115.646 183.415 115.446 L 171.215 115.146 L 171.284 68.785 C 171.284 68.785 194.623 67.878 199.623 70.178 Z M 243.315 56.246 L 243.161 183.775 L 257.892 183.851 C 257.892 183.851 258.315 177.146 258.715 146.446 C 259.215 107.846 259.415 106.946 264.315 102.546 C 269.915 97.646 280.315 96.046 285.315 99.246 C 291.115 103.046 291.215 103.746 291.515 144.646 C 291.715 178.146 292.371 183.346 292.371 183.346 L 306.189 183.175 C 306.189 183.175 306.715 171.046 306.515 140.446 C 306.215 94.346 307.082 96.034 299.482 89.234 C 296.282 86.334 290.695 84.928 288.015 84.646 C 281.753 83.988 280.415 83.546 275.615 85.146 C 272.615 86.146 268.415 88.246 266.315 89.746 C 262.701 92.348 260.952 94.514 258.977 92.756 C 257.823 91.729 258.5 56.581 258.5 56.581 L 243.315 56.246 Z M 873.473 59.246 L 873.237 88.736 L 860.056 88.507 L 860.276 99.285 L 872.765 99.662 L 873.8 170.295 C 873.8 170.295 873.8 176.362 880.174 181.369 C 884.584 184.834 888.253 184.764 894.615 184.446 L 905.215 184.146 L 904.609 172.5 C 904.609 172.5 899.857 173.475 894.717 172.009 C 891.671 171.14 890.675 170.599 889.161 166.776 C 887.32 162.129 888.482 100.477 888.482 100.477 L 905.337 100.379 L 905.316 89.034 L 888.165 89.072 L 888.341 59.44 L 873.473 59.246 Z M 347.594 84.719 C 344.094 85.519 340.415 87.246 338.815 88.046 C 331.915 91.646 327.599 101.412 327.485 109.778 L 327.215 115.146 L 341.76 115.181 C 341.76 115.181 339.888 96.993 358.215 97.146 C 369.315 97.239 373.715 101.546 373.715 112.546 C 373.715 120.946 371.115 122.646 347.715 129.646 C 333.615 133.846 328.315 138.446 325.315 148.546 C 321.915 160.146 324.415 172.346 331.715 179.646 C 335.715 183.746 337.015 184.346 343.315 185.546 C 352.215 187.246 358.815 185.946 366.315 181.046 C 369.115 179.146 371.968 177.409 373.121 177.716 C 374.356 178.044 375.115 179.246 377.015 181.146 C 380.315 184.446 380.815 184.646 387.415 184.646 C 391.415 184.646 395.613 184.281 395.613 184.281 L 395.665 173.89 C 395.665 173.89 391.115 172.946 390.315 172.046 C 388.915 170.746 388.715 166.146 388.715 137.246 C 388.715 100.046 388.415 97.646 382.115 91.246 C 376.115 85.046 360.194 81.819 347.594 84.719 Z M 373.515 144.146 C 374.015 157.646 372.615 163.346 367.915 167.946 C 364.115 171.646 357.415 174.646 353.015 174.646 C 344.115 174.646 337.715 163.546 340.615 152.946 C 341.915 147.946 344.715 143.846 348.015 141.946 C 349.215 141.246 354.015 139.546 358.715 138.046 C 363.415 136.546 370.115 133.746 371.215 133.846 C 373.656 134.391 373.215 135.046 373.515 144.146 Z M 440.936 85.815 C 438.736 86.615 434.558 88.358 431.858 91.158 C 429.258 93.958 426.134 96.543 425.834 96.143 C 424.148 95.549 424.579 88.06 424.579 88.06 L 411.615 87.846 L 411.113 184.223 L 425.643 184.104 C 425.643 184.104 425.854 179.746 425.715 152.346 C 425.49 108.076 424.601 110.46 432.201 103.66 C 436.001 100.26 439.444 100.317 443.344 99.817 C 444.382 99.702 451.435 99.566 451.435 99.566 L 451.506 85.227 C 451.506 85.227 445.716 84.104 440.936 85.815 Z M 499.215 84.946 C 493.615 86.846 488.865 89.046 486.665 91.546 C 484.165 94.346 481.882 94.714 481.882 91.714 C 481.882 89.977 481.83 87.262 481.83 87.262 L 468.215 87.146 L 468.01 183.756 L 482.573 183.846 C 482.573 183.846 482.815 174.846 483.015 147.046 C 483.215 111.846 483.215 111.046 485.515 106.846 C 490.415 97.746 502.215 94.546 509.015 100.646 C 514.415 105.346 515.115 112.246 514.415 149.646 C 514.044 172.088 513.534 183.832 513.534 183.832 L 528.376 183.93 C 528.376 183.93 529.415 165.946 529.715 145.746 C 530.215 109.046 530.215 108.946 532.615 105.546 C 537.715 98.146 548.815 95.146 554.515 99.746 C 560.515 104.346 560.615 105.646 560.715 145.846 C 560.715 172.48 560.903 184.256 560.903 184.256 L 575.425 184.329 C 575.425 184.329 575.708 170.754 575.515 141.146 C 575.215 100.146 574.586 100.462 572.815 96.146 C 569.513 88.098 565.715 86.546 556.215 84.546 C 547.915 82.846 540.815 84.946 533.915 91.146 C 531.215 93.646 528.215 95.646 527.415 95.646 C 526.515 95.646 524.915 94.146 523.715 92.246 C 519.815 85.746 507.615 82.246 499.215 84.946 Z M 618.015 85.146 C 614.515 85.946 610.415 87.246 608.815 88.046 C 602.315 91.446 596.215 103.246 596.915 111.246 L 596.809 115.187 L 611.49 115.096 C 615.09 101.396 617.315 97.746 626.615 96.946 C 637.815 95.946 643.715 101.146 643.715 111.946 C 643.715 119.646 641.115 122.346 630.715 125.546 C 611.815 131.446 608.115 132.846 604.515 135.246 C 599.915 138.446 597.415 142.346 595.315 149.546 C 593.315 156.446 593.315 159.146 595.415 167.946 C 596.815 173.846 597.815 175.646 601.715 179.546 C 605.715 183.546 607.215 184.346 613.015 185.546 C 623.615 187.646 631.415 185.646 638.715 179.046 C 642.815 175.346 643.42 176.228 643.42 176.228 C 643.42 176.228 646.415 180.346 647.915 181.946 C 650.515 184.646 651.015 184.746 658.415 184.446 L 666.215 184.146 L 666.033 174.261 L 662.591 174.099 C 658.842 173.19 659.615 171.446 659.315 170.246 C 659.015 169.046 658.715 153.746 658.715 136.046 C 658.715 100.446 658.315 97.546 652.315 91.246 C 646.615 85.146 630.415 82.346 618.015 85.146 Z M 643.515 145.146 C 643.715 151.346 643.315 157.946 642.615 160.346 C 639.915 170.346 626.115 177.546 617.915 173.246 C 613.615 171.046 611.715 168.346 610.515 162.446 C 608.015 150.646 613.415 142.846 626.715 138.746 C 630.815 137.546 640.115 133.746 641.215 133.946 C 643.015 134.146 643.215 135.046 643.515 145.146 Z M 948.552 85.377 C 946.652 85.977 941.845 87.361 938.654 90.253 C 933.196 95.2 931.814 95.388 932.156 90.409 L 932.215 87.146 L 917.851 87.146 L 917.393 184.185 L 930.799 184.307 C 930.799 184.307 931.264 115.972 932.664 112.972 C 936.764 104.672 944.337 101.438 953.506 99.687 C 957.182 98.985 960.249 99.164 960.249 99.164 L 960.371 85.496 C 960.371 85.496 953.722 83.675 948.552 85.377 Z M 993.179 84.713 C 989.879 85.413 985.815 86.946 984.215 87.846 C 976.415 91.946 971.715 100.246 971.715 109.746 L 971.757 114.868 L 986.412 114.917 C 986.412 114.917 986.861 108.656 987.489 106.695 C 988.276 104.239 990.015 101.546 992.715 99.146 C 994.515 97.546 997.481 95.077 1003.097 95.089 C 1008.407 95.1 1012.186 96.629 1014.986 99.329 C 1019.086 103.229 1018.815 109.146 1017.315 116.946 C 1016.715 120.346 1016.015 121.046 1011.415 123.246 C 1008.515 124.546 1001.615 126.946 996.215 128.546 C 982.915 132.446 979.815 133.846 975.715 137.946 C 970.815 142.946 968.815 148.746 968.815 157.846 C 968.615 174.146 974.815 182.946 988.415 185.746 C 996.415 187.446 1004.115 185.746 1010.715 181.046 C 1013.315 179.146 1017.744 177.165 1017.744 177.165 C 1017.744 177.165 1019.715 179.246 1021.415 181.146 C 1024.615 184.546 1023.739 184.422 1031.139 184.422 C 1038.239 184.422 1041.102 184.184 1041.102 184.184 L 1040.88 174.713 C 1040.88 174.713 1038.639 174.242 1037.619 174.101 C 1032.919 173.401 1033.215 172.246 1033.015 138.246 C 1032.915 120.546 1032.515 104.246 1032.215 101.946 C 1031.515 96.846 1029.78 93.273 1021.787 88.119 C 1016.342 84.609 1008.515 83.746 1003.215 83.746 C 1001.015 83.846 996.479 84.013 993.179 84.713 Z M 1017.215 148.346 L 1017.215 162.446 L 1014.115 166.246 C 1010.315 170.946 1004.915 173.846 998.815 174.346 C 990.015 175.146 984.715 168.946 984.715 157.946 C 984.715 155.046 985.315 151.046 986.115 149.146 C 987.615 145.646 995.067 140.807 997.615 139.646 C 1000.069 138.528 1014.115 133.746 1015.215 133.846 C 1017.115 134.146 1017.215 134.846 1017.215 148.346 Z M 785.015 87.346 L 786.801 169.987 C 787.249 173.805 791.553 177.914 795.988 180.74 C 804.375 186.085 816.334 187.772 826.015 180.446 C 828.815 178.346 831.463 176.739 832.387 176.692 C 833.311 176.645 833.098 184.037 833.098 184.037 L 847.328 184.054 L 846.897 88.204 L 832.076 88.179 C 832.076 88.179 832.33 101.646 832.13 126.046 C 832.13 126.046 832.253 154.253 831.694 162.656 C 831.548 164.852 827.484 168.341 827.484 168.341 C 822.184 173.241 818.304 173.644 813.998 173.607 C 810.076 173.573 806.656 172.103 804.056 169.603 C 802.556 168.003 800.415 165.246 799.815 163.046 C 799.115 160.546 798.715 146.446 798.715 124.846 C 798.715 103.146 798.857 87.362 798.857 87.362 L 785.015 87.346 Z", fill: "currentColor", transform: "matrix(1, 0, 0, 1, -5.684341886080802e-14, 0)" }), (0, l.jsx)("ellipse", { cx: -149.992, cy: 122.549, fill: "currentColor", rx: 34.98, ry: 34.98, transform: "matrix(1, 0, 0, 1, -5.684341886080802e-14, 0)" }), (0, l.jsx)("ellipse", { cx: -66.275, cy: 122.155, fill: "currentColor", rx: 27.336, ry: 27.336, transform: "matrix(1, 0, 0, 1, -5.684341886080802e-14, 0)" }), (0, l.jsx)("ellipse", { cx: 4.74, cy: 122.549, fill: "currentColor", rx: 16.882, ry: 16.882, transform: "matrix(1, 0, 0, 1, -5.684341886080802e-14, 0)" })] }) }; G(); var lw = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 88, viewBox: "0 0 65 88", width: 65, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsxs)("g", { clipPath: "url(#us-army-a)", children: [(0, l.jsx)("mask", { height: 88, id: "b", maskUnits: "userSpaceOnUse", style: { maskType: "luminance" }, width: 65, x: 0, y: 0, children: (0, l.jsx)("path", { d: "M65 0H0V88H65V0Z", fill: "white" }) }), (0, l.jsx)("g", { mask: "url(#b)", children: (0, l.jsx)("path", { clipRule: "evenodd", d: "M4.03642 0C1.89572 0 0.156821 1.76416 0.156821 3.94453L0.156347 59.0321C0.156347 61.2087 1.89573 62.9757 4.03598 62.9757H61.1207C63.2623 62.9757 64.9994 61.2083 64.9994 59.0321V3.94453C64.9994 1.76601 63.2619 0.00184675 61.1207 0.00184675H4.03598L4.03642 0ZM3.99996 65.0364C1.78948 65.0364 -0.000976562 67.2394 -0.000976562 69.9515V83.0775C-0.000976562 85.7975 1.78903 88 3.99996 88H60.9962C63.2076 88 64.9926 85.7975 64.9926 83.0775V69.9515C64.9926 67.2389 63.2076 65.0364 60.9962 65.0364H3.99996ZM4.90286 1.52765C3.01892 1.52765 1.49707 3.07193 1.49707 4.97882V57.607C1.49695 58.5221 1.85571 59.3998 2.4944 60.047C3.1331 60.6942 3.99943 61.0579 4.90286 61.0581H60.1009C61.9867 61.0581 63.5076 59.512 63.5076 57.607V4.97882C63.5076 3.07146 61.9867 1.52765 60.1009 1.52765H4.90286ZM6.8452 3.66689H58.0947C59.9782 3.66689 61.5001 5.21209 61.5001 7.1176V55.6391C61.5001 57.5451 59.9782 59.0907 58.0947 59.0907H6.8452C4.96536 59.0907 3.4394 57.5446 3.4394 55.6391V7.1176C3.4394 6.20258 3.79819 5.32502 4.43687 4.67792C5.07556 4.03081 5.94184 3.66714 6.8452 3.66689ZM4.96352 66.674C3.08368 66.674 1.56048 68.2178 1.56048 70.1228V82.799C1.5606 83.2515 1.64871 83.6996 1.81979 84.1177C1.99087 84.5357 2.24159 84.9156 2.55759 85.2355C2.87359 85.5554 3.24869 85.8091 3.6615 85.9822C4.07431 86.1553 4.51674 86.2443 4.96352 86.2442H60.2519C61.1539 86.2439 62.0188 85.8809 62.6566 85.2348C63.2944 84.5888 63.6528 83.7126 63.6531 82.799V70.1228C63.6531 68.2178 62.129 66.674 60.2519 66.674H4.96352ZM5.23897 68.3564H59.7452C60.8767 68.3564 61.7837 69.283 61.7837 70.4249V82.6586C61.7843 82.9299 61.732 83.1987 61.6298 83.4495C61.5276 83.7003 61.3774 83.9282 61.188 84.12C60.9986 84.3119 60.7736 84.464 60.526 84.5675C60.2784 84.6711 60.0131 84.7241 59.7452 84.7234H5.23897C4.11116 84.7234 3.19587 83.8009 3.19587 82.6586V70.4249C3.19612 69.8762 3.41148 69.3501 3.79461 68.9622C4.17774 68.5743 4.69726 68.3564 5.23897 68.3564ZM32.6417 6.6418L27.0286 24.8322L7.84531 24.9352L23.3574 35.7844L17.6394 53.9738L32.5381 43.1246L47.9481 54.0782L42.1298 35.7844L57.028 24.9352H38.4527L32.6417 6.6418ZM32.5386 12.9455L36.415 27.104H50.4979L39.2726 35.3723L44.1729 48.7058L32.3343 40.1262L21.7202 48.3935L25.9053 34.8559L15.0896 27.001L28.7616 27.104L32.5386 12.9455ZM35.3699 81.9384L35.3389 71.5502L39.2226 71.5511L40.7175 72.9984V75.7701L39.6595 76.7448L40.7175 77.7527V81.9384L38.6015 81.9084L38.5723 77.7527H37.6064V81.9084L35.3699 81.9384ZM38.5709 73.5338H37.605V75.7996L38.5709 75.7701V73.5338ZM28.5319 81.8746L29.8996 71.5202H33.2251L34.6849 81.8746H32.417L32.2309 79.9885H30.9558L30.8317 81.8746H28.5319ZM32.0749 78.0054L31.5464 73.7528L31.1419 78.0054H32.0749ZM15.3575 81.9079L15.3876 79.9548H17.6259V81.9079H15.3575ZM25.6423 81.8746L25.6123 79.9252H27.8807V81.8746H25.6423ZM45.7496 76.5244L46.5577 71.5498L49.2325 71.5502L49.2949 81.9084H47.1793V75.3266L46.1838 81.9084H45.284L44.2921 75.3266V81.9084H42.2093L42.2385 71.5835H44.9086L45.7496 76.5244ZM18.9767 72.9522L20.3604 71.5498L22.7843 71.5502L24.3385 72.9975V74.854H22.1317L22.1007 73.5033H21.2629V75.6763H22.9083L24.4311 77.2164V80.3936L22.9389 81.9079H20.3914L18.9302 80.4269V78.5704H21.2296V79.8911H22.1622V77.6663H20.4452L18.9767 76.178V72.9522ZM51.9314 77.4991L50.0543 71.535H52.3208L53.129 75.1552L53.9553 71.535H56.1922L54.2787 77.4991V81.8894H51.9793L51.9314 77.4991ZM11.7506 79.9252V71.5202L14.0815 71.5207V80.3941L12.6513 81.9084H10.0108L8.51855 80.4574V71.5244L10.8504 71.5502V79.9252H11.7506ZM29.7541 28.5337L32.5784 17.9506L35.4721 28.5337H46.0013L37.6082 34.7131L41.2703 44.68L32.4247 38.2654L24.4913 44.4453L27.6189 34.3255L19.5317 28.4575L29.7541 28.5337Z", fill: "currentColor", fillRule: "evenodd" }) })] }), (0, l.jsx)("defs", { children: (0, l.jsx)("clipPath", { id: "us-army-a", children: (0, l.jsx)("rect", { fill: "white", height: 88, width: 65 }) }) })] }) }; G(), G(); var lj = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 35, viewBox: "0 0 146 35", width: 146, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsxs)("g", { clipPath: "url(#utokyo_clip_path_0)", children: [(0, l.jsx)("path", { d: "M8.80785 29.3904C8.95312 29.4693 9.09839 29.5481 9.24367 29.627C10.8193 30.438 12.5961 30.7647 14.3505 30.5619C14.5405 30.5394 14.7193 30.6295 14.8199 30.7872C14.9204 30.9449 14.9204 31.1476 14.8199 31.3053C14.6075 31.6433 14.3952 31.9699 14.1941 32.3079C14.1606 32.3642 14.1047 32.3867 14.0376 32.3867C11.9144 32.1051 9.85828 31.4067 8.00327 30.3253C6.21531 29.2778 4.85199 27.6445 4.13681 25.6845C3.42163 23.7358 3.66747 21.5618 4.78495 19.8271C5.91359 18.0924 7.79095 16.9885 9.8471 16.8646C11.8139 16.7407 13.7694 16.7294 15.7362 16.8083C21.0107 17.0336 26.2851 16.6168 31.4479 15.5467C31.8502 15.4678 32.2189 15.772 32.2189 16.1775C32.2413 20.0073 30.9227 23.7132 28.4977 26.6532C28.2966 26.901 27.939 26.9573 27.6708 26.7996C26.3187 25.9886 25.0559 25.065 23.8714 24.0174C23.8379 23.9836 23.782 24.0399 23.8155 24.0737C24.8659 25.2677 25.7823 26.5293 26.5869 27.8923C26.7545 28.1626 26.6874 28.5231 26.4528 28.7258C23.5473 31.1814 19.8708 32.5219 16.0826 32.5219C15.6244 32.5219 15.3115 32.06 15.4792 31.632C16.4961 29.03 16.7196 26.1914 16.1273 23.4654C15.9038 22.4404 15.5239 21.4604 14.9875 20.5705C14.2052 19.2526 12.9313 18.3177 11.4451 17.9798C9.95885 17.6418 8.40556 17.946 7.14282 18.802C5.88007 19.6581 5.03079 20.9986 4.78495 22.5192C4.5391 24.0286 4.91904 25.5831 5.83537 26.7996C6.62878 27.8472 7.64568 28.7371 8.80785 29.3904Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M0.192035 18.374C0.136161 18.4078 0.102637 18.4754 0.113811 18.5317C0.616674 22.1025 2.28171 25.4029 4.8519 27.9148C5.8688 28.906 7.1092 29.6382 8.46134 30.055C9.85818 30.483 11.3668 30.3817 12.6966 29.7621C14.0264 29.1426 15.0768 28.05 15.669 26.6983C16.3619 25.0875 17.0547 23.488 17.7587 21.8772C20.1166 16.4365 24.8659 12.4265 30.5873 11.041C30.9673 10.9509 31.1796 10.5341 31.0343 10.1624C30.1068 7.8532 28.6653 5.78059 26.8214 4.12474C26.5979 3.92199 26.2515 3.89946 26.0057 4.09095C24.173 5.45392 22.575 7.12103 21.2788 9.00216C21.2452 9.04721 21.167 9.01342 21.1894 8.9571C22.0498 6.90701 23.1002 4.94703 24.3406 3.0997C24.553 2.7843 24.4524 2.35626 24.1283 2.17603C21.4799 0.632833 18.4404 -0.110606 15.3897 0.0133004C15.0433 0.0245647 14.7751 0.30617 14.7751 0.655361C14.7192 4.13601 14.898 7.58286 15.2891 11.041C15.3003 11.0973 15.2221 11.1086 15.2109 11.0522C14.5292 7.63918 13.6352 4.30497 12.5066 1.01582C12.3948 0.689153 12.0484 0.508926 11.7244 0.59904C8.76306 1.43259 6.11464 3.0997 4.05849 5.40887C3.81265 5.69047 3.84617 6.12978 4.14789 6.35506C6.05877 7.83068 7.83555 9.49778 9.43354 11.3113C9.46707 11.3564 9.41119 11.4127 9.36649 11.3789C7.37739 9.91456 5.20949 8.72055 2.91867 7.80815C2.61695 7.69551 2.28171 7.80815 2.12526 8.08975C0.929567 10.1624 0.214384 12.4715 0.0020639 14.8596C-0.0314603 15.2989 0.348481 15.6368 0.773121 15.5579C3.93557 14.8933 7.22094 15.2989 10.1264 16.7182C12.853 18.0473 14.7192 20.6832 15.088 23.702C15.3115 25.5268 14.518 27.3178 13.0206 28.3766C11.5232 29.4355 9.58999 29.5706 7.95848 28.7484C7.39974 28.4667 6.87453 28.1401 6.37166 27.7684C3.38801 25.5718 1.7118 22.0011 1.91294 18.2839C1.93529 17.9122 1.55535 17.6643 1.23128 17.8108C0.884868 17.991 0.527277 18.1712 0.192035 18.374Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M74.3028 5.22869C76.7947 5.22869 77.6328 6.26499 79.5884 11.0298H80.6053L80.1136 4.12479H52.9032V5.12731C55.641 5.39765 56.0321 5.67925 56.0321 7.53785V18.9936C56.0321 23.9048 53.5289 25.9436 49.506 25.9436C45.9078 25.9436 43.9634 23.4429 43.9634 19.2301V7.49279C43.9634 5.62293 44.3545 5.42018 46.7682 5.11604V4.11353H37.3032V5.11604C39.6834 5.42018 40.1081 5.61167 40.1081 7.49279V19.4892C40.1081 25.234 43.5723 27.9036 49.1149 27.9036C53.8307 27.9036 57.5965 25.234 57.6412 19.5906V7.52659C57.6412 5.65673 58.1218 5.40891 60.312 5.12731L59.8874 11.0185H60.9266C62.8263 6.35511 63.6421 5.21742 66.1899 5.21742H68.3355V24.299C68.3355 26.1689 67.475 26.2703 65.1954 26.5744V27.5769H75.2973V26.5744C73.0512 26.2703 72.1907 26.1689 72.1907 24.299V5.22869H74.3028Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M102.094 25.0199V1.43262H101.524L96.25 3.08846V3.59535L98.3508 4.7443V25.0199C98.3508 26.2702 97.8144 26.5068 96.1494 26.6082V27.5882H104.296V26.6082C102.631 26.5068 102.094 26.2702 102.094 25.0199Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M130.657 9.86963H125.114V10.8496C126.679 11.0411 127.394 11.165 127.394 11.9422C127.394 12.2126 127.327 12.4829 127.193 12.8884L123.215 23.6458L118.946 12.911C118.812 12.5055 118.745 12.2351 118.745 11.9648C118.745 11.1875 119.348 11.0524 121.047 10.8496V9.86963H106.464V10.8496C108.028 11.0186 108.665 11.0862 108.665 11.7282C108.665 12.1675 108.229 12.528 107.693 13.0011L102.407 17.8898L109.995 27.5883H114.074V26.8786L105.86 16.5944L110.665 12.1337C111.392 11.4691 111.962 11.165 113.079 10.9059C114.118 11.1875 114.308 11.4354 114.599 12.1112L121.483 28.0614L120.879 29.6834C120.108 31.7786 118.957 32.3643 117.203 32.3643C116.264 32.3643 115.772 32.2291 115.135 32.0602V33.3781C115.437 34.3919 116.532 35.0001 117.605 35.0001C119.706 35.0001 120.778 33.5808 121.773 31.0126L128.981 12.1563C129.249 11.4804 129.45 11.1763 130.657 10.8721V9.86963Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M137.887 9.53149C133.216 9.53149 129.606 13.3501 129.606 19.1286C129.606 24.4003 132.847 27.9147 137.719 27.9147C142.39 27.9147 146 24.0961 146 18.2838C146.011 13.091 142.77 9.53149 137.887 9.53149ZM137.887 26.8108C134.914 26.8108 133.585 22.8571 133.585 18.1599C133.585 13.6655 134.981 10.6579 137.719 10.6579C140.725 10.6579 142.055 14.5779 142.055 19.3088C142.066 23.8033 140.625 26.8108 137.887 26.8108Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M87.8242 9.53149C83.1531 9.53149 79.5437 13.3501 79.5437 19.1286C79.5437 24.4003 82.7844 27.9147 87.6566 27.9147C92.3276 27.9147 95.937 24.0961 95.937 18.2838C95.937 13.091 92.7075 9.53149 87.8242 9.53149ZM87.5001 26.8108C84.5276 26.8108 83.5219 22.8571 83.5219 18.1599C83.5219 13.6655 84.9187 10.6579 87.6566 10.6579C90.6626 10.6579 91.9924 14.5779 91.9924 19.3088C92.0035 23.8033 90.2379 26.8108 87.5001 26.8108Z", fill: "currentColor" })] }), (0, l.jsx)("defs", { children: (0, l.jsx)("clipPath", { children: (0, l.jsx)("rect", { fill: "white", height: 35, width: 146 }) }) })] }) }; G(); var lk = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 8, viewBox: "0 0 23 8", width: 23, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M5.76483 7.60344H3.77942L2.2906 1.92351C2.21993 1.66224 2.06989 1.43125 1.84918 1.32239C1.29838 1.0488 0.691425 0.831074 0.0292969 0.721262V0.502585H3.22764C3.66906 0.502585 4.00013 0.831074 4.0553 1.21258L4.82779 5.3097L6.81223 0.502585H8.74247L5.76483 7.60344ZM9.84607 7.60344H7.97101L9.51501 0.502585H11.3901L9.84607 7.60344ZM13.8159 2.46979C13.871 2.08734 14.2021 1.86866 14.5883 1.86866C15.1953 1.81376 15.8564 1.92357 16.4082 2.1962L16.7393 0.667356C16.1875 0.448679 15.5806 0.338867 15.0298 0.338867C13.2099 0.338867 11.8856 1.32244 11.8856 2.68752C11.8856 3.726 12.8236 4.27127 13.4858 4.59976C14.2021 4.9273 14.478 5.14598 14.4228 5.47352C14.4228 5.96484 13.871 6.18352 13.3202 6.18352C12.6581 6.18352 11.996 6.01974 11.39 5.74616L11.0589 7.27595C11.7211 7.54859 12.4374 7.6584 13.0995 7.6584C15.1401 7.71236 16.4082 6.72973 16.4082 5.25485C16.4082 3.39751 13.8159 3.28864 13.8159 2.46979ZM22.9706 7.60344L21.4817 0.502585H19.8826C19.5515 0.502585 19.2204 0.721262 19.1101 1.0488L16.3531 7.60344H18.2834L18.6687 6.56591H21.0403L21.261 7.60344H22.9706ZM20.1584 2.41464L20.7092 5.09083H19.1652L20.1584 2.41464Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var lM = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 24 24", width: 24, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M22.6781 10.76C22.8106 11.2962 22.4834 11.8383 21.9472 11.9708C19.3634 12.6094 17.5005 11.5271 16.2263 10.329C15.6385 9.77624 15.1525 9.17845 14.7767 8.71621C14.7543 8.68861 14.7323 8.66149 14.7106 8.63489C14.6934 8.6137 14.6764 8.59293 14.6598 8.57258C14.5318 9.11674 14.4184 9.81453 14.3226 10.5594C14.2042 11.4801 14.1185 12.4224 14.0623 13.138C14.0343 13.4949 14.0138 13.7935 14.0003 14.0024C13.9936 14.1068 13.9886 14.1887 13.9853 14.2441L13.9817 14.3069L13.9806 14.3261C13.9507 14.8776 13.4794 15.3013 12.9279 15.2714C12.3764 15.2414 11.9536 14.7701 11.9835 14.2187L12.9821 14.2728C11.9835 14.2187 11.9835 14.2187 11.9835 14.2187L11.9849 14.1939L11.9888 14.1262C11.9923 14.0674 11.9975 13.9818 12.0045 13.8735C12.0185 13.657 12.0396 13.349 12.0685 12.9815C12.126 12.2482 12.2147 11.27 12.339 10.3042C12.4615 9.35211 12.6248 8.36 12.842 7.62338C12.9452 7.27327 13.0893 6.87676 13.3086 6.5719C13.4191 6.41827 13.609 6.20196 13.9055 6.07379C14.2517 5.92416 14.626 5.94549 14.9459 6.10517C15.2486 6.2562 15.497 6.49629 15.6758 6.68621C15.868 6.89031 16.0688 7.13538 16.2617 7.37226C16.2782 7.39252 16.2947 7.41284 16.3112 7.4332C16.6988 7.90956 17.1089 8.41353 17.5964 8.87197C18.5848 9.80143 19.7792 10.4464 21.4674 10.0292C22.0035 9.89668 22.5456 10.2239 22.6781 10.76ZM10.5174 5.12618C11.0502 5.2715 11.3643 5.82124 11.219 6.35407C10.9512 7.33618 10.5455 8.98572 10.2059 10.4489C10.0363 11.1794 9.88478 11.8569 9.7761 12.376C9.7216 12.6363 9.67915 12.8508 9.65077 13.0098C9.62543 13.1517 9.61864 13.2052 9.61864 13.2052C9.61864 13.2052 9.61842 13.1967 9.61842 13.1819C9.61842 13.7342 9.17071 14.1819 8.61842 14.1819C8.06614 14.1819 7.61842 13.7342 7.61842 13.1819C7.61842 13.0208 7.65555 12.8059 7.68191 12.6582C7.7153 12.4712 7.76229 12.2349 7.81854 11.9662C7.93134 11.4274 8.08646 10.7344 8.25768 9.99671C8.59962 8.52348 9.01188 6.84572 9.28948 5.82783C9.4348 5.29501 9.98454 4.98087 10.5174 5.12618Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M7.63259 13.0029C7.7314 12.4595 8.25199 12.0991 8.79537 12.1979L8.61645 13.1818C8.79537 12.1979 8.79537 12.1979 8.79537 12.1979L8.79804 12.1984L8.8029 12.1993L8.81905 12.2023L8.87626 12.2134C8.92512 12.2229 8.99506 12.237 9.08337 12.2557C9.25988 12.293 9.51047 12.349 9.8135 12.4248C10.4175 12.5758 11.2399 12.8079 12.1038 13.1319C12.9623 13.4539 13.8946 13.8786 14.7004 14.4254C15.4945 14.9643 16.2575 15.6836 16.6356 16.6286C17.2271 18.1072 17.5135 19.7043 17.6549 20.9059C17.7262 21.512 17.7619 22.0294 17.7798 22.3973C17.7888 22.5815 17.7934 22.7288 17.7957 22.8316C17.7968 22.8831 17.7974 22.9234 17.7977 22.9518L17.798 22.9853L17.798 22.995L17.798 22.9981L17.798 22.9992C17.798 22.9992 17.798 23 16.798 23L17.798 22.9992C17.798 23.5515 17.3503 24 16.798 24C16.2459 24 15.7983 23.5526 15.798 23.0006L15.798 22.9958L15.7978 22.9733C15.7976 22.9524 15.7971 22.9198 15.7962 22.8765C15.7942 22.7897 15.7903 22.66 15.7822 22.4947C15.7661 22.1637 15.7336 21.6925 15.6686 21.1396C15.5372 20.023 15.2782 18.6201 14.7787 17.3715C14.6112 16.9529 14.2152 16.5131 13.5774 16.0804C12.9514 15.6556 12.1793 15.2962 11.4015 15.0045C10.6291 14.7149 9.88341 14.5038 9.32837 14.365C9.05189 14.2959 8.82524 14.2453 8.66939 14.2123C8.59151 14.1959 8.53148 14.1838 8.49193 14.1761L8.44833 14.1677L8.43871 14.1659L8.43753 14.1657C7.89434 14.0667 7.53379 13.5461 7.63259 13.0029Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M15.3938 7.44721C15.6408 6.95323 15.4399 6.35216 14.9459 6.10517C14.3736 5.819 13.3684 5.57176 12.5187 5.40144C11.6569 5.22869 10.7269 5.09116 10.254 5.09115L10.254 5.99266C10.254 5.09115 10.254 5.09115 10.254 5.09115L10.2525 5.09115L10.2507 5.09116L10.2465 5.09118L10.2358 5.09127L10.2048 5.09184C10.18 5.09244 10.1469 5.09355 10.106 5.09559C10.0244 5.09967 9.91169 5.10748 9.77229 5.1224C9.49383 5.15222 9.10675 5.21067 8.64708 5.32552C7.72886 5.55494 6.50812 6.01276 5.28807 6.92749C4.01626 7.88101 3.36629 9.00787 3.03905 9.9088C2.87643 10.3565 2.79375 10.7471 2.75156 11.0331C2.73042 11.1765 2.7193 11.2945 2.71346 11.3816C2.71053 11.4252 2.70892 11.4612 2.70805 11.4889C2.70761 11.5027 2.70735 11.5144 2.70721 11.524L2.70706 11.5368L2.70704 11.542L2.70703 11.5442L2.70703 11.5453C2.70703 11.5453 2.70703 11.5463 3.70703 11.5455L2.70703 11.5463C2.70749 12.0986 3.15558 12.5459 3.70786 12.5455C4.25711 12.545 4.70257 12.1018 4.707 11.5537L4.70703 11.5482L4.70703 11.5466M4.707 11.5537L4.70704 11.5523C4.7072 11.5472 4.70769 11.5347 4.70898 11.5154C4.71156 11.4769 4.71735 11.4117 4.73015 11.325C4.75583 11.1509 4.80911 10.8938 4.91888 10.5916C5.13641 9.99271 5.5769 9.21062 6.4878 8.52769C7.45046 7.80594 8.41275 7.44555 9.13189 7.26587C9.4909 7.17617 9.78608 7.13235 9.98521 7.11104C10.0846 7.10039 10.1595 7.09542 10.2058 7.0931C10.229 7.09195 10.2449 7.09146 10.2531 7.09126L10.2581 7.09116C10.5164 7.0922 11.2693 7.19077 12.1256 7.36243C12.9986 7.53743 13.7518 7.7442 14.0522 7.89441C14.5461 8.1414 15.1468 7.94118 15.3938 7.44721", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M8.06748 15.4284C7.85551 14.851 7.55881 14.0428 7.61818 13.1174C7.65353 12.5663 8.129 12.1482 8.68015 12.1835C9.2313 12.2189 9.64943 12.6943 9.61407 13.2455C9.58392 13.7154 9.69165 14.0141 9.86707 14.5005C9.93898 14.7 10.0223 14.9309 10.1121 15.2182C10.4125 16.1788 10.5546 17.312 9.96272 18.9718C9.34648 20.7 8.04769 21.8096 6.98242 22.4693C6.44307 22.8033 5.94122 23.0362 5.57261 23.1864C5.38759 23.2618 5.23418 23.3172 5.12389 23.3546C5.06869 23.3733 5.02413 23.3876 4.99163 23.3977L4.95204 23.4098L4.93932 23.4135L4.93479 23.4148L4.93298 23.4153C4.93298 23.4153 4.93149 23.4158 4.66076 22.4674L4.93149 23.4158C4.40042 23.5674 3.847 23.2598 3.6954 22.7287C3.54392 22.1981 3.85089 21.6451 4.38114 21.493L4.39792 21.4878C4.41488 21.4826 4.44313 21.4736 4.48132 21.4606C4.55782 21.4347 4.67352 21.3931 4.81783 21.3343C5.10786 21.2161 5.50547 21.0315 5.92942 20.7689C6.79073 20.2355 7.67387 19.436 8.0789 18.3001C8.50831 17.0959 8.38969 16.4112 8.20328 15.8151C8.16781 15.7017 8.12027 15.5722 8.06748 15.4284Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M16.3632 2.18182C16.3632 3.3868 15.3864 4.36363 14.1814 4.36363C12.9764 4.36363 11.9996 3.3868 11.9996 2.18182C11.9996 0.976832 12.9764 0 14.1814 0C15.3864 0 16.3632 0.976832 16.3632 2.18182Z", fill: "currentColor" })] }) }; G(); var lH = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 93, viewBox: "0 0 99 93", width: 99, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M73.1747 51.1236C73.1747 51.1236 66.7171 73.3994 49.5192 84.5091C32.3212 73.3994 25.9467 51.1236 25.9467 51.1236L24.1523 51.4885C33.1816 80.3285 49.5001 87.0939 49.5001 87.1022V87.2899C49.5001 87.2899 65.9134 80.3455 74.9483 51.4885L73.1747 51.1236Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M55.9572 59.5408C54.2652 57.3993 52.0266 56.687 51.0266 56.5203C51.4266 55.3203 51.1667 54.3333 51 54C52.6 54 54.3333 55 55 55.5C56.2 56.3 56.1239 58.5408 55.9572 59.5408Z", fill: "currentColor", fillOpacity: .5 }), (0, l.jsx)("path", { d: "M42.8177 59.5473C44.5097 57.4059 47.0242 56.687 48.0242 56.5203C47.6242 55.3203 47.8841 54.3333 48.0508 54C46.4508 54 44.7175 55 44.0508 55.5C42.8508 56.3 42.651 58.5473 42.8177 59.5473Z", fill: "currentColor", fillOpacity: .5 }), (0, l.jsx)("path", { d: "M36.468 27.8351C36.6157 27.2638 36.7666 26.6927 36.9219 26.1215C37.2096 26.6346 37.4939 27.1491 37.7745 27.6646C37.3391 27.7182 36.9036 27.7752 36.468 27.8351Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M62.4818 28.5803C62.8641 28.634 63.1926 28.552 63.4712 28.3325C63.7503 28.1128 63.9199 27.8143 63.9773 27.4357C64.0349 27.057 63.9614 26.7206 63.7531 26.4277C63.5452 26.1349 63.2417 25.9591 62.8447 25.9035C62.4518 25.8483 62.1144 25.934 61.8362 26.1587C61.5574 26.3834 61.3963 26.6867 61.3493 27.0668C61.3025 27.4472 61.3841 27.7809 61.5923 28.0687C61.8009 28.3566 62.0963 28.5263 62.4818 28.5803Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M35.7484 39.3961C36.8187 39.2257 37.8918 39.0776 38.9666 38.9502C39.8901 38.8279 40.329 38.393 40.2819 37.6213C40.189 36.923 39.6714 36.6028 38.7312 36.6836C37.619 36.8146 36.509 36.9681 35.4015 37.1445L35.4777 37.6385C35.568 38.2244 35.6584 38.8103 35.7484 39.3961Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M51.1423 38.4363C52.2224 38.4724 53.3019 38.5299 54.3805 38.6087C55.3094 38.6637 55.8206 38.3193 55.9161 37.5526C55.9533 36.8489 55.5036 36.436 54.5658 36.3375C53.4502 36.2553 52.3333 36.1956 51.2157 36.1586C51.1941 36.8451 51.1718 37.5313 51.1494 38.2173L51.1423 38.4363Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M27.8991 69.7387C33.0891 78.8511 39.7519 85.8929 47.7024 90.6695L49.5182 91.7603L51.3341 90.6695C59.2845 85.8929 65.9474 78.8511 71.1373 69.7387C72.8371 66.7547 74.3806 63.5469 75.7616 60.1324L88.4251 63.7402L86.6147 53.3035L96.1777 49.5658L85.9707 45.483C85.9581 45.4728 85.9455 45.4627 85.9328 45.4527C85.926 45.4473 85.9191 45.4419 85.9122 45.4365L88.5567 38.9519L87.5859 38.5435C85.8081 37.7956 84.0067 37.0998 82.1862 36.4575C84.1682 24.2443 83.9071 15.0326 83.892 14.5675L83.8091 11.9775L81.3689 11.2207C77.9786 10.1691 74.0373 9.45986 70.9418 9.01298L72.8432 3.29925L68.677 2.62241C62.3254 1.59037 55.8591 1.06718 49.4573 1.06718C40.3783 1.06718 33.562 2.12231 30.3071 2.75122L26.2923 3.52705L28.1043 9.01164C25.0061 9.45837 21.0612 10.1681 17.6671 11.2207L15.2273 11.9775L15.144 14.5676C15.1292 15.0334 14.8673 24.2768 16.8608 36.5223C15.1026 37.1466 13.3625 37.8207 11.6445 38.5435L10.6738 38.9519L13.2984 45.3875C13.2575 45.4184 13.2167 45.4502 13.1762 45.483L2.96924 49.5658L12.5322 53.3035L10.7221 63.7402L23.2862 60.1607C24.6643 63.5646 26.2041 66.7629 27.8991 69.7387ZM82.7044 14.6068C82.719 15.0638 82.9752 24.07 81.0462 36.0631C80.2851 35.805 79.5207 35.5562 78.7536 35.3168C80.6108 23.521 80.3278 14.6854 80.3278 14.6854C74.3217 12.8224 66.1579 12.0771 66.1579 12.0771L68.1138 6.19936C50.1459 3.27982 36.1004 5.31931 30.9741 6.30988L32.8794 12.0771C32.8794 12.0771 24.7158 12.8224 18.7093 14.6854C18.7093 14.6854 18.4254 23.5498 20.2927 35.3744C19.5259 35.6153 18.7619 35.8657 18.0012 36.1253C16.0613 24.1012 16.3183 15.0646 16.3328 14.6068L16.3882 12.8801L18.0149 12.3756C21.9505 11.155 26.686 10.4044 29.6892 10.0125L27.8531 4.45459L30.5297 3.93739C33.7434 3.3166 40.4764 2.27463 49.4577 2.27463C55.7969 2.27463 62.2 2.7927 68.4892 3.81473L71.2669 4.26587L69.3546 10.0133C72.3578 10.4053 77.089 11.1559 81.0226 12.3756L82.6487 12.8801L82.7044 14.6068ZM76.5958 53.0906C75.9798 52.8724 75.3612 52.6617 74.7401 52.4584C70.4394 65.8334 62.8594 79.5367 49.5185 87.5514C36.1969 79.5481 28.6195 65.8726 24.3156 52.5158C23.7288 52.7093 23.1442 52.9095 22.562 53.1163C23.7742 56.0014 24.5247 58.5507 24.5604 58.6721L24.8642 59.7111L24.4391 59.8322C25.7833 63.137 27.2818 66.2429 28.9285 69.1338C34.0151 78.0647 40.5356 84.9606 48.308 89.6303L49.5185 90.3573L50.7293 89.6303C58.5018 84.9606 65.022 78.0647 70.1091 69.1338C71.7604 66.2347 73.2627 63.1195 74.6097 59.8043L74.2827 59.7111L74.5866 58.6721C74.6223 58.5503 75.377 55.9862 76.5958 53.0906ZM73.4398 52.045C72.6409 51.7983 71.8384 51.564 71.0327 51.3422V60.5408C71.9302 58.1869 72.7343 55.7019 73.4394 53.0988L73.4398 52.045ZM65.5221 50.0311C64.7473 49.8754 63.9698 49.731 63.19 49.598V73C64.0872 72.3912 64.9457 71.4549 65.7628 70.5636C66.2252 70.0592 66.6745 69.5691 67.11 69.1612V50.3671C66.5816 50.2497 66.0523 50.1377 65.5221 50.0311ZM59.26 49.0271C57.9566 48.8703 56.6492 48.7451 55.34 48.6518V53.3381C55.2356 53.3318 55.1355 53.3291 55.0406 53.3291C54.9351 53.3291 54.8313 53.3325 54.7315 53.3387C53.7715 52.7689 52.741 52.3592 51.6664 52.1202C51.5861 52.0168 51.5005 51.9203 51.41 51.8308V48.4678C50.8116 48.4544 50.2134 48.4477 49.6154 48.4477C48.9072 48.4477 48.1986 48.4571 47.49 48.4759V51.7686C47.3746 51.8757 47.2666 51.9938 47.1668 52.1225C46.0387 52.3747 44.9611 52.8141 43.9606 53.4306C43.8622 53.4243 43.7619 53.4212 43.6613 53.4212C43.6314 53.4212 43.6009 53.4215 43.57 53.422V48.6753C42.2606 48.7738 40.9532 48.9042 39.65 49.0663V55.7507C39.0576 56.7718 38.7282 58.1003 38.6677 59.7257C38.6447 59.9161 38.588 60.5188 38.6662 61.3165C38.527 62.0692 38.4561 62.8401 38.4561 63.6079C38.4561 65.4937 38.8694 67.3125 39.65 68.9449V79.0159C39.9835 79.2109 40.3211 79.6297 40.6629 80.0536C41.036 80.5165 41.4141 80.9854 41.797 81.1758C42.3752 81.4631 42.9666 81.738 43.57 82V73.5371C44.7648 74.347 46.0918 74.8976 47.49 75.1619V85.3225C48.1537 85.5646 48.8283 85.7903 49.5129 86C50.1544 85.8037 50.7869 85.5925 51.41 85.3675V75.1512C52.8133 74.8779 54.144 74.3156 55.34 73.4919V81C55.9872 80.7238 56.6209 80.4339 57.2391 80.1289C57.6003 79.9508 57.9569 79.5598 58.3093 79.1735C58.6296 78.8223 58.9465 78.4749 59.26 78.295V68.8037C59.9975 67.2078 60.3874 65.4395 60.3874 63.6079C60.3874 62.6532 60.2794 61.7027 60.0665 60.7821C60.0918 60.2207 60.0545 59.8106 60.0335 59.6319C59.982 58.2117 59.7228 57.015 59.26 56.0525V49.0271ZM33.7083 50.0311C33.0709 50.1592 32.4348 50.2952 31.8 50.4389V66.952C32.3286 67.4353 32.8776 68.2883 33.4462 69.1717C34.1726 70.3002 34.931 71.4785 35.72 72V49.6533C35.0476 49.7708 34.3769 49.8967 33.7083 50.0311ZM27.88 51.4304C27.1172 51.6437 26.3573 51.8682 25.6008 52.1038C25.6015 52.8721 25.602 53.6486 25.6022 54.4342C26.2731 56.3764 27.0335 58.2347 27.88 60V51.4304ZM45.2701 8.04442L46.2431 7.98092L46.3449 11.8371L47.3248 11.7239L47.6743 11.6825C47.6614 11.428 47.6535 11.0613 47.6825 10.688L47.3248 10.7301V10.2503L47.232 7.91639L50.4076 7.70916C50.4076 7.70916 50.5405 7.7887 50.6327 8.17244C50.6611 8.29147 50.6856 8.43944 50.7013 8.62343C50.7123 8.75452 50.7189 8.90382 50.7189 9.07394C50.7189 9.28221 50.7092 9.46146 50.6929 9.61581C50.6875 9.66997 50.6812 9.72105 50.6739 9.76922C50.601 10.2724 50.4593 10.4545 50.4188 10.4975C50.4117 10.5049 50.4076 10.5082 50.4076 10.5082L49.9247 10.5697C49.897 10.7806 49.8675 11.139 49.9019 11.5635L50.4188 11.498L51.3407 11.3914C51.3407 11.3914 51.6381 10.7871 51.758 9.76922C51.7685 9.67974 51.7774 9.58704 51.7848 9.49142C51.799 9.31185 51.8073 9.12139 51.8073 8.92085C51.8073 8.77399 51.802 8.63273 51.793 8.49722C51.7851 8.38473 51.7752 8.2765 51.7629 8.17244C51.6463 7.19645 51.3407 6.60192 51.3407 6.60192L44.4302 7.12535L45.2701 8.04442ZM36.7393 11.0706L35.0156 10.0297L37.0125 9.8429L37.4546 7.85616L38.2466 9.72734L40.2436 9.54028L38.7361 10.8837L39.5283 12.7548L37.8047 11.7138L36.2973 13.0573L36.7393 11.0706ZM38.147 17.8679L39.8147 18.9988L39.2711 20.9593L40.8456 19.6977L42.5134 20.8285L41.8186 18.918L43.3929 17.6564L41.3892 17.7371L40.6942 15.8265L40.1505 17.7871L38.147 17.8679ZM31.3774 19.9811L29.6055 19.0274L31.5907 18.7412L31.9364 16.7346L32.818 18.5643L34.8036 18.278L33.363 19.6948L34.2445 21.5241L32.4726 20.5705L31.0319 21.9873L31.3774 19.9811ZM21.5332 20.3642L23.3167 21.2953L22.9961 23.306L24.4192 21.8707L26.2027 22.8017L25.2987 20.9838L26.7217 19.5488L24.7396 19.8602L23.8358 18.0421L23.5148 20.0526L21.5332 20.3642ZM48.4858 24.1642L48.5257 28.4755C48.8128 28.4728 49.0998 28.4715 49.3869 28.4715L49.3869 28.4217C49.3867 27.5473 49.3865 26.6724 49.3865 25.7982C50.3009 26.689 51.1907 27.593 52.0547 28.5092L52.1371 28.5115L52.3702 28.5184C52.4103 27.2433 52.4498 25.9679 52.4893 24.6926L52.5043 24.2093C52.2048 24.1998 51.9052 24.1916 51.605 24.1848L51.592 24.7788C51.5767 25.4812 51.5614 26.1835 51.5456 26.8859C50.6513 25.9648 49.7315 25.0565 48.7861 24.162C48.6859 24.1625 48.586 24.1633 48.4858 24.1642ZM47.083 24.1846C47.3818 24.1775 47.6809 24.1718 47.9795 24.1676C47.993 25.1184 48.0067 26.0693 48.0203 27.0203L48.0413 28.4815C47.7554 28.4856 47.4694 28.4911 47.1836 28.4979C47.1498 27.0601 47.1162 25.6224 47.083 24.1846ZM42.7432 24.3879C42.8387 25.8219 42.9348 27.2557 43.0313 28.6896C43.3179 28.6699 43.6046 28.6516 43.8914 28.6346C43.8567 28.0417 43.8221 27.4486 43.7878 26.8555C44.4682 26.8152 45.149 26.7822 45.8299 26.7566C45.8426 27.1075 45.8556 27.4584 45.8687 27.8093L45.8688 27.8122L45.8956 28.5375C46.1825 28.5258 46.4695 28.5154 46.7561 28.5061C46.716 27.0694 46.676 25.633 46.6366 24.1963C46.3364 24.2049 46.0367 24.2148 45.7368 24.2261L45.7499 24.5837C45.7666 25.0399 45.7833 25.4961 45.8003 25.9522C45.1137 25.9781 44.4271 26.0113 43.7414 26.052C43.708 25.4831 43.6754 24.9139 43.6429 24.345L43.6421 24.3305C43.3423 24.3483 43.0425 24.3675 42.7432 24.3879ZM41.7077 24.6085C41.9441 24.6858 42.1688 24.813 42.381 24.9897C42.1961 25.1952 42.0123 25.4012 41.8294 25.608C41.6144 25.3943 41.3281 25.3021 40.9713 25.3333C40.6155 25.3643 40.3949 25.4674 40.3113 25.6387C40.2273 25.8103 40.2404 25.9487 40.3496 26.0537C40.4585 26.1589 40.692 26.2232 41.0499 26.2497C41.4255 26.2552 41.7738 26.3471 42.092 26.5245C42.4104 26.7018 42.5833 27.0114 42.6141 27.4511C42.6386 27.7953 42.4996 28.1025 42.2011 28.3752C41.9025 28.6481 41.545 28.8023 41.1253 28.8397C40.7265 28.8755 40.3885 28.8501 40.1094 28.7625C39.8304 28.6748 39.585 28.5467 39.3728 28.3767C39.5447 28.1655 39.7177 27.9548 39.892 27.7448C40.1081 27.9539 40.4485 28.0546 40.9135 28.0507C41.2983 28.016 41.5316 27.9149 41.6142 27.7448C41.6964 27.5746 41.6837 27.4122 41.5747 27.2577C41.4654 27.1033 41.2147 27.0232 40.8215 27.0201C40.468 27.0138 40.137 26.9397 39.8276 26.7978C39.5178 26.6557 39.3404 26.3763 39.2971 25.9568C39.2579 25.5779 39.3949 25.2552 39.7114 24.9912C40.0278 24.7273 40.3674 24.5792 40.7265 24.5473C41.1433 24.5098 41.4711 24.5313 41.7077 24.6085ZM36.3049 25.0442C35.8959 26.5495 35.5143 28.0569 35.1606 29.5655C35.465 29.5186 35.7691 29.473 36.0735 29.4293C36.1279 29.1988 36.1832 28.9681 36.2389 28.7377C36.8905 28.6457 37.5428 28.5603 38.1953 28.4819C38.3076 28.6905 38.4194 28.8989 38.5307 29.1078C38.8342 29.071 39.1388 29.036 39.4427 29.0021C38.7199 27.6356 37.9725 26.2768 37.201 24.9269C36.9021 24.9646 36.6035 25.0037 36.3049 25.0442ZM32.2209 30.0674C32.3133 28.9781 32.4161 27.888 32.5301 26.7978C33.0045 27.7835 33.471 28.7724 33.929 29.7643C34.2136 29.7162 34.4986 29.6697 34.7837 29.6245C34.9413 28.1445 35.1181 26.664 35.3137 25.1836C34.9955 25.23 34.6773 25.2781 34.3593 25.3278C34.2477 26.3337 34.1447 27.3399 34.05 28.3457C33.6433 27.4221 33.23 26.501 32.8102 25.582C32.502 25.6349 32.1946 25.6895 31.887 25.7455C31.7902 26.7563 31.7025 27.7665 31.6236 28.7764C31.1919 27.864 30.7532 26.9541 30.3085 26.0466C29.9913 26.1098 29.6744 26.1744 29.3579 26.241C30.043 27.5651 30.713 28.895 31.3677 30.231C31.6521 30.1752 31.9362 30.1206 32.2209 30.0674ZM53.2938 27.9325C52.8961 27.505 52.7035 26.9836 52.7242 26.3649C52.7471 25.7601 52.9755 25.2575 53.42 24.8628C53.8637 24.4677 54.4071 24.2864 55.0423 24.3235C55.6839 24.3605 56.2228 24.5899 56.6513 25.0065C56.4374 25.2009 56.2249 25.3959 56.0134 25.5916C55.7273 25.3412 55.3865 25.2042 54.994 25.1813C54.5939 25.1599 54.2649 25.2642 54.0101 25.4918C53.755 25.7196 53.6207 26.0205 53.6048 26.3938C53.5895 26.7942 53.6979 27.1172 53.9265 27.3639C54.1553 27.611 54.4636 27.7448 54.8531 27.7671C55.1653 27.7854 55.4094 27.7396 55.5853 27.6283L55.6326 26.891C55.4378 26.8791 55.2435 26.8679 55.0486 26.8572C55.0572 26.7113 55.0656 26.5654 55.0741 26.4195L55.0953 26.0538C55.5861 26.0832 56.0771 26.1161 56.5675 26.153C56.5184 26.8217 56.4692 27.4905 56.4196 28.1594C55.9511 28.5086 55.4139 28.6634 54.7982 28.6279C54.1906 28.5906 53.6918 28.3607 53.2938 27.9325ZM60.8638 24.8362C59.5683 24.6829 58.272 24.5558 56.9743 24.4547L56.9466 24.8207C56.9357 24.9662 56.9248 25.1115 56.9136 25.2569C57.4088 25.2954 57.9037 25.338 58.3984 25.3843C58.2926 26.548 58.1859 27.712 58.0782 28.8761C58.3649 28.9028 58.6511 28.9309 58.9372 28.9604C59.0549 27.7974 59.1724 26.6345 59.2888 25.4716C59.7835 25.5225 60.2777 25.577 60.7717 25.6355L60.8638 24.8362ZM60.9156 28.5608C60.553 28.1003 60.4026 27.5677 60.472 26.9603C60.5415 26.3514 60.8096 25.8661 61.2849 25.5093C61.7596 25.1531 62.3195 25.0176 62.9564 25.1068C63.5933 25.1961 64.097 25.4811 64.459 25.9548C64.8213 26.4288 64.95 26.9697 64.8524 27.5749C64.7548 28.1801 64.4649 28.6515 63.9905 28.9936C63.5155 29.336 62.9777 29.4628 62.369 29.3773C61.7596 29.2919 61.2784 29.0218 60.9156 28.5608ZM65.4643 25.4915C65.2333 26.9096 65.0013 28.3278 64.7671 29.7455C65.0522 29.7931 65.337 29.842 65.6222 29.8921C65.7752 29.0144 65.9276 28.1367 66.0798 27.2587C66.8355 28.2966 67.564 29.3432 68.2661 30.3974C68.3181 30.4081 68.37 30.4188 68.422 30.4296C68.474 30.4404 68.526 30.4513 68.5781 30.4622C68.8707 29.0554 69.1611 27.6484 69.449 26.241C69.1523 26.1789 68.8558 26.1178 68.5584 26.0586C68.3859 26.9421 68.2128 27.8256 68.0386 28.7092C67.3075 27.6447 66.5483 26.5886 65.7617 25.5419L65.6451 25.522L65.4643 25.4915ZM24.108 29.507L22.3013 28.6238L24.2741 28.2597L24.5429 26.2411L25.4935 28.0342L27.4665 27.67L26.0811 29.1427L27.0321 30.9359L25.225 30.0528L23.8397 31.5253L24.108 29.507ZM73.6975 30.0314L71.8331 30.781L72.9075 29.0613L71.6294 27.4919L73.5719 27.9987L74.6465 26.2788L74.7727 28.3116L76.7145 28.8183L74.8499 29.568L74.9759 31.6008L73.6975 30.0314ZM72.639 22.6308L74.4907 21.849L75.7951 23.3959L75.635 21.3658L77.4869 20.584L75.5368 20.1111L75.3766 18.0807L74.331 19.8188L72.3804 19.3458L73.6847 20.8929L72.639 22.6308ZM66.5837 20.5754L64.8385 21.578L65.6702 19.7249L64.1919 18.3487L66.1843 18.5795L67.016 16.7262L67.4156 18.722L69.4081 18.9529L67.6625 19.9557L68.0622 21.9516L66.5837 20.5754ZM56.4278 20.7725L58.13 19.6953L59.6645 21.0062L59.1818 19.0296L60.8838 17.9524L58.8838 17.8077L58.4008 15.8308L57.6472 17.7184L55.647 17.5739L57.1812 18.8851L56.4278 20.7725ZM59.171 13.1198L60.9072 12.1005L62.398 13.4623L61.9799 11.4705L63.7162 10.4511L61.722 10.2393L61.3037 8.24711L60.489 10.1084L58.4946 9.8967L59.9857 11.2585L59.171 13.1198ZM49.4555 19.432L47.8333 20.6292L48.453 18.7295L46.8306 17.5695H48.8359L49.4555 15.6323L50.075 17.5695H52.0807L50.4584 18.7295L51.0779 20.6479L49.4555 19.432ZM48.1998 11.6842C48.2073 11.7936 48.2167 11.8989 48.2289 12.0001C48.3444 12.9814 48.6523 13.5797 48.6523 13.5797L54.405 12.9961L53.5653 12.0771L49.5851 12.4725C49.5851 12.4725 49.45 12.3918 49.3581 12.0001C49.3303 11.8828 49.3068 11.7376 49.2915 11.558C49.2804 11.4269 49.2742 11.2777 49.2742 11.1076C49.2742 10.8992 49.2836 10.72 49.2997 10.5657C49.312 10.446 49.3283 10.3415 49.3466 10.2503C49.4385 9.79373 49.5851 9.67312 49.5851 9.67312L50.0678 9.61857C50.1219 9.2323 50.1182 8.88324 50.0996 8.62366L49.8136 8.65606L48.6523 8.79014C48.6523 8.79014 48.3863 9.33076 48.2562 10.2503C48.2364 10.3885 48.2199 10.5354 48.2078 10.6901C48.1936 10.8699 48.1855 11.0603 48.1855 11.2606C48.1855 11.4076 48.1908 11.5489 48.1998 11.6842ZM52.7917 9.45157L52.3944 9.46883C52.4049 9.19892 52.4075 8.83693 52.3735 8.47755L53.7717 8.34448V10.2719L52.7917 10.3822V9.45157ZM30.6806 37.4432C30.0598 37.0909 29.4155 36.8706 28.7554 36.7841C28.0948 36.6973 27.2078 36.7928 26.1068 37.0921C25.1583 37.3499 24.3113 37.8951 23.5927 38.7168C22.8736 39.5394 22.6727 40.4085 22.9587 41.3097C23.2754 42.3074 23.8698 42.886 24.7288 43.0669C25.5887 43.2481 26.4643 43.2614 27.3701 43.1101C28.3744 42.932 29.0474 43.0226 29.3836 43.3545C29.7203 43.6874 29.8121 44.0814 29.67 44.5339C29.5274 44.9871 28.9823 45.3307 28.0349 45.5917C26.8729 45.8148 25.9785 45.742 25.3363 45.3437C24.9969 45.9476 24.6672 46.5539 24.347 47.1615C24.9595 47.459 25.6277 47.6423 26.3562 47.7168C27.0842 47.7915 27.9247 47.6913 28.8913 47.4295C29.9084 47.1534 30.7273 46.6338 31.3719 45.8488C32.0159 45.0649 32.2662 44.2598 32.0918 43.4202C31.8691 42.3489 31.3249 41.6477 30.4411 41.3377C29.558 41.0288 28.6189 40.9525 27.6417 41.1134C26.7036 41.2158 26.0706 41.1772 25.7416 40.9749C25.4125 40.7732 25.3162 40.442 25.4617 39.9786C25.6066 39.516 26.1437 39.1492 27.0718 38.9018C28.0001 38.6552 28.7939 38.7559 29.4342 39.1906C29.8402 38.6051 30.2557 38.0224 30.6806 37.4432ZM33.3149 39.0068L32.6885 35.5791C34.4343 35.2498 36.188 34.9759 37.9463 34.757C40.7826 34.4124 42.2758 35.3696 42.4109 37.4148C42.5521 39.5512 41.3127 40.6794 38.707 40.9965C37.8207 41.107 36.9361 41.232 36.053 41.3724L36.7274 45.7489C36.0216 45.8612 35.3172 45.9834 34.6142 46.1158C34.1809 43.7462 33.7479 41.3765 33.3149 39.0068ZM46.4051 34.1227C45.5963 34.1424 44.7881 34.1735 43.98 34.216L44.1199 36.9527C44.2558 39.6103 44.3917 42.268 44.5273 44.9259C45.2364 44.8884 45.9459 44.8609 46.6558 44.8437L46.5598 40.7426C46.5081 38.5361 46.4565 36.3295 46.4051 34.1227ZM55.6351 40.4753C56.4371 42.1118 57.1846 43.7606 57.8767 45.4183C57.065 45.3148 56.2515 45.2254 55.4375 45.1491C54.7216 43.5989 53.9558 42.0589 53.1404 40.5315C52.4535 40.4905 51.7661 40.4587 51.0782 40.4359C51.0309 41.9117 50.9834 43.3874 50.9357 44.8634C50.2238 44.8395 49.5116 44.8263 48.7993 44.8232L48.8112 42.1297V42.1237C48.823 39.4511 48.8348 36.7785 48.8469 34.1061C50.6156 34.1141 52.3842 34.1772 54.1497 34.2957C56.9965 34.495 58.2904 35.7187 58.0469 37.7532C57.868 39.2929 57.0546 40.1806 55.6351 40.4753ZM63.806 35.5151C63.006 35.3778 62.2043 35.2522 61.4013 35.138C61.1266 37.1318 60.8516 39.1256 60.5766 41.1195L59.937 45.7586C60.6414 45.8586 61.3453 45.9692 62.0474 46.0896C62.4403 43.7287 62.8329 41.3676 63.2255 39.0066L63.806 35.5151ZM75.9043 38.5225C75.7031 39.157 75.502 39.7917 75.301 40.4265C74.0272 40.0098 72.7465 39.6251 71.4596 39.2715L69.2193 47.6857C68.5257 47.4951 67.8298 47.3147 67.1324 47.1445C67.8004 44.3194 68.4686 41.4943 69.137 38.6693C67.8429 38.3535 66.5437 38.0693 65.2402 37.8167L65.35 37.2313C65.4362 36.7714 65.5225 36.3116 65.6089 35.8517C69.0779 36.524 72.5163 37.414 75.9043 38.5225Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { d: "M50.4556 63.5297C50.1093 62.4636 49.7634 61.3914 49.4172 60.3124C49.0709 61.3914 48.7249 62.4636 48.3787 63.5297C47.2587 63.4871 46.1412 63.3768 45.0312 63.1985C45.9289 64.0097 46.8323 64.776 47.7372 65.4981C47.3915 66.5559 47.0465 67.6069 46.7013 68.6517C47.6045 68.0742 48.5111 67.4526 49.4172 66.7855C50.3238 67.4526 51.2299 68.0742 52.133 68.6517C51.788 67.6069 51.4426 66.5559 51.097 65.4981C52.0024 64.776 52.9052 64.0097 53.8034 63.1985C52.6933 63.3768 51.5755 63.4871 50.4556 63.5297Z", fill: "currentColor" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M47.8242 53.1229C48.1373 52.5371 48.6404 52.1396 49.4172 52.1396C50.1932 52.1396 50.6962 52.5363 51.0094 53.1212C52.2623 53.3391 53.4362 53.8109 54.4841 54.486C54.5634 54.4699 58.7452 53.6484 58.9413 59.7229C58.9413 59.7229 59.0106 60.1846 58.9649 60.8815C59.179 61.7516 59.293 62.6654 59.293 63.6079C59.293 69.475 54.8735 74.2309 49.422 74.2309C43.9697 74.2309 39.5503 69.475 39.5503 63.6079C39.5503 62.8369 39.6266 62.0851 39.7716 61.3608C39.6637 60.4531 39.7593 59.8155 39.7593 59.8155C39.9577 53.6824 44.2184 54.5782 44.2184 54.5782C45.2989 53.8555 46.5184 53.3516 47.8242 53.1229ZM50.7758 54.8338L49.7399 55.3503L50.5535 55.8988C49.977 56.1141 49.4668 56.1829 49.4213 56.189L49.4195 56.1889H49.418C49.3724 56.1828 48.8622 56.1141 48.286 55.8988L49.0992 55.3503L48.0635 54.8338C48.0635 54.8338 48.4512 54.3037 49.0992 54.1008L48.2872 53.7279C48.2872 53.7279 48.771 53.1581 49.418 53.1581H49.4213C50.0689 53.1581 50.5518 53.7279 50.5518 53.7279L49.7399 54.1008C50.3882 54.3037 50.7758 54.8338 50.7758 54.8338ZM47.743 57.7857C47.5173 57.379 47.2158 55.679 47.4621 54.2497C46.1596 54.5669 44.9742 55.1931 43.9854 56.0473C42.3158 58.2817 43.0278 62.1607 43.524 63.5719C44.0331 65.0201 43.524 65.3139 43.524 65.3139L44.1237 66.764C42.8945 66.3032 42.004 65.663 41.3603 64.9561C41.9094 66.8496 43.0889 68.4713 44.6512 69.5696L46.3182 69.4098L45.8648 70.279C46.9456 70.794 48.1513 71.0819 49.4221 71.0819C50.7163 71.0819 51.9431 70.7831 53.0391 70.2499L52.6011 69.4098L54.2014 69.5633C55.861 68.3931 57.0875 66.6315 57.5826 64.5813C56.9261 65.3989 55.9688 66.1501 54.5777 66.6714L55.1774 65.2218C55.1774 65.2218 54.6675 64.928 55.1774 63.4792C55.6787 62.0528 56.4009 58.1026 54.659 55.8806C53.7093 55.1095 52.5919 54.543 51.3721 54.2474C51.6192 55.6772 51.3175 57.3788 51.0915 57.7857C50.6862 58.5175 49.93 58.7446 49.93 58.7446L49.4172 59.7229L48.9046 58.7446C48.9046 58.7446 48.1486 58.5175 47.743 57.7857ZM42.598 56.024L41.9594 55.7898C40.1764 56.8251 40.431 59.8154 40.431 59.8154C41.3648 60.1039 42.1335 59.4125 42.1335 59.4125C41.3247 59.1516 41.0199 58.1217 41.0199 58.1217C41.5804 57.8664 42.271 57.8021 42.271 57.8021C42.0725 57.4863 41.28 56.7676 41.28 56.7676L42.598 56.024ZM56.7211 55.6978L56.0825 55.9314L57.4 56.6756C57.4 56.6756 56.6082 57.3939 56.4097 57.7097C56.4097 57.7097 57.1003 57.7741 57.6607 58.0292C57.6607 58.0292 57.3556 59.0592 56.547 59.32C56.547 59.32 57.3155 60.0118 58.2495 59.723C58.2495 59.723 58.5042 56.7326 56.7211 55.6978Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var lV = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 18, viewBox: "0 0 18 18", width: 18, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M11.5529 11.6319C12.3379 11.4684 12.3437 11.4672 12.3437 11.4672L11.5529 11.6319Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M8.33976 1.16043C7.15729 3.53909 4.74497 8.49724 4.14 10.5479C3.33 13.2936 4.95 17.2493 9 17.2493C13.05 17.2493 14.67 13.2936 13.86 10.5479C13.255 8.49724 10.8427 3.53909 9.66024 1.16043C9.38731 0.6114 8.61269 0.611401 8.33976 1.16043ZM12.3437 11.4672L12.3444 11.4704L12.3451 11.474L12.3469 11.4828L12.3515 11.5062C12.3549 11.5245 12.3589 11.5478 12.3631 11.576C12.3715 11.6321 12.3807 11.7077 12.387 11.7995C12.3997 11.9823 12.4011 12.2342 12.3593 12.5273C12.2749 13.1177 12.0124 13.8832 11.3142 14.565C10.6161 15.2469 9.8324 15.5033 9.22787 15.5857C8.92778 15.6266 8.66991 15.6252 8.48276 15.6128C8.38878 15.6067 8.31138 15.5976 8.25388 15.5894C8.22509 15.5853 8.20116 15.5814 8.1825 15.5781L8.15847 15.5737L8.14948 15.5719L8.14576 15.5711L8.14409 15.5708C8.14409 15.5708 8.14255 15.5705 8.31149 14.7968L8.14255 15.5705C7.70504 15.4794 7.426 15.0591 7.51931 14.6317C7.612 14.2072 8.03727 13.9355 8.47179 14.0213C8.47403 14.0217 8.47956 14.0226 8.48813 14.0238C8.50793 14.0266 8.54339 14.031 8.5917 14.0342C8.68913 14.0406 8.83349 14.0419 9.00405 14.0186C9.34083 13.9727 9.77211 13.8336 10.1687 13.4462C10.5654 13.0588 10.7078 12.6376 10.7548 12.3087C10.7786 12.1421 10.7773 12.0011 10.7707 11.9059C10.7675 11.8587 10.763 11.8241 10.7601 11.8048C10.7589 11.7964 10.7579 11.791 10.7575 11.7888C10.6697 11.3644 10.9479 10.949 11.3826 10.8585C11.8201 10.7674 12.2504 11.0399 12.3437 11.4672Z", fill: "currentColor" })] }) }; G(); var lZ = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 32, viewBox: "0 0 32 32", width: 32, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M16.3283 25.1287C16.5608 25.1065 16.7522 25.0195 16.9027 24.8677C17.0531 24.716 17.1283 24.533 17.1283 24.3187C17.1283 24.069 17.0463 23.871 16.8823 23.7247C16.7183 23.5785 16.5089 23.5165 16.254 23.5387C15.3429 23.6054 14.3506 23.3384 13.277 22.7377C12.2034 22.1368 11.5333 21.092 11.2667 19.6031C11.2222 19.3757 11.1269 19.1971 10.9807 19.0671C10.8347 18.9371 10.6608 18.8721 10.459 18.8721C10.2163 18.8721 10.0142 18.9632 9.85267 19.1454C9.69111 19.3274 9.63933 19.5611 9.69733 19.8464C10.058 21.7833 10.9299 23.168 12.313 24.0004C13.6959 24.8328 15.0343 25.209 16.3283 25.1287ZM15.9977 28.6671C13.1428 28.6671 10.7628 27.6863 8.85767 25.7247C6.95256 23.7632 6 21.3217 6 18.4004C6 16.332 6.82778 14.0648 8.48333 11.5991C10.1389 9.13329 12.6444 6.44662 16 3.53906C19.3556 6.44662 21.8611 9.13329 23.5167 11.5991C25.1722 14.0648 26 16.332 26 18.4004C26 21.3217 25.0467 23.7632 23.14 25.7247C21.2333 27.6863 18.8526 28.6671 15.9977 28.6671ZM16 26.6671C18.3111 26.6671 20.2222 25.8837 21.7333 24.3171C23.2444 22.7504 24 20.7782 24 18.4004C24 16.7782 23.3278 14.9448 21.9833 12.9004C20.6389 10.856 18.6444 8.62262 16 6.2004C13.3556 8.62262 11.3611 10.856 10.0167 12.9004C8.67222 14.9448 8 16.7782 8 18.4004C8 20.7782 8.75556 22.7504 10.2667 24.3171C11.7778 25.8837 13.6889 26.6671 16 26.6671Z", fill: "currentColor" })] }) }; G(); var lN = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 24, viewBox: "0 0 25 24", width: 25, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M5.92489 19.5H19.0749L17.4999 8.5H7.49989L5.92489 19.5ZM12.4999 7C12.9249 7 13.2811 6.85625 13.5686 6.56875C13.8561 6.28125 13.9999 5.925 13.9999 5.5C13.9999 5.075 13.8561 4.71875 13.5686 4.43125C13.2811 4.14375 12.9249 4 12.4999 4C12.0749 4 11.7186 4.14375 11.4311 4.43125C11.1436 4.71875 10.9999 5.075 10.9999 5.5C10.9999 5.925 11.1436 6.28125 11.4311 6.56875C11.7186 6.85625 12.0749 7 12.4999 7ZM15.0999 7H17.4999C17.8851 7 18.2188 7.12083 18.5011 7.3625C18.7836 7.60417 18.9499 7.91667 18.9999 8.3L20.5499 19.3C20.6166 19.75 20.5031 20.1458 20.2094 20.4875C19.9156 20.8292 19.5374 21 19.0749 21H5.92489C5.46239 21 5.08431 20.8292 4.79064 20.4875C4.49681 20.1458 4.38322 19.75 4.44989 19.3L5.99989 8.3C6.04989 7.91667 6.21614 7.60417 6.49864 7.3625C6.78097 7.12083 7.11472 7 7.49989 7H9.89989C9.76656 6.76667 9.66656 6.52858 9.59989 6.28575C9.53322 6.04308 9.49989 5.78117 9.49989 5.5C9.49989 4.66667 9.79156 3.95833 10.3749 3.375C10.9582 2.79167 11.6666 2.5 12.4999 2.5C13.3332 2.5 14.0416 2.79167 14.6249 3.375C15.2082 3.95833 15.4999 4.66667 15.4999 5.5C15.4999 5.78333 15.4666 6.04583 15.3999 6.2875C15.3332 6.52917 15.2332 6.76667 15.0999 7Z", fill: "currentColor" })] }) }; G(); var lR = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 20, viewBox: "0 0 21 20", width: 21, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M10.0125 20C8.81101 19.8665 7.61368 19.5202 6.42053 18.9612C5.22737 18.4022 4.15519 17.6262 3.204 16.6333C2.25282 15.6404 1.48102 14.4139 0.888611 12.9537C0.296204 11.4935 0 9.79558 0 7.85982V6.90864H0.951189C1.83563 6.90864 2.77847 7.07968 3.77972 7.42178C4.78098 7.76387 5.66542 8.20192 6.43304 8.73592C6.56654 7.23404 6.96704 5.68627 7.63454 4.09262C8.30204 2.49896 9.0947 1.13475 10.0125 0C10.9303 1.13475 11.723 2.49896 12.3905 4.09262C13.058 5.68627 13.4585 7.23404 13.592 8.73592C14.3596 8.23529 15.2441 7.80559 16.2453 7.44681C17.2466 7.08803 18.1894 6.90864 19.0738 6.90864H20.025V7.85982C20.025 9.79558 19.7288 11.4935 19.1364 12.9537C18.544 14.4139 17.7722 15.6404 16.821 16.6333C15.8698 17.6262 14.7977 18.4022 13.6045 18.9612C12.4113 19.5202 11.214 19.8665 10.0125 20ZM10.2128 18.4731C10.0292 15.3692 9.13225 13.0163 7.5219 11.4143C5.91156 9.81227 3.91323 8.81936 1.52691 8.43554C1.74385 11.6562 2.68252 14.0592 4.34293 15.6446C6.00334 17.2299 7.95995 18.1727 10.2128 18.4731ZM9.98748 12.3404C10.2211 11.9066 10.5423 11.4393 10.9512 10.9387C11.36 10.438 11.7564 10.0209 12.1402 9.68711C12.2236 8.55236 12.0567 7.40092 11.6395 6.23279C11.2224 5.06466 10.68 3.85482 10.0125 2.60325C9.34501 3.85482 8.80267 5.06466 8.38548 6.23279C7.96829 7.40092 7.80142 8.55236 7.88486 9.68711C8.26867 10.0209 8.65665 10.438 9.04881 10.9387C9.44097 11.4393 9.75386 11.9066 9.98748 12.3404ZM11.7146 18.0476C12.499 17.7639 13.2791 17.3884 14.0551 16.9212C14.831 16.4539 15.5319 15.8448 16.1577 15.0939C16.7835 14.3429 17.3091 13.4209 17.7347 12.3279C18.1602 11.2349 18.4147 9.93742 18.4981 8.43554C16.7292 8.71923 15.169 9.34919 13.8173 10.3254C12.4656 11.3016 11.4727 12.5073 10.8385 13.9424C11.0388 14.5766 11.214 15.2149 11.3642 15.8573C11.5144 16.4998 11.6312 17.2299 11.7146 18.0476Z", fill: "currentColor" })] }) }; G(); var lS = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", viewBox: "0 0 500 500", xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M 188.922 385.033 L 64.836 264.906 L 97.77 232.583 L 147.839 281.788 C 147.839 281.788 148.211 183.138 148.211 183.278 C 148.211 183.418 199.239 224.303 199.239 224.16 C 199.239 224.017 199.371 79.495 199.371 79.495 C 199.371 79.495 242.401 40.151 242.401 40.292 C 242.401 40.433 243.492 271.598 243.492 271.598 L 190.095 273.714 L 188.922 385.033 Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M 245.606 465.572 L 244.25 289.081 L 205.772 288.806 L 205.421 428.032 L 245.606 465.572 Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M 261.285 428.875 L 423.785 269.917 C 423.785 269.917 396.006 242.328 395.863 242.328 C 395.72 242.328 299.742 335.141 299.742 335.141 L 299.425 125.578 C 299.425 125.578 261.022 89.213 261.163 89.213 C 261.304 89.213 261 430.881 261.285 428.875 Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M 315.038 288.935 L 316.62 59.898 L 433.047 172.458 Z M 351.367 141.913 L 352.461 207.807 L 385.213 174.348 Z", fill: "currentColor" })] }) }; G(), G(); var lP = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 49, viewBox: "0 0 108 49", width: 108, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsxs)("g", { clipPath: "url(#yext-a)", children: [(0, l.jsx)("path", { d: "M19.05 40.3229C16.65 46.6521 13.95 49 9.05 49C6.125 49 4 48.2854 1.875 47.1115L4.25 41.8542C5.5 42.5688 6.875 43.0281 8.325 43.0281C10.275 43.0281 11.475 42.1604 12.625 39.4552L0 8.49844H7.4L16.025 31.4672L23.875 8.49844H31.125L19.05 40.3229Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M46.5001 34.351C49.8751 34.351 52.3001 33.0495 54.7251 30.6505L58.8001 34.351C55.9251 37.8729 51.9751 40.1443 46.4001 40.1443C37.6251 40.1443 30.8501 33.6365 30.8501 24.0151C30.8501 15.1083 37.0001 7.8349 45.6501 7.8349C55.3001 7.8349 60.1751 15.5677 60.1751 24.551C60.1751 25.1891 60.1251 25.776 60.0501 26.4906H37.7751C38.5751 31.5182 42.0251 34.351 46.5001 34.351ZM53.2751 21.7948C52.8251 17.2266 50.1751 13.6536 45.5751 13.6536C41.3251 13.6536 38.3501 16.9969 37.7251 21.7948H53.2751Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M99.8499 29.7828C99.8499 32.5391 101.225 33.6365 103.575 33.6365C105.125 33.6365 106.5 33.2792 107.875 32.5901V38.3833C106.15 39.3786 104.2 39.9656 101.625 39.9656C96.5249 39.9656 92.8999 37.6687 92.8999 30.8802V0H99.8499V8.49844H108V14.5979H99.8499V29.7828Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M78.5498 23.9641L67.4998 8.49844H59.9248L70.9748 23.9641L59.9248 39.4552H67.4998L78.5498 23.9641Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M78.225 18.6557L80.275 21.5651L89.625 8.49844H82.025L76.5 16.2568L78.225 18.6557Z", fill: "currentColor" }), (0, l.jsx)("path", { d: "M80.275 26.3885L78.225 29.2724L76.5 31.6714L82.025 39.4552H89.625L80.275 26.3885Z", fill: "currentColor" })] }), (0, l.jsx)("defs", { children: (0, l.jsx)("clipPath", { id: "yext-a", children: (0, l.jsx)("rect", { fill: "white", height: 49, width: 108 }) }) })] }) }; G(), G(); var lI = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 37, viewBox: "0 0 38 37", width: 38, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { clipRule: "evenodd", d: "M4.27347 27.3912V25.1625C1.66955 24.9175 0.245075 23.2862 0 20.2687H2.43542C2.52732 21.1112 2.71878 21.7507 3.00981 22.1872C3.30083 22.6237 3.72205 22.9033 4.27347 23.0258V17.5346L3.88288 17.3968C2.64219 16.9526 1.72318 16.3629 1.12581 15.6276C0.528436 14.8924 0.229756 13.9734 0.229756 12.8706C0.229756 11.7065 0.597363 10.7262 1.33259 9.92969C2.06781 9.1332 3.04809 8.66603 4.27347 8.52818V6.5293H5.74391V8.52818C6.86206 8.65071 7.75044 9.06427 8.40908 9.76886C9.06772 10.4735 9.51957 11.4844 9.76464 12.8016L7.49006 13.1693C7.33688 12.4187 7.12245 11.8443 6.84674 11.4461C6.57103 11.0478 6.20342 10.7874 5.74391 10.6649V15.6506L6.2264 15.8115C7.52836 16.2863 8.47418 16.899 9.06389 17.6495C9.6536 18.4 9.94845 19.365 9.94845 20.5444C9.94845 21.8311 9.56935 22.8918 8.81115 23.7266C8.05295 24.5613 7.03055 25.04 5.74391 25.1625V27.3912H4.27347ZM5.74609 23.0731C6.32815 22.9659 6.77617 22.7055 7.09017 22.292C7.40417 21.8784 7.56117 21.3347 7.56117 20.6607C7.56117 20.0021 7.42332 19.4736 7.14761 19.0754C6.8719 18.6771 6.40473 18.3402 5.74609 18.0645V23.0731ZM2.62109 12.8248C2.62109 11.5688 3.1725 10.8336 4.27534 10.6191V15.0994C3.66265 14.839 3.23378 14.5403 2.9887 14.2033C2.74363 13.8664 2.62109 13.4069 2.62109 12.8248Z", fill: "currentColor", fillRule: "evenodd" }), (0, l.jsx)("path", { clipRule: "evenodd", d: "M19.2351 31.8347C20.8945 34.7717 23.4499 36.2402 26.9013 36.2402C33.8043 36.2402 37.2557 30.1671 37.2557 18.0206C37.2557 11.8809 36.426 7.34264 34.7666 4.40558C33.1073 1.46851 30.5519 0 27.1004 0C20.1975 0 16.7461 6.07316 16.7461 18.2197C16.7461 24.3593 17.5758 28.8976 19.2351 31.8347ZM32.5041 29.9442C31.3591 32.4167 29.509 33.6529 26.9536 33.6529C25.261 33.6529 23.8921 33.1302 22.8467 32.0848C21.8013 31.0394 21.0297 29.3884 20.5319 27.1316C20.0341 24.8749 19.7852 21.8881 19.7852 18.1711C19.7852 12.7285 20.3576 8.77094 21.5026 6.29849C22.6475 3.82605 24.4977 2.58984 27.0531 2.58984C28.7457 2.58984 30.1146 3.11253 31.16 4.15793C32.2054 5.20333 32.977 6.85436 33.4748 9.11109C33.9726 11.3678 34.2215 14.3546 34.2215 18.0716C34.2215 23.5143 33.649 27.4718 32.5041 29.9442Z", fill: "currentColor", fillRule: "evenodd" })] }) }; G(); var lO = function ({ title: e, titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "none", height: 30, viewBox: "0 0 90 30", width: 90, xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("g", { clipPath: "url(#zero-a)", children: (0, l.jsx)("path", { clipRule: "evenodd", d: "M13.7876 5.19676L0 28.6647V29.4897H22.5617V24.2515H9.54218L23.0468 0.783796V0H1.53641V5.19676H13.7876ZM23.3533 17.2423V17.6147C23.3533 25.3906 28.6025 30 35.8145 30C42.3418 30 46.4499 27.0666 47.226 21.8054H40.9726C40.5617 23.8539 39.0556 25.2043 35.9972 25.2043C32.3912 25.2043 30.2458 22.8761 30.0632 18.8253H47.2715V16.9629C47.2715 8.25589 41.7943 4.57772 35.6321 4.57772C28.6937 4.57772 23.3533 9.55977 23.3533 17.2423ZM35.6321 9.23386C38.7816 9.23386 40.6074 11.003 40.8357 14.6814H30.1544C30.6567 11.2358 32.6649 9.23386 35.6321 9.23386ZM50.1586 5.13761H56.7771V9.79375C58.2835 6.53444 60.6114 4.8117 64.4913 4.76522V11.0509C59.6073 11.0043 56.7771 12.6341 56.7771 17.2901V29.4891H50.1586V5.13761ZM84.3398 17.2366C84.3398 13.4507 81.3202 10.3706 77.6087 10.3706C73.8971 10.3706 70.8777 13.4507 70.8777 17.2366C70.8777 21.0226 73.8971 24.1026 77.6087 24.1026C81.3202 24.1026 84.3398 21.0226 84.3398 17.2366ZM65.2173 17.2366C65.2173 10.2558 70.7651 4.59676 77.6087 4.59676C84.4522 4.59676 90 10.2558 90 17.2366C90 24.2173 84.4522 29.8764 77.6087 29.8764C70.7651 29.8764 65.2173 24.2173 65.2173 17.2366Z", fill: "currentColor", fillRule: "evenodd" }) }), (0, l.jsx)("defs", { children: (0, l.jsx)("clipPath", { id: "zero-a", children: (0, l.jsx)("rect", { fill: "white", height: 30, width: 90 }) }) })] }) }; G(); var lA = W(K()), lz = W(X()); G(); var lB = { small: 320, medium: 768, large: 1024, xLarge: 1280, xxLarge: 1440, super: 1568, ultra: 1920 }; lB.small, lB.medium, lB.large, lB.xLarge, lB.xxLarge, lB.super, lB.ultra, lB.small, lB.medium, lB.large, lB.xLarge, lB.xxLarge, (0, lA.default)(({ addComponents: e, matchUtilities: r, theme: t }) => { e({ ".text-stroke-color": { "-webkit-text-stroke-color": "var(--tw-text-stroke-color, currentColor)" }, ".text-stroke-width": { "-webkit-text-stroke-width": "var(--tw-text-stroke-width, thin)" } }), r({ "text-stroke-color": e => ({ "-webkit-text-stroke-color": `var(--tw-text-stroke-color, ${e})` }) }, { type: "color", values: (0, lz.default)(t("colors")) }), r({ "text-stroke-width": e => ({ "-webkit-text-stroke-width": `var(--tw-text-stroke-width, ${e})` }) }, { values: t("textStrokeWidth") }) }, { theme: { textStrokeWidth: { thin: "thin", medium: "medium", thick: "thick", none: "unset", 0: "0", "0.5": "0.5px", 1: "1px", 2: "2px", 3: "3px" } } }), G(); var lE = "outOfStock", lF = "lowStock", lT = "inStock"; G(); var lD = (e => (e.BlogCategory = "blog-category", e.BusinessCategory = "business-category", e.CompanyCategory = "our-company-category", e.FooterCard = "footer-card", e.HowItWorksCategory = "how-it-works-category", e.MenuCard = "menu-card", e.PartnerCategory = "partner-category", e.ShopCategory = "shop-category", e.SupportCategory = "support-category", e.WhyOuraCategory = "why-oura-category", e))(lD || {}); G(); var lW = (e => (e.Silver = "silver", e.Black = "black", e.BrushedSilver = "brushed-silver", e.Stealth = "stealth", e.Titanium = "titanium", e.Gold = "gold", e.Rose = "rose", e.RoseGold = "rose-gold", e))(lW || {}); G(), G(), G(); var lG = W(U()); G(); var lU = (e => (e.Fade = "fade", e.Slide = "slide", e))(lU || {}), l$ = (0, i.createContext)({ activeIndex: 0, goToNextSlide: lG.default, goToPreviousSlide: lG.default, goToSlide: lG.default, interval: 5, isAutoplaying: !1, shouldFade: !1, shouldSlide: !0, slideCount: 2, transitionDuration: .5, transitionType: "slide", updateAutoplay: lG.default }), lq = () => (0, i.useContext)(l$); function lK({ autoplay: e = !1, children: r, interval: t = 5, onActiveIndexChange: n = lG.default, slideCount: o, transitionDuration: a = .5, transitionType: s = "slide" }) { let [u, d] = (0, i.useState)(0), [c, h] = (0, i.useState)(e), f = (0, C.I)(), _ = (0, i.useRef)(null), p = f ? "fade" : s, m = "fade" === p, x = "slide" === p, g = (0, i.useCallback)(() => { d(e => e === o - 1 ? 0 : e + 1) }, [o]), v = (0, i.useCallback)(() => { d(e => 0 === e ? o - 1 : e - 1) }, [o]), L = (0, i.useCallback)(e => { d(e) }, []), b = (0, i.useCallback)(r => { h(e && r) }, [e]); (0, i.useEffect)(() => { let e = () => { g(), _.current = setTimeout(e, 1e3 * t) }; return c && t && (_.current = setTimeout(e, 1e3 * t)), () => { _.current && clearTimeout(_.current) } }, [g, t, c]), (0, i.useEffect)(() => { c && t && (_.current && clearTimeout(_.current), _.current = setTimeout(() => { g() }, 1e3 * t)) }, [u, g, t, c]); let y = (0, i.useMemo)(() => ({ activeIndex: u, goToNextSlide: g, goToPreviousSlide: v, goToSlide: L, interval: t, isAutoplaying: c, shouldFade: m, shouldSlide: x, slideCount: o, transitionDuration: a, transitionType: p, updateAutoplay: b }), [p, u, g, v, L, t, c, m, x, o, a, b]); return (0, i.useEffect)(() => { n(u) }, [u, n]), (0, l.jsx)(l$.Provider, { value: y, children: r }) } lK.displayName = "CarouselProvider", G(), G(), G(), G(), G(); var lX = (0, i.forwardRef)(function ({ children: e, className: r, color: t = "sandstone-500", external: n = !1, href: o = "", onClick: a, ...C }, u) { let d = (0, i.useContext)(r5), c = n || !(null != d && d.LinkComponent) ? "a" : d.LinkComponent; return (0, l.jsx)(c, { "data-cy": "body_link", ...C, className: (0, s.cx)(`ui-underline ui-text-${t}`, r), href: o, onClick: e => null == a ? void 0 : a(e), ref: u, children: e }) }); lX.displayName = "BodyLinkV3"; var lJ = { br: (0, l.jsx)("br", {}), w: (0, l.jsx)("wbr", {}), r: String.fromCharCode(174), tm: String.fromCharCode(8482), break: function () { return (0, l.jsx)("br", {}) }, strong: function (e) { return (0, l.jsx)("strong", { children: e }) }, b: function (e) { return (0, l.jsx)("strong", { children: e }) }, em: function (e) { return (0, l.jsx)("em", { children: e }) }, i: function (e) { return (0, l.jsx)("em", { children: e }) }, u: function (e) { return (0, l.jsx)("span", { className: "ui-underline", children: e }) }, sup: function (e) { return (0, l.jsx)("sup", { className: "ui-font-serif ui-italic ui-text-blue-200 ui-font-semibold ui-tracking-wider", children: e }) }, li: function (e) { return (0, l.jsx)("li", { children: e }) }, ExternalLink: function (e) { return (0, l.jsx)(lX, { href: e, rel: "noreferrer", target: "_blank", children: e }) }, EmailLink: function (e) { return (0, l.jsx)(lX, { href: `mailto:${e}`, children: e }) } }; G(); var lY = Object.entries(lJ).reduce((e, [r, t]) => { let i = typeof t; return "string" === i ? { ...e, [r]: t } : "function" === i ? { ...e, [r]: e => e } : { ...e, [r]: "" } }, {}), lQ = (e = {}) => { let { stripHtml: r } = e; return r ? lY : lJ }; function l1({ id: e, values: r, ...t }) { let i = { ...lQ(), ...r }; return (0, l.jsx)(u.A, { id: e, values: i, ...t }) } function l2(e, r) { return (0, l.jsx)(l1, { id: e, values: r }) } function l3() { let { activeIndex: e, slideCount: r } = lq(); return r > 1 ? (0, l.jsx)("div", { "aria-atomic": "true", "aria-live": "polite", className: "ui-sr-only", "data-cy": "carousel-live-region", children: (0, l.jsx)(l1, { id: "carousel_live_region_text", values: { activeIndex: e + 1, slideCount: r } }) }) : null } function l4({ children: e, isActive: r }) { let { shouldFade: t, shouldSlide: i } = lq(), n = (({ isActive: e }) => { let { shouldFade: r, shouldSlide: t, slideCount: i, transitionDuration: l } = lq(), n = { style: { width: t ? `${1 / i * 100}%` : void 0 } }; return r && (n.animate = { opacity: +!!e }, n.initial = { opacity: +!!e }, n.transition = { duration: l, type: "tween" }), n })({ isActive: r }); return (0, l.jsx)(d.P.li, { "aria-hidden": !r, className: (0, s.cx)("ui-h-full ui-grid ui-grid-cols-1 ui-grid-rows-1 ui-pointer-events-none", { "ui-flex-none !ui-opacity-1": i, "ui-absolute ui-inset-0 ui-w-full": t }), "data-cy": "carousel-slide", ...n, children: e }) } function l5({ children: e }) { let { activeIndex: r, goToNextSlide: t, goToPreviousSlide: n, shouldFade: o, shouldSlide: a } = lq(), C = (() => { let { activeIndex: e, shouldSlide: r, slideCount: t, transitionDuration: i } = lq(), l = { style: { width: `${100 * t}%` } }; return r && (l.animate = { x: `-${e / t * 100}%` }, l.transition = { duration: i, type: "tween" }), l })(), u = (0, i.useRef)(!1), c = (0, i.useRef)(0), h = (0, i.useRef)(0), f = e => { u.current = !0, c.current = e }, _ = e => { u.current && (h.current = e - c.current) }, p = () => { Math.abs(h.current) >= 40 && (h.current < 0 ? t() : n()), c.current = 0, h.current = 0, u.current = !1 }; return (0, l.jsx)("div", { className: "ui-absolute ui-size-full ui-overflow-hidden", children: (0, l.jsx)(d.P.ul, { className: (0, s.cx)("ui-h-full", { "ui-flex": a, "ui-relative ui-w-full": o }), "data-cy": "carousel-slides", onMouseDown: e => { f(e.clientX) }, onMouseMove: e => { _(e.clientX) }, onMouseUp: () => { p() }, onTouchEnd: () => { p() }, onTouchMove: e => { _(e.touches[0].clientX) }, onTouchStart: e => { f(e.touches[0].clientX) }, ...C, children: i.Children.map(e, (e, t) => (0, l.jsx)(l4, { isActive: r === t, children: e })) }) }) } lQ.displayName = "getLocaleFormatting", l1.displayName = "FormattedMessage", l3.displayName = "CarouselLiveRegion", G(), G(), l4.displayName = "CarouselSlide", l5.displayName = "CarouselSlides"; var l6 = e => (0, i.isValidElement)(e) && e.type === l5; function l7({ autoplay: e, className: r, children: t, interval: n, onActiveIndexChange: o, transitionDuration: a, transitionType: C, ...u }) { let d = i.Children.toArray(t).find(l6), c = i.Children.count(null == d ? void 0 : d.props.children); return (0, l.jsx)(lK, { autoplay: e, interval: n, onActiveIndexChange: o, slideCount: c, transitionDuration: a, transitionType: C, children: (0, l.jsxs)("div", { ...u, className: (0, s.cx)("ui-relative", r), "data-cy": "carousel", children: [t, (0, l.jsx)(l3, {})] }) }) } function l8({ children: e, direction: r, ...t }) { let { goToNextSlide: i, goToPreviousSlide: n, updateAutoplay: o } = lq(); return (0, l.jsxs)("button", { "data-cy": "carousel-nav-direction", onClick: () => { o(!0), setTimeout(() => { "forwards" === r ? i() : n() }, 50) }, type: "button", ...t, children: [(0, l.jsx)("span", { className: "ui-sr-only", children: (0, l.jsx)(l1, { id: "carousel_next_slide_label" }) }), e] }) } function l9({ children: e, index: r, ...t }) { let { activeIndex: i, goToSlide: n, updateAutoplay: o } = lq(), a = r === i; return (0, l.jsxs)("button", { "data-cy": "carousel-nav-pager", onClick: () => { o(!1), setTimeout(() => { n(r) }, 50) }, type: "button", ...t, children: [(0, l.jsx)("span", { className: "ui-sr-only", children: (0, l.jsx)(l1, { id: "carousel_page_dot_label", values: { index: r + 1 } }) }), a ? (0, l.jsx)("span", { className: "ui-sr-only", children: (0, l.jsx)(l1, { id: "carousel_current_slide_label" }) }) : null, e] }) } function l0({ className: e, interval: r, isActive: t, isAutoplaying: i, transitionDuration: n, ...o }) { return (0, l.jsx)("span", { className: (0, s.cx)("ui-block ui-rounded-full ui-size-2", { "ui-bg-white": t, "ui-bg-slate-200": !t }, e), "data-cy": "carousel-nav-pager-dot", ...o }) } function ne({ className: e, CustomPagerDot: r, ...t }) { let { activeIndex: i, interval: n, isAutoplaying: o, slideCount: a, transitionDuration: C } = lq(), u = null != r ? r : l0; return (0, l.jsx)("ul", { className: (0, s.cx)("ui-flex ui-gap-x-2 ui-justify-center", e), "data-cy": "carousel-nav-pagers", ...t, children: Array(a).fill(void 0).map((e, r) => (0, l.jsx)("li", { className: "ui-leading-[0px]", children: (0, l.jsx)(l9, { index: r, children: (0, l.jsx)(u, { interval: n, isActive: i === r, isAutoplaying: o, transitionDuration: C }) }) }, `carousel-pager-item-${r}`)) }) } function nr({ children: e }) { return (0, l.jsx)(l.Fragment, { children: e }) } function nt({ children: e }) { return (0, l.jsx)(l.Fragment, { children: e }) } function ni({ children: e, expanded: r, hidden: t = !1, onClick: i, variant: n, ...o }) { return (0, l.jsx)("div", { className: (0, s.cx)("ui-border-t ui-border-opacity-[0.2]", { "ui-border-sandstone-500": "dark" === n, "ui-border-sandstone-200": "light" === n, "ui-hidden": t }), children: (0, l.jsxs)("button", { "aria-expanded": r, className: (0, s.cx)("ui-pt-4 ui-w-full", "ui-flex ui-justify-between ui-items-center"), onClick: i, tabIndex: r ? -1 : 0, type: "button", ...o, children: [e, (0, l.jsx)(t2, { "aria-hidden": !0, className: (0, s.cx)("ui-transition ui-duration-500 ui-rotate-0", { "ui-rotate-180": r }) })] }) }) } function nl({ children: e, expanded: r, hidden: t, lastIndex: i, variant: n, isContentAnimated: o, ...a }) { let u = (0, C.I)(), c = !!r; return (0, l.jsx)("div", { className: (0, s.cx)("ui-border-opacity-[0.2] ui-w-full ui-pb-4", { "ui-border-b": i, "ui-border-sandstone-500": "dark" === n, "ui-border-sandstone-200": "light" === n, "ui-hidden": t }), children: (0, l.jsx)("div", { "aria-hidden": !c, className: (0, s.cx)("ui-mt-4", { "ui-hidden": !c }), "data-cy": "accordion-content-wrapper", "data-expanded": c, ...a, children: (0, l.jsx)(d.P.div, { ...(({ expanded: e, isContentAnimated: r, shouldReduceMotion: t }) => r ? { animate: { opacity: +!!e, filter: e ? "blur(0px)" : "blur(5px)", y: e ? 0 : -5, transition: { type: "tween", duration: .8 * !t, staggerChildren: .1 * !t } }, initial: { opacity: 0, filter: "blur(5px)", y: -5 }, transition: { type: "spring", stiffness: 50, duration: .8 } } : {})({ isContentAnimated: o, expanded: c, shouldReduceMotion: !!u }), children: e }) }) }) } function nn({ children: e, close: r, hiddenIndices: t = [], nested: n = !1, openAtIndex: o = null, variant: a = "dark", isContentAnimated: s = !0, onClick: C }) { let [u, d] = (0, i.useState)(o), c = (0, i.useId)(), h = (0, i.useCallback)(() => { if (n) { let r = e.map(e => { var r; return (0, i.isValidElement)(e) && null != (r = e.props.children) ? r : null }).filter(e => null !== e); return i.Children.toArray(r) } return i.Children.toArray(e) }, [e, n])(), f = `${c}-header`, _ = `${c}-content`; return (0, i.useEffect)(() => { r && d(o) }, [r, o]), (0, l.jsx)(l.Fragment, { children: h.map((e, r) => { let n = t.includes(r + 1), o = t.includes(r), c = t.includes(r + 2), p = h.length - 1 === r || c; return (0, l.jsx)(i.Fragment, { children: r % 2 ? (0, l.jsx)(nl, { "aria-labelledby": f, expanded: u === r, hidden: o, lastIndex: p, ...e.props, isContentAnimated: s, variant: a }) : (0, l.jsx)(ni, { "aria-controls": _, expanded: u === r + 1, hidden: n, onClick: () => { var e = r + 1; u === e ? d(null) : d(e), null == C || C(e) }, ...e.props, variant: a }) }, r) }) }) } function no({ className: e, children: r, icon: t, id: i, isOpen: n, onClick: o }) { return (0, l.jsx)("button", { "aria-controls": `${i}-content`, "aria-expanded": n, className: "ui-w-full ui-cursor-pointer ui-p-4 lg:ui-p-6 ui-select-none", "data-cy": "accordion-v4-item-header", id: `${i}-header`, onClick: o, type: "button", children: (0, l.jsxs)("div", { className: "ui-flex ui-flex-row ui-items-center ui-justify-between", children: [(0, l.jsxs)("div", { className: "ui-flex ui-w-fit ui-flex-row ui-items-center ui-justify-start ui-gap-2", children: [t, (0, l.jsx)("div", { className: (0, s.cx)("ui-text-base ui-text-left ui-font-bold ui-tracking-[-2%]", e), "data-cy": "accordion-v4-item-header-text", children: r })] }), (0, l.jsxs)("div", { className: "ui-relative ui-size-3", children: [(0, l.jsx)("div", { className: "ui-w-full ui-h-[1.5px] ui-bg-current ui-top-1/2 ui-left-0 -ui-translate-y-1/2 ui-absolute" }), (0, l.jsx)("div", { className: (0, s.cx)("ui-h-full ui-w-[1.5px] ui-bg-current ui-left-1/2 ui-top-0 -ui-translate-x-1/2 ui-absolute ui-transition-opacity, ui-duration-200 ui-ease-in-out", { "ui-opacity-0": n, "ui-opacity-100": !n }), "data-cy": "accordion-v4-item-close-icon" })] })] }) }) } function na({ children: e, className: r, hideOverflow: t = !1, ...i }) { return (0, l.jsx)("div", { className: (0, s.cx)("TypographyRhythm", r, { hideOverflow: t }), "data-cy": "TypographyRhythm", ...i, children: e }) } function ns({ children: e, delay: r, duration: t, ease: i, id: n, isOpen: o }) { return (0, l.jsx)(d.P.div, { "aria-hidden": !o, "aria-labelledby": `${n}-header`, className: "ui-overflow-hidden -ui-translate-y-2 lg:-ui-translate-y-3", "data-cy": "accordion-content-wrapper", id: `${n}-content`, ...(({ duration: e, ease: r, isOpen: t }) => ({ animate: { height: t ? "auto" : 0 }, initial: { height: t ? "auto" : 0 }, transition: { duration: e, ease: r } }))({ duration: t, ease: i, isOpen: o }), children: (0, l.jsx)(d.P.div, { className: "ui-px-4 ui-pb-2 lg:ui-px-6 lg:ui-pb-3 ui-font-normal ui-text-sm", ...(({ delay: e, duration: r, ease: t, isOpen: i }) => ({ animate: { opacity: +!!i }, initial: { opacity: +!!i }, transition: { delay: e, duration: r, ease: t } }))({ delay: r, duration: t, ease: i, isOpen: o }), children: (0, l.jsx)(na, { className: (0, s.cx)({ "ui-invisible": !o }), hideOverflow: !0, children: e }) }) }) } function nC({ children: e, className: r, delay: t = .2, duration: n = .4, ease: o = "easeInOut", header: a, headerClassName: C, icon: u, isOpen: d = !1, onHeaderClick: c }) { let h = (0, i.useId)(); return (0, l.jsxs)("div", { className: (0, s.cx)("ui-rounded-lg ui-bg-gray-300/40 ui-text-sandstone-500", r), "data-cy": "accordion-v4-item", children: [(0, l.jsx)(no, { className: C, icon: u, id: h, isOpen: d, onClick: c, children: a }), (0, l.jsx)(ns, { delay: t, duration: n, ease: o, id: h, isOpen: d, children: e })] }) } function nu({ children: e, className: r = "", defaultOpenIndex: t = null, delay: n, duration: o, ease: a, headerClassName: C, onOpenChange: u }) { let [d, c] = (0, i.useState)(t); return (0, l.jsx)("div", { className: (0, s.cx)("ui-flex ui-flex-col ui-gap-3", r), "data-cy": "accordion-v4", children: i.Children.map(e, (e, r) => (0, i.isValidElement)(e) && e.type === nC ? (0, i.cloneElement)(e, { duration: o, delay: n, ease: a, headerClassName: C, isOpen: d === r, onHeaderClick: () => { let e; c(e = d === r ? null : r), null == u || u(e) } }) : e) }) } function nd({ size: e = 40, thickness: r = 3.6, ...t }) { return (0, l.jsx)("span", { ...t, "data-chromatic": "ignore", children: (0, l.jsx)(d.P.span, { animate: { rotate: 360 }, className: "ui-block", initial: { rotate: 0 }, role: "progressbar", style: { width: e, height: e }, transition: { loop: 1 / 0, ease: "linear", duration: 1.4 }, children: (0, l.jsx)("svg", { className: "ui-block", viewBox: "22 22 44 44", children: (0, l.jsx)(d.P.circle, { animate: { strokeDasharray: ["1, 200", "100, 200", "100, 200"], strokeDashoffset: [0, -15, -125] }, cx: 44, cy: 44, fill: "none", initial: { strokeDasharray: "80px, 200px", strokeDashoffset: 0 }, r: (44 - r) / 2, stroke: "currentColor", strokeDasharray: "80px, 200px", strokeDashoffset: 0, strokeWidth: r, transition: { ease: "easeInOut", repeat: 1 / 0, duration: 1.4 } }) }) }) }) } l7.displayName = "Carousel", G(), l8.displayName = "CarouselNavDirection", G(), G(), l9.displayName = "CarouselNavPager", G(), l0.displayName = "CarouselNavPagerDot", ne.displayName = "CarouselNavPagers", G(), nn.displayName = "Accordion", G(), G(), G(), G(), G(), G(), G(), (0, s.F)(["ui-p-4  ui-text-sandstone-500"], { variants: { severity: { error: "ui-bg-red-100", info: "ui-bg-sandstone-450", success: "ui-bg-green-100" } } }), G(), G(), nd.displayName = "CircularProgress"; var nc = (0, s.F)("ui-rounded-full ui-text-center ui-inline-block ui-transition", { variants: { variant: { primary: "ui-bg-blue-100 ui-text-sandstone-200 hover:ui-bg-blue-200", "secondary-light": "ui-bg-sandstone-200 ui-text-sandstone-500 hover:ui-bg-gray-400", "secondary-dark": "ui-bg-sandstone-500 ui-text-sandstone-200 hover:ui-bg-gray-600", "primary-text-link": "ui-text-stroke-color-transparent ui-text-stroke-width-0.5 hover:ui-text-stroke-color-current", "secondary-text-link": "ui-text-sandstone-200 ui-text-stroke-color-transparent ui-text-stroke-width-0.5 hover:ui-text-stroke-color-current", "outlined-dark": "ui-bg-transparent ui-text-sandstone-500 ui-border ui-border-solid ui-border-current", "outlined-light": "ui-bg-transparent ui-text-sandstone-200 ui-border ui-border-solid ui-border-current", unset: "" }, size: { none: "ui-p-0", small: "ui-py-2 ui-px-4", medium: "ui-py-2 ui-px-4 lg:ui-py-3 lg:ui-px-6", large: "ui-py-3 ui-px-6" }, loadingBtnPrimary: { true: "ui-bg-blue-200 ui-text-sandstone-200" }, loadingBtnSecondaryLight: { true: "ui-bg-gray-400" }, loadingBtnSecondaryDark: { true: "ui-bg-gray-600 ui-text-sandstone-200" }, disabled: { true: "ui-pointer-events-none" } }, defaultVariants: { variant: "primary", size: "large" }, compoundVariants: [{ class: "ui-bg-gray-300", disabled: !0, variant: "primary" }, { class: "ui-bg-gray-300 ui-text-sandstone-200", disabled: !0, variant: "secondary-light" }, { class: "ui-bg-gray-300 ui-text-sandstone-200", disabled: !0, variant: "secondary-dark" }, { class: "ui-text-gray-300", disabled: !0, variant: "primary-text-link" }, { class: "ui-text-gray-300", disabled: !0, variant: "secondary-text-link" }] }); function nh() { return (0, l.jsx)(nd, { "data-cy": "button-loading", size: 12, thickness: 3 }) } function nf({ children: e, className: r = "", external: t, loading: i, icon: n, isTextLink: o }) { let a = t && !o, C = !t && o, u = !!n && !a && !C; return (0, l.jsxs)("span", { className: (0, s.cx)("ui-items-center ui-inline-flex ui-gap-2 ui-content-center ui-justify-center", r, { "ui-relative": i, "ui-underline": o }), "data-cy": "button-compartment", children: [(0, l.jsx)("span", { children: e }), a ? (0, l.jsx)(t$, { "aria-hidden": !0, className: "ui--rotate-45", "data-cy": "card_button_arrow_icon" }) : null, C ? (0, l.jsx)(ld, { "aria-hidden": !0, "data-cy": "link_button_arrow_icon" }) : null, u ? n : null] }) } var n_ = (0, i.forwardRef)(function ({ buttonCompartmentClassName: e = "", children: r, className: t = "", disabled: n = !1, external: o, href: a = "", icon: C, loading: u = !1, loadingTextEnabled: d = !0, size: c, type: h = "button", variant: f = "primary", ..._ }, p) { let m = (0, i.useContext)(r5), x = o || !(null != m && m.LinkComponent) ? "a" : m.LinkComponent, g = "primary-text-link" === f || "secondary-text-link" === f, v = g ? "none" : c, L = "primary" === f && u, b = "secondary-light" === f && u, y = "secondary-dark" === f && u; return a ? (0, l.jsx)(x, { "aria-disabled": n, className: nc({ variant: f, size: v, disabled: n, className: t }), "data-cy": "button-link", href: a, ref: p, ..._, children: (0, l.jsx)(nf, { className: e, external: o, icon: C, isTextLink: g, children: r }) }) : d && u ? (0, l.jsx)("button", { className: nc({ variant: "unset", size: v, loadingBtnPrimary: L, loadingBtnSecondaryLight: b, loadingBtnSecondaryDark: y, disabled: n, className: t }), "data-cy": "button-loading-text", disabled: !0, ref: p, type: h, ..._, children: (0, l.jsxs)("div", { className: "ui-inline-flex ui-gap-2 ui-justify-center ui-items-center", children: [(0, l.jsx)(nh, {}), r, g ? (0, l.jsx)(ld, {}) : null] }) }) : (0, l.jsx)("button", { className: nc({ variant: u ? "unset" : f, size: v, loadingBtnPrimary: L, loadingBtnSecondaryLight: b, loadingBtnSecondaryDark: y, disabled: n, className: t }), "data-cy": "button", disabled: u || n, ref: p, type: h, ..._, children: (0, l.jsxs)(nf, { className: e, icon: C, isTextLink: g, loading: u, children: [(0, l.jsx)("span", { className: (0, s.cx)({ "ui-invisible": u }), children: r }), u ? (0, l.jsx)("span", { className: "ui-m-0 ui-absolute ui-top-0 ui-left-0 ui-right-0 ui-bottom-0 ui-flex ui-justify-center ui-items-center", children: (0, l.jsx)(nh, {}) }) : null] }) }) }); n_.displayName = "Button", G(); var np = (0, s.F)("ui-rounded-full ui-text-center ui-inline-block ui-transition", { variants: { color: { light: "ui-bg-sandstone-200 ui-text-sandstone-500", dark: "ui-bg-sandstone-500 ui-text-sandstone-200", "brown-500": "ui-bg-brown-500 ui-text-sandstone-200", "slate-600": "ui-bg-slate-600 ui-text-sandstone-200", "gray-600": "ui-bg-gray-600 ui-text-sandstone-200", "olive-600": "ui-bg-olive-600 ui-text-sandstone-200", "purple-600": "ui-bg-purple-600 ui-text-sandstone-200", "mustard-700": "ui-bg-mustard-700 ui-text-sandstone-200" }, size: { small: "ui-p-2.5", large: "ui-p-4", xlarge: "ui-p-5" } }, defaultVariants: { color: "dark", size: "large" } }), nm = (0, i.forwardRef)(function ({ ariaLabel: e = "", color: r, external: t, href: n, size: o, variant: a = "arrow", className: s, open: C, ...u }, d) { let c = (0, i.useContext)(r5), h = t || !(null != c && c.LinkComponent) ? "a" : c.LinkComponent; return n ? (0, l.jsx)(h, { className: np({ color: r, size: o, className: s }), "data-cy": "card-button-link", href: n, ...u, ref: d, children: t ? (0, l.jsx)(t$, { "aria-hidden": !0, className: "ui--rotate-45" }) : (0, l.jsx)(t$, { "aria-hidden": !0 }) }) : (0, l.jsx)("button", { "aria-label": e, className: np({ color: r, size: o, className: s }), "data-cy": "card-button", ref: d, type: "button", ...u, children: "expand" === a ? (0, l.jsx)(l.Fragment, { children: C ? (0, l.jsx)("span", { "data-cy": "expand-close", children: (0, l.jsx)(tq, { "aria-hidden": !0 }) }) : (0, l.jsx)("span", { "data-cy": "expand-open", children: (0, l.jsx)(tK, { "aria-hidden": !0 }) }) }) : (0, l.jsx)(t$, { "aria-hidden": !0 }) }) }); nm.displayName = "CardButton", G(), G(); var nx = (0, i.createContext)(null); function ng(e) { let { cardSelectHeader: r, children: t, hideLabel: i = !1, label: n, description: o, infoModal: a, onChange: C, ...u } = e, d = (0, f.Z)(e), { radioGroupProps: c, labelProps: _, descriptionProps: p } = (0, h.m)(e, d); return (0, l.jsxs)("div", { ...u, ...c, children: [i ? (0, l.jsx)("span", { ..._, className: (0, s.cx)(_.className, "ui-sr-only"), children: n }) : null, r ? (0, l.jsx)(r, { description: o, descriptionProps: p, infoModal: a, label: n, labelProps: _ }) : null, (0, l.jsx)("div", { className: "ui-relative ui-flex ui-w-full ui-flex-col ui-gap-2", children: (0, l.jsx)(nx.Provider, { value: d, children: t }) })] }) } function nv(e) { let r = (0, i.useContext)(nx), t = (0, i.useRef)(null), n = (0, i.useId)(), { inputProps: o, isSelected: a } = (0, c.z)(e, r, t); return (0, l.jsxs)("label", { "aria-label": e.title, className: (0, s.cx)("ui-p-5 ui-cursor-pointer ui-overflow-hidden ui-rounded-xl ui-border", { "ui-border-gray-600": a, "ui-border-gray-300 hover:ui-border-gray-600/30": !a }, e.className), "data-cy": "card-radio-selector-label", "data-value": e.value, htmlFor: n, children: [(0, l.jsx)("input", { ...o, checked: a, className: "ui-peer ui-absolute ui-appearance-none", "data-cy": "card-radio-selector-input", id: n, ref: t, type: "radio" }), e.children] }) } ng.displayName = "RadioSelectorGroup", nv.displayName = "CardRadioSelector", G(), G(); var nL = (0, s.F)("", { variants: { variant: { h1: "ui-text-[2.5rem] ui-tracking-tight md:ui-text-[3.75rem] lg:ui-text-[5rem]", h2: "ui-text-[2.25rem] ui-tracking-normal md:ui-text-[3rem] lg:ui-text-[4.25rem] lg:ui-tracking-[-2px]", h3: "ui-text-[2rem] ui-tracking-normal md:ui-text-[2.5rem] lg:ui-text-[3.5rem]", h4: "ui-text-[1.75rem] ui-tracking-normal md:ui-text-[2rem] lg:ui-text-[2.5rem]", h5: "ui-text-[1.25rem] ui-tracking-normal lg:ui-leading-10", h6: "ui-text-[1.25rem] ui-tracking-normal", "body-large": "ui-text-[1.125rem] ui-tracking-normal", "title-large": "ui-text-[4.25rem] md:ui-text-7xl lg:ui-text-8xl xl:ui-text-[7.5rem]", "title-small": "ui-text-[4.25rem] md:ui-text-7xl lg:ui-text-[5rem]", base: "ui-text-base ui-tracking-normal", "body-small": "ui-text-[0.875rem] ui-tracking-normal", "eyebrow-large": "ui-text-base", "eyebrow-small": "ui-text-[0.75rem]", unset: "" }, align: { left: "ui-text-left", center: "ui-text-center", right: "ui-text-right", justify: "ui-text-justify", centerMdLeft: "ui-text-center md:ui-text-left", centerLgLeft: "ui-text-center lg:ui-text-left" }, color: { light: "ui-text-sandstone-200", dark: "ui-text-sandstone-500", disabled: "ui-text-gray-300", error: "ui-text-red-600", gray: "ui-text-gray-400", success: "ui-text-green-600", inherit: "ui-text-inherit", unset: "" }, font: { sans: "ui-font-sans", serif: "ui-font-serif", "serif-italic": "ui-font-serif ui-italic" }, height: { none: "ui-leading-none", tight: "ui-leading-tight", snug: "ui-leading-snug", normal: "ui-leading-normal", relaxed: "ui-leading-relaxed", loose: "ui-leading-loose", heading: "ui-leading-heading" }, weight: { thin: "ui-font-thin", extralight: "ui-font-extralight", light: "ui-font-light", normal: "ui-font-normal", medium: "ui-font-medium", semibold: "ui-font-semibold", bold: "ui-font-bold", extrabold: "ui-font-extrabold", black: "ui-font-black" } }, defaultVariants: { variant: "base", height: "normal", weight: "normal", font: "sans" } }); function nb({ align: e = "left", Element: r = "p", children: t, className: i, color: n = "dark", font: o = "sans", height: a, variant: s = "base", weight: C = "normal", style: u, ...d }) { let c = C; return ("h1" === s || "h2" === s || "h3" === s || "h4" === s) && (c = "light"), (0, l.jsx)(r, { className: nL({ align: e, color: n, height: a, variant: s, weight: c, font: o, className: i }), style: u, ...d, children: t }) } nb.displayName = "TypographyV3", G(); var ny = (0, s.F)(["ui-gap-2", "ui-items-center"], { variants: { reverse: { true: ["ui-flex", "ui-h-full"], false: ["ui-inline-flex", "ui-justify-end"] }, stack: { true: null } }, compoundVariants: [{ reverse: !1, stack: !1, className: "ui-flex-row-reverse" }, { reverse: !0, stack: !1, className: "ui-justify-between" }, { reverse: !1, stack: !0, className: "ui-flex-col-reverse" }, { reverse: !0, stack: !0, className: "ui-flex-col ui-justify-center" }] }), nw = (0, s.F)(["ui-flex ui-p-1 ui-rounded-full", "ui-bg-opacity-0 hover:ui-bg-opacity-10"], { variants: { disabled: { true: "hover:ui-cursor-not-allowed", false: "hover:ui-cursor-pointer" }, variant: { primary: null, secondary: null, unset: null } }, compoundVariants: [{ disabled: !1, variant: "primary", className: "ui-bg-sandstone-500" }, { disabled: !1, variant: "secondary", className: "ui-bg-blue-100" }, { disabled: !1, variant: "unset", className: "ui-bg-sandstone-500" }] }), nj = (0, s.F)(["ui-relative", "ui-flex-shrink-0 ui-w-6 ui-h-6", "ui-border-[1px] ui-rounded"], { variants: { checked: { true: null }, disabled: { true: "ui-border-gray-300 ui-bg-gray-100 ui-bg-opacity-50" }, reverse: { true: null }, stack: { true: null }, variant: { primary: null, secondary: null, unset: null } }, compoundVariants: [{ disabled: !1, variant: "primary", className: "ui-border-sandstone-500" }, { disabled: !1, checked: !0, variant: "primary", className: "ui-border-sandstone-500 ui-bg-sandstone-500" }, { disabled: !1, variant: "secondary", className: "ui-border-blue-100" }, { disabled: !1, checked: !0, variant: "secondary", className: "ui-border-blue-100 ui-bg-blue-100" }, { disabled: !1, variant: "unset", className: "ui-border-sandstone-500" }, { disabled: !0, checked: !0, className: "ui-bg-gray-100" }, { reverse: !1, stack: !1, className: "ui-self-start" }] }), nk = (0, s.F)(["ui-flex ui-h-full", "ui-justify-center ui-items-center"], { variants: { disabled: { true: "ui-text-gray-300" }, checked: { false: "ui-text-transparent" }, variant: { primary: null, secondary: null, unset: null } }, compoundVariants: [{ disabled: !1, checked: !0, variant: "primary", className: "ui-text-sandstone-100" }, { disabled: !1, checked: !0, variant: "secondary", className: "ui-text-sandstone-100" }, { disabled: !1, checked: !0, variant: "unset", className: "ui-text-sandstone-500" }, { disabled: !0, checked: !0, className: "ui-text-gray-300" }, { disabled: !1, checked: !1, className: "ui-text-transparent" }] }), nM = (0, s.F)(["ui-absolute ui-opacity-0 ui-top-0"]); function nH({ checked: e, className: r, "data-cy": t = "checkbox", disabled: i = !1, label: n, labelProps: o = {}, name: a, stack: C = !1, reverse: u = !1, onChange: d, value: c, variant: h = "primary", ...f }) { let _ = { checkboxContainer: (0, s.cx)(ny({ className: r, reverse: u, stack: C })), checkbox: (0, s.cx)(nj({ checked: e, disabled: i, reverse: u, stack: C, variant: h })), checkmark: (0, s.cx)(nk({ disabled: i, checked: e, variant: h })), hoverSelection: (0, s.cx)(nw({ disabled: i, variant: h })), input: (0, s.cx)(nM()) }; return (0, l.jsxs)(nb, { Element: "label", className: _.checkboxContainer, color: i ? "disabled" : "inherit", ...f, "data-cy": t, children: [n ? (0, l.jsx)(nb, { Element: "span", color: "inherit", ...o, "data-cy": `${t}-label`, children: n }) : null, (0, l.jsx)("span", { className: _.hoverSelection, children: (0, l.jsxs)("span", { className: _.checkbox, "data-cy": `${t}-check`, children: [(0, l.jsx)("span", { "aria-hidden": !0, className: _.checkmark, "data-cy": `${t}-svg`, hidden: !e, children: (0, l.jsx)(tJ, {}) }), (0, l.jsx)("input", { checked: e, className: _.input, "data-cy": `${t}-input`, disabled: i, name: a, onChange: d, type: "checkbox", value: c })] }) })] }) } function nV({ children: e, ...r }) { return (0, l.jsx)(nb, { ...r, Element: "li", weight: "normal", children: e }) } nH.displayName = "Checkbox", G(), G(), nV.displayName = "ListItem", G(), G(), G(); var nZ = (0, i.createContext)(null); function nN(e) { let { children: r, hideLabel: t = !1, label: i, description: n, aboveButtonGroupSlot: o, onChange: a, ...C } = e, u = (0, f.Z)(e), { radioGroupProps: d, labelProps: c, descriptionProps: _ } = (0, h.m)(e, u); return (0, l.jsxs)(l.Fragment, { children: [i ? (0, l.jsx)(nb, { className: (0, s.cx)("ui-mb-2 lg:ui-mb-1 lg:ui-mt-2 lg:ui-text-xl", { "ui-mb-4 lg:ui-mb-4": !n }), "data-cy": "choose-btn-group-title", children: (0, l.jsx)("span", { ...c, className: (0, s.cx)(c.className, { "ui-sr-only": !!t }), children: i }) }) : null, n ? (0, l.jsx)(nb, { className: "ui-mb-4", "data-cy": "choose-btn-group-description", children: (0, l.jsx)("span", { ..._, children: n }) }) : null, !!o && o, (0, l.jsx)("div", { ...C, ...d, children: (0, l.jsx)("div", { className: "ui-relative ui-flex ui-w-full ui-flex-col ui-gap-2.5", children: (0, l.jsx)(nZ.Provider, { value: u, children: r }) }) })] }) } nN.displayName = "ChooseButtonGroup"; var nR = nN; function nS(e) { let { children: r, className: t } = e, n = (0, i.useContext)(nZ), o = (0, i.useRef)(null), a = (0, i.useId)(), { inputProps: C, isSelected: u, isDisabled: d } = (0, c.z)(e, n, o); return (0, l.jsxs)("div", { children: [(0, l.jsx)("input", { checked: u, "data-cy": "choose-button-input", ...C, className: "ui-peer ui-absolute ui-appearance-none", id: a, ref: o }), (0, l.jsx)("label", { className: (0, s.cx)(t, "ui-cursor-pointer ui-overflow-hidden ui-rounded-lg ui-border hover:ui-border-white hover:ui-bg-white", { "ui-pointer-events-none ui-cursor-default ui-opacity-30": d, "ui-border-sandstone-500 ui-bg-white hover:ui-border-sandstone-500": u, "ui-border-gray-150 ui-bg-gray-150": !u }), "data-cy": "choose-button-label", "data-value": e.value, htmlFor: a, children: r })] }) } nS.displayName = "ChooseButton"; var nP = nS; function nI({ className: e = "ui-size-6 ui-text-slate-200", chosen: r }) { return (0, l.jsx)(t6, { "aria-hidden": !r, "aria-label": l2("pdp_selected_check_label"), className: (0, s.cx)("ui-inline-flex ui-self-center", { "ui-invisible": !r, "ui-visible": r }, e), "data-cy": "choose-btn-check" }) } G(), nI.displayName = "ChooseButtonCheck"; var nO = nI; function nA(e) { let { children: r, className: t = "" } = e, n = (0, i.useContext)(nZ), o = (0, i.useRef)(null), a = (0, i.useId)(), { inputProps: C, isSelected: u, isDisabled: d } = (0, c.z)(e, n, o); return (0, l.jsxs)(l.Fragment, { children: [(0, l.jsx)("label", { className: (0, s.cx)(t, "ui-flex ui-cursor-pointer ui-items-center ui-justify-center ui-rounded-full ui-border ui-border-current ui-px-4 ui-py-2 ui-text-sandstone-500 maxlg:ui-w-full", { "ui-pointer-events-none ui-cursor-default ui-opacity-30": d, "ui-bg-opacity-70": !u }), "data-cy": "secondary-choose-button-label", htmlFor: a, children: r }), (0, l.jsx)("input", { ...C, className: "ui-peer ui-absolute ui-appearance-none", id: a, ref: o })] }) } G(), nA.displayName = "SecondaryChooseButton"; var nz = nA; function nB(e) { let { finish: r, stockStatus: t, swatchSrc: n, value: o = "silver" } = e, a = (0, i.useContext)(nx), C = (0, i.useRef)(null), u = (0, i.useId)(), { inputProps: d, isSelected: h } = (0, c.z)(e, a, C), f = t === lE; return (0, l.jsxs)("label", { className: (0, s.cx)("ui-size-12 ui-aspect-square ui-rounded-full ui-flex ui-items-center ui-justify-center ui-relative ui-cursor-pointer", { "ui-border-sandstone-500 ui-border-2": h && !f, "ui-pointer-events-none ui-cursor-default": f }), "data-cy": `finish-radio-selector-${o}`, "data-value": o, htmlFor: u, children: [(0, l.jsx)("span", { className: "ui-sr-only", children: r }), (0, l.jsx)("input", { ...d, checked: h, className: "ui-peer ui-absolute ui-appearance-none", "data-cy": `finish-radio-selector-input-${o}`, disabled: f, id: u, ref: C, type: "radio" }), (0, l.jsx)("img", { alt: "", className: "ui-size-10 ui-aspect-square", src: n }), f ? (0, l.jsx)(ie, { className: "ui-text-white ui-absolute ui-left-1/2 ui-transform ui-top-1/2 ui--translate-x-1/2 ui--translate-y-1/2", height: 24, width: 24 }) : null] }) } function nE({ children: e, className: r, label: t, onChange: i, ringFinishesData: n, selectedFinish: o }) { return (0, l.jsxs)(ng, { hideLabel: !0, label: t, onChange: i, value: o, children: [(0, l.jsx)("div", { className: (0, s.cx)("ui-flex ui-gap-x-2", r), children: n.map(e => (0, l.jsx)(nB, { "aria-label": e.finish, finish: e.finish, stockStatus: e.stockStatus, swatchSrc: e.swatchSrc, value: e.id }, e.id)) }), e] }) } G(), G(), nB.displayName = "FinishRadioSelector", G(), nE.displayName = "FinishRadioSelectors", G(), G(); var nF = (0, s.F)("", { variants: { sm: { 1: "ui-col-span-1", 2: "ui-col-span-2", 3: "ui-col-span-3", 4: "ui-col-span-4", 5: "ui-col-span-5", 6: "ui-col-span-6", 7: "ui-col-span-7", 8: "ui-col-span-8", 9: "ui-col-span-9", 10: "ui-col-span-10" }, md: { 1: "md:ui-col-span-1", 2: "md:ui-col-span-2", 3: "md:ui-col-span-3", 4: "md:ui-col-span-4", 5: "md:ui-col-span-5", 6: "md:ui-col-span-6", 7: "md:ui-col-span-7", 8: "md:ui-col-span-8", 9: "md:ui-col-span-9", 10: "md:ui-col-span-10", 11: "md:ui-col-span-11", 12: "md:ui-col-span-12", 13: "md:ui-col-span-13", 14: "md:ui-col-span-14", 15: "md:ui-col-span-15", 16: "md:ui-col-span-16", 17: "md:ui-col-span-17", 18: "md:ui-col-span-18", 19: "md:ui-col-span-19", 20: "md:ui-col-span-20", 21: "md:ui-col-span-21", 22: "md:ui-col-span-22", 23: "md:ui-col-span-23", 24: "md:ui-col-span-24" }, lg: { 1: "lg:ui-col-span-1", 2: "lg:ui-col-span-2", 3: "lg:ui-col-span-3", 4: "lg:ui-col-span-4", 5: "lg:ui-col-span-5", 6: "lg:ui-col-span-6", 7: "lg:ui-col-span-7", 8: "lg:ui-col-span-8", 9: "lg:ui-col-span-9", 10: "lg:ui-col-span-10", 11: "lg:ui-col-span-11", 12: "lg:ui-col-span-12", 13: "lg:ui-col-span-13", 14: "lg:ui-col-span-14", 15: "lg:ui-col-span-15", 16: "lg:ui-col-span-16", 17: "lg:ui-col-span-17", 18: "lg:ui-col-span-18", 19: "lg:ui-col-span-19", 20: "lg:ui-col-span-20", 21: "lg:ui-col-span-21", 22: "lg:ui-col-span-22", 23: "lg:ui-col-span-23", 24: "lg:ui-col-span-24" }, xl: { 1: "xl:ui-col-span-1", 2: "xl:ui-col-span-2", 3: "xl:ui-col-span-3", 4: "xl:ui-col-span-4", 5: "xl:ui-col-span-5", 6: "xl:ui-col-span-6", 7: "xl:ui-col-span-7", 8: "xl:ui-col-span-8", 9: "xl:ui-col-span-9", 10: "xl:ui-col-span-10", 11: "xl:ui-col-span-11", 12: "xl:ui-col-span-12", 13: "xl:ui-col-span-13", 14: "xl:ui-col-span-14", 15: "xl:ui-col-span-15", 16: "xl:ui-col-span-16", 17: "xl:ui-col-span-17", 18: "xl:ui-col-span-18", 19: "xl:ui-col-span-19", 20: "xl:ui-col-span-20", 21: "xl:ui-col-span-21", 22: "xl:ui-col-span-22", 23: "xl:ui-col-span-23", 24: "xl:ui-col-span-24" }, xxl: { 1: "xxl:ui-col-span-1", 2: "xxl:ui-col-span-2", 3: "xxl:ui-col-span-3", 4: "xxl:ui-col-span-4", 5: "xxl:ui-col-span-5", 6: "xxl:ui-col-span-6", 7: "xxl:ui-col-span-7", 8: "xxl:ui-col-span-8", 9: "xxl:ui-col-span-9", 10: "xxl:ui-col-span-10", 11: "xxl:ui-col-span-11", 12: "xxl:ui-col-span-12", 13: "xxl:ui-col-span-13", 14: "xxl:ui-col-span-14", 15: "xxl:ui-col-span-15", 16: "xxl:ui-col-span-16", 17: "xxl:ui-col-span-17", 18: "xxl:ui-col-span-18", 19: "xxl:ui-col-span-19", 20: "xxl:ui-col-span-20", 21: "xxl:ui-col-span-21", 22: "xxl:ui-col-span-22", 23: "xxl:ui-col-span-23", 24: "xxl:ui-col-span-24" } } }), nT = (0, s.F)("", { variants: { sm: { full: "ui-col-start-full", main: "ui-col-start-main", 1: "ui-col-start-1", 2: "ui-col-start-2", 3: "ui-col-start-3", 4: "ui-col-start-4", 5: "ui-col-start-5", 6: "ui-col-start-6", 7: "ui-col-start-7", 8: "ui-col-start-8", 9: "ui-col-start-9" }, md: { full: "md:ui-col-start-full", main: "md:ui-col-start-main", 1: "md:ui-col-start-1", 2: "md:ui-col-start-2", 3: "md:ui-col-start-3", 4: "md:ui-col-start-4", 5: "md:ui-col-start-5", 6: "md:ui-col-start-6", 7: "md:ui-col-start-7", 8: "md:ui-col-start-8", 9: "md:ui-col-start-9", 10: "md:ui-col-start-10", 11: "md:ui-col-start-11", 12: "md:ui-col-start-12", 13: "md:ui-col-start-13", 14: "md:ui-col-start-14", 15: "md:ui-col-start-15", 16: "md:ui-col-start-16", 17: "md:ui-col-start-17", 18: "md:ui-col-start-18", 19: "md:ui-col-start-19", 20: "md:ui-col-start-20", 21: "md:ui-col-start-21", 22: "md:ui-col-start-22", 23: "md:ui-col-start-23" }, lg: { full: "lg:ui-col-start-full", main: "lg:ui-col-start-main", 1: "lg:ui-col-start-1", 2: "lg:ui-col-start-2", 3: "lg:ui-col-start-3", 4: "lg:ui-col-start-4", 5: "lg:ui-col-start-5", 6: "lg:ui-col-start-6", 7: "lg:ui-col-start-7", 8: "lg:ui-col-start-8", 9: "lg:ui-col-start-9", 10: "lg:ui-col-start-10", 11: "lg:ui-col-start-11", 12: "lg:ui-col-start-12", 13: "lg:ui-col-start-13", 14: "lg:ui-col-start-14", 15: "lg:ui-col-start-15", 16: "lg:ui-col-start-16", 17: "lg:ui-col-start-17", 18: "lg:ui-col-start-18", 19: "lg:ui-col-start-19", 20: "lg:ui-col-start-20", 21: "lg:ui-col-start-21", 22: "lg:ui-col-start-22", 23: "lg:ui-col-start-23" }, xl: { full: "xl:ui-col-start-full", main: "xl:ui-col-start-main", 1: "xl:ui-col-start-1", 2: "xl:ui-col-start-2", 3: "xl:ui-col-start-3", 4: "xl:ui-col-start-4", 5: "xl:ui-col-start-5", 6: "xl:ui-col-start-6", 7: "xl:ui-col-start-7", 8: "xl:ui-col-start-8", 9: "xl:ui-col-start-9", 10: "xl:ui-col-start-10", 11: "xl:ui-col-start-11", 12: "xl:ui-col-start-12", 13: "xl:ui-col-start-13", 14: "xl:ui-col-start-14", 15: "xl:ui-col-start-15", 16: "xl:ui-col-start-16", 17: "xl:ui-col-start-17", 18: "xl:ui-col-start-18", 19: "xl:ui-col-start-19", 20: "xl:ui-col-start-20", 21: "xl:ui-col-start-21", 22: "xl:ui-col-start-22", 23: "xl:ui-col-start-23" }, xxl: { full: "xxl:ui-col-start-full", main: "xxl:ui-col-start-main", 1: "xxl:ui-col-start-1", 2: "xxl:ui-col-start-2", 3: "xxl:ui-col-start-3", 4: "xxl:ui-col-start-4", 5: "xxl:ui-col-start-5", 6: "xxl:ui-col-start-6", 7: "xxl:ui-col-start-7", 8: "xxl:ui-col-start-8", 9: "xxl:ui-col-start-9", 10: "xxl:ui-col-start-10", 11: "xxl:ui-col-start-11", 12: "xxl:ui-col-start-12", 13: "xxl:ui-col-start-13", 14: "xxl:ui-col-start-14", 15: "xxl:ui-col-start-15", 16: "xxl:ui-col-start-16", 17: "xxl:ui-col-start-17", 18: "xxl:ui-col-start-18", 19: "xxl:ui-col-start-19", 20: "xxl:ui-col-start-20", 21: "xxl:ui-col-start-21", 22: "xxl:ui-col-start-22", 23: "xxl:ui-col-start-23" } } }), nD = (0, s.F)("", { variants: { sm: { full: "ui-col-end-full", main: "ui-col-end-main", 1: "ui-col-end-1", 2: "ui-col-end-2", 3: "ui-col-end-3", 4: "ui-col-end-4", 5: "ui-col-end-5", 6: "ui-col-end-6", 7: "ui-col-end-7", 8: "ui-col-end-8", 9: "ui-col-end-9", 10: "ui-col-end-10" }, md: { full: "md:ui-col-end-full", main: "md:ui-col-end-main", 1: "md:ui-col-end-1", 2: "md:ui-col-end-2", 3: "md:ui-col-end-3", 4: "md:ui-col-end-4", 5: "md:ui-col-end-5", 6: "md:ui-col-end-6", 7: "md:ui-col-end-7", 8: "md:ui-col-end-8", 9: "md:ui-col-end-9", 10: "md:ui-col-end-10", 11: "md:ui-col-end-11", 12: "md:ui-col-end-12", 13: "md:ui-col-end-13", 14: "md:ui-col-end-14", 15: "md:ui-col-end-15", 16: "md:ui-col-end-16", 17: "md:ui-col-end-17", 18: "md:ui-col-end-18", 19: "md:ui-col-end-19", 20: "md:ui-col-end-20", 21: "md:ui-col-end-21", 22: "md:ui-col-end-22", 23: "md:ui-col-end-23", 24: "md:ui-col-end-24" }, lg: { full: "lg:ui-col-end-full", main: "lg:ui-col-end-main", 1: "lg:ui-col-end-1", 2: "lg:ui-col-end-2", 3: "lg:ui-col-end-3", 4: "lg:ui-col-end-4", 5: "lg:ui-col-end-5", 6: "lg:ui-col-end-6", 7: "lg:ui-col-end-7", 8: "lg:ui-col-end-8", 9: "lg:ui-col-end-9", 10: "lg:ui-col-end-10", 11: "lg:ui-col-end-11", 12: "lg:ui-col-end-12", 13: "lg:ui-col-end-13", 14: "lg:ui-col-end-14", 15: "lg:ui-col-end-15", 16: "lg:ui-col-end-16", 17: "lg:ui-col-end-17", 18: "lg:ui-col-end-18", 19: "lg:ui-col-end-19", 20: "lg:ui-col-end-20", 21: "lg:ui-col-end-21", 22: "lg:ui-col-end-22", 23: "lg:ui-col-end-23", 24: "lg:ui-col-end-24" }, xl: { full: "xl:ui-col-end-full", main: "xl:ui-col-end-main", 1: "xl:ui-col-end-1", 2: "xl:ui-col-end-2", 3: "xl:ui-col-end-3", 4: "xl:ui-col-end-4", 5: "xl:ui-col-end-5", 6: "xl:ui-col-end-6", 7: "xl:ui-col-end-7", 8: "xl:ui-col-end-8", 9: "xl:ui-col-end-9", 10: "xl:ui-col-end-10", 11: "xl:ui-col-end-11", 12: "xl:ui-col-end-12", 13: "xl:ui-col-end-13", 14: "xl:ui-col-end-14", 15: "xl:ui-col-end-15", 16: "xl:ui-col-end-16", 17: "xl:ui-col-end-17", 18: "xl:ui-col-end-18", 19: "xl:ui-col-end-19", 20: "xl:ui-col-end-20", 21: "xl:ui-col-end-21", 22: "xl:ui-col-end-22", 23: "xl:ui-col-end-23", 24: "xl:ui-col-end-24" }, xxl: { full: "xxl:ui-col-end-full", main: "xxl:ui-col-end-main", 1: "xxl:ui-col-end-1", 2: "xxl:ui-col-end-2", 3: "xxl:ui-col-end-3", 4: "xxl:ui-col-end-4", 5: "xxl:ui-col-end-5", 6: "xxl:ui-col-end-6", 7: "xxl:ui-col-end-7", 8: "xxl:ui-col-end-8", 9: "xxl:ui-col-end-9", 10: "xxl:ui-col-end-10", 11: "xxl:ui-col-end-11", 12: "xxl:ui-col-end-12", 13: "xxl:ui-col-end-13", 14: "xxl:ui-col-end-14", 15: "xxl:ui-col-end-15", 16: "xxl:ui-col-end-16", 17: "xxl:ui-col-end-17", 18: "xxl:ui-col-end-18", 19: "xxl:ui-col-end-19", 20: "xxl:ui-col-end-20", 21: "xxl:ui-col-end-21", 22: "xxl:ui-col-end-22", 23: "xxl:ui-col-end-23", 24: "xxl:ui-col-end-24" } } }), nW = (0, s.F)("", { variants: { sm: { 1: "ui-row-start-1", 2: "ui-row-start-2", 3: "ui-row-start-3", 4: "ui-row-start-4", 5: "ui-row-start-5", 6: "ui-row-start-6", 7: "ui-row-start-7", 8: "ui-row-start-8", 9: "ui-row-start-9", 10: "ui-row-start-10", 11: "ui-row-start-11", 12: "ui-row-start-12" }, md: { 1: "md:ui-row-start-1", 2: "md:ui-row-start-2", 3: "md:ui-row-start-3", 4: "md:ui-row-start-4", 5: "md:ui-row-start-5", 6: "md:ui-row-start-6", 7: "md:ui-row-start-7", 8: "md:ui-row-start-8", 9: "md:ui-row-start-9", 10: "md:ui-row-start-10", 11: "md:ui-row-start-11", 12: "md:ui-row-start-12" }, lg: { 1: "lg:ui-row-start-1", 2: "lg:ui-row-start-2", 3: "lg:ui-row-start-3", 4: "lg:ui-row-start-4", 5: "lg:ui-row-start-5", 6: "lg:ui-row-start-6", 7: "lg:ui-row-start-7", 8: "lg:ui-row-start-8", 9: "lg:ui-row-start-9", 10: "lg:ui-row-start-10", 11: "lg:ui-row-start-11", 12: "lg:ui-row-start-12" }, xl: { 1: "xl:ui-row-start-1", 2: "xl:ui-row-start-2", 3: "xl:ui-row-start-3", 4: "xl:ui-row-start-4", 5: "xl:ui-row-start-5", 6: "xl:ui-row-start-6", 7: "xl:ui-row-start-7", 8: "xl:ui-row-start-8", 9: "xl:ui-row-start-9", 10: "xl:ui-row-start-10", 11: "xl:ui-row-start-11", 12: "xl:ui-row-start-12" }, xxl: { 1: "xxl:ui-row-start-1", 2: "xxl:ui-row-start-2", 3: "xxl:ui-row-start-3", 4: "xxl:ui-row-start-4", 5: "xxl:ui-row-start-5", 6: "xxl:ui-row-start-6", 7: "xxl:ui-row-start-7", 8: "xxl:ui-row-start-8", 9: "xxl:ui-row-start-9", 10: "xxl:ui-row-start-10", 11: "xxl:ui-row-start-11", 12: "xxl:ui-row-start-12" } } }), nG = (0, s.F)("", { variants: { sm: { 2: "ui-row-end-2", 3: "ui-row-end-3", 4: "ui-row-end-4", 5: "ui-row-end-5", 6: "ui-row-end-6", 7: "ui-row-end-7", 8: "ui-row-end-8", 9: "ui-row-end-9", 10: "ui-row-end-10", 11: "ui-row-end-11", 12: "ui-row-end-12" }, md: { 2: "md:ui-row-end-2", 3: "md:ui-row-end-3", 4: "md:ui-row-end-4", 5: "md:ui-row-end-5", 6: "md:ui-row-end-6", 7: "md:ui-row-end-7", 8: "md:ui-row-end-8", 9: "md:ui-row-end-9", 10: "md:ui-row-end-10", 11: "md:ui-row-end-11", 12: "md:ui-row-end-12" }, lg: { 2: "lg:ui-row-end-2", 3: "lg:ui-row-end-3", 4: "lg:ui-row-end-4", 5: "lg:ui-row-end-5", 6: "lg:ui-row-end-6", 7: "lg:ui-row-end-7", 8: "lg:ui-row-end-8", 9: "lg:ui-row-end-9", 10: "lg:ui-row-end-10", 11: "lg:ui-row-end-11", 12: "lg:ui-row-end-12" }, xl: { 2: "xl:ui-row-end-2", 3: "xl:ui-row-end-3", 4: "xl:ui-row-end-4", 5: "xl:ui-row-end-5", 6: "xl:ui-row-end-6", 7: "xl:ui-row-end-7", 8: "xl:ui-row-end-8", 9: "xl:ui-row-end-9", 10: "xl:ui-row-end-10", 11: "xl:ui-row-end-11", 12: "xl:ui-row-end-12" }, xxl: { 2: "xxl:ui-row-end-2", 3: "xxl:ui-row-end-3", 4: "xxl:ui-row-end-4", 5: "xxl:ui-row-end-5", 6: "xxl:ui-row-end-6", 7: "xxl:ui-row-end-7", 8: "xxl:ui-row-end-8", 9: "xxl:ui-row-end-9", 10: "xxl:ui-row-end-10", 11: "xxl:ui-row-end-11", 12: "xxl:ui-row-end-12" } } }); function nU({ children: e, className: r, colEnd: t, colStart: i, Element: n = "div", rowEnd: o, rowStart: a, span: C, ...u }) { let { sm: d, md: c, lg: h, xl: f, xxl: _ } = C || {}, { sm: p, md: m, lg: x, xl: g, xxl: v } = i || {}, { sm: L, md: b, lg: y, xl: w, xxl: j } = t || {}, { sm: k, md: M, lg: H, xl: V, xxl: Z } = a || {}, { sm: N, md: R, lg: S, xl: P, xxl: I } = o || {}; return (0, l.jsx)(n, { className: (0, s.cx)(nF({ sm: d, md: c, lg: h, xl: f, xxl: _ }), nT({ sm: p, md: m, lg: x, xl: g, xxl: v }), nD({ sm: L, md: b, lg: y, xl: w, xxl: j }), nW({ sm: k, md: M, lg: H, xl: V, xxl: Z }), nG({ sm: N, md: R, lg: S, xl: P, xxl: I }), r), "data-cy": "gridItem_div", ...u, children: e }) } function n$({ children: e, className: r, enter: t = !1, exit: n = !1, margin: o = "0% 0% -95% 0%" }) { let a = r3(), s = (0, i.useRef)(null), C = (0, _.W)(s, { margin: o }), u = null == a ? void 0 : a.setInverse; return (0, i.useEffect)(() => { u && u(C ? t : n) }, [t, n, C, u]), (0, l.jsx)("div", { className: r, ref: s, children: e }) } function nq({ as: e, children: r, className: t, external: n, hideArrow: o = !1, href: a = "", id: C, replace: u, scroll: d, shallow: c, onClick: h, ...f }) { let _ = (0, i.useContext)(r5), p = n || !(null != _ && _.LinkComponent) ? "a" : _.LinkComponent, m = n && !o; return (0, l.jsx)("li", { className: "ui-list-none ui-h-full", children: (0, l.jsxs)(p, { as: e, className: (0, s.cx)(t, { "ui-relative ui-inline": m }), "data-cy": C, "data-menu-link": !0, href: a, id: C, onClick: h, replace: u, scroll: d, shallow: c, tabIndex: 0, ...f, children: [r, m ? (0, l.jsx)(t$, { "aria-hidden": "true", className: "ui-absolute ui-inline ui--rotate-45 ui-translate-x-2 ui-translate-y-[0.375rem]", "data-cy": "nav-link-arrow" }) : null] }) }) } function nK({ amount: e, className: r = "", currencyCode: t, currencyCodeStyles: i = "", fractionDigits: n, showCurrency: o = !1 }) { let [a] = (0, p.s)(), s = a.formatCurrency(e, { currency: t, form: o ? "explicit" : "short", precision: n }), C = s.split(" "); if (C.length > 1 && i && o) { let [e, ...t] = C; return (0, l.jsxs)(l.Fragment, { children: [(0, l.jsxs)("span", { className: r, children: [e, "\xa0"] }), (0, l.jsx)("span", { className: i, children: t })] }) } return (0, l.jsx)(l.Fragment, { children: s }) } function nX({ currencyCode: e, currencyCodeStyles: r, className: t, discount: n = 0, discountStyles: o, discountedPrice: a, price: C, priceCompare: u = !1, stacked: d = !1, showCurrency: c, showZeroAsFree: h = !0, ...f }) { let { fallbackCurrencyCode: _, freeMessage: p } = (0, i.useContext)(te), m = null != e ? e : _, x = Number(C), g = a ? { ...a } : { amount: Math.max(x - n, 0), currencyCode: m }, v = h && p && 0 === g.amount, L = 2 * (x % 1 != 0), b = 2 * (g.amount % 1 != 0), y = u && x - g.amount > 0; return (0, l.jsxs)("span", { className: (0, s.cx)(t, { block: u && d, "ui-inline-flex ui-gap-2": u && !d }), "data-cy": "sormus-price", ...f, children: [(0, l.jsx)("span", { "data-cy": n && u ? "product-detail-discount-price" : "product-detail-price", children: v ? p : (0, l.jsx)(nK, { amount: g.amount, currencyCode: g.currencyCode, currencyCodeStyles: r, fractionDigits: b, showCurrency: c }) }), y && !r ? (0, l.jsx)("del", { className: (0, s.cx)("ui-line-through", o, { "ui-block": d }), "data-cy": "product-detail-regular-price", children: (0, l.jsx)(nK, { amount: x, currencyCode: m, currencyCodeStyles: r, fractionDigits: L, showCurrency: c }) }) : null, y && r ? (0, l.jsx)("span", { className: (0, s.cx)(o, { "ui-block": d }), "data-cy": "product-detail-regular-price", children: (0, l.jsx)(nK, { amount: x, className: "ui-line-through", currencyCode: m, currencyCodeStyles: r, fractionDigits: L, showCurrency: c }) }) : null] }) } function nJ({ hex: e = "#081C2D", id: r = "default-gradient", opacity: t = 1, position: i = [50, 50], shape: n = "ellipse", size: o = 40, className: a }) { let C, u, d, c, h, { r: f, g: _, b: p, a: m } = (C = /^#?(?<temp3>[a-f\d]{2})(?<temp2>[a-f\d]{2})(?<temp1>[a-f\d]{2})$/i.exec(e)) ? { r: parseInt(C[1], 16), g: parseInt(C[2], 16), b: parseInt(C[3], 16), a: t } : { r: 0, g: 0, b: 0, a: 0 }; return (0, l.jsx)("div", { className: (0, s.cx)("ui-absolute ui-w-full ui-h-full ui-top-0 ui-left-0 ui-pointer-events-none", a), "data-cy": "radialGradient_div", id: r, style: (u = `${i[0]}%`, d = `${i[1]}%`, c = `rgba(${f}, ${_}, ${p}, ${m})`, h = `${o}%`, { backgroundImage: `radial-gradient(${n} at ${u} ${d}, ${c} 0px, transparent ${h})` }) }) } nU.displayName = "GridItem", G(), n$.displayName = "InverseHeader", G(), nq.displayName = "NavLinkV3", G(), G(), nK.displayName = "FormattedPrice", nX.displayName = "Price", G(), G(), nJ.displayName = "RadialGradient", G(), G(); var nY = (0, i.createContext)(null); function nQ({ value: e, children: r }) { return (0, l.jsx)(nY.Provider, { value: e, children: r }) } function n1({ className: e = "flex flex-col gap-2", "data-cy": r = "radio-group", "aria-describedby": t, "aria-errormessage": i, "aria-invalid": n, "aria-label": o, "aria-labelledby": a, "aria-required": C, children: u, ...d }) { return (0, l.jsx)(nQ, { value: d, children: (0, l.jsx)("div", { "aria-describedby": t, "aria-errormessage": i, "aria-invalid": n, "aria-label": o, "aria-labelledby": a, "aria-required": C, className: (0, s.cx)(e), "data-cy": r, role: "radiogroup", children: u }) }) } nQ.displayName = "RadioGroupProvider", n1.displayName = "RadioGroup", G(), G(); var n2 = (0, s.F)(["ui-gap-2", "ui-items-center"], { variants: { reverse: { true: ["ui-flex", "ui-h-full"], false: ["ui-inline-flex", "ui-justify-end"] }, stack: { true: null } }, compoundVariants: [{ reverse: !1, stack: !1, className: "ui-flex-row-reverse" }, { reverse: !0, stack: !1, className: "ui-justify-between" }, { reverse: !1, stack: !0, className: "ui-flex-col-reverse" }, { reverse: !0, stack: !0, className: "ui-flex-col ui-justify-center" }] }), n3 = (0, s.F)(["ui-flex ui-p-1 ui-rounded-full", "ui-bg-opacity-0 hover:ui-bg-opacity-10"], { variants: { disabled: { true: "hover:ui-cursor-not-allowed", false: "hover:ui-cursor-pointer" }, variant: { primary: null, secondary: null, unset: null } }, compoundVariants: [{ disabled: !1, variant: "primary", className: "ui-bg-sandstone-500" }, { disabled: !1, variant: "secondary", className: "ui-bg-blue-100" }, { disabled: !1, variant: "unset", className: "ui-bg-sandstone-500" }] }), n4 = (0, s.F)(["ui-relative", "ui-flex-shrink-0 ui-w-6 ui-h-6", "ui-border-2 ui-rounded-full", "ui-flex ui-justify-center ui-items-center"], { variants: { checked: { true: null }, disabled: { true: "ui-border-gray-300" }, reverse: { true: null }, stack: { true: null }, variant: { primary: null, secondary: null, unset: null } }, compoundVariants: [{ disabled: !1, variant: "primary", className: "ui-border-sandstone-500" }, { disabled: !1, checked: !0, variant: "primary", className: "ui-border-sandstone-500 ui-bg-sandstone-500" }, { disabled: !1, variant: "secondary", className: "ui-border-blue-100" }, { disabled: !1, checked: !0, variant: "secondary", className: "ui-border-blue-100 ui-bg-blue-100" }, { disabled: !1, variant: "unset", className: "ui-border-sandstone-500" }, { disabled: !0, checked: !0, className: "ui-bg-gray-300" }, { reverse: !1, stack: !1, className: "ui-self-start" }] }), n5 = (0, s.F)(["ui-block ui-h-5 ui-w-5 ui-rounded-full", "ui-bg-transparent"], { variants: { checked: { true: "ui-border-[3px] ui-border-white" } } }), n6 = (0, s.F)(["ui-absolute ui-opacity-0 ui-top-0"]); function n7({ checked: e, className: r, "data-cy": t = "radio", inputProps: n = {}, label: o, labelProps: a = {}, onChange: C, stack: u = !1, reverse: d = !1, value: c, variant: h = "primary", ...f }) { let _ = (0, i.useContext)(nY), p = (null == _ ? void 0 : _.value) && _.value === c, { checked: m = !1, disabled: x = !1, name: g } = { ...f, ..._, checked: p || e }, v = { radioContainer: (0, s.cx)(n2({ className: r, reverse: d, stack: u })), radio: (0, s.cx)(n4({ checked: m, disabled: x, reverse: d, stack: u, variant: h })), checkmark: (0, s.cx)(n5({ checked: m })), hoverSelection: (0, s.cx)(n3({ disabled: x, variant: h })), input: (0, s.cx)(n6()) }; return (0, l.jsxs)(nb, { Element: "label", className: v.radioContainer, color: x ? "disabled" : "inherit", "data-cy": t, children: [o ? (0, l.jsx)(nb, { Element: "span", color: "inherit", "data-cy": `${t}-label`, ...a, children: o }) : null, (0, l.jsx)("span", { className: v.hoverSelection, children: (0, l.jsxs)("span", { className: v.radio, "data-cy": `${t}-check`, children: [(0, l.jsx)("span", { "aria-hidden": !0, className: v.checkmark, "data-cy": `${t}-svg`, hidden: !m }), (0, l.jsx)("input", { "data-cy": `${t}-input`, ...n, checked: m, className: v.input, disabled: x, name: g, onChange: e => { "function" == typeof C && C(e), "function" == typeof (null == _ ? void 0 : _.onChange) && _.onChange(e) }, type: "radio", value: c })] }) })] }) } function n8(e) { let { stockStatus: r, value: t } = e, n = (0, i.useContext)(nx), o = (0, i.useRef)(null), a = (0, i.useId)(), { inputProps: C, isSelected: u } = (0, c.z)(e, n, o); return (0, l.jsxs)("label", { "aria-label": t, className: (0, s.cx)("ui-size-full ui-aspect-square ui-rounded-full ui-flex ui-items-center ui-justify-center ui-relative", { 'after:ui-content-[""] after:ui-border-sandstone-500 after:ui-border-2 after:ui-size-full after:ui-rounded-full after:ui-absolute': u, "ui-border-gray-400 ui-border": !u, "background-linear-to-tl ui-bg-gray-200 !ui-cursor-not-allowed": r === lE }), "data-cy": `finish-radio-selector-${t}`, "data-stock-status": r, "data-value": t, htmlFor: a, children: [(0, l.jsx)("input", { ...C, checked: u, className: "ui-peer ui-absolute ui-appearance-none", "data-cy": `finish-radio-selector-input-${t}`, disabled: r === lE, id: a, ref: o, type: "radio" }), r === lF && (0, l.jsx)("div", { className: "ui-absolute ui--bottom-2 ui--right-2", "data-cy": "sizeButtonLowStockIcon", children: (0, l.jsx)(iR, { className: "ui-text-red-600" }) }), (0, l.jsx)("div", { "data-cy": "size-container", children: t })] }) } function n9({ initialSelectedSize: e, label: r, onChange: t, ringSizesData: n }) { let [o, a] = (0, i.useState)(e ? e.toString() : null); return n.length ? (0, l.jsx)(ng, { hideLabel: !0, label: r, onChange: e => { a(e), null == t || t(e) }, value: o, children: (0, l.jsx)("div", { className: "ui-grid ui-grid-cols-4 ui-gap-5", children: n.map(e => (0, l.jsx)(n8, { "aria-label": String(e.size), stockStatus: e.stockStatus, value: String(e.size) }, e.size)) }) }) : null } n7.displayName = "RadioButton", G(), G(), n8.displayName = "RingSizeSelector", G(), n9.displayName = "RingSizeSelectors", G(), G(); var n0 = "ui-rounded-lg ui-overflow-hidden", oe = (0, s.F)(["ui-appearance-none ui-font-sans ui-text-base", "ui-bg-transparent ui-z-10", "ui-truncate", "ui-relative ui-block ui-h-10 ui-w-full", "ui-pl-4 ui-pr-8 ui-py-2", n0, "ui-border", "focus:ui-border-gray-500 disabled:ui-border-gray-300", "ui-transition-colors"], { variants: { error: { true: "ui-border-red", false: "ui-border-gray-300" } } }), or = (0, s.F)(["ui-relative", n0, "ui-bg-white"]), ot = (0, s.F)(["ui-absolute ui-right-4 ui-top-5", "ui-transform -ui-translate-y-1/2", "ui-pointer-events-none"]); function oi({ className: e, "data-cy": r = "select", disabled: t, error: i, hideEmpty: n, options: o = [], ...a }) { let C = { wrapper: (0, s.cx)(or()), control: (0, s.cx)(oe({ error: i })), icon: (0, s.cx)(ot()) }; return (0, l.jsxs)(nb, { Element: "div", className: (0, s.cx)(e, C.wrapper), color: t ? "disabled" : "inherit", "data-cy": `${r}-wrap`, children: [(0, l.jsxs)("select", { ...a, className: C.control, "data-cy": r, disabled: t, children: [!n && (0, l.jsx)("option", { value: "", children: "\xa0" }), o.map(({ value: e, label: r }) => (0, l.jsx)("option", { value: e, children: r }, `option-${r}`))] }), (0, l.jsx)(t2, { className: C.icon, color: "inherit", "data-cy": `${r}-icon` })] }) } oi.displayName = "Select", G(), G(); var ol = (0, s.F)(["ui-flex ui-flex-col-reverse", "ui-overflow-hidden", "ui-border ui-rounded-lg", "ui-bg-white", "focus-within:ui-border-gray-500", "ui-transition-colors"], { variants: { error: { true: "ui-border-red", false: "ui-border-gray-300" } } }), on = (0, s.F)(["ui-appearance-none ui-bg-white ui-text-base ui-font-sans ui-resize-none", "ui-h-28 ui-w-full", "ui-px-4 ui-pt-2", "disabled:ui-text-gray-300"], { variants: { hasCounter: { true: "ui-pb-0", false: "ui-pb-2" } } }), oo = (0, s.F)(["ui-flex ui-items-center ui-justify-end", "ui-h-10 ui-px-4", "ui-text-sm ui-opacity-50", "ui-select-none"]); function oa({ className: e, "data-cy": r = "textarea", error: t, maxLength: n, onChange: o = () => null, ...a }) { var C; let u = !!n, d = { wrapper: (0, s.cx)(ol({ error: t })), control: (0, s.cx)(on({ hasCounter: u })), counter: (0, s.cx)(oo()) }, [c, h] = (0, i.useState)((null == (C = a.value) ? void 0 : C.toString().length) || 0), f = (0, i.useRef)(null); return (0, l.jsxs)("div", { className: d.wrapper, "data-cy": `${r}-wrap`, children: [!!u && (0, l.jsxs)("output", { className: d.counter, "data-cy": `${r}-counter`, onClick: () => { var e; null == (e = f.current) || e.focus() }, role: "presentation", children: [c, "/", n] }), (0, l.jsx)("textarea", { ...a, className: (0, s.cx)(e, d.control), "data-cy": r, maxLength: u ? n : void 0, onChange: e => { h(e.target.value.length), o(e) }, ref: f })] }) } oa.displayName = "TextArea", G(), G(); var os = (0, s.F)(["ui-appearance-none ui-bg-white ui-font-sans ui-text-base", "ui-relative ui-block ui-h-10 ui-w-full", "ui-px-4 ui-py-2", "ui-border ui-rounded-lg", "focus:ui-border-gray-500 disabled:ui-border-gray-300", "ui-transition-colors"], { variants: { error: { true: "ui-border-red", false: "ui-border-gray-300" } } }); function oC({ className: e, error: r, type: t = "text", ...i }) { return (0, l.jsx)("input", { ...i, className: (0, s.cx)(e, os({ error: r })), type: t }) } function ou({ className: e, current: r, diameter: t = 24, strokeWidth: i = 3, total: n, variant: o = "dark", ...a }) { let C = t / 2, u = (t - i) / 2, c = Math.ceil(2 * Math.PI * u), h = Math.abs(Math.ceil(c / 100 * (r / n * 100 - 100))); return (0, l.jsxs)("svg", { className: (0, s.cx)(e, "-ui-rotate-90"), "data-cy": "circular_progress", fill: "none", height: t, viewBox: `0 0 ${t} ${t}`, width: t, xmlns: "http://www.w3.org/2000/svg", ...a, children: [(0, l.jsx)("circle", { className: (0, s.cx)("ui-opacity-20", { "ui-stroke-sandstone-500": "dark" === o, "ui-stroke-sandstone-200": "light" === o }), cx: C, cy: C, "data-cy": "circular_progress_background", r: u, strokeWidth: i }), (0, l.jsx)(d.P.circle, { animate: { strokeDashoffset: h }, className: (0, s.cx)({ "ui-stroke-sandstone-500": "dark" === o, "ui-stroke-sandstone-200": "light" === o }), cx: C, cy: C, "data-cy": "circular_progress_progress", r: u, strokeDasharray: c, strokeDashoffset: h, strokeWidth: i })] }) } oC.displayName = "TextInput", G(), ou.displayName = "ProgressCircleV3", G(), G(), G(); var od = (0, s.F)(["ui-flex ui-flex-col", "ui-overflow-x-hidden"]), oc = (0, s.F)("ui-transition-all ui-origin-top-left ui-z-10", { variants: { controlName: { RadioGroup: "", Select: "ui-pr-8", TextArea: "", TextInput: "" }, isEmpty: { false: "ui-w-full", true: ["ui-scale-125 ui-w-10/12 sm:ui-w-9/12", "ui-pl-3", "ui-translate-y-7"] }, hideLabel: { true: "ui-sr-only" }, isStaticLabel: { true: "ui-pb-1" } } }), oh = (0, s.F)("ui-block ui-overflow-hidden ui-truncate", { variants: { hasError: { true: "ui-text-red" } } }), of = "ui-flex ui-items-center", o_ = (0, s.F)([of, "ui-pt-1 ui-opacity-50"]), op = (0, s.F)([of, "ui-min-h-6"], { variants: { hideError: { true: "ui-hidden" } } }); function om({ className: e, description: r, disabled: t, errorMessage: n, hideError: o, hideLabel: a, id: C, label: u, name: d, placeholderLabel: c, required: h, reset: f, staticLabel: _, value: p, onChange: m, onFocus: x, onBlurCapture: g, ...v }) { let L = !!n, b = (0, i.useId)(), y = null != C ? C : `input-${b}`, w = `${y}-error`, j = `${y}-description`, k = null != _ ? _ : ["RadioGroup"].includes(v.control), M = !!u && !a && !k, [H, V] = (0, i.useState)(!p && M), Z = { description: (0, s.cx)(o_()), error: (0, s.cx)(op({ hideError: o })), formControl: (0, s.cx)(od()), label: (0, s.cx)(oc({ controlName: v.control, hideLabel: a, isEmpty: H, isStaticLabel: k })), labelText: (0, s.cx)(oh({ hasError: L })) }; (0, i.useEffect)(() => { M && f && !p && V(!0) }, [M, f, p]), (0, i.useEffect)(() => { M && p && V(!1) }, [M, p]); let N = { "aria-describedby": r ? j : void 0, "aria-errormessage": L ? w : void 0, "aria-invalid": L, "aria-required": h, "data-cy": `field-${d}`, disabled: t, id: y, name: d, value: p, onBlurCapture: e => { M && V(!e.target.value), null == g || g(e) }, onChange: e => { M && V(!1), m(e) }, onFocus: e => { M && V(!1), null == x || x(e) } }; return (0, l.jsxs)("div", { className: (0, s.cx)(e, Z.formControl), "data-cy": `form-control-${d}`, children: [!!u && (0, l.jsx)("label", { className: Z.label, "data-cy": `field-${d}-label`, htmlFor: y, children: (0, l.jsxs)(nb, { Element: "span", className: Z.labelText, color: t ? "disabled" : "inherit", variant: k ? void 0 : "eyebrow-small", children: [H && c ? c : u, !!h && "*"] }) }), "RadioGroup" === v.control && (0, l.jsx)(n1, { ...v, ...N }), "Select" === v.control && (0, l.jsx)(oi, { ...v, ...N }), "TextArea" === v.control && (0, l.jsx)(oa, { ...v, ...N }), "TextInput" === v.control && (0, l.jsx)(oC, { ...v, ...N }), !!r && (0, l.jsx)(nb, { className: Z.description, color: "inherit", "data-cy": `field-${d}-description`, id: j, variant: "body-small", children: r }), (0, l.jsx)(nb, { className: Z.error, color: "error", "data-cy": `field-${d}-error`, id: w, variant: "eyebrow-small", children: n })] }) } om.displayName = "FormControl", G(), G(); var ox = (0, i.forwardRef)(function ({ onClick: e, open: r }, t) { return (0, l.jsxs)("button", { "aria-controls": "navMenu", "aria-expanded": r, className: (0, s.cx)("ui-bg-transparent ui-relative ui-text-inherit", "ui-h-10 ui-w-10 lg:ui-h-12 lg:ui-w-12", "ui-rounded-full ui-border-solid ui-border"), "data-cy": "nav_hamburger", id: "hamburger", onClick: e, ref: t, type: "button", children: [(0, l.jsx)("span", { className: "ui-sr-only", children: r ? (0, l.jsx)(l1, { id: "header_hamburger_close_sr_label_2024" }) : (0, l.jsx)(l1, { id: "header_hamburger_open_sr_label_2024" }) }), (0, l.jsx)("span", { "aria-hidden": "true", className: (0, s.cx)("hamburgerLinesV3 ui-block ui-h-4 ui-w-4", "ui-absolute ui-left-1/2 ui-top-1/2 ui-transform ui--translate-x-1/2 ui--translate-y-1/2", { active: r }) })] }) }); ox.displayName = "HamburgerV3"; var og = (0, i.forwardRef)(function ({ className: e = "", hideLinks: r, onClick: t, open: i }, n) { return (0, l.jsxs)("div", { className: (0, s.cx)("ui-flex ui-items-center ui-gap-3", { "lg:ui-hidden": r }, e), children: [(0, l.jsx)(nb, { Element: "span", align: "right", "aria-hidden": "true", className: "ui-hidden lg:ui-block", color: "inherit", variant: "body-small", weight: "bold", children: l2(i ? "close" : "menu") }), (0, l.jsx)(ox, { onClick: t, open: i, ref: n })] }) }); og.displayName = "HamburgerBox", G(); var ov = (0, s.F)("[&>li]ui-list-[inherit]", { variants: { Element: { ol: "", ul: "" }, condensed: { true: "", false: "" }, unstyled: { true: "", false: "" } }, compoundVariants: [{ condensed: !0, unstyled: !0, className: "ui-my-1 [&>li]ui-my-1 ui-list-none" }, { condensed: !0, unstyled: !1, className: "ui-my-1 [&>li]ui-my-1" }, { condensed: !1, unstyled: !0, className: "ui-list-none" }, { condensed: !1, unstyled: !1, className: "[&>li]ui-my-2" }, { Element: "ol", unstyled: !1, className: "ui-list-decimal ui-pl-8" }, { Element: "ul", unstyled: !1, className: "ui-list-disc ui-pl-8" }] }); function oL({ Element: e = "ul", condensed: r = !1, unstyled: t = !1, children: i, className: n = "", ...o }) { return (0, l.jsx)(nb, { Element: e, className: ov({ className: n, condensed: r, Element: e, unstyled: t }), ...o, children: i }) } oL.displayName = "List", G(), G(); var ob = (0, s.F)("ui-rounded-full ui-text-center ui-inline-block ui-transition ui-items-center ui-gap-x-2 ui-inline-flex", { variants: { variant: { primary: "ui-bg-[#000000] ui-bg-opacity-40 ui-pointer-events-none ui-text-sandstone-200 ui-backdrop-blur-sm", "transparent-light": "ui-bg-white ui-bg-opacity-40 ui-pointer-events-none ui-text-sandstone-500 ui-backdrop-blur-sm" }, size: { none: "ui-p-0", small: "ui-py-2 ui-px-4", medium: "ui-py-2 ui-px-4 lg:ui-py-3 lg:ui-px-6", large: " ui-py-4 ui-px-6" } }, defaultVariants: { variant: "primary", size: "large" } }); function oy({ iconTagText: e, className: r = "", icon: t, size: i, variant: n, ...o }) { return (0, l.jsxs)("div", { className: ob({ size: i, variant: n, className: r }), ...o, "data-cy": "icon-tag-container", children: [t, (0, l.jsx)(nb, { color: "inherit", "data-cy": "icon-tag-text", variant: "base", weight: "medium", children: e })] }) } function ow({ additionalContent: e, childIds: r = [], description: t, id: n, showContentOnExpand: o, title: a }) { var C; let u = (0, i.useContext)(nx), c = (null == u ? void 0 : u.selectedValue) === n, h = o && (r.includes(null != (C = null == u ? void 0 : u.selectedValue) ? C : "") || c), f = null != h ? h : !o, [_, p] = (0, i.useState)(c), x = { animate: { height: "auto", opacity: 1 }, exit: { height: h ? 0 : "auto", opacity: +!h }, initial: { height: h ? 0 : "auto", opacity: +!h }, transition: { duration: .3, type: "tween" }, onAnimationComplete: ({ opacity: e }) => { p(1 === e) } }; return (0, l.jsxs)(l.Fragment, { children: [(0, l.jsxs)("div", { className: "ui-flex ui-justify-between ui-gap-2 ui-items-center ui-w-full ui-text-gray-600", children: [(0, l.jsxs)("div", { children: [(0, l.jsx)(nb, { variant: "body-small", weight: "black", children: a }), (0, l.jsx)(m.N, { children: f && t ? (0, l.jsx)(d.P.div, { ...x, children: (0, l.jsx)(nb, { variant: "body-small", children: t }, n) }, n) : null })] }), (0, l.jsx)("div", { className: "ui-flex ui-justify-end", children: (0, l.jsx)(nO, { chosen: c, className: (0, s.cx)("ui-size-5 ui-transition-opacity", { "ui-opacity-0": !_, "ui-opacity-100": _ }) }) })] }), (0, l.jsx)(m.N, { children: f && e ? (0, l.jsx)(d.P.div, { ...x, children: (0, l.jsx)("div", { className: "ui-mt-2", children: e }) }, n) : null })] }) } function oj({ className: e = "", inventoryMessage: r, message: t, ...i }) { return (0, l.jsxs)("div", { className: (0, s.cx)("ui-mt-6", e), children: [(0, l.jsx)(n9, { ...i }), t ? (0, l.jsx)(nb, { Element: "p", className: "ui-text-gray-450 ui-mt-4 ui-italic", color: "unset", variant: "eyebrow-small", children: t }) : null, r] }) } function ok({ active: e, alt: r, color: t, currencyCode: n, discount: o, disabled: a, finish: s, isSelected: C, price: u, scrollRef: d, src: c }) { var h; let f = (0, i.useContext)(r5), _ = null != (h = null == f ? void 0 : f.ImageComponent) ? h : "img", p = null != f && f.ImageComponent ? { priority: !0 } : {}; return (0, l.jsx)("div", { "data-cy": "finish-step", ref: e && C ? d : null, children: (0, l.jsxs)(nP, { className: "ui-flex ui-items-stretch ui-gap-1", "data-cy": `choose-button-${s}`, isDisabled: !!a, value: s, children: [(0, l.jsx)("div", { className: "ui-relative ui-w-20 ui-shrink-0 ui-grow-0 ui-overflow-hidden ui-rounded-l", children: (0, l.jsx)(_, { alt: r, className: "ui-absolute ui-size-full ui-object-cover", height: 64, ...p, src: c, width: 80 }) }), (0, l.jsxs)("div", { className: "ui-flex ui-flex-1 ui-shrink ui-items-center ui-justify-between ui-overflow-hidden ui-py-5 ui-pl-1 ui-pr-5 md:ui-pl-5", children: [(0, l.jsx)("p", { className: "ui-shrink ui-text-nowrap ui-text-sm md:ui-text-base", children: t }), (0, l.jsxs)("div", { className: "ui-flex ui-grow iui-tems-center ui-justify-end ui-gap-1", children: [(0, l.jsx)(nO, { chosen: C }), u ? (0, l.jsx)(nX, { className: "ui-text-sm md:ui-text-base", currencyCode: n, discount: o, price: u, priceCompare: !0, showZeroAsFree: !0 }) : null] })] })] }) }) } function oM({ currencyCode: e, initialSelectedFinish: r = "silver", label: t, onChange: n, ringFinishesData: o }) { var a, s; let [C, u] = (0, i.useState)(r), d = o.find(e => e.id === C), c = null != (a = null == d ? void 0 : d.finish) ? a : "", h = null == d ? void 0 : d.price, f = null != (s = null == d ? void 0 : d.discount) ? s : 0, _ = null == d ? void 0 : d.stockStatus; return (0, l.jsx)(nE, { label: t, onChange: e => { u(e), null == n || n(e) }, ringFinishesData: o, selectedFinish: C, children: (0, l.jsxs)("div", { className: "ui-flex ui-items-center", children: [(0, l.jsxs)(nb, { Element: "span", color: "gray", "data-cy": "ring-finish", children: [c, "\xa0 – \xa0"] }), _ !== lE && h ? (0, l.jsx)(nX, { className: "ui-text-gray-400 ui-text-sm md:ui-text-base", currencyCode: e, discount: f, price: h, priceCompare: !0, showZeroAsFree: !0 }) : null] }) }) } function oH({ hiddenHamburger: e, inverseHeader: r, onShoppingCartClick: t, shoppingCartCount: i }) { return (0, l.jsxs)("div", { className: (0, s.cx)("ui-flex ui-items-center ui-gap-3", { "ui-mr-1 sm:ui-mr-3": !e, "ui-mr-0": e }), children: [(0, l.jsxs)(nb, { Element: "span", align: "right", "aria-hidden": "true", className: "ui-hidden lg:ui-block", color: r ? "light" : "dark", variant: "body-small", weight: "bold", children: [(0, l.jsx)(l1, { id: "cart" }), ` (${i})`] }), (0, l.jsx)("div", { className: (0, s.cx)("ui-rounded-full ui-border-solid ui-border", "ui-flex ui-justify-center ui-items-center ui-relative", "ui-h-10 ui-w-10", "lg:ui-h-12 lg:ui-w-12", { "ui-border-sandstone-200 ui-text-sandstone-200": r, "ui-border-sandstone-500 ui-text-sandstone-500": !r }), "data-cy": "shopping-cart", children: (0, l.jsxs)("button", { className: "ui-flex ui-justify-center ui-items-center", onClick: t, type: "button", children: [(0, l.jsxs)("div", { className: (0, s.cx)("ui-text-inherit", { "ui-text-sandstone-200": r }), children: [(0, l.jsx)(lt, {}), (0, l.jsx)("span", { className: "ui-sr-only", children: (0, l.jsx)(l1, { id: "cart_count_sr_label", values: { count: i } }) })] }), !!i && (0, l.jsx)("div", { className: (0, s.cx)("ui-absolute ui-top-1 ui-right-1.5 ui-rounded-full ui-bg-blue-100", "ui-flex ui-justify-center ui-items-center", "ui-h-[0.6875rem] ui-w-[0.6875rem]", "lg:ui-hidden"), children: (0, l.jsx)(nb, { Element: "div", "aria-hidden": "true", className: "ui-text-[0.5rem] ui-font-normal ui-tracking-normal", color: "light", variant: "unset", children: i }) })] }) })] }) } function oV({ disabled: e, size: r, stockStatus: t }) { return (0, l.jsxs)(nP, { className: (0, s.cx)("ui-flex ui-justify-center ui-align-middle", { "ui-p-5": t === lT || t === lE, "ui-flex-col": t === lF, "background-linear-to-tl": t === lE }), "data-stock-status": t, isDisabled: e, value: r.toString(), children: [t === lF && (0, l.jsx)("div", { className: "ui-flex ui-justify-end ui-pr-1 ui-pt-1 ui-align-top", "data-cy": "sizeButtonLowStockIcon", children: (0, l.jsx)(iR, { className: "ui-text-red-600" }) }), (0, l.jsx)("div", { className: (0, s.cx)({ "ui-flex ui-justify-center ui-px-5 ui-pb-5 ui-pt-1 ui-align-middle": t === lF }), "data-cy": "size-container", children: r })] }) } oy.displayName = "IconTagV3", G(), G(), ow.displayName = "CardSelectorContents", G(), G(), oj.displayName = "CardSizeSelections", G(), ok.displayName = "RingFinishChoice", G(), oM.displayName = "RingFinishSelections", G(), oH.displayName = "ShoppingCartV3", G(), oV.displayName = "SizeChoice", G(); var oZ = (0, s.F)("ui-font-bold ui-py-2 ui-rounded-md ui-uppercase ui-inline-block", { variants: { variant: { black: "ui-bg-gray-600 ui-text-sandstone-200", blue: "ui-bg-slate-200 ui-text-sandstone-200", brown: "ui-bg-brown-600 ui-text-sandstone-200", darkSandstone: "ui-bg-neutral-700 ui-text-sandstone-200", green: "ui-bg-olive-800 ui-text-sandstone-200", lightSandstone: "ui-bg-sandstone-200", purple: "ui-bg-purple-700 ui-text-sandstone-200" }, size: { small: "ui-text-xs ui-px-3 ", medium: "ui-text-sm ui-px-4" } }, defaultVariants: { variant: "lightSandstone", size: "medium" } }); function oN({ variant: e, size: r, children: t }) { return (0, l.jsx)("div", { className: oZ({ variant: e, size: r }), "data-cy": "tag", children: (0, l.jsx)(nb, { color: "inherit", variant: "unset", weight: "bold", children: t }) }) } oN.displayName = "Tag", G(), G(); var oR = (0, s.F)("ui-overflow-auto ui-z-90 ui-max-h-[calc(100vh-225px)] ui-relative ui-inset-0 ui-transition ui-ease-in-out ui-duration-75 ui-w-full ui-flex-0", { variants: { variant: { lightest: "ui-bg-sandstone-100 ui-text-sandstone-500", light: "ui-bg-sandstone-200 ui-text-sandstone-500", dark: "ui-bg-sandstone-500 ui-text-sandstone-200", white: "ui-bg-white ui-text-sandstone-500" }, size: { small: "md:ui-w-1/2 md:ui-max-h-1/2", medium: "md:ui-w-9/12 md:ui-max-h-9/12", large: "md:ui-w-10/12 md:ui-max-h-[83%]", xlarge: "md:ui-w-full md:ui-max-h-full", full: "" }, padding: { small: "ui-p-4", medium: "ui-p-6", large: "ui-p-8", xlarge: "ui-p-10" }, rounded: { true: "ui-rounded-xl" } }, defaultVariants: { variant: "light", size: "medium", padding: "medium", rounded: !0 } }); function oS(e) { let { blur: r, className: t, children: n, padding: o, rounded: a, size: C, state: u, variant: d } = e, c = (0, i.useRef)(null), { modalProps: h, underlayProps: f } = (0, g.l)(e, u, c); return u.isOpen ? (0, l.jsx)(v.hJ, { children: (0, l.jsx)("div", { className: (0, s.cx)("ui-fixed ui-inset-0 ui-z-200 ui-bg-[#363531]/10 ui-duration-75 ui-ease-in ui-h-full ui-w-full", { "ui-backdrop-blur-[10px]": r }), ...f, "data-cy": "modalBackground", children: (0, l.jsx)("div", { className: (0, s.cx)({ "ui-fixed ui-inset-0 ui-z-[200] ui-h-full ui-w-full ui-flex ui-items-center ui-justify-center": u.isOpen }), children: (0, l.jsx)("div", { ...h, className: oR({ variant: d, size: C, padding: o, rounded: a, className: t }), ref: c, children: n }) }) }) }) : null } function oP({ className: e, onClick: r, triggerElement: t, ...n }) { let { focusProps: o, isFocusVisible: a } = (0, b.o)(), C = (0, i.cloneElement)(t, { ...(0, y.v)(o, n), className: (0, s.cx)("ui-size-10 ui-flex ui-items-center ui-justify-center", { "focus:ui-outline-none": !a }), onClick: r, ...n }); return (0, l.jsx)("div", { className: (0, s.cx)(e, "ui-translate-x-[13px] -ui-translate-y-[10px]"), children: C }) } G(), G(); var oI = (0, s.F)("ui-px-4 ui-h-fit", { variants: { variant: { lightest: "ui-bg-sandstone-100", light: "ui-bg-sandstone-200", dark: "ui-bg-sandstone-500", white: "ui-bg-white" }, padding: { small: "ui-pb-4", medium: "ui-pb-6", large: "ui-pb-8", xlarge: "ui-pb-10" } }, defaultVariants: { variant: "light", padding: "medium" } }), oO = (0, s.F)("ui-absolute ui-h-fit ui-w-full ui-bottom-[0%] ui-left-[0%]", { variants: { padding: { small: "-ui-mb-4", medium: "-ui-mb-6", large: "-ui-mb-8", xlarge: "-ui-mb-10" } }, defaultVariants: { padding: "medium" } }); function oA(e) { let { children: r, variant: t, onX: n, fixedFooter: o, padding: a } = e, C = (0, i.useRef)(null), u = (0, i.useRef)(null), [d, c] = (0, i.useState)(16), { dialogProps: h, titleProps: f } = (0, L.s)({ ...e, role: "dialog" }, C); return (0, i.useEffect)(() => { c(e => null !== u.current ? u.current.clientHeight + e : e) }, [u]), (0, l.jsxs)(l.Fragment, { children: [(0, l.jsx)("div", { className: "ui-sticky ui-top-[100%] ui-left-[0%] ui-z-[120]", children: (0, l.jsx)("div", { className: oO({ padding: a }), children: (0, l.jsx)("div", { className: oI({ variant: t, padding: a }), children: (0, l.jsx)("div", { className: "tailwind", ref: u, children: o }) }) }) }), (0, l.jsxs)("div", { ...h, className: (0, s.cx)("focus:ui-outline-none"), ref: C, children: [(0, l.jsx)("div", { className: "ui-flex ui-justify-end", children: (0, l.jsx)(oP, { className: "ui-fixed ui-w-fit", "data-cy": "xModalTrigger", onClick: n, triggerElement: (0, l.jsxs)("button", { "data-cy": "closeButton", type: "button", children: [(0, l.jsx)("span", { className: "ui-sr-only", children: l2("close") }), (0, l.jsx)(tq, { className: (0, s.cx)({ "ui-text-sandstone-200": "dark" === t }, { "ui-text-sandstone-500": "light" === t || "white" === t }) })] }) }) }), (0, l.jsx)("div", { className: (0, s.cx)("tailwind ui-pt-4 ui-px-4"), style: { paddingBottom: `${d}px` }, children: (0, l.jsx)("div", { className: "tailwind", children: i.Children.map(r, e => (0, l.jsx)("div", { ...f, children: e })) }) })] })] }) } function oz({ blur: e = !0, className: r, children: t, variant: i = "light", size: n = "medium", padding: o = "medium", rounded: a, fixedFooter: s, onClickXFunc: C, ...u }) { let d = (0, x.T)(u); return (0, l.jsx)("div", { children: (0, l.jsx)(oS, { blur: e, className: r, isDismissable: !0, padding: o, rounded: a, size: n, state: d, variant: i, children: (0, l.jsx)(oA, { fixedFooter: s, onX: () => { d.close(), C && C() }, padding: o, variant: i, children: t }) }) }) } function oB({ children: e, className: r, ...t }) { let n = (0, i.useRef)(null), { dialogProps: o, titleProps: a } = (0, L.s)(t, n); return (0, l.jsx)("div", { ...o, className: (0, s.cx)("ui-w-full ui-overflow-y-auto !ui-outline-none", r), "data-cy": "modal-v4-dialog", ref: n, children: (0, i.cloneElement)(e({ titleProps: a })) }) } function oE({ controls: e, dragHandleClassName: r, state: t, variant: i }) { return (0, l.jsxs)(l.Fragment, { children: [(0, l.jsxs)("button", { className: (0, s.cx)("ui-flex ui-w-full ui-cursor-grab ui-touch-none ui-items-center ui-justify-center ui-rounded-t-[20px] ui-p-5 active:ui-cursor-grabbing active:ui-bg-sandstone-400 md:ui-hidden", r), "data-cy": "modal-drag-handle", onPointerDown: r => { e.start(r) }, type: "button", children: [(0, l.jsx)("span", { className: "ui-sr-only", children: l2("close") }), (0, l.jsx)("span", { className: "ui-block ui-h-2 ui-w-14 ui-cursor-grab ui-touch-none ui-rounded-full ui-bg-[#d6caba] active:ui-cursor-grabbing" })] }), (0, l.jsx)("div", { className: (0, s.cx)("ui-hidden md:ui-block md:ui-absolute md:ui-z-20", { "md:ui-top-4 md:ui-right-6": "small" === i, "md:ui-top-8 md:ui-right-8": "large" === i || "extra-large" === i }), "data-cy": "modal-close-button-container", children: (0, l.jsxs)("button", { className: "ui-relative ui-h-8 ui-w-8 ui-rounded-full ui-text-gray-400 hover:ui-text-gray-500 ui-bg-inherit", "data-cy": "modal-close-button", onClick: t.close, type: "button", children: [(0, l.jsx)("span", { className: "ui-sr-only", children: l2("close") }), (0, l.jsx)("span", { className: "ui-block ui-absolute ui-inset-0 ui-rounded-full ui-border-[1.5px] ui-border-current" }), (0, l.jsx)("span", { className: "ui-block ui-absolute ui-top-1/2 ui-left-1/2 ui-h-[1.5px] ui-w-5 -ui-translate-x-1/2 -ui-translate-y-1/2 ui-rotate-45 ui-transform ui-rounded-full ui-bg-current" }), (0, l.jsx)("span", { className: "ui-block ui-absolute ui-top-1/2 ui-left-1/2 ui-h-[1.5px] ui-w-5 -ui-translate-x-1/2 -ui-translate-y-1/2 -ui-rotate-45 ui-transform ui-rounded-full ui-bg-current" })] }) })] }) } function oF({ animated: e, animationDuration: r, backdropClassName: t, blur: n, children: o, className: a, dragHandleClassName: u, state: c, variant: h, ...f }) { let _ = (0, i.useRef)(null), p = (0, C.I)() || !e, { modalProps: m, underlayProps: x } = (0, g.l)(f, c, _), { controls: L, handleClose: b, scope: y, y: w } = function (e, r, t) { let [i, l] = (0, k.l)(), n = (0, M.d)(0), o = (0, M.d)(0); return { controls: (0, H.m)(), handleClose: async () => { if (r) { l(n, [1, 0], { duration: t, ease: "easeInOut" }); let e = "number" == typeof o.get() ? o.get() : 0, r = i.current.getBoundingClientRect().top, a = e + (window.innerHeight + 100 - r); await l(i.current, { y: [e, a] }, { duration: t, ease: "easeInOut" }) } e.close() }, opacity: n, scope: i, y: o } }(c, !p, r), j = r + .05; return (0, l.jsx)(v.hJ, { children: (0, l.jsx)(d.P.div, { animate: { opacity: 1 }, className: (0, s.cx)("ui-fixed ui-inset-0 ui-z-200 ui-bg-black/60", { "ui-backdrop-blur-[10px]": n }, t), exit: { opacity: 0 }, initial: { opacity: 0 }, transition: { duration: j, ease: "easeInOut" }, children: (0, l.jsx)("div", { ...x, className: "ui-size-full ui-flex ui-justify-center ui-items-center", "data-cy": "modal-v4-underlay", children: (0, l.jsx)(d.P.div, { animate: { y: 0 }, className: (0, s.cx)("ui-relative ui-z-10 ui-w-full ui-mt-auto md:ui-mt-0", { "md:ui-w-[85vw] md:ui-max-w-[840px] lg:ui-w-[75vw] lg:ui-max-w-none xl:ui-w-[65vw]": "extra-large" === h, "md:ui-w-[85vw] md:ui-max-w-[840px] lg:ui-w-[75vw] xl:ui-w-[65vw]": "large" === h, "md:ui-max-w-[375px]": "small" === h }), drag: "y", dragConstraints: { top: 0, bottom: 0 }, dragControls: L, dragElastic: { top: .15, bottom: .85 }, dragListener: !1, exit: { y: 100 * !p }, initial: { y: 250 * !p }, onDragEnd: () => { w.get() > 100 && b() }, ref: y, style: { y: w }, transition: { duration: r, ease: "easeInOut" }, children: (0, l.jsxs)("div", { ...m, className: (0, s.cx)("ui-w-full ui-max-h-[80dvh] ui-flex ui-flex-col ui-flex-1 ui-rounded-t-[20px] ui-bg-sandstone-200 ui-shadow-[0_200px_0_0] ui-shadow-sandstone-200 ui-px-6 ui-pb-6", "md:ui-p-8 md:ui-overflow-hidden md:ui-rounded-[20px] md:ui-shadow-none", { "md:ui-pt-16": "large" === h, "md:ui-pt-10": "small" === h }, a), "data-cy": "modal-v4", children: [(0, l.jsx)(oE, { controls: L, dragHandleClassName: u, state: c, variant: h }), o] }) }) }) }) }) } function oT({ triggerButton: e, children: r, onButtonClick: t, wrapperProps: n, ...o }) { let a = (0, i.useRef)(null), s = (0, x.T)(o), { triggerProps: C, overlayProps: u } = (0, w.o)({ type: "dialog" }, s), { buttonProps: d } = (0, j.s)(C, a); return (0, l.jsxs)(l.Fragment, { children: [e({ ...d, onClick: e => { var r; null == (r = d.onClick) || r.call(d, e), null == t || t(e) }, ref: a }), (0, l.jsx)(m.N, { children: s.isOpen ? (0, l.jsx)(oF, { ...n, state: s, children: (0, i.cloneElement)(r({ overlayTriggerState: s }), u) }) : null })] }) } function oD({ animated: e = !0, animationDuration: r = .25, backdropClassName: t, blur: n = !0, children: o, className: a, defaultOpen: s, dialogClassName: C, dragHandleClassName: u, isOpen: d, onOpenChange: c, onTriggerButtonClick: h, triggerButton: f, variant: _ = "small" }) { return (0, l.jsx)(oT, { defaultOpen: s, isOpen: d, onButtonClick: h, onOpenChange: c, triggerButton: f, wrapperProps: { animated: e, animationDuration: r, backdropClassName: t, blur: n, className: a, dragHandleClassName: u, variant: _ }, children: ({ overlayTriggerState: e }) => (0, l.jsx)(oB, { className: C, children: ({ titleProps: r }) => (0, i.cloneElement)(o({ overlayTriggerState: e, titleProps: r })) }) }) } function oW({ image: e, video: r }) { return (0, l.jsxs)("div", { className: "ui-aspect-[5/3] ui-grid ui-grid-cols-1 ui-grid-rows-1 ui-mb-5 ui-w-full ui-shrink-0 ui-rounded-[20px] ui-overflow-hidden md:ui-mb-0", children: [e, r] }) } function oG({ eyebrow: e, footnote: r, leftColumnContent: t, media: i, rightColumnContent: n, title: o, triggerButton: a }) { let C = !!r; return (0, l.jsx)(oD, { className: (0, s.cx)({ "ui-pb-5": C, "ui-pb-12": !C }), dialogClassName: "ui-p-0", onTriggerButtonClick: a.onClick, triggerButton: e => (0, l.jsxs)("button", { className: (0, s.cx)("ui-size-10 ui-relative ui-text-gray-400 hover:ui-text-gray-100", "before:ui-absolute before:ui-top-1/2 before:ui-left-1/2 before:-ui-translate-x-1/2 before:-ui-translate-y-1/2 before:ui-size-5 before:ui-bg-gray-300 before:ui-z-0 before:ui-rounded-full hover:before:ui-bg-gray-400", a.className), "data-cy": "info-modal-trigger", type: "button", ...e, children: [(0, l.jsx)(iV, { className: "ui-absolute ui-top-1/2 ui-left-1/2 -ui-translate-x-1/2 -ui-translate-y-1/2 ui-z-10", height: 9, width: 4 }), (0, l.jsx)("span", { className: "ui-sr-only", children: a.label })] }), variant: "large", children: ({ titleProps: a }) => (0, l.jsxs)("div", { className: "ui-flex ui-flex-col ui-flex-wrap md:ui-flex-row", "data-cy": "information-modal-content", children: [(0, l.jsx)("div", { className: "ui-mb-4 ui-order-1 ui-w-full md:ui-hidden", children: (0, l.jsx)(oW, { ...i }) }), (0, l.jsxs)("div", { className: "ui-w-full ui-mb-4 ui-order-2 md:ui-mb-8", children: [e ? (0, l.jsx)("div", { className: "ui-mb-1 md:ui-mb-0.5", children: e }) : null, (0, l.jsx)(nb, { Element: "h2", className: "ui-font-normal ui-text-xl ui-tracking-tighter md:ui-text-2xl", id: a.id, children: o })] }), (0, l.jsxs)("div", { className: (0, s.cx)("ui-w-full ui-order-6 md:ui-order-3 md:ui-w-1/2 md:ui-mr-9", { "ui-pt-6 ui-border-t ui-border-gray-300 ui-mt-3 md:ui-border-0 md:ui-pt-0 md:ui-mt-0": !!t }), children: [(0, l.jsx)("div", { className: "ui-hidden ui-w-full ui-mb-6 last:ui-mb-0 md:ui-block", children: (0, l.jsx)(oW, { ...i }) }), t] }), (0, l.jsx)("div", { className: "ui-w-full ui-text-sandstone-500 ui-order-4 md:ui-flex-1 md:ui-w-auto", children: n }), r ? (0, l.jsx)("div", { className: "ui-order-5 ui-w-full ui-pt-3 md:ui-border-t md:ui-border-gray-300 md:ui-pt-5 md:ui-mt-8", children: (0, l.jsx)(nb, { className: "ui-text-xs ui-font-normal ui-text-gray-400", children: r }) }) : null] }) }) } oz.displayName = "ModalV3", G(), G(), G(), G(), G(), G(), G(), G(), G(), G(), W(U()), G(); var oU = (e => (e.FirstName = "fname", e.LastName = "lname", e.Email = "email", e.Address = "address", e.Address2 = "address2", e.City = "city", e.State = "state", e.Postal = "postal", e.Phone = "phone", e.Country = "country", e))(oU || {}); G(), G(), W(e9()), W(rT()), G(), G(), G(), G(), G(), G(), G(), G(), W(rU()), W(rq()), W(rK()), G(), G(), G(), G(), oU.FirstName, oU.LastName, oU.Email, oU.Address, oU.Address2, oU.City, oU.State, oU.Postal, oU.Phone, G(), G(), (0, W(rT()).default)({}, { min: { message: "address_form_min" }, max: { message: "address_form_max" }, required: { message: "address_form_required" } }, { min: { value: 2 }, max: { value: 2 }, required: { value: !0 } }), V.Yj().trim().lowercase(), G(), G(), oU.City, oU.State, oU.Postal, G(), oU.Address, oU.Address2, oU.FirstName, oU.LastName, oU.Email, oU.Address, oU.Address2, oU.Postal, oU.City, oU.Phone, G(), oU.FirstName, oU.LastName, oU.Email, oU.Address, oU.Address2, oU.Postal, oU.City, oU.State, oU.Phone, G(), oU.State, G(), oU.FirstName, oU.LastName, oU.Email, oU.Address, oU.Address2, oU.Postal, oU.City, oU.Phone, G(), oU.Address, oU.FirstName, oU.LastName, oU.Email, oU.Address, oU.Address2, oU.Postal, oU.City, oU.Phone, G(), oU.FirstName, oU.LastName, oU.Email, oU.Address, oU.Address2, oU.Postal, oU.City, oU.Phone, G(), oU.FirstName, oU.LastName, oU.Email, oU.Address, oU.Address2, oU.Postal, oU.City, oU.Phone, G(), oU.Address, oU.Address2, oU.FirstName, oU.LastName, oU.Email, oU.Address, oU.Address2, oU.Postal, oU.City, oU.Phone, G(), oU.State, oU.FirstName, oU.LastName, oU.Email, oU.Address, oU.Address2, oU.City, oU.State, oU.Postal, oU.Phone, G(), oU.Address, oU.State, oU.FirstName, oU.LastName, oU.Email, oU.Address, oU.Address2, oU.Postal, oU.City, oU.State, oU.Phone, G(), oU.City, oU.State, oU.LastName, oU.FirstName, oU.Email, oU.Postal, oU.State, oU.City, oU.Address, oU.Address2, oU.Phone, G(), oU.Address, oU.FirstName, oU.LastName, oU.Email, oU.Address, oU.Address2, oU.Postal, oU.City, oU.Phone, G(), oU.Address, oU.State, oU.FirstName, oU.LastName, oU.Email, oU.Address, oU.Address2, oU.State, oU.City, oU.Postal, oU.Phone, G(), oU.Address, oU.FirstName, oU.LastName, oU.Email, oU.Address, oU.Address2, oU.Postal, oU.City, oU.Phone, G(), oU.FirstName, oU.LastName, oU.Email, oU.Address, oU.Address2, oU.Postal, oU.City, oU.Phone, G(), oU.State, oU.FirstName, oU.LastName, oU.Email, oU.Address, oU.Address2, oU.City, oU.Postal, oU.State, oU.Phone, G(), oU.State, oU.FirstName, oU.LastName, oU.Email, oU.Address, oU.Address2, oU.Postal, oU.City, oU.State, oU.Phone, G(), oU.FirstName, oU.LastName, oU.Email, oU.Address, oU.Address2, oU.City, oU.Postal, oU.Phone, G(), oU.FirstName, oU.LastName, oU.Email, oU.Address, oU.Address2, oU.City, oU.Postal, oU.Phone, G(), oU.Address, oU.FirstName, oU.LastName, oU.Email, oU.Address, oU.Address2, oU.Postal, oU.City, oU.Phone, G(), oU.Address, oU.City, oU.FirstName, oU.LastName, oU.Email, oU.Address, oU.Address2, oU.Postal, oU.City, oU.Phone, G(), oU.Address, oU.Address2, oU.FirstName, oU.LastName, oU.Email, oU.Address, oU.Address2, oU.Postal, oU.City, oU.Phone, G(), oU.State, oU.FirstName, oU.LastName, oU.Email, oU.Address, oU.Address2, oU.City, oU.State, oU.Postal, oU.Phone, G(), oU.Postal, G(), oU.State, oU.Postal, G(), W(rT()), G(), G(), G(), G(), G(), G(), G(); W(U()); G(); G(), G(), G(), G(), G(), G(), G(), G(), G(), G(), G(), G(), G(), W(U()), oU.FirstName, oU.LastName, oU.Email, oU.Address, oU.Address2, oU.City, oU.State, oU.Postal, oU.Phone, oU.Country, Object.values(oU).filter(e => !Number.isNaN(e)), G(), G(), G(); var o$ = (0, s.F)(["ui-appearance-none", "ui-block", "ui-duration-300", "ui-flex", "ui-items-center", "ui-justify-center", "ui-transition-colors"], { variants: { inverted: { true: [], false: [] }, scrollable: { true: ["ui-whitespace-nowrap", "ui-snap-start"], false: [] }, selected: { true: [], false: [] }, style: { default: ["ui-bg-transparent", "ui-border-0", "ui-border-b-[3px]", "ui-border-solid", "ui-pb-4", "ui-pt-3", "ui-px-0", "ui-relative", "ui-text-sm", "ui-transition-opacity", "hover:ui-opacity-100", "lg:ui-pb-7", "lg:ui-pt-5", "lg:ui-px-12", "lg:ui-text-base"], pill: ["ui-flex-1", "ui-px-5", "ui-py-3", "ui-rounded-[70px]", "ui-text-base"] } }, compoundVariants: [{ className: "ui-border-b-current ui-opacity-100", style: "default", selected: !0 }, { className: "ui-border-b-transparent ui-opacity-70", style: "default", selected: !1 }, { className: "ui-bg-transparent", selected: !1, style: "pill" }, { className: "ui-text-sandstone-500", inverted: !1, style: "pill" }, { className: "ui-text-[#F0EBE4]", inverted: !0, selected: !1, style: "pill" }, { className: "ui-bg-sandstone-300 ui-text-sandstone-500", selected: !0, style: "pill" }, { className: "ui-bg-white ui-text-sandstone-500", inverted: !1, selected: !0, style: "pill" }] }), oq = (0, i.forwardRef)(function ({ className: e, icon: r, inverted: t = !1, label: i, scrollable: n, selected: o, style: a, tabPanelId: s, ...C }, u) { return (0, l.jsxs)("button", { ...C, "aria-controls": s, "aria-selected": !!o, className: o$({ className: e, inverted: t, scrollable: n, selected: o, style: a }), "data-classname": e, "data-cy": "tabs_tab", ref: u, role: "tab", tabIndex: o ? 0 : -1, type: "button", children: [r, i] }) }); oq.displayName = "Tab", G(); var oK = (0, s.F)(["ui-flex"], { variants: { inside: { true: ["ui-relative", "ui-z-10"], false: [] }, inverted: { true: [], false: [] }, orientation: { default: [], reverse: [] }, scrollable: { true: [], false: [] }, style: { default: ["ui-gap-x-8", "ui-relative", "ui-z-10"], pill: ["ui-bg-black", "ui-bg-opacity-10", "ui-gap-x-2", "ui-p-1", "ui-rounded-[100px]"] } }, compoundVariants: [{ className: "ui-bg-opacity-25", inverted: !0, style: "pill" }, { className: "ui-bottom-8", inside: !0, orientation: "reverse" }, { className: "ui-top-8", inside: !0, orientation: "default" }, { className: "no-scrollbar ui-overflow-auto ui-justify-start ui-snap-x ui-snap-mandatory ui-snap-always", scrollable: !0, style: "default" }, { className: "ui-justify-center", scrollable: !1, style: "default" }] }); function oX({ className: e, children: r, inside: t = !1, inverted: i = !1, orientation: n = "default", scrollable: o = !1, style: a, ...s }) { return (0, l.jsxs)("div", { className: "relative", children: [(0, l.jsx)("div", { ...s, className: oK({ className: e, inside: t, inverted: i, orientation: n, scrollable: o, style: a }), "data-cy": "tabs_tablist", role: "tablist", children: r }), "default" === a && (0, l.jsx)("div", { className: "ui-absolute ui-bottom-0 ui-bg-[#CBCBCB] ui-h-[1px] ui-left-0 ui-w-full", role: "presentation" })] }) } function oJ({ content: e, id: r, selected: t, tabId: n, ...o }) { let a = (0, i.useRef)(null), s = (0, i.useMemo)(() => { var e; let r = null == (e = a.current) ? void 0 : e.querySelectorAll('a[href], button, input, textarea, select, details, iframe, [tabindex]:not([tabindex="-1"])'); return t ? null != r && r.length ? void 0 : 0 : -1 }, [t, a]); return (0, l.jsx)("div", { ...o, "aria-labelledby": n, "data-cy": "tabs_tabpanel", hidden: !t, id: r, ref: a, role: "tabpanel", tabIndex: s, children: e }) } oX.displayName = "TabList", G(); var oY = (0, s.F)(["ui-flex", "ui-gap-y-10"], { variants: { orientation: { default: ["ui-flex-col"], reverse: ["ui-flex-col-reverse"] }, style: { default: ["md:ui-gap-y-12"], pill: ["ui-flex-0", "ui-max-w-[415px]", "ui-w-full", "md:ui-gap-y-8"] } } }); function oQ({ className: e, inside: r = !1, inverted: t, orientation: n = "default", scrollableTablist: o, style: a = "default", tabList: s, tabs: C, tabPanels: u, onChange: d }) { let [c, h] = (0, i.useState)(0), f = (0, i.useRef)(new Map), _ = (0, i.useId)(), p = (0, i.useMemo)(() => C.map((e, r) => `${_}-tab-${r}`), [C, _]), m = (0, i.useMemo)(() => u.map((e, r) => `${_}-tabpanel-${r}`), [u, _]); return (0, l.jsxs)("div", { className: oY({ className: e, orientation: n, style: a }), "data-cy": "tabs", "data-orientation": n, "data-style": a, children: [(0, l.jsx)(oX, { ...s, inside: r, inverted: t, onKeyDown: e => { let { key: r } = e, t = e => { var r; let t = p[e]; null == (r = f.current.get(t)) || r.focus() }; "ArrowRight" === r && (h(e => { let r = e === C.length - 1 ? 0 : e + 1; return t(r), r }), null == d || d(c === C.length - 1 ? 0 : c + 1)), "ArrowLeft" === r && (h(e => { let r = 0 === e ? C.length - 1 : e - 1; return t(r), r }), null == d || d(0 === c ? C.length - 1 : c - 1)) }, orientation: n, scrollable: o, style: a, children: (0, l.jsx)(l.Fragment, { children: C.map((e, r) => (0, i.createElement)(oq, { ...e, id: p[r], inverted: t, key: p[r], onClick: () => { h(r), null == d || d(r) }, ref: e => { let t = p[r]; e ? f.current.set(t, e) : f.current.delete(t) }, scrollable: o, selected: c === r, style: a, tabPanelId: m[r] })) }) }), u.map((e, r) => (0, i.createElement)(oJ, { ...e, id: m[r], key: m[r], selected: c === r, tabId: p[r] }))] }) } function o1({ onDrag: e, progress: r }) { let t = (0, i.useRef)(null), n = ta({ ref: t }).width, o = (0, i.useMemo)(() => r * n, [n, r]), a = e => Math.min(Math.max(e, 0), 1), { moveProps: s } = (0, Z.f)({ onMove(t) { "keyboard" !== t.pointerType ? e(a((o + t.deltaX) / n)) : e(a(r + .01 * t.deltaX)) } }); return (0, l.jsx)("div", { className: "ui-absolute ui-h-full ui-w-full ui-top-0 ui-left-0 ui-hidden ui-z-20 ui-overflow-hidden ui-pointer-events-none md:ui-block", ref: t, children: (0, l.jsxs)("button", { ...s, className: "ui-appearance-none ui-bg-sandstone-300 ui-h-16 ui-w-16 ui-rounded-full ui-absolute ui-top-1/2 -ui-translate-x-1/2 -ui-translate-y-1/2 ui-pointer-events-auto ui-cursor-ew-resize ui-flex ui-items-center ui-justify-center ui-gap-2", "data-cy": "comparison_slider_control", style: { left: o }, tabIndex: 0, type: "button", children: [(0, l.jsx)("span", { className: "ui-sr-only", children: l2("comparison_slider_control_label") }), (0, l.jsx)(tQ, {}), (0, l.jsx)(t1, {})] }) }) } function o2({ description: e, image: r, index: t, progress: n, title: o }) { let a = (0, i.useMemo)(() => { let e = {}; return 1 === t && (e.clipPath = `inset(0px 0px 0px ${100 * n}%)`), e }, [t, n]); return (0, l.jsxs)("div", { className: (0, s.cx)("ui-absolute ui-w-full ui-h-full md:ui-top-0 md:ui-left-0"), "data-cy": "comparison_slider_item", style: a, children: [(0, l.jsx)("div", { className: "ui-h-full ui-w-full", "data-cy": "comparison_slider_item_image", children: r }), (0, l.jsx)("div", { className: (0, s.cx)("ui-absolute ui-flex ui-flex-col ui-h-full ui-left-0 ui-px-20 ui-py-14 ui-top-0 ui-w-full lg:ui-px-28 lg:ui-py-20", { "ui-items-start": 0 === t, "ui-items-end": 1 === t }), children: (0, l.jsxs)("div", { className: "ui-text-sandstone-500", children: [(0, l.jsx)(nb, { align: "center", className: "ui-text-3xl lg:ui-text-5xl", color: "inherit", "data-cy": "comparison_slider_item_title", variant: "unset", children: o }), !!e && (0, l.jsx)(nb, { align: "center", className: "ui-text-lg lg:ui-text-xl", color: "inherit", "data-cy": "comparison_slider_item_description", variant: "unset", children: e })] }) })] }) } function o3({ description: e, image: r, title: t }) { return (0, l.jsxs)("div", { "data-cy": "comparison_slider_tab_content", children: [(0, l.jsx)("div", { className: "ui-aspect-square ui-mb-6 ui-overflow-hidden ui-rounded-md", "data-cy": "comparison_slider_tab_content_image", children: r }), (0, l.jsxs)("div", { className: "ui-text-sandstone-500", children: [(0, l.jsx)(nb, { align: "center", className: "ui-text-xl", color: "inherit", "data-cy": "comparison_slider_item_title", variant: "unset", children: t }), !!e && (0, l.jsx)(nb, { align: "center", color: "inherit", "data-cy": "comparison_slider_item_description", children: e })] })] }) } function o4({ items: e }) { let r = (0, i.useMemo)(() => ({ tabs: e.map(({ title: e }) => ({ label: e })), tabPanels: e.map(e => ({ content: (0, l.jsx)(o3, { description: e.description, image: e.mobileImage, title: e.title }, `ComparisonSliderTabContent-${e.title}`) })) }), [e]); return (0, l.jsx)("div", { className: "ui-flex ui-justify-center md:ui-hidden", "data-cy": "comparison_slider_tabs", children: (0, l.jsx)(oQ, { ...r, style: "pill" }) }) } function o5({ items: e }) { let [r, t] = (0, i.useState)(.5); return (0, l.jsxs)("div", { className: "ui-aspect-2/1 ui-overflow-hidden ui-relative ui-rounded-md ui-w-full ui-hidden md:ui-block", "data-cy": "comparison_slider", children: [(0, l.jsx)(o1, { onDrag: e => { t(e) }, progress: r }), e.map((e, t) => (0, l.jsx)(o2, { description: e.description, image: e.desktopImage, index: t, progress: r, title: e.title }, `ComparisonSliderItem-${e.title}`))] }) } function o6(e) { return (0, l.jsxs)(l.Fragment, { children: [(0, l.jsx)(o4, { ...e }), (0, l.jsx)(o5, { ...e })] }) } function o7({ description: e, label: r, descriptionProps: t, infoModal: i, labelProps: n }) { return (0, l.jsxs)("div", { className: "ui-flex ui-justify-between ui-w-full ui-mb-3", children: [(0, l.jsxs)("div", { children: [(0, l.jsx)(nb, { Element: "h3", className: "ui-text-gray-600", variant: "base", weight: "black", children: (0, l.jsx)("span", { ...n, children: r }) }), e ? (0, l.jsx)(nb, { className: "ui-text-gray-450", font: "serif-italic", variant: "unset", children: (0, l.jsx)("span", { ...t, children: e }) }) : null] }), i ? (0, l.jsx)(oG, { ...i, triggerButton: { ...i.triggerButton, className: (0, s.cx)("ui-translate-x-[10px] ui-translate-y-[-10px]", i.triggerButton.className) } }) : null] }) } function o8({ className: e, cardSelectorsData: r, description: t, initialSelection: n = "", infoModal: o, onChange: a, title: C }) { let [u, d] = (0, i.useState)(n); return (0, l.jsx)("div", { className: (0, s.cx)("ui-max-w-sm", e), children: (0, l.jsx)(ng, { cardSelectHeader: o7, description: t, infoModal: o, label: C, onChange: e => { d(e), null == a || a(e) }, value: u, children: r.map(e => (0, l.jsx)(nv, { value: e.id, ...e, children: (0, l.jsx)(ow, { ...e }) }, e.id)) }) }) } function o9({ aboveButtonGroupSlot: e, currencyCode: r, description: t, disabled: n, hideLabel: o, initialSelectedFinish: a = "", label: s, ringFinishesData: C, scrollRef: u, onChange: d, ...c }) { let [h, f] = (0, i.useState)(!1), [_, p] = (0, i.useState)(a), m = C.length > 0; return (0, l.jsx)(nR, { ...c, aboveButtonGroupSlot: e, description: t, hideLabel: o, label: s, onChange: e => { p(e), f(!0), null == d || d(e) }, value: _, children: m ? C.map(e => (0, l.jsx)(ok, { active: h, alt: e.alt, color: e.color, currencyCode: r, disabled: n, discount: e.discount, finish: e.finish, isSelected: e.finish === _, price: e.price, scrollRef: u, src: e.src }, e.finish)) : null }) } function o0({ disabled: e = !1, initialSelectedSize: r, label: t = "choose_size", message: n, ringSizesData: o = [], onChange: a, ...C }) { let [u, d] = (0, i.useState)(r ? r.toString() : null); return o.length ? (0, l.jsxs)(nR, { label: t, ...C, hideLabel: !0, onChange: e => { d(e), a(e) }, value: u, children: [(0, l.jsx)("div", { className: (0, s.cx)("ui-grid ui-grid-cols-4 ui-gap-4"), children: o.map(({ size: r, stockStatus: t = lT }) => (0, l.jsx)(oV, { disabled: e, size: r, stockStatus: t }, r)) }), n] }) : null } G(), o1.displayName = "ComparisonSliderControl", G(), o2.displayName = "ComparisonSliderItem", G(), o6.displayName = "ComparisonSlider", G(), G(), o7.displayName = "CardSelectHeader", o8.displayName = "ProductSelect", G(), o9.displayName = "RingFinishChoices", G(), o0.displayName = "SizeChoices", G(), G(), G(); var ae = W(rX()), ar = (0, i.createContext)(null), at = () => { let e = (0, i.useContext)(ar); if (!e) throw Error("useSwipeable must be used within a SwipeableProvider"); return e }, ai = function ({ children: e, expandable: r, labels: t, rowGap: n = 24, startSlide: o = 0, ...a }) { let s = (0, i.useRef)(new Map), [C, u] = (0, i.useState)(o), [d, c] = (0, i.useState)(o), [h, f] = (0, i.useState)(0), [_, p] = (0, i.useState)(!0), [m, x] = (0, i.useState)(C > 0), g = (0, i.useRef)(null), v = ta({ ref: g }); (0, i.useEffect)(() => { let e = Array.from(s.current.values()); e.length !== h && f(e.length) }, [o, n, h]); let { scrollX: L, scrollXProgress: b } = (0, R.L)({ container: g }), y = (0, i.useCallback)(() => { var e; let r = null == (e = g.current) ? void 0 : e.scrollLeft, t = Array.from(s.current.values()); if (t.length && void 0 !== r) return Math.round(r / (t.reduce((e, r) => e + r.offsetWidth + n, 0) / h)) }, [n, h]), w = (0, i.useCallback)(() => { let e = y(); b.getVelocity() || void 0 === e || (u(e !== d && r ? Math.round(d) : e), x(e > 0), p(.99 > b.get())) }, [d, y, r, b]), j = (0, ae.debounce)(w, 50); (0, S.L)(L, "change", () => { j() }), (0, i.useEffect)(() => { j() }, [j, v]); let k = (0, i.useMemo)(() => ({ activeSlide: C, canScrollNext: _, canScrollPrev: m, containerRef: g, itemsRef: s, labels: t, rowGap: n, setAnimateSlideId: c, scrollX: L, scrollXProgress: b, startSlide: o, totalSlides: h }), [C, _, m, g, s, t, n, c, L, b, o, h]); return (0, l.jsx)(ar.Provider, { value: k, children: (0, l.jsx)("div", { className: "ui-overflow-hidden", ...a, children: e }) }) }; G(); var al = () => { let { activeSlide: e, containerRef: r, scrollX: t, setAnimateSlideId: l, startSlide: n, totalSlides: o } = at(), a = (0, i.useRef)(null), s = Array.from({ length: o }), u = (0, C.I)(), d = (0, i.useCallback)(e => { var i; let n = r.current; !n || t.getVelocity() || (null == (i = a.current) || i.stop(), a.current = (0, P.i)(n.scrollLeft, n.scrollWidth * (e / s.length), { type: "tween", duration: .25 * !u, onUpdate: e => { n.scrollLeft = e }, onPlay: () => { n.style.scrollSnapType = "none" }, onComplete: () => { n.style.scrollSnapType = "", a.current = null } }), l(e)) }, [r, t, s.length, u, l]); return (0, i.useEffect)(() => { let e = r.current; if (e) return e.addEventListener("resize", () => { d(n) }), () => { e.removeEventListener("resize", () => { d(n) }) } }, [n, d, r]), (0, i.useEffect)(() => { n && n > 0 && d(n) }, [d, n]), { activeSlide: e, goToSlide: d } }, an = al, ao = { "gray-200": "ui-bg-gray-200", "gray-300": "ui-bg-gray-300", "gray-400": "ui-bg-gray-400", "gray-500": "ui-bg-gray-500", "gray-600": "ui-bg-gray-600", "sandstone-200": "ui-bg-sandstone-200", "sandstone-300": "ui-bg-sandstone-300", "sandstone-400": "ui-bg-sandstone-400", "sandstone-500": "ui-bg-sandstone-500", "": "" }, aa = (0, s.F)("ui-size-2 ui-rounded-full", { variants: { activeColor: ao, color: ao } }); function as({ activeColor: e = "sandstone-500", activeSlide: r, className: t, color: i = "sandstone-200", goToSlide: n, index: o, labels: a }) { let { formatMessage: s } = (0, N.A)(), C = a ? a[o] : s({ id: "pdp_slideshow_thumbnail_label" }, { index: o + 1 }), u = o === Math.round(r); return (0, l.jsx)("li", { children: (0, l.jsx)("button", { "aria-current": o === Math.round(r), "aria-label": C, className: "ui-p-2", onClick: () => { n(o) }, type: "button", children: (0, l.jsx)("div", { className: aa({ activeColor: u ? e : "", className: t, color: u ? "" : i }) }) }) }) } var aC = function ({ activeColor: e, className: r, color: t }) { let { totalSlides: i, labels: n } = at(), { activeSlide: o, goToSlide: a } = al(), s = Array.from({ length: i }); return (0, l.jsx)("ul", { className: "ui-flex ui-justify-center ui-gap-2", children: s.map((i, s) => (0, l.jsx)(as, { activeColor: e, activeSlide: o, className: r, color: t, goToSlide: a, index: s, labels: n }, s)) }) }; G(); var au = function ({ children: e, onClick: r, ...t }) { let { canScrollNext: i, totalSlides: n } = at(), { activeSlide: o, goToSlide: a } = al(); return n ? (0, l.jsx)("button", { type: "button", ...t, disabled: !i, onClick: e => { a(o + 1), null == r || r(e) }, children: e }) : null }; G(); var ad = function ({ children: e, onClick: r, ...t }) { let { canScrollPrev: i, totalSlides: n } = at(), { activeSlide: o, goToSlide: a } = al(); return n ? (0, l.jsx)("button", { type: "button", ...t, disabled: !i, onClick: e => { a(o - 1), null == r || r(e) }, children: e }) : null }; G(); var ac = (0, s.F)("ui-relative ui-h-[1px] ui-w-full ui-overflow-hidden", { variants: { variant: { light: "ui-bg-gray-400", dark: "ui-bg-gray-300" } }, defaultVariants: { variant: "dark" } }), ah = (0, s.F)("ui-absolute ui-inset-0 ui-h-[1px] ui-origin-left", { variants: { variant: { light: "ui-bg-sandstone-200", dark: "ui-bg-sandstone-500" } }, defaultVariants: { variant: "dark" } }), af = function ({ variant: e }) { let { scrollXProgress: r } = at(); return (0, l.jsx)("div", { className: ac({ variant: e }), role: "presentation", children: (0, l.jsx)(d.P.div, { className: ah({ variant: e }), style: { scaleX: r } }) }) }; G(); var a_ = function (e) { let { activeSlide: r, totalSlides: t } = at(), i = Math.round(r + 1); return t ? (0, l.jsxs)(nb, { color: "light", ...e, children: [i, " / ", t] }) : null }; G(); var ap = (0, s.F)("no-scrollbar ui-flex ui-snap-x ui-snap-mandatory ui-snap-always ui-items-stretch ui-overflow-x-auto", { variants: { rowGap: { 0: "ui-gap-x-0", 8: "ui-gap-x-2", 16: "ui-gap-x-4", 24: "ui-gap-x-6", 32: "ui-gap-x-8", 40: "ui-gap-x-10", 48: "ui-gap-x-12", 56: "ui-gap-x-14", 64: "ui-gap-x-16" } }, defaultVariants: { rowGap: 24 } }); function am({ children: e, className: r, slideClassName: t, ...n }) { let { containerRef: o, itemsRef: a, rowGap: C } = at(), u = (0, i.useMemo)(() => i.Children.toArray(e), [e]).filter(e => e).map((e, r) => (0, l.jsx)("li", { className: (0, s.cx)("ui-snap-start", t), "data-cy": "slider_item", ref: e => { let t = r.toString(); e ? a.current.set(t, e) : a.current.delete(t) }, children: e }, r)); return (0, l.jsx)("ul", { className: ap({ rowGap: C, className: r }), "data-cy": "slider", ref: o, ...n, children: u }) } function ax({ ListItems: e, className: r }) { let t = (0, C.I)(), i = { hidden: { opacity: 0 }, show: { opacity: 1 } }; return (0, l.jsx)("div", { className: "tailwind", children: (0, l.jsx)(d.P.ul, { animate: "show", className: r, initial: "hidden", transition: { type: "spring", stiffness: 50, duration: .8 }, variants: { hidden: { opacity: 0, filter: "blur(5px)", y: -5 }, show: { opacity: 1, filter: "blur(0px)", y: 0, transition: { type: "tween", duration: .8 * !t, staggerChildren: .1 * !t } } }, children: (0, l.jsx)(oL, { children: e.map(e => (0, l.jsx)(d.P.li, { variants: i, children: e.ListItem }, e.name)) }) }) }) } G(), G(), ax.displayName = "AnimatedList"; var ag = (0, s.F)(["ui-w-full md:ui-p-5 p-4 ui-rounded-md ui-mb-2 "], { variants: { cardSelected: { true: null, false: null }, disabled: { true: null, false: "ui-bg-gray-150 ui-text-sandstone-500" } }, compoundVariants: [{ disabled: !1, cardSelected: !1, className: "ui-border-[1px] ui-border-gray-150" }, { disabled: !1, cardSelected: !0, className: "ui-border-[1px] ui-border-sandstone-500 ui-bg-white ui-bg-opacity-[100%]" }, { cardSelected: !0, disabled: !0, className: "ui-border-[1px] ui-border-gray-300 ui-bg-gray-200 ui-cursor-not-allowed ui-text-opacity-50" }, { cardSelected: !1, disabled: !0, className: "ui-border-[1px] ui-border-gray-200  ui-bg-gray-200 ui-cursor-not-allowed" }] }); function av({ cardSelected: e, title: r, price: t, currencyCode: i, AccordionContent: n, accordionOpen: o, accordionOnClick: a, onCheckBoxClick: C, disabled: u = !1, discount: d = 0, className: c, "data-cy": h = "selection-card" }) { return (0, l.jsxs)("div", { className: ag({ cardSelected: e, disabled: u, className: c }), "data-cy": h, children: [(0, l.jsxs)("div", { className: "ui-flex ui-items-center ui-justify-between ui-transition-all ui-ease ui-duration-1000", children: [n ? (0, l.jsx)("button", { "aria-expanded": o, className: "ui-flex ui-items-center ui-pr-2", onClick: a, type: "button", children: (0, l.jsxs)(nb, { Element: "div", className: "ui-flex ui-items-center ui-text-base ui-font-medium ui-pr-2", color: u ? "disabled" : "dark", children: [r, (0, l.jsx)("div", { className: "ui-ml-2", children: (0, l.jsx)(t2, { "aria-hidden": !0, className: (0, s.cx)("ui-transition ui-duration-500 ui-rotate-0", { "ui-rotate-180": o }, { "ui-text-gray-300": u, "ui-text-sandstone-500": !u }), "data-cy": `${h}-chevron` }) })] }) }) : (0, l.jsx)(nb, { className: "ui-text-base ui-font-medium ui-pr-2", color: u ? "disabled" : "dark", children: r }), (0, l.jsx)(nH, { "aria-label": "checkbox", checked: e, "data-cy": `${h}-checkbox`, disabled: u, label: (0, l.jsx)(nX, { currencyCode: i, discount: d, price: t, priceCompare: d > 0 }), onChange: () => { C() }, reverse: !0 })] }), n && o ? (0, l.jsx)("div", { className: "ui--ml-4", children: (0, l.jsx)(ax, { ListItems: n }) }) : null] }) } av.displayName = "SelectionCardV3", G(), G(); var aL = { footerLinks: [{ id: "our-company-category", title: "footer_company_heading", links: [{ id: "about-us", href: "/about-us", label: "footer_about_us" }, { id: "leadership", href: "/leadership", label: "footer_leadership" }, { id: "medical-advisory-board", href: "/medical-advisory-board", label: "footer_medical_advisory_board" }, { id: "careers", href: "/careers", label: "footer_careers" }, { id: "press", href: "/press", label: "footer_press" }] }, { id: "support-category", title: "footer_support_heading", links: [{ id: "help", href: "https://support.ouraring.com/hc/", label: "footer_help", external: !0 }, { id: "sizing", href: "/sizing", label: "footer_sizing" }, { id: "membership", href: "/membership", label: "footer_membership" }, { id: "my-account", href: "/my-account", label: "footer_my_account" }, { id: "oura-on-the-web", href: "https://cloud.ouraring.com/user/sign-in", label: "footer_oura_on_the_web", external: !0, target: "_blank" }, { id: "contact", href: "/contact", label: "footer_contact" }] }, { id: "partner-category", title: "footer_partner_heading", links: [{ id: "oura-for-business", href: "/business", label: "for_business_link" }, { id: "developers", href: "/developer", label: "footer_developers" }] }, { id: "blog-category", title: "footer_blog_heading", links: [{ id: "blog", href: "https://blog.ouraring.com/", label: "the_pulse" }] }, { id: "footer-card", title: "shop", link: { id: "oura-ring", href: "/product/rings", label: "shop" } }], legalLinks: [{ id: "terms-and-conditions", label: "footer_terms_and_conditions", href: "/terms-and-conditions" }, { id: "privacy-policy", label: "footer_privacy_policy", href: "/privacy-policy" }, { id: "accessibility", label: "footer_accessibility", href: "/accessibility" }, { id: "intellectual-property-notice", label: "footer_ip_notice", href: "/intellectual-property-notice" }, { id: "security", label: "footer_security_center", href: "/security" }] }; function ab(e) { return (0, l.jsx)(lX, { color: "inherit", href: "/privacy-policy", children: e }, "privacy-policy-link") } function ay({ emailSubmitted: e, onNewsletterFormSubmit: r }) { let [t, n] = (0, i.useState)(!1), { formatMessage: o } = (0, N.A)(), a = (0, O.Wx)({ validateOnChange: !1, validateOnBlur: !1, validate: e => { let r = {}; return /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i.test(e.email) || (r.email = o({ id: "footer_email_validation_error" })), r }, initialValues: { email: "" }, onSubmit: e => { r(e.email) } }); return (0, l.jsxs)(l.Fragment, { children: [(0, l.jsx)(nb, { Element: "span", color: "inherit", weight: "bold", children: l2("footer_email_input_heading") }), (0, l.jsxs)("form", { className: "ui-flex ui-flex-col ui-text-gray-400 ui-relative ui-max-w-96 ui-my-6", "data-cy": "footer_email_signup", noValidate: !0, onSubmit: a.handleSubmit, children: [(0, l.jsx)("label", { className: (0, s.cx)("ui-absolute ui-top-5 ui-left-4", "ui-transform ui--translate-y-1/2 ui-transition-all", { "ui--translate-y-10 ui--translate-x-4 ui-text-xs": t }), htmlFor: "footer_email_signup_input", children: e ? (0, l.jsx)(u.A, { id: "footer_thanks_for_subscribing" }) : (0, l.jsx)(u.A, { id: "footer_email" }) }), (0, l.jsx)("input", { className: (0, s.cx)("ui-appearance-none ui-bg-sandstone-200", "ui-h-10 ui-w-full ui-py-2 ui-px-4", "ui-rounded ui-overflow-hidden"), id: "footer_email_signup_input", name: "email", onBlurCapture: a.handleBlur, onChange: a.handleChange, onFocus: () => { n(!0) }, type: "email", value: a.values.email }), e ? null : (0, l.jsx)("button", { "aria-label": o({ id: "footer_newsletter_submit_label" }), className: (0, s.cx)("ui-absolute ui-bottom-0 ui-right-0 ui-h-10", "ui-py-2 ui-pl-2 ui-pr-4", "ui-bg-sandstone-200 ui-rounded-r", { "ui-text-gray-400": !t, "ui-text-sandstone-500": t }), "data-cy": "footer_email_signup_submit", name: "submit", type: "submit", children: (0, l.jsx)(i5, {}) }), a.errors.email ? (0, l.jsx)("div", { className: "ui-absolute ui-text-xs ui--bottom-5 ui-text-red", "data-cy": "email_error_message", children: a.errors.email }) : null] }), (0, l.jsx)(nb, { className: "ui-mt-4", color: "inherit", variant: "eyebrow-small", children: (0, l.jsx)(u.A, { id: "footer_dataprotect_1" }) }), (0, l.jsx)(nb, { Element: "div", color: "inherit", variant: "eyebrow-small", children: (0, l.jsx)(u.A, { id: "footer_dataprotect_privacy_policy", values: { PrivacyPolicyLink: ab } }) })] }) } function aw({ className: e }) { return (0, l.jsxs)(nb, { Element: "div", className: (0, s.cx)(e, "ui-flex ui-flex-col ui-gap-2"), color: "inherit", variant: "eyebrow-small", children: [(0, l.jsxs)("p", { children: ["\xa9 ", new Date().getFullYear(), " ", (0, l.jsx)(u.A, { id: "footer_all_rights_reserved" })] }), (0, l.jsx)("p", { children: (0, l.jsx)(u.A, { id: "footer_copyright" }) })] }) } function aj({ isLocalised: e, links: r }) { var t; let n = (0, i.useContext)(r5), o = null != (t = null == n ? void 0 : n.LinkComponent) ? t : "a"; return (0, l.jsx)("ul", { className: (0, s.cx)("ui-flex ui-flex-wrap ui-gap-x-2 ui-gap-y-2 ui-justify-left ui-text-eyebrow", "md:ui-gap-x-4"), children: r.map(r => (0, l.jsx)("li", { children: (0, l.jsx)(o, { className: "ui-whitespace-nowrap", href: r.href, children: e ? r.label : (0, l.jsx)(u.A, { id: r.label }) }) }, r.id)) }) } function ak({ isLocalised: e, legalLinks: r }) { let { formatMessage: t } = (0, N.A)(); return (0, l.jsxs)("div", { className: (0, s.cx)("ui-text-gray-400", "ui-pt-4 ui-pb-8", "ui-flex ui-flex-col ui-gap-6 lg:ui-gap-2"), children: [(0, l.jsx)("nav", { "aria-label": t({ id: "footer_legal_aria_label" }), className: "ui-flex-1", children: (0, l.jsx)(aj, { isLocalised: e, links: r }) }), (0, l.jsx)(aw, { className: "ui-flex-1" })] }) } function aM({ icon: e, ...r }) { return (0, l.jsx)("a", { className: "ui-h-4 ui-w-4 ui-inline-block ui-relative ui-rounded-full ui-bg-sandstone-200 ui-text-sandstone-500 sm:ui-w-8 sm:ui-h-8", rel: "noreferrer", target: "_blank", ...r, children: (0, l.jsx)("div", { className: "ui-absolute ui-top-1/2 ui-left-1/2 ui-transform ui--translate-x-1/2 ui--translate-y-1/2 ui-text-zero", children: e }) }) } function aH({ Icon: e, name: r, onClick: t, url: i }) { return (0, l.jsx)(aM, { "aria-label": r, "data-cy": "footer-social-link", "data-site": r.toLowerCase(), href: i, icon: (0, l.jsx)(e, { className: "ui-h-3 ui-w-3 sm:ui-w-4 sm:ui-h-4" }), onClick: () => { null == t || t({ name: r, url: i }) } }) } G(), ay.displayName = "FooterEmailSignupV3", G(), G(), aw.displayName = "FooterLegalese", G(), aj.displayName = "FooterLegalLinks", ak.displayName = "FooterLegalV3", G(), G(), aM.displayName = "CircularIconV3", G(); var aV = [{ Icon: function ({ title: e = "Facebook", titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "currentColor", viewBox: "0 0 24 24", xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z", fill: "currentColor" })] }) }, name: "Facebook", url: "https://www.facebook.com/ouraring?utm_source=web&utm_medium=organic&utm_campaign=alwayson_websocial&utm_content=static" }, { Icon: function ({ title: e = "Instagram", titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "currentColor", viewBox: "0 0 24 24", xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.319 1.347 20.651.935 19.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227-.224.562-.479.96-.899 1.382-.419.419-.824.679-1.38.896-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421-.569-.224-.96-.479-1.379-.899-.421-.419-.69-.824-.9-1.38-.165-.42-.359-1.065-.42-2.235-.045-1.26-.061-1.649-.061-4.844 0-3.196.016-3.586.061-4.861.061-1.17.255-1.814.42-2.234.21-.57.479-.96.9-1.381.419-.419.81-.689 1.379-.898.42-.166 1.051-.361 2.221-.421 1.275-.045 1.65-.06 4.859-.06l.045.03zm0 3.678c-3.405 0-6.162 2.76-6.162 6.162 0 3.405 2.76 6.162 6.162 6.162 3.405 0 6.162-2.76 6.162-6.162 0-3.405-2.76-6.162-6.162-6.162zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm7.846-10.405c0 .795-.646 1.44-1.44 1.44-.795 0-1.44-.646-1.44-1.44 0-.794.646-1.439 1.44-1.439.793-.001 1.44.645 1.44 1.439z" })] }) }, name: "Instagram", url: "https://www.instagram.com/ouraring/?utm_source=web&utm_medium=organic&utm_campaign=alwayson_websocial&utm_content=static" }, { Icon: function ({ title: e = "X (formerly known as Twitter)", titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "currentColor", viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M0.837831 0.0463867L6.39553 7.47756L0.802734 13.5194H2.06145L6.95793 8.22968L10.9142 13.5194H15.1976L9.32721 5.67025L14.5329 0.0463867H13.2742L8.76481 4.91813L5.12128 0.0463867H0.837831ZM2.68886 0.973558H4.65669L13.3463 12.5921H11.3785L2.68886 0.973558Z" })] }) }, name: "Twitter", url: "https://twitter.com/ouraring?utm_source=web&utm_medium=organic&utm_campaign=alwayson_websocial&utm_content=static" }, { Icon: function ({ title: e = "YouTube", titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "currentColor", viewBox: "0 0 24 24", xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z" })] }) }, name: "Youtube", url: "https://www.youtube.com/channel/UCf-xFf4xPcT9DVdOkcCaScg?utm_source=web&utm_medium=organic&utm_campaign=alwayson_websocial&utm_content=static" }, { Icon: function ({ title: e = "TikTok", titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-labelledby": r, fill: "currentColor", viewBox: "0 0 24 24", xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M12.525.02c1.31-.02 2.61-.01 3.91-.02.08 1.53.63 3.09 1.75 4.17 1.12 1.11 2.7 1.62 4.24 1.79v4.03c-1.44-.05-2.89-.35-4.2-.97-.57-.26-1.1-.59-1.62-.93-.01 2.92.01 5.84-.02 8.75-.08 1.4-.54 2.79-1.35 3.94-1.31 1.92-3.58 3.17-5.91 3.21-1.43.08-2.86-.31-4.08-1.03-2.02-1.19-3.44-3.37-3.65-5.71-.02-.5-.03-1-.01-1.49.18-1.9 1.12-3.72 2.58-4.96 1.66-1.44 3.98-2.13 6.15-1.72.02 1.48-.04 2.96-.04 4.44-.99-.32-2.15-.23-3.02.37-.63.41-1.11 1.04-1.36 1.75-.21.51-.15 1.07-.14 1.61.24 1.64 1.82 3.02 3.5 2.87 1.12-.01 2.19-.66 2.77-1.61.19-.33.4-.67.41-1.06.1-1.79.06-3.57.07-5.36.01-4.03-.01-8.05.02-12.07z" })] }) }, name: "TikTok", url: "https://www.tiktok.com/@ouraring?utm_source=web&utm_medium=organic&utm_campaign=alwayson_websocial&utm_content=static" }, { Icon: function ({ title: e = "Pinterest", titleId: r, ...t }) { return (0, l.jsxs)("svg", { "aria-hidden": "true", "aria-labelledby": r, fill: "currentColor", viewBox: "0 0 24 24", xmlns: "http://www.w3.org/2000/svg", ...t, children: [e ? (0, l.jsx)("title", { id: r, children: e }) : null, (0, l.jsx)("path", { d: "M12.017 0C5.396 0 .029 5.367.029 11.987c0 5.079 3.158 9.417 7.618 11.162-.105-.949-.199-2.403.041-3.439.219-.937 1.406-5.957 1.406-5.957s-.359-.72-.359-1.781c0-1.663.967-2.911 2.168-2.911 1.024 0 1.518.769 1.518 1.688 0 1.029-.653 2.567-.992 3.992-.285 1.193.6 2.165 1.775 2.165 2.128 0 3.768-2.245 3.768-5.487 0-2.861-2.063-4.869-5.008-4.869-3.41 0-5.409 2.562-5.409 5.199 0 1.033.394 2.143.889 2.741.099.12.112.225.085.345-.09.375-.293 1.199-.334 1.363-.053.225-.172.271-.401.165-1.495-.69-2.433-2.878-2.433-4.646 0-3.776 2.748-7.252 7.92-7.252 4.158 0 7.392 2.967 7.392 6.923 0 4.135-2.607 7.462-6.233 7.462-1.214 0-2.354-.629-2.758-1.379l-.749 2.848c-.269 1.045-1.004 2.352-1.498 3.146 1.123.345 2.306.535 3.55.535 6.607 0 11.985-5.365 11.985-11.987C23.97 5.39 18.592.026 11.985.026L12.017 0z" })] }) }, name: "Pinterest", url: "https://www.pinterest.com/Ouraring/?utm_source=web&utm_medium=organic&utm_campaign=alwayson_websocial&utm_content=static" }]; function aZ({ onSocialLinkClick: e }) { let { formatMessage: r } = (0, N.A)(); return (0, l.jsx)("nav", { "aria-label": r({ id: "footer_social_icons_aria_label" }), children: (0, l.jsx)("ul", { className: "ui-flex ui-gap-4", children: aV.map(r => (0, l.jsx)("li", { className: "ui-flex-none", children: (0, l.jsx)(aH, { ...r, onClick: e }) }, r.name)) }) }) } function aN({ border: e = !0, currentPath: r, heading: t, isLocalised: i, navLinkClass: n = "", navLinks: o, tabIndex: a, onClick: C }) { return (0, l.jsxs)("nav", { className: (0, s.cx)("lg:ui-pt-4", { "ui-border-sandstone-500 ui-border-opacity-[0.2] lg:ui-border-t": e }), children: [t ? (0, l.jsx)(nb, { Element: "div", className: "ui-pb-2.5", variant: "body-large", weight: "semibold", children: i ? t : l2(t) }) : null, (0, l.jsx)("ul", { className: "ui-flex ui-flex-col ui-space-y-3", children: o.map(({ id: e, label: t, ...o }) => (0, l.jsx)(nq, { className: (0, s.cx)(n, { "ui-font-bold ui-cursor-default": r === o.href }), ...o, onClick: C, tabIndex: a, children: i ? t : l2(t) }, e)) })] }) } aZ.displayName = "FooterSocialIconsV3", G(), nq.displayName = "NavLinksV3", G(); var aR = (0, s.F)("", { variants: { rowGap: { 0: "ui-gap-y-0", 8: "ui-gap-y-2", 16: "ui-gap-y-4", 24: "ui-gap-y-6", 32: "ui-gap-y-8", 40: "ui-gap-y-10", 48: "ui-gap-y-12", 56: "ui-gap-y-14", 64: "ui-gap-y-16", 80: "ui-gap-y-20", 96: "ui-gap-y-24", 112: "ui-gap-y-28", 128: "ui-gap-y-32", 144: "ui-gap-y-36", 160: "ui-gap-y-40", 176: "ui-gap-y-44" } }, defaultVariants: { rowGap: 8 } }); function aS({ children: e, className: r = "", Element: t = "div", rowGap: i, ...n }) { return (0, l.jsx)(t, { className: aR({ rowGap: i, className: `gridContainerV3 ${r}` }), "data-cy": "layout-grid", ...n, children: e }) } aS.displayName = "LayoutGrid", G(); var aP = (0, s.F)("ui-relative ui-min-h-full", { variants: { background: { "gray-600": "ui-bg-gray-600", "cream-100": "ui-bg-cream-100", "sandstone-200": "ui-bg-sandstone-200", "sandstone-300": "ui-bg-sandstone-300", "sandstone-400": "ui-bg-sandstone-400", "gray-100": "ui-bg-gray-100", "gray-200": "ui-bg-gray-200", "slate-100": "ui-bg-slate-100", "slate-300": "ui-bg-slate-300", "slate-600": "ui-bg-slate-600", "mustard-50": "ui-bg-mustard-50" } }, defaultVariants: { background: "gray-100" } }); function aI({ background: e, className: r = "", children: t, gradients: i, ...n }) { return (0, l.jsxs)("div", { className: aP({ background: e, className: r }), "data-cy": "radialGradientBG_div", ...n, children: [i.map(({ hex: e, id: r, ...t }) => (0, l.jsx)(nJ, { hex: e, id: r, ...t }, `${e}-${r}`)), t] }) } aI.displayName = "RadialGradientBG"; var aO = [{ shape: "ellipse", hex: "#3A3837", id: "gray-1", position: [10, 99], opacity: 1, size: 50 }, { shape: "ellipse", hex: "#3A3837", id: "gray-2", position: [99, 10], opacity: 1, size: 50 }]; function aA({ category: e, isLocalised: r, onClick: t }) { return (0, l.jsxs)("div", { className: "ui-pt-8 ui-text-gray-400", children: [null != e && e.title ? (0, l.jsx)(nb, { Element: "span", color: "inherit", weight: "bold", children: r ? e.title : l2(e.title) }) : null, (0, l.jsx)("div", { className: "ui-text-sandstone-200 ui-pt-3 lg:ui-pt-0", children: null != e && e.links ? (0, l.jsx)(aN, { border: !1, isLocalised: r, navLinkClass: "ui-text-stroke-color-transparent ui-text-stroke-width-0.5 ui-transition-all hover:ui-text-stroke-color-current", navLinks: e.links, onClick: t, tabIndex: 0 }) : null })] }) } var az = { em: function (e) { return (0, l.jsx)("em", { className: "ui-font-serif ui-italic ui-self-end", children: e }) } }; function aB({ children: e }) { let r = (0, C.I)(), t = (0, i.useRef)(null), { scrollYProgress: n } = (0, R.L)({ target: t, offset: ["start end", "end start"] }), o = (0, I.G)(n, [0, 1], ["-20%", "5%"]); return (0, l.jsx)(d.P.div, { ref: t, style: { position: "absolute", inset: 0, y: r ? 0 : o, height: r ? "100%" : "115%" }, children: e }) } function aE({ children: e }) { return (0, l.jsx)(l.Fragment, { children: e }) } function aF({ disableImageMotion: e = !1, emailSubmitted: r, footerImageComponent: t, footerLinks: i, hideSocialLinks: n, inverseHeaderOnScrollUp: o = !1, legalLinks: a, onFooterLinkClick: C, onNewsletterFormSubmit: u, onSocialLinkClick: d, showHsaFsaBlockLogo: c, wrapperClassName: h = "ui-bg-gray-600" }) { var f, _, p; let { formatMessage: m } = (0, N.A)(), x = null != i ? i : aL.footerLinks, g = x.find(({ id: e }) => "our-company-category" === e), v = x.find(({ id: e }) => "support-category" === e), L = x.find(({ id: e }) => "partner-category" === e), b = x.find(({ id: e }) => "blog-category" === e), y = x.find(({ id: e }) => "footer-card" === e), w = null != a ? a : aL.legalLinks; return (0, l.jsx)(n$, { enter: !0, exit: o, children: (0, l.jsxs)(aS, { className: (0, s.cx)("lg:ui-px-6 lg:ui-pb-6", h), "data-cy": "ecom-footer", children: [(0, l.jsx)(nU, { colEnd: { sm: "full" }, colStart: { sm: "full" }, rowEnd: { sm: 10, md: 6, lg: 4 }, rowStart: { sm: 1, md: 1, lg: 1 }, children: (0, l.jsx)(aI, { background: "gray-600", className: "lg:ui-rounded-xl ui-overflow-hidden", gradients: aO }) }), (0, l.jsx)(nU, { className: (0, s.cx)("ui-relative ui-h-[320px] ui-mt-8 ui-rounded-lg ui-overflow-hidden", "md:ui-rounded-none md:ui-rounded-r-lg md:ui-mt-0 md:ui-h-full", "lg:ui-rounded-lg"), colEnd: { sm: "main", md: 10, lg: 7 }, colStart: { sm: "main", md: "full", lg: "full" }, rowEnd: { sm: 4, md: 6, lg: 4 }, rowStart: { sm: 1, md: 1, lg: 1 }, children: (0, l.jsx)("nav", { className: "ui-h-full", id: "nav_footer", children: (0, l.jsx)("ul", { className: "ui-h-full", children: null != y && y.link ? (0, l.jsx)(nq, { "aria-label": y.link.ariaLabel || m({ id: "shop_rings" }), className: (0, s.cx)("ui-block ui-h-full ui-relative ui-rounded-lg ui-overflow-hidden", "md:ui-rounded-none md:ui-rounded-r-lg", "lg:ui-rounded-lg"), "data-cy": "footer-cta-link", href: y.link.href, onClick: C, tabIndex: 0, target: y.link.target, children: (0, l.jsx)(e ? aE : aB, { children: t }) }) : null }) }) }), (0, l.jsxs)(nU, { className: (0, s.cx)("ui-relative ui-pt-12 ui-pb-8 ui-px-6", "ui-pointer-events-none", "ui-flex ui-flex-col ui-justify-between", "md:ui-pt-8"), colEnd: { sm: "main", md: 10, lg: 7 }, colStart: { sm: "main", md: "full", lg: "full" }, rowEnd: { sm: 4, md: 6, lg: 4 }, rowStart: { sm: 1, md: 1, lg: 1 }, children: [(0, l.jsx)(nb, { Element: "div", className: "footerImageCta ui-flex ui-flex-col ui-text-heading-lg ui-max-w-80 xl:ui-max-w-none", color: (null == (_ = null == (f = null == y ? void 0 : y.link) ? void 0 : f.overlay) ? void 0 : _.color) || "light", "data-cy": "footer-cta-title", height: "tight", variant: "unset", weight: "thin", children: (null == y ? void 0 : y.title) || l2("footer_image_cta", az) }), (0, l.jsx)("div", { className: (0, s.cx)("ui-bg-blue-100 ui-text-sandstone-200", "ui-self-center ui-rounded-full ui-text-center ui-inline-block", "ui-py-2 ui-px-4 lg:ui-py-3 lg:ui-px-6"), "data-cy": "footer-cta-action", children: (null == (p = null == y ? void 0 : y.link) ? void 0 : p.label) || l2("shop") })] }), (0, l.jsxs)(nU, { className: "ui-relative", colEnd: { sm: 5, md: 17, lg: 11 }, colStart: { sm: "main", md: 11, lg: 8 }, rowEnd: { sm: 6, md: 2 }, rowStart: { sm: 4, md: 1 }, children: [(0, l.jsx)(aA, { category: g, isLocalised: !!i, onClick: C }), (0, l.jsx)("div", { className: "lg:ui-hidden", children: (0, l.jsx)(aA, { category: L, isLocalised: !!i, onClick: C }) })] }), (0, l.jsxs)(nU, { className: "ui-relative", colEnd: { sm: "main", md: "main", lg: 15 }, colStart: { sm: 6, md: 18, lg: 12 }, rowEnd: { sm: 6, md: 2 }, rowStart: { sm: 4, md: 1 }, children: [(0, l.jsx)(aA, { category: v, isLocalised: !!i, onClick: C }), (0, l.jsx)("div", { className: "lg:ui-hidden", children: (0, l.jsx)(aA, { category: b, isLocalised: !!i, onClick: C }) })] }), (0, l.jsxs)(nU, { className: "ui-relative ui-hidden lg:ui-block", colEnd: { sm: "main", md: "main", lg: 20 }, colStart: { sm: 6, md: 18, lg: 16 }, rowEnd: { sm: 6, md: 3, lg: 2 }, rowStart: { sm: 5, md: 2, lg: 1 }, children: [(0, l.jsx)(aA, { category: L, isLocalised: !!i, onClick: C }), (0, l.jsx)(aA, { category: b, isLocalised: !!i, onClick: C })] }), (0, l.jsxs)(nU, { className: "ui-relative ui-text-gray-400 ui-pt-2 lg:ui-pt-28", colEnd: { sm: "main", md: "main", lg: 15 }, colStart: { sm: "main", md: 11, lg: 8 }, rowEnd: { sm: 8, md: 5, lg: 3 }, rowStart: { sm: 7, md: 4, lg: 2 }, children: [!n && (0, l.jsx)(nb, { Element: "span", color: "inherit", "data-cy": "footer-social-title", weight: "bold", children: l2("footer_social_heading") }), (0, l.jsxs)("div", { className: (0, s.cx)("ui-flex ui-flex-col ui-pt-4 ui-gap-4", "lg:ui-justify-normal lg:ui-pt-7"), children: [!n && (0, l.jsx)("div", { "data-cy": "footer-social-links", children: (0, l.jsx)(aZ, { onSocialLinkClick: d }) }), c ? (0, l.jsx)("ul", { children: (0, l.jsx)(nq, { className: "ui-inline-block ui-mt-8 md:ui-mt-0 lg:ui-mt-8", "data-cy": "footer-hsa-fsa-nav-link", external: !0, hideArrow: !0, href: "https://support.ouraring.com/hc/en-us/articles/19777137314579-Purchase-with-FSA-or-HSA-Funds", onClick: C, rel: "noopener noreferrer", target: "_blank", children: (0, l.jsx)(ik, { color: "#F7F1E8", fill: "#272625", height: 44, width: 100 }) }) }) : null] })] }), (0, l.jsx)(nU, { className: "ui-relative ui-text-gray-400 ui-pt-4 lg:ui-pt-28", colEnd: { sm: "main", md: "main", lg: "main" }, colStart: { sm: "main", md: 11, lg: 16 }, rowEnd: { sm: 7, md: 4, lg: 3 }, rowStart: { sm: 6, md: 3, lg: 2 }, children: (0, l.jsx)(ay, { emailSubmitted: r, onNewsletterFormSubmit: u }) }), (0, l.jsx)(nU, { className: "ui-relative", colEnd: { sm: "main", md: "main", lg: "main" }, colStart: { sm: "main", md: 11, lg: 8 }, rowEnd: { sm: 9, md: 6, lg: 3 }, rowStart: { sm: 8, md: 5, lg: 3 }, children: (0, l.jsx)(ak, { isLocalised: !!a, legalLinks: w }) })] }) }) } aF.displayName = "EcomFooter", G(), G(); var aT = [{ shape: "ellipse", hex: "#3A3837", id: "gray-1", position: [10, 99], opacity: 1, size: 50 }, { shape: "ellipse", hex: "#3A3837", id: "gray-2", position: [99, 10], opacity: 1, size: 50 }]; function aD({ inverseHeaderOnScrollUp: e = !1, hideSocialLinks: r, legalLinks: t, onSocialLinkClick: i, wrapperClassName: n = "ui-bg-gray-600" }) { let o = null != t ? t : aL.legalLinks; return (0, l.jsx)(n$, { enter: !0, exit: e, children: (0, l.jsxs)(aS, { className: (0, s.cx)(n), "data-cy": "simple-footer", children: [(0, l.jsx)(nU, { colEnd: { sm: "full" }, colStart: { sm: "full" }, rowEnd: { sm: 4 }, rowStart: { sm: 1 }, children: (0, l.jsx)(aI, { background: "gray-600", className: "ui-h-full ui-w-full ui-overflow-hidden", gradients: aT }) }), (0, l.jsxs)(nU, { className: (0, s.cx)("ui-relative ui-text-gray-400", "ui-pt-8 ui-pb-1", "ui-flex ui-justify-between ui-flex-wrap ui-gap-x-12", { "ui-items-end ui-gap-y-1": !r, "ui-items-center ui-gap-y-16": r }), colEnd: { sm: "main" }, colStart: { sm: "main" }, rowEnd: { sm: 2 }, rowStart: { sm: 1 }, children: [(0, l.jsxs)("div", { className: "ui-flex ui-flex-col ui-gap-y-16", children: [(0, l.jsx)(iJ, { color: "#F7F1E8", fill: "#272625", height: 44, width: 100 }), !r && (0, l.jsxs)("section", { "data-cy": "footer-social-links", children: [(0, l.jsx)(nb, { Element: "h4", className: "ui-sr-only", children: l2("footer_social_heading") }), (0, l.jsx)(aZ, { onSocialLinkClick: i })] })] }), (0, l.jsx)("div", { className: "ui-py-3", children: (0, l.jsx)(aj, { isLocalised: !!t, links: o }) })] }), (0, l.jsx)(nU, { className: (0, s.cx)("ui-relative", "ui-text-gray-400 ui-border-t ui-border-gray-400", "ui-pt-8 ui-pb-8 lg:ui-pb-16"), colEnd: { sm: "main" }, colStart: { sm: "main" }, rowEnd: { sm: 3 }, rowStart: { sm: 2 }, children: (0, l.jsx)(aw, {}) })] }) }) } function aW({ hidden: e, variant: r = "ecom", ...t }) { let n = (0, i.useMemo)(() => "simple" === r ? aD : aF, [r]), { setIsFooterInView: o } = rQ(), a = (0, i.useRef)(null), s = (0, _.W)(a); return (0, i.useEffect)(() => { o(s) }, [s, o]), e ? null : (0, l.jsx)("footer", { "data-cy": "footer", ref: a, children: (0, l.jsx)(n, { ...t }) }) } function aG({ marker: e, content: r, linkProps: t }) { var n; let o = (0, i.useContext)(r5), a = null != (n = null == o ? void 0 : o.LinkComponent) ? n : "a"; return (0, l.jsxs)(nV, { className: "ui-!mb-1 ui-!mt-0 ui-text-sm", color: "inherit", "data-cy": `footnote-${r}`, children: [(0, l.jsxs)("sup", { children: [e, "\xa0"] }), t ? (0, l.jsx)(a, { className: "ui-no-underline", "data-cy": `footnote-${r}-link`, href: t.href || "", ...t, children: r }) : (0, l.jsx)(l.Fragment, { children: r })] }) } G(); var aU = (0, s.F)("pb-8 pt-16", { variants: { color: { "gray-600": "bg-gray-600 text-sandstone-200", "sandstone-500": "bg-sandstone-500 text-sandstone-200", "mustard-350": "bg-mustard-350 text-sandstone-200" } }, defaultVariants: { color: "gray-600" } }); function a$({ afterContent: e, footnotes: r = [], className: t, color: n, inverseHeader: o = !1, ...a }) { return r.length ? (0, l.jsx)(n$, { enter: o, children: (0, l.jsx)(aS, { className: aU({ color: n, className: t }), "data-cy": "footnotes", ...a, children: (0, l.jsx)(nU, { className: "ui-border-y ui-border-gray-400 ui-pb-5 ui-pt-6", colEnd: { sm: "main", md: "main", lg: 22 }, colStart: { sm: "main", md: "main", lg: 4 }, children: (0, l.jsxs)("div", { className: "ui-flex ui-flex-col ui-gap-y-6", children: [(0, l.jsx)(oL, { Element: "ol", className: "ui-flex ui-flex-col ui-gap-y-1 ui-w-full", color: "inherit", unstyled: !0, children: r.map(e => (0, i.createElement)(aG, { ...e, key: `footnote-${e.marker}` })) }), e] }) }) }) }) : null } G(), G(); var aq = { em: function (e) { return (0, l.jsx)("em", { className: "ui-font-serif ui-italic", children: e }) } }; function aK({ isLocalised: e, menuCardLink: r, menuImageComponent: t, onClick: i, tabIndex: n }) { var o, a; let { formatMessage: C } = (0, N.A)(), u = null == r ? void 0 : r.link, d = null == u ? void 0 : u.overlay, c = null != (o = null == d ? void 0 : d.color) ? o : "light", h = null != (a = null == d ? void 0 : d.title) ? a : l2("gen4_is_here", aq), f = null == d ? void 0 : d.description; return (0, l.jsx)(nU, { colEnd: { sm: "main", lg: "main" }, colStart: { sm: "main", lg: 17 }, children: (0, l.jsxs)("nav", { className: "ui-grid ui-grid-cols-1", children: [(0, l.jsx)(nU, { colEnd: { sm: "full" }, colStart: { sm: "full" }, rowEnd: { sm: 2 }, rowStart: { sm: 1 }, children: (0, l.jsx)("ul", { children: u ? (0, l.jsx)(nq, { "aria-label": C({ id: "shop_rings" }), className: "ui-block ui-rounded-xl ui-overflow-hidden", "data-cy": "shop", href: u.href, onClick: i, tabIndex: n, children: t }) : null }) }), (0, l.jsx)(nU, { className: "ui-p-4 ui-flex ui-flex-col ui-justify-start ui-pointer-events-none ui-relative", colEnd: { sm: "full" }, colStart: { sm: "full" }, rowEnd: { sm: 2 }, rowStart: { sm: 1 }, children: (0, l.jsxs)(nb, { Element: "div", className: "ui-flex ui-flex-col", children: [(0, l.jsx)(nb, { Element: "span", className: "ui-text-heading-sm xl:ui-text-heading-lg", color: c, height: f ? "none" : "tight", variant: "unset", weight: f ? "normal" : "thin", children: h }), f ? (0, l.jsx)(nb, { Element: "p", className: "ui-mt-3", color: c, variant: "base", weight: "normal", children: f }) : null] }) }), (0, l.jsx)(nU, { className: "ui-p-4 ui-flex ui-flex-col ui-justify-end ui-pointer-events-none ui-relative", colEnd: { sm: "full" }, colStart: { sm: "full" }, rowEnd: { sm: 2 }, rowStart: { sm: 1 }, children: u ? (0, l.jsx)("div", { className: (0, s.cx)("ui-bg-blue-100 ui-text-sandstone-200", "ui-self-end ui-rounded-full ui-text-center ui-inline-block", "ui-py-2 ui-px-4 lg:ui-py-3 lg:ui-px-6"), children: e ? u.label : l2("shop") }) : null })] }) }) } aK.displayName = "MenuCtaImage", G(); var aX = { menuLinks: [{ id: "shop-category", title: "shop", links: [{ id: "oura-ring", href: "/product/rings", label: "ring_gen_4" }, { id: "sale", href: "/product/rings/oura-gen3", label: "ring_gen3_on_sale" }, { id: "chargers", href: "/product/accessories/charger-oura-4", label: "drop_down_extra_charger" }] }, { id: "why-oura-category", title: "why_oura_link", links: [{ id: "why-oura", href: "/why-oura", label: "explore_why_oura_link" }, { id: "science-and-research", href: "/science-and-research", label: "science_and_research_link" }, { id: "sleep-and-rest", href: "/sleep-and-rest", label: "sleep_and_rest_link" }, { id: "womens-health", href: "/womens-health", label: "womens_health_link" }, { id: "stress", href: "/stress", label: "stress_link" }, { id: "heart-health", href: "/heart-health", label: "heart_health_link" }, { id: "activity-and-movement", href: "/activity-and-movement", label: "activity_and_movement_link" }] }, { id: "how-it-works-category", title: "how_it_works_link", links: [{ id: "how-it-works", href: "/how-it-works", label: "explore_how_it_works_link" }, { id: "integrations", href: "/integrations", label: "integrations_link" }] }, { id: "menu-card", title: "shop", link: { id: "oura-ring", href: "/product/rings", label: "shop" } }] }, aJ = [{ shape: "circle", hex: "#D7C9A7", id: "butter-1", position: [10, 10], opacity: 1, size: 40 }, { shape: "circle", hex: "#D7C9A7", id: "butter-2", position: [70, 70], opacity: 1, size: 90 }], aY = ["main", 7, 12], aQ = [6, 11, 16]; function a1({ currentPath: e, isLocalised: r, menuCardLink: t, menuImageComponent: i, menuLinks: n, open: o, onMenuLinkClick: a, onMenuShopButtonClick: C }) { let u = o ? 0 : -1; return (0, l.jsx)("div", { "aria-describedby": "hamburger", "aria-hidden": !o, className: (0, s.cx)("ui-rounded-b-xl ui-bg-sandstone-200", "ui-fixed ui-top-0 ui-left-0 ui-right-0", "ui-transition-all ui-duration-300", "ui-pt-28 ui-pb-16", "ui-hidden lg:ui-block", { "ui--translate-y-full": !o }, { "ui-translate-y-0": o }), "data-cy": "desktop-menu", id: "navMenu", children: (0, l.jsxs)(aS, { children: [null == n ? void 0 : n.map((t, i) => { if (!t.links) return null; let n = aQ[i], o = aY[i]; return (0, l.jsx)(nU, { colEnd: { lg: n }, colStart: { lg: o }, children: (0, l.jsx)(aN, { currentPath: e, heading: t.title, isLocalised: r, navLinkClass: "hover:ui-font-bold", navLinks: t.links, onClick: a, tabIndex: u }) }, t.id) }), (0, l.jsx)(aK, { isLocalised: r, menuCardLink: t, menuImageComponent: i, onClick: C, tabIndex: u })] }) }) } function a2({ accordionOpenAtIndex: e = null, currentPath: r, hideLinks: t, isLocalised: n, menuCardLink: o, menuImageComponent: a, menuLinks: C, open: u, onMenuLinkClick: d, onMenuShopButtonClick: c }) { let h = u ? 0 : -1; return (0, l.jsx)("div", { "aria-describedby": "hamburger", "aria-hidden": !u, className: (0, s.cx)("ui-fixed ui-top-0 ui-left-0 ui-right-0 ui-z-100", "ui-transition-all ui-duration-300", "ui-h-dvh ui-overflow-y-scroll", "lg:ui-hidden", { "ui--translate-y-full": !u }, { "ui-translate-y-0": u }), "data-cy": "mobile-menu", id: "navMenu", children: (0, l.jsx)(aI, { background: "cream-100", className: "ui-pt-20 ui-pb-8", gradients: aJ, children: (0, l.jsxs)(aS, { className: "ui-h-auto ui-content-between ui-relative", style: { minHeight: "calc(100dvh - 112px)" }, children: [(0, l.jsx)(nU, { colEnd: { sm: "main" }, colStart: { sm: "main" }, children: t ? (0, l.jsx)("div", {}) : (0, l.jsx)(nn, { close: !u, nested: !0, openAtIndex: e, children: null == C ? void 0 : C.map(e => (0, l.jsxs)(i.Fragment, { children: [(0, l.jsx)(nr, { children: e.title ? (0, l.jsx)(nb, { Element: "div", variant: "body-large", children: n ? e.title : l2(e.title) }) : null }), (0, l.jsx)(nt, { children: e.links ? (0, l.jsx)(aN, { currentPath: r, isLocalised: n, navLinkClass: "hover:ui-font-bold", navLinks: e.links, onClick: d, tabIndex: h }) : null })] }, e.id)) }) }), (0, l.jsx)(aK, { isLocalised: n, menuCardLink: o, menuImageComponent: a, onClick: c, tabIndex: h })] }) }) }) } function a3({ menuLinks: e, ...r }) { let t = null != e ? e : aX.menuLinks, i = t.filter(({ id: e }) => "menu-card" !== e), n = t.find(({ id: e }) => "menu-card" === e); return (0, l.jsxs)("div", { className: "menuWrapper", children: [(0, l.jsx)(a2, { isLocalised: !!e, menuCardLink: n, menuLinks: i, ...r }), (0, l.jsx)(a1, { isLocalised: !!e, menuCardLink: n, menuLinks: i, ...r })] }) } function a4({ isParentInverse: e, onHamburgerClick: r }) { var t; let [l, n] = (0, i.useState)(0), [o, a] = (0, i.useState)(!0), [s, C] = (0, i.useState)(!1), u = (0, i.useRef)(null), d = (0, i.useRef)(null), c = r3(), { formatMessage: h } = (0, N.A)(), f = s ? 0 : -1; tl(s); let { scrollY: _ } = (0, R.L)(); (0, i.useEffect)(() => { n(window.scrollY) }, []), (0, S.L)(_, "change", e => { a(l > e), n(e) }), (0, i.useEffect)(() => { let e = () => { var e; null == (e = u.current) || e.focus() }, r = u.current, t = d.current; if (r && t) return t.addEventListener("blur", e), () => { t.removeEventListener("blur", e) } }, []); let p = !1; switch (!0) { case s: break; case e: p = !0; break; case null == c ? void 0 : c.inverse: p = null != (t = null == c ? void 0 : c.inverse) && t }return { blurElement: d, formatMessage: h, hamburgerElement: u, inverse: p, position: l, open: s, tabIndex: f, visible: o, onHamburgerButtonClick: () => { C(e => !e), null == r || r({ open: !s }) }, onOutsideClick: () => { var e; C(!1), null == (e = u.current) || e.focus() } } } a3.displayName = "Menu", G(), G(), G(), G(); var a5 = { headerLinks: [{ id: "why-oura-category", link: { id: "nav_ouraexperience", href: "/why-oura", label: "why_oura_link" } }, { id: "how-it-works-category", link: { id: "nav_howitworks", href: "/how-it-works", label: "how_it_works_link" } }, { id: "business-category", link: { id: "nav_business", href: "/business", label: "for_business_link" } }, { id: "shop-category", link: { id: "oura-ring", href: "/product/rings", label: "shop" } }] }; function a6({ currentPath: e, headerLinks: r, onClick: t, open: i }) { let n = (null != r ? r : a5.headerLinks).filter(({ id: e }) => "shop-category" !== e); return (0, l.jsx)("ul", { className: (0, s.cx)("ui-hidden lg:ui-flex lg:ui-gap-12", { "ui-opacity-0": i }), children: n.map(({ link: n }) => n ? (0, l.jsx)(nq, { className: (0, s.cx)("ui-py-3 ui-text-stroke-color-transparent ui-text-stroke-width-0.5 ui-transition-all hover:ui-text-stroke-color-current", { "ui-font-bold ui-cursor-default": e === n.href }), href: n.href, id: n.id, onClick: t, tabIndex: i ? -1 : 0, children: r ? n.label : l2(n.label) }, n.id) : null) }) } function a7({ blurElement: e, onOutsideClick: r, open: t, tabIndex: i }) { return (0, l.jsx)("button", { "aria-hidden": !t, className: (0, s.cx)("headerMenuBlurV3 ui-hidden", "lg:ui-fixed lg:ui-top-0 lg:ui-left-0 lg:ui-right-0", "lg:ui-block lg:ui-transition-opacity lg:ui--z-10", { "lg:ui-bottom-auto lg:ui-opacity-0": !t, "lg:ui-bottom-0": t }), "data-cy": "desktop_menu_background_blur", onClick: r, ref: e, tabIndex: i, type: "button", children: (0, l.jsx)("span", { className: "ui-sr-only", children: l2("header_hamburger_close_sr_label_2024") }) }) } function a8({ accordionOpenAtIndex: e, count: r, currentPath: t, menuImageComponent: i, menuLinks: n, headerLinks: o, headerPosition: a = "fold", hideHamburger: C = !1, hideLinks: u = !1, inverse: d, shopButton: c = { href: "/product/rings", label: l2("shop") }, showCart: h = !0, onClick: f, onHamburgerClick: _, onMenuLinkClick: p, onMenuShopButtonClick: m, onShopButtonClick: x, onShoppingCartClick: g }) { let { blurElement: v, formatMessage: L, hamburgerElement: b, inverse: y, position: w, open: j, tabIndex: k, visible: M, onHamburgerButtonClick: H, onOutsideClick: V } = a4({ isParentInverse: d, onHamburgerClick: _ }); return (0, l.jsxs)("header", { className: (0, s.cx)("ui-py-2 ui-mt-4 ui-w-full ui-transition-all ui-duration-500 ui-z-100 ui-pointer-events-auto", { "lg:ui--top-28": !M && "fold" === a, "ui-relative ui-top-0": "static" === a, "ui-sticky ui-top-4": ["fold", "fixed"].includes(a) }), "data-cy": "header", children: [(0, l.jsx)("div", { className: (0, s.cx)("headerBlurV3 ui-overflow-hidden ui-rounded-lg", "ui-absolute ui-top-0 ui-right-2 ui-bottom-0 ui-left-2", "lg:ui-left-6 lg:ui-right-6 lg:ui-transition-opacity", { inverse: y, "lg:ui-opacity-0": w < 10 && M || "static" === a, hideBlur: !M && "fold" === a }) }), (0, l.jsx)(aS, { className: (0, s.cx)("ui-z-200", { "ui-fixed ui-top-6 ui-left-0 ui-right-0 ui-w-full xxl:ui-left-1/2 xxl:-ui-translate-x-1/2": j, "ui-relative": !j }), children: (0, l.jsx)(nU, { colEnd: { sm: "main" }, colStart: { sm: "main" }, children: (0, l.jsxs)("nav", { className: (0, s.cx)("headerV3 ui-flex ui-items-center", { inverse: y }), children: [(0, l.jsx)("ul", { className: "ui-relative ui-w-24 ui-z-200", children: (0, l.jsx)(nq, { "aria-label": L({ id: "oura_home_link" }), className: "ui-py-3 ui-block ui-w-16 lg:ui-w-20", "data-cy": "nav_logo_link", href: "/", id: "nav_home", onClick: f, children: (0, l.jsx)(iJ, {}) }) }), (0, l.jsxs)("div", { className: (0, s.cx)("ui-flex-1 ui-flex ui-items-center ui-justify-end ui-mx-2", "ui-transition lg:ui-gap-12", "sm:ui-mx-4", { "ui-opacity-0 ui-pointer-events-none": j, "lg:ui-justify-end": u, "lg:ui-justify-center": !u }), children: [u ? null : (0, l.jsx)(a6, { currentPath: t, headerLinks: o, onClick: f, open: j }), c ? (0, l.jsx)(n_, { className: (0, s.cx)({ "ui-hidden": j }), "data-cy": "nav_shopcta", href: c.href, onClick: x, size: "medium", children: c.label }) : null] }), h && r ? (0, l.jsx)("div", { className: (0, s.cx)({ "ui-hidden": j }), children: (0, l.jsx)(oH, { hiddenHamburger: C, inverseHeader: y, onShoppingCartClick: g, shoppingCartCount: r }) }) : null, C ? null : (0, l.jsx)(og, { hideLinks: u, onClick: H, open: j, ref: b })] }) }) }), (0, l.jsx)(a3, { accordionOpenAtIndex: e, currentPath: t, hideLinks: u, menuImageComponent: i, menuLinks: n, onMenuLinkClick: p, onMenuShopButtonClick: m, open: j }), (0, l.jsx)(a7, { blurElement: v, onOutsideClick: V, open: j, tabIndex: k })] }) } a6.displayName = "MainLinks", G(), a7.displayName = "DesktopMenuBlur", a8.displayName = "HeaderV3", G(); var a9 = "main-content"; function a0({ className: e, displayMessage: r, ...t }) { return (0, l.jsx)("div", { className: (0, s.cx)("ui-py-3.5 ui-px-1 ui-text-center ui-pointer-events-auto ui-relative ui-z-10", e), "data-cy": "eyebrow-cta-message", ...t, children: (0, l.jsx)(r, {}) }) } function se({ children: e, className: r = "", containerProps: t, eyebrowProps: i, footnotesProps: n, headerProps: o, hideFooter: a = !1, hideHeader: C = !1, footerProps: u, mainLabel: d, Header: c = a8, preFooterContent: h }) { let { name: f = "", padding: _ = "both", className: p = "", h1: m } = t; return (0, l.jsxs)("div", { className: "tailwind", children: [(0, l.jsx)("div", { className: "ui-sr-only focus-within:ui-not-sr-only focus-within:ui-py-2 focus-within:ui-px-4", children: (0, l.jsx)("a", { "data-cy": "skip-to-content", href: `#${a9}`, children: l2("header_skip_to_content") }) }), (0, l.jsxs)("div", { className: (0, s.cx)(r, "ui-flex ui-flex-col ui-min-h-screen"), "data-cy": "page-wrapper", id: "page-wrapper", children: [(0, l.jsxs)("div", { className: "ui-relative ui-pointer-events-none ui-flex-grow", children: [i ? (0, l.jsx)(a0, { ...i }) : null, (0, l.jsx)("div", { className: "ui-absolute ui-top-auto ui-bottom-auto ui-w-full ui-h-full ui-pointer-events-none", children: !C && (0, l.jsx)(c, { ...o }) }), (0, l.jsxs)("main", { "aria-label": d, className: "ui-pointer-events-auto", "data-cy": a9, id: a9, tabIndex: -1, children: [(0, l.jsxs)("div", { className: (0, s.cx)({ "ui-pt-36": "top" === _, "ui-pb-16": "bottom" === _, "ui-pt-36 ui-pb-16": "both" === _ || !_, [p]: !!p }), "data-cy": `page-${f}`, children: [m ? (0, l.jsx)("h1", { className: "ui-sr-only", children: m }) : null, e] }), n ? (0, l.jsx)(a$, { ...n }) : null, h] })] }), (0, l.jsx)(aW, { ...u, hidden: u.hidden || a })] })] }) } function sr({ accordionOpenAtIndex: e, count: r, currentPath: t, menuImageComponent: n, menuLinks: o, headerLinks: a, isCarouselInView: C = !1, onClick: u, onHamburgerClick: d, onMenuLinkClick: c, onMenuShopButtonClick: h, onShoppingCartClick: f }) { let { blurElement: _, formatMessage: p, hamburgerElement: m, inverse: x, open: g, tabIndex: v, onHamburgerButtonClick: L, onOutsideClick: b } = a4({ onHamburgerClick: d }), { fadeLinks: y, fadeOuraLogo: w } = function ({ isCarouselInView: e }) { let [r, t] = (0, i.useState)(!1), [l, n] = (0, i.useState)(!1), { scrollY: o } = (0, R.L)(); return (0, S.L)(o, "change", e => { e > 10 ? t(!0) : t(!1) }), (0, i.useEffect)(() => { n(!e) }, [e]), { fadeLinks: r, fadeOuraLogo: l } }({ isCarouselInView: C }); return (0, l.jsxs)("header", { className: (0, s.cx)("ui-relative ui-top-0 ui-py-2 ui-mt-4 ui-w-full ui-transition-all ui-duration-500 ui-z-100 ui-pointer-events-auto", "lg:ui-sticky lg:ui-top-4", { "lg:ui-pointer-events-none": y }, { "lg:ui-pointer-events-auto": !y }), "data-cy": "header", children: [(0, l.jsx)("div", { className: (0, s.cx)("headerBlurV3 ui-overflow-hidden ui-rounded-lg", "ui-absolute ui-top-0 ui-right-2 ui-bottom-0 ui-left-2", "lg:ui-opacity-0", { inverse: x }) }), (0, l.jsx)(aS, { className: (0, s.cx)("ui-z-200", { "ui-fixed ui-top-6 ui-left-0 ui-right-0 ui-w-full xxl:ui-left-1/2 xxl:-ui-translate-x-1/2": g, "ui-relative": !g }), children: (0, l.jsx)(nU, { colEnd: { sm: "main" }, colStart: { sm: "main" }, children: (0, l.jsxs)("nav", { className: (0, s.cx)("headerV3 ui-flex ui-items-center", { inverse: x }), children: [(0, l.jsx)("ul", { className: (0, s.cx)("ui-opacity-100 ui-relative ui-w-24 ui-z-200 ui-transition-opacity", { "lg:ui-opacity-0 lg:ui-pointer-events-none": w, "lg:ui-opacity-100 lg:ui-pointer-events-auto": !w }), children: (0, l.jsx)(nq, { "aria-label": p({ id: "oura_home_link" }), className: "ui-py-3 ui-block ui-w-16 lg:ui-w-20", "data-cy": "nav_logo_link", href: "/", id: "nav_home", onClick: u, children: (0, l.jsx)(iJ, {}) }) }), (0, l.jsx)("div", { className: (0, s.cx)("ui-flex-1 ui-flex ui-items-center ui-justify-end ui-mx-2", "ui-transition lg:ui-gap-12 lg:ui-justify-center", "sm:ui-mx-4", { "ui-opacity-0 ui-pointer-events-none": g, "lg:ui-opacity-0": y, "lg:ui-opacity-100": !y }), children: (0, l.jsx)(a6, { currentPath: t, headerLinks: a, onClick: u, open: g }) }), r ? (0, l.jsx)("div", { className: (0, s.cx)("ui-transition-opacity", { "ui-hidden": g, "lg:ui-opacity-0": y, "lg:ui-opacity-100": !y }), children: (0, l.jsx)(oH, { hiddenHamburger: !1, inverseHeader: x, onShoppingCartClick: f, shoppingCartCount: r }) }) : null, (0, l.jsx)("div", { className: (0, s.cx)("ui-transition-opacity", { "lg:ui-opacity-0": y, "lg:ui-opacity-100": !y }), children: (0, l.jsx)(og, { hideLinks: !1, onClick: L, open: g, ref: m }) })] }) }) }), (0, l.jsx)(a3, { accordionOpenAtIndex: e, currentPath: t, hideLinks: !1, menuImageComponent: n, menuLinks: o, onMenuLinkClick: c, onMenuShopButtonClick: h, open: g }), (0, l.jsx)(a7, { blurElement: _, onOutsideClick: b, open: g, tabIndex: v })] }) } se.displayName = "PageLayoutV3", G(), G(), sr.displayName = "PdpHeader"
    }
}]);
//# sourceMappingURL=2523d22c-cae80b92ff0c1af1.js.map